   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "freertos.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.FREERTOS_GetAppVersion,"ax",%progbits
  20              	 .align 2
  21              	 .global FREERTOS_GetAppVersion
  22              	 .thumb
  23              	 .thumb_func
  25              	FREERTOS_GetAppVersion:
  26              	.LFB137:
  27              	 .file 1 "../Dave/Generated/FREERTOS/freertos.c"
   1:../Dave/Generated/FREERTOS/freertos.c **** 
   2:../Dave/Generated/FREERTOS/freertos.c **** /**
   3:../Dave/Generated/FREERTOS/freertos.c ****  * @file freertos.c
   4:../Dave/Generated/FREERTOS/freertos.c ****  * @date 2018-11-21
   5:../Dave/Generated/FREERTOS/freertos.c ****  *
   6:../Dave/Generated/FREERTOS/freertos.c ****  * NOTE:
   7:../Dave/Generated/FREERTOS/freertos.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:../Dave/Generated/FREERTOS/freertos.c ****  *
   9:../Dave/Generated/FREERTOS/freertos.c ****  * @cond
  10:../Dave/Generated/FREERTOS/freertos.c ****  **************************************************************************************************
  11:../Dave/Generated/FREERTOS/freertos.c ****  * FREERTOS v4.1.10 - FREERTOS software library for DAVE
  12:../Dave/Generated/FREERTOS/freertos.c ****  *
  13:../Dave/Generated/FREERTOS/freertos.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:../Dave/Generated/FREERTOS/freertos.c ****  * All rights reserved.
  15:../Dave/Generated/FREERTOS/freertos.c ****  *
  16:../Dave/Generated/FREERTOS/freertos.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/FREERTOS/freertos.c ****  * following conditions are met:
  18:../Dave/Generated/FREERTOS/freertos.c ****  *
  19:../Dave/Generated/FREERTOS/freertos.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/FREERTOS/freertos.c ****  *   disclaimer.
  21:../Dave/Generated/FREERTOS/freertos.c ****  *
  22:../Dave/Generated/FREERTOS/freertos.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/FREERTOS/freertos.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/FREERTOS/freertos.c ****  *
  25:../Dave/Generated/FREERTOS/freertos.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/FREERTOS/freertos.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/FREERTOS/freertos.c ****  *
  28:../Dave/Generated/FREERTOS/freertos.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/FREERTOS/freertos.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/FREERTOS/freertos.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/FREERTOS/freertos.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/FREERTOS/freertos.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/FREERTOS/freertos.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/FREERTOS/freertos.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/FREERTOS/freertos.c ****  *
  36:../Dave/Generated/FREERTOS/freertos.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/FREERTOS/freertos.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/FREERTOS/freertos.c ****  **************************************************************************************************
  39:../Dave/Generated/FREERTOS/freertos.c ****  *
  40:../Dave/Generated/FREERTOS/freertos.c ****  * Change History
  41:../Dave/Generated/FREERTOS/freertos.c ****  * --------------
  42:../Dave/Generated/FREERTOS/freertos.c ****  *
  43:../Dave/Generated/FREERTOS/freertos.c ****  * 2015-06-25:
  44:../Dave/Generated/FREERTOS/freertos.c ****  *     - Initial version <br>
  45:../Dave/Generated/FREERTOS/freertos.c ****  *
  46:../Dave/Generated/FREERTOS/freertos.c ****  * 2017-03-28:
  47:../Dave/Generated/FREERTOS/freertos.c ****  *     - Fix undefined _WEAK symbol 
  48:../Dave/Generated/FREERTOS/freertos.c ****  *
  49:../Dave/Generated/FREERTOS/freertos.c ****  * 2018-11-21:
  50:../Dave/Generated/FREERTOS/freertos.c ****  *     - Fix vApplicationGetTimerTaskMemory() return value
  51:../Dave/Generated/FREERTOS/freertos.c ****  *
  52:../Dave/Generated/FREERTOS/freertos.c ****  * @endcond
  53:../Dave/Generated/FREERTOS/freertos.c ****  */
  54:../Dave/Generated/FREERTOS/freertos.c **** 
  55:../Dave/Generated/FREERTOS/freertos.c **** /**************************************************************************************************
  56:../Dave/Generated/FREERTOS/freertos.c ****  * HEADER FILES
  57:../Dave/Generated/FREERTOS/freertos.c ****  **************************************************************************************************
  58:../Dave/Generated/FREERTOS/freertos.c **** 
  59:../Dave/Generated/FREERTOS/freertos.c **** #include "freertos.h"
  60:../Dave/Generated/FREERTOS/freertos.c **** #include "xmc_common.h"
  61:../Dave/Generated/FREERTOS/freertos.c **** 
  62:../Dave/Generated/FREERTOS/freertos.c **** /**************************************************************************************************
  63:../Dave/Generated/FREERTOS/freertos.c ****  * MACROS
  64:../Dave/Generated/FREERTOS/freertos.c ****  **************************************************************************************************
  65:../Dave/Generated/FREERTOS/freertos.c **** 
  66:../Dave/Generated/FREERTOS/freertos.c **** /**************************************************************************************************
  67:../Dave/Generated/FREERTOS/freertos.c ****  * LOCAL DATA
  68:../Dave/Generated/FREERTOS/freertos.c ****  **************************************************************************************************
  69:../Dave/Generated/FREERTOS/freertos.c **** 
  70:../Dave/Generated/FREERTOS/freertos.c **** /**************************************************************************************************
  71:../Dave/Generated/FREERTOS/freertos.c ****  * LOCAL ROUTINES
  72:../Dave/Generated/FREERTOS/freertos.c ****  **************************************************************************************************
  73:../Dave/Generated/FREERTOS/freertos.c **** 
  74:../Dave/Generated/FREERTOS/freertos.c **** /**************************************************************************************************
  75:../Dave/Generated/FREERTOS/freertos.c ****  * API IMPLEMENTATION
  76:../Dave/Generated/FREERTOS/freertos.c ****  **************************************************************************************************
  77:../Dave/Generated/FREERTOS/freertos.c **** 
  78:../Dave/Generated/FREERTOS/freertos.c **** /**
  79:../Dave/Generated/FREERTOS/freertos.c **** * @brief Get FREERTOS APP version
  80:../Dave/Generated/FREERTOS/freertos.c **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
  81:../Dave/Generated/FREERTOS/freertos.c **** */
  82:../Dave/Generated/FREERTOS/freertos.c **** DAVE_APP_VERSION_t FREERTOS_GetAppVersion(void)
  83:../Dave/Generated/FREERTOS/freertos.c **** {
  28              	 .loc 1 83 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  84:../Dave/Generated/FREERTOS/freertos.c ****   DAVE_APP_VERSION_t version;
  85:../Dave/Generated/FREERTOS/freertos.c **** 
  86:../Dave/Generated/FREERTOS/freertos.c ****   version.major = (uint8_t)FREERTOS_MAJOR_VERSION;
  43              	 .loc 1 86 0
  44 0006 0423     	 movs r3,#4
  45 0008 3B70     	 strb r3,[r7]
  87:../Dave/Generated/FREERTOS/freertos.c ****   version.minor = (uint8_t)FREERTOS_MINOR_VERSION;
  46              	 .loc 1 87 0
  47 000a 0123     	 movs r3,#1
  48 000c 7B70     	 strb r3,[r7,#1]
  88:../Dave/Generated/FREERTOS/freertos.c ****   version.patch = (uint8_t)FREERTOS_PATCH_VERSION;
  49              	 .loc 1 88 0
  50 000e 0C23     	 movs r3,#12
  51 0010 BB70     	 strb r3,[r7,#2]
  89:../Dave/Generated/FREERTOS/freertos.c **** 
  90:../Dave/Generated/FREERTOS/freertos.c ****   return version;
  52              	 .loc 1 90 0
  53 0012 3B1D     	 adds r3,r7,#4
  54 0014 3A46     	 mov r2,r7
  55 0016 1268     	 ldr r2,[r2]
  56 0018 1146     	 mov r1,r2
  57 001a 1980     	 strh r1,[r3]
  58 001c 0233     	 adds r3,r3,#2
  59 001e 120C     	 lsrs r2,r2,#16
  60 0020 1A70     	 strb r2,[r3]
  61 0022 0023     	 movs r3,#0
  62 0024 3A79     	 ldrb r2,[r7,#4]
  63 0026 62F30703 	 bfi r3,r2,#0,#8
  64 002a 7A79     	 ldrb r2,[r7,#5]
  65 002c 62F30F23 	 bfi r3,r2,#8,#8
  66 0030 BA79     	 ldrb r2,[r7,#6]
  67 0032 62F31743 	 bfi r3,r2,#16,#8
  91:../Dave/Generated/FREERTOS/freertos.c **** }
  68              	 .loc 1 91 0
  69 0036 1846     	 mov r0,r3
  70 0038 0C37     	 adds r7,r7,#12
  71              	.LCFI3:
  72              	 .cfi_def_cfa_offset 4
  73 003a BD46     	 mov sp,r7
  74              	.LCFI4:
  75              	 .cfi_def_cfa_register 13
  76              	 
  77 003c 5DF8047B 	 ldr r7,[sp],#4
  78              	.LCFI5:
  79              	 .cfi_restore 7
  80              	 .cfi_def_cfa_offset 0
  81 0040 7047     	 bx lr
  82              	 .cfi_endproc
  83              	.LFE137:
  85 0042 00BF     	 .section .text.vApplicationGetIdleTaskMemory,"ax",%progbits
  86              	 .align 2
  87              	 .weak vApplicationGetIdleTaskMemory
  88              	 .thumb
  89              	 .thumb_func
  91              	vApplicationGetIdleTaskMemory:
  92              	.LFB138:
  92:../Dave/Generated/FREERTOS/freertos.c **** 
  93:../Dave/Generated/FREERTOS/freertos.c **** #if configSUPPORT_STATIC_ALLOCATION == 1
  94:../Dave/Generated/FREERTOS/freertos.c **** /* configUSE_STATIC_ALLOCATION is set to 1, so the application must provide an
  95:../Dave/Generated/FREERTOS/freertos.c **** implementation of vApplicationGetIdleTaskMemory() to provide the memory that is
  96:../Dave/Generated/FREERTOS/freertos.c **** used by the Idle task. */
  97:../Dave/Generated/FREERTOS/freertos.c **** __WEAK void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer,
  98:../Dave/Generated/FREERTOS/freertos.c ****                                            StackType_t **ppxIdleTaskStackBuffer,
  99:../Dave/Generated/FREERTOS/freertos.c ****                                            uint32_t *pulIdleTaskStackSize )
 100:../Dave/Generated/FREERTOS/freertos.c **** {
  93              	 .loc 1 100 0
  94              	 .cfi_startproc
  95              	 
  96              	 
  97              	 
  98 0000 80B4     	 push {r7}
  99              	.LCFI6:
 100              	 .cfi_def_cfa_offset 4
 101              	 .cfi_offset 7,-4
 102 0002 85B0     	 sub sp,sp,#20
 103              	.LCFI7:
 104              	 .cfi_def_cfa_offset 24
 105 0004 00AF     	 add r7,sp,#0
 106              	.LCFI8:
 107              	 .cfi_def_cfa_register 7
 108 0006 F860     	 str r0,[r7,#12]
 109 0008 B960     	 str r1,[r7,#8]
 110 000a 7A60     	 str r2,[r7,#4]
 101:../Dave/Generated/FREERTOS/freertos.c ****     /* If the buffers to be provided to the Idle task are declared inside this
 102:../Dave/Generated/FREERTOS/freertos.c ****        function then they must be declared static - otherwise they will be allocated on
 103:../Dave/Generated/FREERTOS/freertos.c ****        the stack and so not exists after this function exits. */
 104:../Dave/Generated/FREERTOS/freertos.c ****     static StaticTask_t xIdleTaskTCB;
 105:../Dave/Generated/FREERTOS/freertos.c ****     static StackType_t uxIdleTaskStack[ configMINIMAL_STACK_SIZE ];
 106:../Dave/Generated/FREERTOS/freertos.c **** 
 107:../Dave/Generated/FREERTOS/freertos.c ****     /* Pass out a pointer to the StaticTask_t structure in which the Idle task's
 108:../Dave/Generated/FREERTOS/freertos.c ****     state will be stored. */
 109:../Dave/Generated/FREERTOS/freertos.c ****     *ppxIdleTaskTCBBuffer = &xIdleTaskTCB;
 111              	 .loc 1 109 0
 112 000c FB68     	 ldr r3,[r7,#12]
 113 000e 064A     	 ldr r2,.L4
 114 0010 1A60     	 str r2,[r3]
 110:../Dave/Generated/FREERTOS/freertos.c **** 
 111:../Dave/Generated/FREERTOS/freertos.c ****     /* Pass out the array that will be used as the Idle task's stack. */
 112:../Dave/Generated/FREERTOS/freertos.c ****     *ppxIdleTaskStackBuffer = uxIdleTaskStack;
 115              	 .loc 1 112 0
 116 0012 BB68     	 ldr r3,[r7,#8]
 117 0014 054A     	 ldr r2,.L4+4
 118 0016 1A60     	 str r2,[r3]
 113:../Dave/Generated/FREERTOS/freertos.c **** 
 114:../Dave/Generated/FREERTOS/freertos.c ****     /* Pass out the size of the array pointed to by *ppxIdleTaskStackBuffer.
 115:../Dave/Generated/FREERTOS/freertos.c ****     Note that, as the array is necessarily of type StackType_t,
 116:../Dave/Generated/FREERTOS/freertos.c ****     configMINIMAL_STACK_SIZE is specified in words, not bytes. */
 117:../Dave/Generated/FREERTOS/freertos.c ****     *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 119              	 .loc 1 117 0
 120 0018 7B68     	 ldr r3,[r7,#4]
 121 001a 8222     	 movs r2,#130
 122 001c 1A60     	 str r2,[r3]
 118:../Dave/Generated/FREERTOS/freertos.c **** }
 123              	 .loc 1 118 0
 124 001e 1437     	 adds r7,r7,#20
 125              	.LCFI9:
 126              	 .cfi_def_cfa_offset 4
 127 0020 BD46     	 mov sp,r7
 128              	.LCFI10:
 129              	 .cfi_def_cfa_register 13
 130              	 
 131 0022 5DF8047B 	 ldr r7,[sp],#4
 132              	.LCFI11:
 133              	 .cfi_restore 7
 134              	 .cfi_def_cfa_offset 0
 135 0026 7047     	 bx lr
 136              	.L5:
 137              	 .align 2
 138              	.L4:
 139 0028 00000000 	 .word xIdleTaskTCB.7184
 140 002c 00000000 	 .word uxIdleTaskStack.7185
 141              	 .cfi_endproc
 142              	.LFE138:
 144              	 .section .text.vApplicationGetTimerTaskMemory,"ax",%progbits
 145              	 .align 2
 146              	 .weak vApplicationGetTimerTaskMemory
 147              	 .thumb
 148              	 .thumb_func
 150              	vApplicationGetTimerTaskMemory:
 151              	.LFB139:
 119:../Dave/Generated/FREERTOS/freertos.c **** 
 120:../Dave/Generated/FREERTOS/freertos.c **** #if configUSE_TIMERS == 1
 121:../Dave/Generated/FREERTOS/freertos.c **** /* configUSE_STATIC_ALLOCATION and configUSE_TIMERS are both set to 1, so the
 122:../Dave/Generated/FREERTOS/freertos.c **** application must provide an implementation of vApplicationGetTimerTaskMemory()
 123:../Dave/Generated/FREERTOS/freertos.c **** to provide the memory that is used by the Timer service task. */
 124:../Dave/Generated/FREERTOS/freertos.c **** __WEAK void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer,
 125:../Dave/Generated/FREERTOS/freertos.c ****                                             StackType_t **ppxTimerTaskStackBuffer,
 126:../Dave/Generated/FREERTOS/freertos.c ****                                             uint32_t *pulTimerTaskStackSize )
 127:../Dave/Generated/FREERTOS/freertos.c **** {
 152              	 .loc 1 127 0
 153              	 .cfi_startproc
 154              	 
 155              	 
 156              	 
 157 0000 80B4     	 push {r7}
 158              	.LCFI12:
 159              	 .cfi_def_cfa_offset 4
 160              	 .cfi_offset 7,-4
 161 0002 85B0     	 sub sp,sp,#20
 162              	.LCFI13:
 163              	 .cfi_def_cfa_offset 24
 164 0004 00AF     	 add r7,sp,#0
 165              	.LCFI14:
 166              	 .cfi_def_cfa_register 7
 167 0006 F860     	 str r0,[r7,#12]
 168 0008 B960     	 str r1,[r7,#8]
 169 000a 7A60     	 str r2,[r7,#4]
 128:../Dave/Generated/FREERTOS/freertos.c ****     /* If the buffers to be provided to the Timer task are declared inside this
 129:../Dave/Generated/FREERTOS/freertos.c ****        function then they must be declared static - otherwise they will be allocated on
 130:../Dave/Generated/FREERTOS/freertos.c ****        the stack and so not exists after this function exits. */
 131:../Dave/Generated/FREERTOS/freertos.c ****     static StaticTask_t xTimerTaskTCB;
 132:../Dave/Generated/FREERTOS/freertos.c ****     static StackType_t uxTimerTaskStack[ configTIMER_TASK_STACK_DEPTH ];
 133:../Dave/Generated/FREERTOS/freertos.c **** 
 134:../Dave/Generated/FREERTOS/freertos.c ****     /* Pass out a pointer to the StaticTask_t structure in which the Timer
 135:../Dave/Generated/FREERTOS/freertos.c ****     task's state will be stored. */
 136:../Dave/Generated/FREERTOS/freertos.c ****     *ppxTimerTaskTCBBuffer = &xTimerTaskTCB;
 170              	 .loc 1 136 0
 171 000c FB68     	 ldr r3,[r7,#12]
 172 000e 074A     	 ldr r2,.L7
 173 0010 1A60     	 str r2,[r3]
 137:../Dave/Generated/FREERTOS/freertos.c **** 
 138:../Dave/Generated/FREERTOS/freertos.c ****     /* Pass out the array that will be used as the Timer task's stack. */
 139:../Dave/Generated/FREERTOS/freertos.c ****     *ppxTimerTaskStackBuffer = uxTimerTaskStack;
 174              	 .loc 1 139 0
 175 0012 BB68     	 ldr r3,[r7,#8]
 176 0014 064A     	 ldr r2,.L7+4
 177 0016 1A60     	 str r2,[r3]
 140:../Dave/Generated/FREERTOS/freertos.c **** 
 141:../Dave/Generated/FREERTOS/freertos.c ****     /* Pass out the size of the array pointed to by *ppxTimerTaskStackBuffer.
 142:../Dave/Generated/FREERTOS/freertos.c ****     Note that, as the array is necessarily of type StackType_t,
 143:../Dave/Generated/FREERTOS/freertos.c ****     configMINIMAL_STACK_SIZE is specified in words, not bytes. */
 144:../Dave/Generated/FREERTOS/freertos.c ****     *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 178              	 .loc 1 144 0
 179 0018 7B68     	 ldr r3,[r7,#4]
 180 001a 4FF48272 	 mov r2,#260
 181 001e 1A60     	 str r2,[r3]
 145:../Dave/Generated/FREERTOS/freertos.c **** }
 182              	 .loc 1 145 0
 183 0020 1437     	 adds r7,r7,#20
 184              	.LCFI15:
 185              	 .cfi_def_cfa_offset 4
 186 0022 BD46     	 mov sp,r7
 187              	.LCFI16:
 188              	 .cfi_def_cfa_register 13
 189              	 
 190 0024 5DF8047B 	 ldr r7,[sp],#4
 191              	.LCFI17:
 192              	 .cfi_restore 7
 193              	 .cfi_def_cfa_offset 0
 194 0028 7047     	 bx lr
 195              	.L8:
 196 002a 00BF     	 .align 2
 197              	.L7:
 198 002c 00000000 	 .word xTimerTaskTCB.7191
 199 0030 00000000 	 .word uxTimerTaskStack.7192
 200              	 .cfi_endproc
 201              	.LFE139:
 203              	 .section .bss.xIdleTaskTCB.7184,"aw",%nobits
 204              	 .align 2
 207              	xIdleTaskTCB.7184:
 208 0000 00000000 	 .space 112
 208      00000000 
 208      00000000 
 208      00000000 
 208      00000000 
 209              	 .section .bss.uxIdleTaskStack.7185,"aw",%nobits
 210              	 .align 2
 213              	uxIdleTaskStack.7185:
 214 0000 00000000 	 .space 520
 214      00000000 
 214      00000000 
 214      00000000 
 214      00000000 
 215              	 .section .bss.xTimerTaskTCB.7191,"aw",%nobits
 216              	 .align 2
 219              	xTimerTaskTCB.7191:
 220 0000 00000000 	 .space 112
 220      00000000 
 220      00000000 
 220      00000000 
 220      00000000 
 221              	 .section .bss.uxTimerTaskStack.7192,"aw",%nobits
 222              	 .align 2
 225              	uxTimerTaskStack.7192:
 226 0000 00000000 	 .space 1040
 226      00000000 
 226      00000000 
 226      00000000 
 226      00000000 
 227              	 .text
 228              	.Letext0:
 229              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 230              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 231              	 .file 4 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/DAVE_Common.h"
 232              	 .file 5 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC/portmacro.h"
 233              	 .file 6 "../Dave/Generated/FREERTOS/freertos.h"
 234              	 .file 7 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/cmsis_gcc.h"
 235              	 .file 8 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
    {standard input}:20     .text.FREERTOS_GetAppVersion:00000000 $t
    {standard input}:25     .text.FREERTOS_GetAppVersion:00000000 FREERTOS_GetAppVersion
    {standard input}:86     .text.vApplicationGetIdleTaskMemory:00000000 $t
    {standard input}:91     .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
    {standard input}:139    .text.vApplicationGetIdleTaskMemory:00000028 $d
    {standard input}:207    .bss.xIdleTaskTCB.7184:00000000 xIdleTaskTCB.7184
    {standard input}:213    .bss.uxIdleTaskStack.7185:00000000 uxIdleTaskStack.7185
    {standard input}:145    .text.vApplicationGetTimerTaskMemory:00000000 $t
    {standard input}:150    .text.vApplicationGetTimerTaskMemory:00000000 vApplicationGetTimerTaskMemory
    {standard input}:198    .text.vApplicationGetTimerTaskMemory:0000002c $d
    {standard input}:219    .bss.xTimerTaskTCB.7191:00000000 xTimerTaskTCB.7191
    {standard input}:225    .bss.uxTimerTaskStack.7192:00000000 uxTimerTaskStack.7192
    {standard input}:204    .bss.xIdleTaskTCB.7184:00000000 $d
    {standard input}:210    .bss.uxIdleTaskStack.7185:00000000 $d
    {standard input}:216    .bss.xTimerTaskTCB.7191:00000000 $d
    {standard input}:222    .bss.uxTimerTaskStack.7192:00000000 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
