   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "timers.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.xActiveTimerList1,"aw",%nobits
  20              	 .align 2
  23              	xActiveTimerList1:
  24 0000 00000000 	 .space 20
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              	 .section .bss.xActiveTimerList2,"aw",%nobits
  26              	 .align 2
  29              	xActiveTimerList2:
  30 0000 00000000 	 .space 20
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              	 .section .bss.pxCurrentTimerList,"aw",%nobits
  32              	 .align 2
  35              	pxCurrentTimerList:
  36 0000 00000000 	 .space 4
  37              	 .section .bss.pxOverflowTimerList,"aw",%nobits
  38              	 .align 2
  41              	pxOverflowTimerList:
  42 0000 00000000 	 .space 4
  43              	 .section .bss.xTimerQueue,"aw",%nobits
  44              	 .align 2
  47              	xTimerQueue:
  48 0000 00000000 	 .space 4
  49              	 .section .bss.xTimerTaskHandle,"aw",%nobits
  50              	 .align 2
  53              	xTimerTaskHandle:
  54 0000 00000000 	 .space 4
  55              	 .section .rodata
  56              	 .align 2
  57              	.LC0:
  58 0000 546D7220 	 .ascii "Tmr Svc\000"
  58      53766300 
  59              	 .section .text.xTimerCreateTimerTask,"ax",%progbits
  60              	 .align 2
  61              	 .global xTimerCreateTimerTask
  62              	 .thumb
  63              	 .thumb_func
  65              	xTimerCreateTimerTask:
  66              	.LFB137:
  67              	 .file 1 "../Dave/Generated/FREERTOS/timers.c"
   1:../Dave/Generated/FREERTOS/timers.c **** /*
   2:../Dave/Generated/FREERTOS/timers.c ****  * FreeRTOS Kernel V10.4.3
   3:../Dave/Generated/FREERTOS/timers.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../Dave/Generated/FREERTOS/timers.c ****  *
   5:../Dave/Generated/FREERTOS/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../Dave/Generated/FREERTOS/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../Dave/Generated/FREERTOS/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:../Dave/Generated/FREERTOS/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../Dave/Generated/FREERTOS/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../Dave/Generated/FREERTOS/timers.c ****  * subject to the following conditions:
  11:../Dave/Generated/FREERTOS/timers.c ****  *
  12:../Dave/Generated/FREERTOS/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../Dave/Generated/FREERTOS/timers.c ****  * copies or substantial portions of the Software.
  14:../Dave/Generated/FREERTOS/timers.c ****  *
  15:../Dave/Generated/FREERTOS/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../Dave/Generated/FREERTOS/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../Dave/Generated/FREERTOS/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../Dave/Generated/FREERTOS/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../Dave/Generated/FREERTOS/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../Dave/Generated/FREERTOS/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../Dave/Generated/FREERTOS/timers.c ****  *
  22:../Dave/Generated/FREERTOS/timers.c ****  * https://www.FreeRTOS.org
  23:../Dave/Generated/FREERTOS/timers.c ****  * https://github.com/FreeRTOS
  24:../Dave/Generated/FREERTOS/timers.c ****  *
  25:../Dave/Generated/FREERTOS/timers.c ****  */
  26:../Dave/Generated/FREERTOS/timers.c **** 
  27:../Dave/Generated/FREERTOS/timers.c **** /* Standard includes. */
  28:../Dave/Generated/FREERTOS/timers.c **** #include <stdlib.h>
  29:../Dave/Generated/FREERTOS/timers.c **** 
  30:../Dave/Generated/FREERTOS/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  31:../Dave/Generated/FREERTOS/timers.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  32:../Dave/Generated/FREERTOS/timers.c ****  * task.h is included from an application file. */
  33:../Dave/Generated/FREERTOS/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  34:../Dave/Generated/FREERTOS/timers.c **** 
  35:../Dave/Generated/FREERTOS/timers.c **** #include "FreeRTOS.h"
  36:../Dave/Generated/FREERTOS/timers.c **** #include "task.h"
  37:../Dave/Generated/FREERTOS/timers.c **** #include "queue.h"
  38:../Dave/Generated/FREERTOS/timers.c **** #include "timers.h"
  39:../Dave/Generated/FREERTOS/timers.c **** 
  40:../Dave/Generated/FREERTOS/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  41:../Dave/Generated/FREERTOS/timers.c ****     #error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function availabl
  42:../Dave/Generated/FREERTOS/timers.c **** #endif
  43:../Dave/Generated/FREERTOS/timers.c **** 
  44:../Dave/Generated/FREERTOS/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:../Dave/Generated/FREERTOS/timers.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:../Dave/Generated/FREERTOS/timers.c ****  * for the header files above, but not in this file, in order to generate the
  47:../Dave/Generated/FREERTOS/timers.c ****  * correct privileged Vs unprivileged linkage and placement. */
  48:../Dave/Generated/FREERTOS/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  49:../Dave/Generated/FREERTOS/timers.c **** 
  50:../Dave/Generated/FREERTOS/timers.c **** 
  51:../Dave/Generated/FREERTOS/timers.c **** /* This entire source file will be skipped if the application is not configured
  52:../Dave/Generated/FREERTOS/timers.c ****  * to include software timer functionality.  This #if is closed at the very bottom
  53:../Dave/Generated/FREERTOS/timers.c ****  * of this file.  If you want to include software timer functionality then ensure
  54:../Dave/Generated/FREERTOS/timers.c ****  * configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  55:../Dave/Generated/FREERTOS/timers.c **** #if ( configUSE_TIMERS == 1 )
  56:../Dave/Generated/FREERTOS/timers.c **** 
  57:../Dave/Generated/FREERTOS/timers.c **** /* Misc definitions. */
  58:../Dave/Generated/FREERTOS/timers.c ****     #define tmrNO_DELAY    ( TickType_t ) 0U
  59:../Dave/Generated/FREERTOS/timers.c **** 
  60:../Dave/Generated/FREERTOS/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  61:../Dave/Generated/FREERTOS/timers.c ****  * defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  62:../Dave/Generated/FREERTOS/timers.c ****     #ifndef configTIMER_SERVICE_TASK_NAME
  63:../Dave/Generated/FREERTOS/timers.c ****         #define configTIMER_SERVICE_TASK_NAME    "Tmr Svc"
  64:../Dave/Generated/FREERTOS/timers.c ****     #endif
  65:../Dave/Generated/FREERTOS/timers.c **** 
  66:../Dave/Generated/FREERTOS/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  67:../Dave/Generated/FREERTOS/timers.c ****     #define tmrSTATUS_IS_ACTIVE                  ( ( uint8_t ) 0x01 )
  68:../Dave/Generated/FREERTOS/timers.c ****     #define tmrSTATUS_IS_STATICALLY_ALLOCATED    ( ( uint8_t ) 0x02 )
  69:../Dave/Generated/FREERTOS/timers.c ****     #define tmrSTATUS_IS_AUTORELOAD              ( ( uint8_t ) 0x04 )
  70:../Dave/Generated/FREERTOS/timers.c **** 
  71:../Dave/Generated/FREERTOS/timers.c **** /* The definition of the timers themselves. */
  72:../Dave/Generated/FREERTOS/timers.c ****     typedef struct tmrTimerControl                  /* The old naming convention is used to prevent
  73:../Dave/Generated/FREERTOS/timers.c ****     {
  74:../Dave/Generated/FREERTOS/timers.c ****         const char * pcTimerName;                   /*<< Text name.  This is not used by the kernel
  75:../Dave/Generated/FREERTOS/timers.c ****         ListItem_t xTimerListItem;                  /*<< Standard linked list item as used by all k
  76:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xTimerPeriodInTicks;             /*<< How quickly and often the timer expires. *
  77:../Dave/Generated/FREERTOS/timers.c ****         void * pvTimerID;                           /*<< An ID to identify the timer.  This allows 
  78:../Dave/Generated/FREERTOS/timers.c ****         TimerCallbackFunction_t pxCallbackFunction; /*<< The function that will be called when the 
  79:../Dave/Generated/FREERTOS/timers.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
  80:../Dave/Generated/FREERTOS/timers.c ****             UBaseType_t uxTimerNumber;              /*<< An ID assigned by trace tools such as Free
  81:../Dave/Generated/FREERTOS/timers.c ****         #endif
  82:../Dave/Generated/FREERTOS/timers.c ****         uint8_t ucStatus;                           /*<< Holds bits to say if the timer was statica
  83:../Dave/Generated/FREERTOS/timers.c ****     } xTIMER;
  84:../Dave/Generated/FREERTOS/timers.c **** 
  85:../Dave/Generated/FREERTOS/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:../Dave/Generated/FREERTOS/timers.c ****  * name below to enable the use of older kernel aware debuggers. */
  87:../Dave/Generated/FREERTOS/timers.c ****     typedef xTIMER Timer_t;
  88:../Dave/Generated/FREERTOS/timers.c **** 
  89:../Dave/Generated/FREERTOS/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  90:../Dave/Generated/FREERTOS/timers.c ****  * Two types of message can be queued - messages that manipulate a software timer,
  91:../Dave/Generated/FREERTOS/timers.c ****  * and messages that request the execution of a non-timer related callback.  The
  92:../Dave/Generated/FREERTOS/timers.c ****  * two message types are defined in two separate structures, xTimerParametersType
  93:../Dave/Generated/FREERTOS/timers.c ****  * and xCallbackParametersType respectively. */
  94:../Dave/Generated/FREERTOS/timers.c ****     typedef struct tmrTimerParameters
  95:../Dave/Generated/FREERTOS/timers.c ****     {
  96:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xMessageValue; /*<< An optional value used by a subset of commands, for example,
  97:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer;        /*<< The timer to which the command will be applied. */
  98:../Dave/Generated/FREERTOS/timers.c ****     } TimerParameter_t;
  99:../Dave/Generated/FREERTOS/timers.c **** 
 100:../Dave/Generated/FREERTOS/timers.c **** 
 101:../Dave/Generated/FREERTOS/timers.c ****     typedef struct tmrCallbackParameters
 102:../Dave/Generated/FREERTOS/timers.c ****     {
 103:../Dave/Generated/FREERTOS/timers.c ****         PendedFunction_t pxCallbackFunction; /* << The callback function to execute. */
 104:../Dave/Generated/FREERTOS/timers.c ****         void * pvParameter1;                 /* << The value that will be used as the callback func
 105:../Dave/Generated/FREERTOS/timers.c ****         uint32_t ulParameter2;               /* << The value that will be used as the callback func
 106:../Dave/Generated/FREERTOS/timers.c ****     } CallbackParameters_t;
 107:../Dave/Generated/FREERTOS/timers.c **** 
 108:../Dave/Generated/FREERTOS/timers.c **** /* The structure that contains the two message types, along with an identifier
 109:../Dave/Generated/FREERTOS/timers.c ****  * that is used to determine which message type is valid. */
 110:../Dave/Generated/FREERTOS/timers.c ****     typedef struct tmrTimerQueueMessage
 111:../Dave/Generated/FREERTOS/timers.c ****     {
 112:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xMessageID; /*<< The command being sent to the timer service task. */
 113:../Dave/Generated/FREERTOS/timers.c ****         union
 114:../Dave/Generated/FREERTOS/timers.c ****         {
 115:../Dave/Generated/FREERTOS/timers.c ****             TimerParameter_t xTimerParameters;
 116:../Dave/Generated/FREERTOS/timers.c **** 
 117:../Dave/Generated/FREERTOS/timers.c ****             /* Don't include xCallbackParameters if it is not going to be used as
 118:../Dave/Generated/FREERTOS/timers.c ****              * it makes the structure (and therefore the timer queue) larger. */
 119:../Dave/Generated/FREERTOS/timers.c ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:../Dave/Generated/FREERTOS/timers.c ****                 CallbackParameters_t xCallbackParameters;
 121:../Dave/Generated/FREERTOS/timers.c ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 122:../Dave/Generated/FREERTOS/timers.c ****         } u;
 123:../Dave/Generated/FREERTOS/timers.c ****     } DaemonTaskMessage_t;
 124:../Dave/Generated/FREERTOS/timers.c **** 
 125:../Dave/Generated/FREERTOS/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:../Dave/Generated/FREERTOS/timers.c ****  * which static variables must be declared volatile. */
 127:../Dave/Generated/FREERTOS/timers.c **** 
 128:../Dave/Generated/FREERTOS/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:../Dave/Generated/FREERTOS/timers.c ****  * time order, with the nearest expiry time at the front of the list.  Only the
 130:../Dave/Generated/FREERTOS/timers.c ****  * timer service task is allowed to access these lists.
 131:../Dave/Generated/FREERTOS/timers.c ****  * xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 132:../Dave/Generated/FREERTOS/timers.c ****  * breaks some kernel aware debuggers, and debuggers that reply on removing the
 133:../Dave/Generated/FREERTOS/timers.c ****  * static qualifier. */
 134:../Dave/Generated/FREERTOS/timers.c ****     PRIVILEGED_DATA static List_t xActiveTimerList1;
 135:../Dave/Generated/FREERTOS/timers.c ****     PRIVILEGED_DATA static List_t xActiveTimerList2;
 136:../Dave/Generated/FREERTOS/timers.c ****     PRIVILEGED_DATA static List_t * pxCurrentTimerList;
 137:../Dave/Generated/FREERTOS/timers.c ****     PRIVILEGED_DATA static List_t * pxOverflowTimerList;
 138:../Dave/Generated/FREERTOS/timers.c **** 
 139:../Dave/Generated/FREERTOS/timers.c **** /* A queue that is used to send commands to the timer service task. */
 140:../Dave/Generated/FREERTOS/timers.c ****     PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 141:../Dave/Generated/FREERTOS/timers.c ****     PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 142:../Dave/Generated/FREERTOS/timers.c **** 
 143:../Dave/Generated/FREERTOS/timers.c **** /*lint -restore */
 144:../Dave/Generated/FREERTOS/timers.c **** 
 145:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 146:../Dave/Generated/FREERTOS/timers.c **** 
 147:../Dave/Generated/FREERTOS/timers.c **** /*
 148:../Dave/Generated/FREERTOS/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 149:../Dave/Generated/FREERTOS/timers.c ****  * been initialised already.
 150:../Dave/Generated/FREERTOS/timers.c ****  */
 151:../Dave/Generated/FREERTOS/timers.c ****     static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 152:../Dave/Generated/FREERTOS/timers.c **** 
 153:../Dave/Generated/FREERTOS/timers.c **** /*
 154:../Dave/Generated/FREERTOS/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 155:../Dave/Generated/FREERTOS/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 156:../Dave/Generated/FREERTOS/timers.c ****  * xTimerQueue queue.
 157:../Dave/Generated/FREERTOS/timers.c ****  */
 158:../Dave/Generated/FREERTOS/timers.c ****     static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 159:../Dave/Generated/FREERTOS/timers.c **** 
 160:../Dave/Generated/FREERTOS/timers.c **** /*
 161:../Dave/Generated/FREERTOS/timers.c ****  * Called by the timer service task to interpret and process a command it
 162:../Dave/Generated/FREERTOS/timers.c ****  * received on the timer queue.
 163:../Dave/Generated/FREERTOS/timers.c ****  */
 164:../Dave/Generated/FREERTOS/timers.c ****     static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 165:../Dave/Generated/FREERTOS/timers.c **** 
 166:../Dave/Generated/FREERTOS/timers.c **** /*
 167:../Dave/Generated/FREERTOS/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 168:../Dave/Generated/FREERTOS/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 169:../Dave/Generated/FREERTOS/timers.c ****  */
 170:../Dave/Generated/FREERTOS/timers.c ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 171:../Dave/Generated/FREERTOS/timers.c ****                                                   const TickType_t xNextExpiryTime,
 172:../Dave/Generated/FREERTOS/timers.c ****                                                   const TickType_t xTimeNow,
 173:../Dave/Generated/FREERTOS/timers.c ****                                                   const TickType_t xCommandTime ) PRIVILEGED_FUNCTI
 174:../Dave/Generated/FREERTOS/timers.c **** 
 175:../Dave/Generated/FREERTOS/timers.c **** /*
 176:../Dave/Generated/FREERTOS/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 177:../Dave/Generated/FREERTOS/timers.c ****  * auto-reload timer, then call its callback.
 178:../Dave/Generated/FREERTOS/timers.c ****  */
 179:../Dave/Generated/FREERTOS/timers.c ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 180:../Dave/Generated/FREERTOS/timers.c ****                                         const TickType_t xTimeNow ) PRIVILEGED_FUNCTION;
 181:../Dave/Generated/FREERTOS/timers.c **** 
 182:../Dave/Generated/FREERTOS/timers.c **** /*
 183:../Dave/Generated/FREERTOS/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 184:../Dave/Generated/FREERTOS/timers.c ****  * current timer list does not still reference some timers.
 185:../Dave/Generated/FREERTOS/timers.c ****  */
 186:../Dave/Generated/FREERTOS/timers.c ****     static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 187:../Dave/Generated/FREERTOS/timers.c **** 
 188:../Dave/Generated/FREERTOS/timers.c **** /*
 189:../Dave/Generated/FREERTOS/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 190:../Dave/Generated/FREERTOS/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 191:../Dave/Generated/FREERTOS/timers.c ****  */
 192:../Dave/Generated/FREERTOS/timers.c ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FU
 193:../Dave/Generated/FREERTOS/timers.c **** 
 194:../Dave/Generated/FREERTOS/timers.c **** /*
 195:../Dave/Generated/FREERTOS/timers.c ****  * If the timer list contains any active timers then return the expire time of
 196:../Dave/Generated/FREERTOS/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 197:../Dave/Generated/FREERTOS/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 198:../Dave/Generated/FREERTOS/timers.c ****  * to pdTRUE.
 199:../Dave/Generated/FREERTOS/timers.c ****  */
 200:../Dave/Generated/FREERTOS/timers.c ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION
 201:../Dave/Generated/FREERTOS/timers.c **** 
 202:../Dave/Generated/FREERTOS/timers.c **** /*
 203:../Dave/Generated/FREERTOS/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 204:../Dave/Generated/FREERTOS/timers.c ****  * until either a timer does expire or a command is received.
 205:../Dave/Generated/FREERTOS/timers.c ****  */
 206:../Dave/Generated/FREERTOS/timers.c ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 207:../Dave/Generated/FREERTOS/timers.c ****                                             BaseType_t xListWasEmpty ) PRIVILEGED_FUNCTION;
 208:../Dave/Generated/FREERTOS/timers.c **** 
 209:../Dave/Generated/FREERTOS/timers.c **** /*
 210:../Dave/Generated/FREERTOS/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 211:../Dave/Generated/FREERTOS/timers.c ****  * dynamically to fill in the structure's members.
 212:../Dave/Generated/FREERTOS/timers.c ****  */
 213:../Dave/Generated/FREERTOS/timers.c ****     static void prvInitialiseNewTimer( const char * const pcTimerName, /*lint !e971 Unqualified cha
 214:../Dave/Generated/FREERTOS/timers.c ****                                        const TickType_t xTimerPeriodInTicks,
 215:../Dave/Generated/FREERTOS/timers.c ****                                        const UBaseType_t uxAutoReload,
 216:../Dave/Generated/FREERTOS/timers.c ****                                        void * const pvTimerID,
 217:../Dave/Generated/FREERTOS/timers.c ****                                        TimerCallbackFunction_t pxCallbackFunction,
 218:../Dave/Generated/FREERTOS/timers.c ****                                        Timer_t * pxNewTimer ) PRIVILEGED_FUNCTION;
 219:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 220:../Dave/Generated/FREERTOS/timers.c **** 
 221:../Dave/Generated/FREERTOS/timers.c ****     BaseType_t xTimerCreateTimerTask( void )
 222:../Dave/Generated/FREERTOS/timers.c ****     {
  68              	 .loc 1 222 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72 0000 90B5     	 push {r4,r7,lr}
  73              	.LCFI0:
  74              	 .cfi_def_cfa_offset 12
  75              	 .cfi_offset 4,-12
  76              	 .cfi_offset 7,-8
  77              	 .cfi_offset 14,-4
  78 0002 8BB0     	 sub sp,sp,#44
  79              	.LCFI1:
  80              	 .cfi_def_cfa_offset 56
  81 0004 04AF     	 add r7,sp,#16
  82              	.LCFI2:
  83              	 .cfi_def_cfa 7,40
 223:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xReturn = pdFAIL;
  84              	 .loc 1 223 0
  85 0006 0023     	 movs r3,#0
  86 0008 7B61     	 str r3,[r7,#20]
 224:../Dave/Generated/FREERTOS/timers.c **** 
 225:../Dave/Generated/FREERTOS/timers.c ****         /* This function is called when the scheduler is started if
 226:../Dave/Generated/FREERTOS/timers.c ****          * configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 227:../Dave/Generated/FREERTOS/timers.c ****          * timer service task has been created/initialised.  If timers have already
 228:../Dave/Generated/FREERTOS/timers.c ****          * been created then the initialisation will already have been performed. */
 229:../Dave/Generated/FREERTOS/timers.c ****         prvCheckForValidListAndQueue();
  87              	 .loc 1 229 0
  88 000a FFF7FEFF 	 bl prvCheckForValidListAndQueue
 230:../Dave/Generated/FREERTOS/timers.c **** 
 231:../Dave/Generated/FREERTOS/timers.c ****         if( xTimerQueue != NULL )
  89              	 .loc 1 231 0
  90 000e 1D4B     	 ldr r3,.L7
  91 0010 1B68     	 ldr r3,[r3]
  92 0012 002B     	 cmp r3,#0
  93 0014 24D0     	 beq .L2
  94              	.LBB45:
 232:../Dave/Generated/FREERTOS/timers.c ****         {
 233:../Dave/Generated/FREERTOS/timers.c ****             #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 234:../Dave/Generated/FREERTOS/timers.c ****                 {
 235:../Dave/Generated/FREERTOS/timers.c ****                     StaticTask_t * pxTimerTaskTCBBuffer = NULL;
  95              	 .loc 1 235 0
  96 0016 0023     	 movs r3,#0
  97 0018 FB60     	 str r3,[r7,#12]
 236:../Dave/Generated/FREERTOS/timers.c ****                     StackType_t * pxTimerTaskStackBuffer = NULL;
  98              	 .loc 1 236 0
  99 001a 0023     	 movs r3,#0
 100 001c BB60     	 str r3,[r7,#8]
 237:../Dave/Generated/FREERTOS/timers.c ****                     uint32_t ulTimerTaskStackSize;
 238:../Dave/Generated/FREERTOS/timers.c **** 
 239:../Dave/Generated/FREERTOS/timers.c ****                     vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer,
 101              	 .loc 1 239 0
 102 001e 07F10C01 	 add r1,r7,#12
 103 0022 07F10802 	 add r2,r7,#8
 104 0026 3B1D     	 adds r3,r7,#4
 105 0028 0846     	 mov r0,r1
 106 002a 1146     	 mov r1,r2
 107 002c 1A46     	 mov r2,r3
 108 002e FFF7FEFF 	 bl vApplicationGetTimerTaskMemory
 240:../Dave/Generated/FREERTOS/timers.c ****                     xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 109              	 .loc 1 240 0
 110 0032 7C68     	 ldr r4,[r7,#4]
 111 0034 BA68     	 ldr r2,[r7,#8]
 112 0036 FB68     	 ldr r3,[r7,#12]
 113 0038 0221     	 movs r1,#2
 114 003a 0091     	 str r1,[sp]
 115 003c 0192     	 str r2,[sp,#4]
 116 003e 0293     	 str r3,[sp,#8]
 117 0040 1148     	 ldr r0,.L7+4
 118 0042 1249     	 ldr r1,.L7+8
 119 0044 2246     	 mov r2,r4
 120 0046 0023     	 movs r3,#0
 121 0048 FFF7FEFF 	 bl xTaskCreateStatic
 122 004c 0246     	 mov r2,r0
 123 004e 104B     	 ldr r3,.L7+12
 124 0050 1A60     	 str r2,[r3]
 241:../Dave/Generated/FREERTOS/timers.c ****                                                           configTIMER_SERVICE_TASK_NAME,
 242:../Dave/Generated/FREERTOS/timers.c ****                                                           ulTimerTaskStackSize,
 243:../Dave/Generated/FREERTOS/timers.c ****                                                           NULL,
 244:../Dave/Generated/FREERTOS/timers.c ****                                                           ( ( UBaseType_t ) configTIMER_TASK_PRIORI
 245:../Dave/Generated/FREERTOS/timers.c ****                                                           pxTimerTaskStackBuffer,
 246:../Dave/Generated/FREERTOS/timers.c ****                                                           pxTimerTaskTCBBuffer );
 247:../Dave/Generated/FREERTOS/timers.c **** 
 248:../Dave/Generated/FREERTOS/timers.c ****                     if( xTimerTaskHandle != NULL )
 125              	 .loc 1 248 0
 126 0052 0F4B     	 ldr r3,.L7+12
 127 0054 1B68     	 ldr r3,[r3]
 128 0056 002B     	 cmp r3,#0
 129 0058 02D0     	 beq .L3
 249:../Dave/Generated/FREERTOS/timers.c ****                     {
 250:../Dave/Generated/FREERTOS/timers.c ****                         xReturn = pdPASS;
 130              	 .loc 1 250 0
 131 005a 0123     	 movs r3,#1
 132 005c 7B61     	 str r3,[r7,#20]
 133              	.LBE45:
 134 005e FFE7     	 b .L2
 135              	.L3:
 136              	.L2:
 251:../Dave/Generated/FREERTOS/timers.c ****                     }
 252:../Dave/Generated/FREERTOS/timers.c ****                 }
 253:../Dave/Generated/FREERTOS/timers.c ****             #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 254:../Dave/Generated/FREERTOS/timers.c ****                 {
 255:../Dave/Generated/FREERTOS/timers.c ****                     xReturn = xTaskCreate( prvTimerTask,
 256:../Dave/Generated/FREERTOS/timers.c ****                                            configTIMER_SERVICE_TASK_NAME,
 257:../Dave/Generated/FREERTOS/timers.c ****                                            configTIMER_TASK_STACK_DEPTH,
 258:../Dave/Generated/FREERTOS/timers.c ****                                            NULL,
 259:../Dave/Generated/FREERTOS/timers.c ****                                            ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIV
 260:../Dave/Generated/FREERTOS/timers.c ****                                            &xTimerTaskHandle );
 261:../Dave/Generated/FREERTOS/timers.c ****                 }
 262:../Dave/Generated/FREERTOS/timers.c ****             #endif /* configSUPPORT_STATIC_ALLOCATION */
 263:../Dave/Generated/FREERTOS/timers.c ****         }
 264:../Dave/Generated/FREERTOS/timers.c ****         else
 265:../Dave/Generated/FREERTOS/timers.c ****         {
 266:../Dave/Generated/FREERTOS/timers.c ****             mtCOVERAGE_TEST_MARKER();
 267:../Dave/Generated/FREERTOS/timers.c ****         }
 268:../Dave/Generated/FREERTOS/timers.c **** 
 269:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xReturn );
 137              	 .loc 1 269 0
 138 0060 7B69     	 ldr r3,[r7,#20]
 139 0062 002B     	 cmp r3,#0
 140 0064 09D1     	 bne .L4
 141              	.LBB46:
 142              	.LBB47:
 143              	 .file 2 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC/portmacro.h"
   1:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*
   2:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * FreeRTOS Kernel V10.4.3
   3:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
   5:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * subject to the following conditions:
  11:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  12:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * copies or substantial portions of the Software.
  14:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  15:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  22:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * https://www.FreeRTOS.org
  23:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * https://github.com/FreeRTOS
  24:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  25:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * 1 tab == 4 spaces!
  26:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  */
  27:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  28:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  29:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #ifndef PORTMACRO_H
  30:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define PORTMACRO_H
  31:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  32:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #ifdef __cplusplus
  33:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         extern "C" {
  34:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif
  35:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  36:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------
  37:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * Port specific definitions.
  38:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  39:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * given hardware and compiler.
  41:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  42:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * These settings should not be altered.
  43:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *-----------------------------------------------------------
  44:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  */
  45:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  46:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Type definitions. */
  47:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portCHAR          char
  48:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portFLOAT         float
  49:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portDOUBLE        double
  50:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portLONG          long
  51:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portSHORT         short
  52:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portSTACK_TYPE    uint32_t
  53:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portBASE_TYPE     long
  54:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  55:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  56:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     typedef long             BaseType_t;
  57:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     typedef unsigned long    UBaseType_t;
  58:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  59:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  60:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         typedef uint16_t     TickType_t;
  61:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  62:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #else
  63:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         typedef uint32_t     TickType_t;
  64:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  65:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  66:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * not need to be guarded with a critical section. */
  68:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  69:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif
  70:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
  71:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  72:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Architecture specifics. */
  73:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  74:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portBYTE_ALIGNMENT    8
  76:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  77:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
  78:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  79:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Scheduler utilities. */
  80:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portYIELD()                                 \
  81:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     {                                                   \
  82:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  83:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  84:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****                                                         \
  85:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  86:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****          * within the specified behaviour for the architecture. */ \
  87:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  88:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         __asm volatile ( "isb" );                                  \
  89:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     }
  90:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  91:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  92:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  93:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    if( xSwitchRequired != pdFALSE ) portYIELD(
  94:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  95:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
  96:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  97:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Critical section management. */
  98:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     extern void vPortEnterCritical( void );
  99:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     extern void vPortExitCritical( void );
 100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * (which build with all the ports) will build. */
 112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Tickless idle/low power functionality. */
 117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif
 121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Architecture specific optimisations. */
 124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif
 127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Generic helper function. */
 131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         {
 133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****             uint8_t ucReturn;
 134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****             return ucReturn;
 138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         }
 139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Check the configuration. */
 141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #endif
 144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #ifdef configASSERT
 158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         void vPortValidateInterruptPriority( void );
 159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif
 161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* portNOP() is not required by this port. */
 163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portNOP()
 164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portINLINE              __inline
 166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #ifndef portFORCE_INLINE
 168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif
 170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     {
 173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         uint32_t ulCurrentInterrupt;
 174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         BaseType_t xReturn;
 175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         if( ulCurrentInterrupt == 0 )
 180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         {
 181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****             xReturn = pdFALSE;
 182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         }
 183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         else
 184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         {
 185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****             xReturn = pdTRUE;
 186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         }
 187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         return xReturn;
 189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     }
 190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     {
 195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         uint32_t ulNewBASEPRI;
 196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         __asm volatile
 144              	 .loc 2 197 0 discriminator 1
 145              	
 146 0066 4FF0FC03 	 mov r3,#252
 147 006a 83F31188 	 msr basepri,r3
 148 006e BFF36F8F 	 isb 
 149 0072 BFF34F8F 	 dsb 
 150              	
 151              	
 152              	 .thumb
 153 0076 3B61     	 str r3,[r7,#16]
 154              	.L5:
 155              	.LBE47:
 156              	.LBE46:
 157              	 .loc 1 269 0 discriminator 1
 158 0078 FEE7     	 b .L5
 159              	.L4:
 270:../Dave/Generated/FREERTOS/timers.c ****         return xReturn;
 160              	 .loc 1 270 0
 161 007a 7B69     	 ldr r3,[r7,#20]
 271:../Dave/Generated/FREERTOS/timers.c ****     }
 162              	 .loc 1 271 0
 163 007c 1846     	 mov r0,r3
 164 007e 1C37     	 adds r7,r7,#28
 165              	.LCFI3:
 166              	 .cfi_def_cfa_offset 12
 167 0080 BD46     	 mov sp,r7
 168              	.LCFI4:
 169              	 .cfi_def_cfa_register 13
 170              	 
 171 0082 90BD     	 pop {r4,r7,pc}
 172              	.L8:
 173              	 .align 2
 174              	.L7:
 175 0084 00000000 	 .word xTimerQueue
 176 0088 00000000 	 .word prvTimerTask
 177 008c 00000000 	 .word .LC0
 178 0090 00000000 	 .word xTimerTaskHandle
 179              	 .cfi_endproc
 180              	.LFE137:
 182              	 .section .text.xTimerCreate,"ax",%progbits
 183              	 .align 2
 184              	 .global xTimerCreate
 185              	 .thumb
 186              	 .thumb_func
 188              	xTimerCreate:
 189              	.LFB138:
 272:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 273:../Dave/Generated/FREERTOS/timers.c **** 
 274:../Dave/Generated/FREERTOS/timers.c ****     #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 275:../Dave/Generated/FREERTOS/timers.c **** 
 276:../Dave/Generated/FREERTOS/timers.c ****         TimerHandle_t xTimerCreate( const char * const pcTimerName, /*lint !e971 Unqualified char t
 277:../Dave/Generated/FREERTOS/timers.c ****                                     const TickType_t xTimerPeriodInTicks,
 278:../Dave/Generated/FREERTOS/timers.c ****                                     const UBaseType_t uxAutoReload,
 279:../Dave/Generated/FREERTOS/timers.c ****                                     void * const pvTimerID,
 280:../Dave/Generated/FREERTOS/timers.c ****                                     TimerCallbackFunction_t pxCallbackFunction )
 281:../Dave/Generated/FREERTOS/timers.c ****         {
 190              	 .loc 1 281 0
 191              	 .cfi_startproc
 192              	 
 193              	 
 194 0000 80B5     	 push {r7,lr}
 195              	.LCFI5:
 196              	 .cfi_def_cfa_offset 8
 197              	 .cfi_offset 7,-8
 198              	 .cfi_offset 14,-4
 199 0002 88B0     	 sub sp,sp,#32
 200              	.LCFI6:
 201              	 .cfi_def_cfa_offset 40
 202 0004 02AF     	 add r7,sp,#8
 203              	.LCFI7:
 204              	 .cfi_def_cfa 7,32
 205 0006 F860     	 str r0,[r7,#12]
 206 0008 B960     	 str r1,[r7,#8]
 207 000a 7A60     	 str r2,[r7,#4]
 208 000c 3B60     	 str r3,[r7]
 282:../Dave/Generated/FREERTOS/timers.c ****             Timer_t * pxNewTimer;
 283:../Dave/Generated/FREERTOS/timers.c **** 
 284:../Dave/Generated/FREERTOS/timers.c ****             pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All 
 209              	 .loc 1 284 0
 210 000e 2C20     	 movs r0,#44
 211 0010 FFF7FEFF 	 bl pvPortMalloc
 212 0014 7861     	 str r0,[r7,#20]
 285:../Dave/Generated/FREERTOS/timers.c **** 
 286:../Dave/Generated/FREERTOS/timers.c ****             if( pxNewTimer != NULL )
 213              	 .loc 1 286 0
 214 0016 7B69     	 ldr r3,[r7,#20]
 215 0018 002B     	 cmp r3,#0
 216 001a 0DD0     	 beq .L10
 287:../Dave/Generated/FREERTOS/timers.c ****             {
 288:../Dave/Generated/FREERTOS/timers.c ****                 /* Status is thus far zero as the timer is not created statically
 289:../Dave/Generated/FREERTOS/timers.c ****                  * and has not been started.  The auto-reload bit may get set in
 290:../Dave/Generated/FREERTOS/timers.c ****                  * prvInitialiseNewTimer. */
 291:../Dave/Generated/FREERTOS/timers.c ****                 pxNewTimer->ucStatus = 0x00;
 217              	 .loc 1 291 0
 218 001c 7B69     	 ldr r3,[r7,#20]
 219 001e 0022     	 movs r2,#0
 220 0020 83F82820 	 strb r2,[r3,#40]
 292:../Dave/Generated/FREERTOS/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, p
 221              	 .loc 1 292 0
 222 0024 3B6A     	 ldr r3,[r7,#32]
 223 0026 0093     	 str r3,[sp]
 224 0028 7B69     	 ldr r3,[r7,#20]
 225 002a 0193     	 str r3,[sp,#4]
 226 002c F868     	 ldr r0,[r7,#12]
 227 002e B968     	 ldr r1,[r7,#8]
 228 0030 7A68     	 ldr r2,[r7,#4]
 229 0032 3B68     	 ldr r3,[r7]
 230 0034 FFF7FEFF 	 bl prvInitialiseNewTimer
 231              	.L10:
 293:../Dave/Generated/FREERTOS/timers.c ****             }
 294:../Dave/Generated/FREERTOS/timers.c **** 
 295:../Dave/Generated/FREERTOS/timers.c ****             return pxNewTimer;
 232              	 .loc 1 295 0
 233 0038 7B69     	 ldr r3,[r7,#20]
 296:../Dave/Generated/FREERTOS/timers.c ****         }
 234              	 .loc 1 296 0
 235 003a 1846     	 mov r0,r3
 236 003c 1837     	 adds r7,r7,#24
 237              	.LCFI8:
 238              	 .cfi_def_cfa_offset 8
 239 003e BD46     	 mov sp,r7
 240              	.LCFI9:
 241              	 .cfi_def_cfa_register 13
 242              	 
 243 0040 80BD     	 pop {r7,pc}
 244              	 .cfi_endproc
 245              	.LFE138:
 247 0042 00BF     	 .section .text.xTimerCreateStatic,"ax",%progbits
 248              	 .align 2
 249              	 .global xTimerCreateStatic
 250              	 .thumb
 251              	 .thumb_func
 253              	xTimerCreateStatic:
 254              	.LFB139:
 297:../Dave/Generated/FREERTOS/timers.c **** 
 298:../Dave/Generated/FREERTOS/timers.c ****     #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 299:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 300:../Dave/Generated/FREERTOS/timers.c **** 
 301:../Dave/Generated/FREERTOS/timers.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 302:../Dave/Generated/FREERTOS/timers.c **** 
 303:../Dave/Generated/FREERTOS/timers.c ****         TimerHandle_t xTimerCreateStatic( const char * const pcTimerName, /*lint !e971 Unqualified 
 304:../Dave/Generated/FREERTOS/timers.c ****                                           const TickType_t xTimerPeriodInTicks,
 305:../Dave/Generated/FREERTOS/timers.c ****                                           const UBaseType_t uxAutoReload,
 306:../Dave/Generated/FREERTOS/timers.c ****                                           void * const pvTimerID,
 307:../Dave/Generated/FREERTOS/timers.c ****                                           TimerCallbackFunction_t pxCallbackFunction,
 308:../Dave/Generated/FREERTOS/timers.c ****                                           StaticTimer_t * pxTimerBuffer )
 309:../Dave/Generated/FREERTOS/timers.c ****         {
 255              	 .loc 1 309 0
 256              	 .cfi_startproc
 257              	 
 258              	 
 259 0000 80B5     	 push {r7,lr}
 260              	.LCFI10:
 261              	 .cfi_def_cfa_offset 8
 262              	 .cfi_offset 7,-8
 263              	 .cfi_offset 14,-4
 264 0002 8AB0     	 sub sp,sp,#40
 265              	.LCFI11:
 266              	 .cfi_def_cfa_offset 48
 267 0004 02AF     	 add r7,sp,#8
 268              	.LCFI12:
 269              	 .cfi_def_cfa 7,40
 270 0006 F860     	 str r0,[r7,#12]
 271 0008 B960     	 str r1,[r7,#8]
 272 000a 7A60     	 str r2,[r7,#4]
 273 000c 3B60     	 str r3,[r7]
 274              	.LBB48:
 310:../Dave/Generated/FREERTOS/timers.c ****             Timer_t * pxNewTimer;
 311:../Dave/Generated/FREERTOS/timers.c **** 
 312:../Dave/Generated/FREERTOS/timers.c ****             #if ( configASSERT_DEFINED == 1 )
 313:../Dave/Generated/FREERTOS/timers.c ****                 {
 314:../Dave/Generated/FREERTOS/timers.c ****                     /* Sanity check that the size of the structure used to declare a
 315:../Dave/Generated/FREERTOS/timers.c ****                      * variable of type StaticTimer_t equals the size of the real timer
 316:../Dave/Generated/FREERTOS/timers.c ****                      * structure. */
 317:../Dave/Generated/FREERTOS/timers.c ****                     volatile size_t xSize = sizeof( StaticTimer_t );
 275              	 .loc 1 317 0
 276 000e 2C23     	 movs r3,#44
 277 0010 3B61     	 str r3,[r7,#16]
 318:../Dave/Generated/FREERTOS/timers.c ****                     configASSERT( xSize == sizeof( Timer_t ) );
 278              	 .loc 1 318 0
 279 0012 3B69     	 ldr r3,[r7,#16]
 280 0014 2C2B     	 cmp r3,#44
 281 0016 09D0     	 beq .L13
 282              	.LBB49:
 283              	.LBB50:
 284              	 .loc 2 197 0 discriminator 1
 285              	
 286 0018 4FF0FC03 	 mov r3,#252
 287 001c 83F31188 	 msr basepri,r3
 288 0020 BFF36F8F 	 isb 
 289 0024 BFF34F8F 	 dsb 
 290              	
 291              	
 292              	 .thumb
 293 0028 BB61     	 str r3,[r7,#24]
 294              	.L14:
 295              	.LBE50:
 296              	.LBE49:
 297              	 .loc 1 318 0 discriminator 1
 298 002a FEE7     	 b .L14
 299              	.L13:
 319:../Dave/Generated/FREERTOS/timers.c ****                     ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 300              	 .loc 1 319 0
 301 002c 3B69     	 ldr r3,[r7,#16]
 302              	.LBE48:
 320:../Dave/Generated/FREERTOS/timers.c ****                 }
 321:../Dave/Generated/FREERTOS/timers.c ****             #endif /* configASSERT_DEFINED */
 322:../Dave/Generated/FREERTOS/timers.c **** 
 323:../Dave/Generated/FREERTOS/timers.c ****             /* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 324:../Dave/Generated/FREERTOS/timers.c ****             configASSERT( pxTimerBuffer );
 303              	 .loc 1 324 0
 304 002e FB6A     	 ldr r3,[r7,#44]
 305 0030 002B     	 cmp r3,#0
 306 0032 09D1     	 bne .L15
 307              	.LBB51:
 308              	.LBB52:
 309              	 .loc 2 197 0 discriminator 1
 310              	
 311 0034 4FF0FC03 	 mov r3,#252
 312 0038 83F31188 	 msr basepri,r3
 313 003c BFF36F8F 	 isb 
 314 0040 BFF34F8F 	 dsb 
 315              	
 316              	
 317              	 .thumb
 318 0044 7B61     	 str r3,[r7,#20]
 319              	.L16:
 320              	.LBE52:
 321              	.LBE51:
 322              	 .loc 1 324 0 discriminator 2
 323 0046 FEE7     	 b .L16
 324              	.L15:
 325:../Dave/Generated/FREERTOS/timers.c ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointe
 325              	 .loc 1 325 0
 326 0048 FB6A     	 ldr r3,[r7,#44]
 327 004a FB61     	 str r3,[r7,#28]
 326:../Dave/Generated/FREERTOS/timers.c **** 
 327:../Dave/Generated/FREERTOS/timers.c ****             if( pxNewTimer != NULL )
 328              	 .loc 1 327 0
 329 004c FB69     	 ldr r3,[r7,#28]
 330 004e 002B     	 cmp r3,#0
 331 0050 0DD0     	 beq .L17
 328:../Dave/Generated/FREERTOS/timers.c ****             {
 329:../Dave/Generated/FREERTOS/timers.c ****                 /* Timers can be created statically or dynamically so note this
 330:../Dave/Generated/FREERTOS/timers.c ****                  * timer was created statically in case it is later deleted.  The
 331:../Dave/Generated/FREERTOS/timers.c ****                  * auto-reload bit may get set in prvInitialiseNewTimer(). */
 332:../Dave/Generated/FREERTOS/timers.c ****                 pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 332              	 .loc 1 332 0
 333 0052 FB69     	 ldr r3,[r7,#28]
 334 0054 0222     	 movs r2,#2
 335 0056 83F82820 	 strb r2,[r3,#40]
 333:../Dave/Generated/FREERTOS/timers.c **** 
 334:../Dave/Generated/FREERTOS/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, p
 336              	 .loc 1 334 0
 337 005a BB6A     	 ldr r3,[r7,#40]
 338 005c 0093     	 str r3,[sp]
 339 005e FB69     	 ldr r3,[r7,#28]
 340 0060 0193     	 str r3,[sp,#4]
 341 0062 F868     	 ldr r0,[r7,#12]
 342 0064 B968     	 ldr r1,[r7,#8]
 343 0066 7A68     	 ldr r2,[r7,#4]
 344 0068 3B68     	 ldr r3,[r7]
 345 006a FFF7FEFF 	 bl prvInitialiseNewTimer
 346              	.L17:
 335:../Dave/Generated/FREERTOS/timers.c ****             }
 336:../Dave/Generated/FREERTOS/timers.c **** 
 337:../Dave/Generated/FREERTOS/timers.c ****             return pxNewTimer;
 347              	 .loc 1 337 0
 348 006e FB69     	 ldr r3,[r7,#28]
 338:../Dave/Generated/FREERTOS/timers.c ****         }
 349              	 .loc 1 338 0
 350 0070 1846     	 mov r0,r3
 351 0072 2037     	 adds r7,r7,#32
 352              	.LCFI13:
 353              	 .cfi_def_cfa_offset 8
 354 0074 BD46     	 mov sp,r7
 355              	.LCFI14:
 356              	 .cfi_def_cfa_register 13
 357              	 
 358 0076 80BD     	 pop {r7,pc}
 359              	 .cfi_endproc
 360              	.LFE139:
 362              	 .section .text.prvInitialiseNewTimer,"ax",%progbits
 363              	 .align 2
 364              	 .thumb
 365              	 .thumb_func
 367              	prvInitialiseNewTimer:
 368              	.LFB140:
 339:../Dave/Generated/FREERTOS/timers.c **** 
 340:../Dave/Generated/FREERTOS/timers.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
 341:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 342:../Dave/Generated/FREERTOS/timers.c **** 
 343:../Dave/Generated/FREERTOS/timers.c ****     static void prvInitialiseNewTimer( const char * const pcTimerName, /*lint !e971 Unqualified cha
 344:../Dave/Generated/FREERTOS/timers.c ****                                        const TickType_t xTimerPeriodInTicks,
 345:../Dave/Generated/FREERTOS/timers.c ****                                        const UBaseType_t uxAutoReload,
 346:../Dave/Generated/FREERTOS/timers.c ****                                        void * const pvTimerID,
 347:../Dave/Generated/FREERTOS/timers.c ****                                        TimerCallbackFunction_t pxCallbackFunction,
 348:../Dave/Generated/FREERTOS/timers.c ****                                        Timer_t * pxNewTimer )
 349:../Dave/Generated/FREERTOS/timers.c ****     {
 369              	 .loc 1 349 0
 370              	 .cfi_startproc
 371              	 
 372              	 
 373 0000 80B5     	 push {r7,lr}
 374              	.LCFI15:
 375              	 .cfi_def_cfa_offset 8
 376              	 .cfi_offset 7,-8
 377              	 .cfi_offset 14,-4
 378 0002 86B0     	 sub sp,sp,#24
 379              	.LCFI16:
 380              	 .cfi_def_cfa_offset 32
 381 0004 00AF     	 add r7,sp,#0
 382              	.LCFI17:
 383              	 .cfi_def_cfa_register 7
 384 0006 F860     	 str r0,[r7,#12]
 385 0008 B960     	 str r1,[r7,#8]
 386 000a 7A60     	 str r2,[r7,#4]
 387 000c 3B60     	 str r3,[r7]
 350:../Dave/Generated/FREERTOS/timers.c ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 351:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( ( xTimerPeriodInTicks > 0 ) );
 388              	 .loc 1 351 0
 389 000e BB68     	 ldr r3,[r7,#8]
 390 0010 002B     	 cmp r3,#0
 391 0012 09D1     	 bne .L20
 392              	.LBB53:
 393              	.LBB54:
 394              	 .loc 2 197 0 discriminator 1
 395              	
 396 0014 4FF0FC03 	 mov r3,#252
 397 0018 83F31188 	 msr basepri,r3
 398 001c BFF36F8F 	 isb 
 399 0020 BFF34F8F 	 dsb 
 400              	
 401              	
 402              	 .thumb
 403 0024 7B61     	 str r3,[r7,#20]
 404              	.L21:
 405              	.LBE54:
 406              	.LBE53:
 407              	 .loc 1 351 0 discriminator 1
 408 0026 FEE7     	 b .L21
 409              	.L20:
 352:../Dave/Generated/FREERTOS/timers.c **** 
 353:../Dave/Generated/FREERTOS/timers.c ****         if( pxNewTimer != NULL )
 410              	 .loc 1 353 0
 411 0028 7B6A     	 ldr r3,[r7,#36]
 412 002a 002B     	 cmp r3,#0
 413 002c 1ED0     	 beq .L19
 354:../Dave/Generated/FREERTOS/timers.c ****         {
 355:../Dave/Generated/FREERTOS/timers.c ****             /* Ensure the infrastructure used by the timer service task has been
 356:../Dave/Generated/FREERTOS/timers.c ****              * created/initialised. */
 357:../Dave/Generated/FREERTOS/timers.c ****             prvCheckForValidListAndQueue();
 414              	 .loc 1 357 0
 415 002e FFF7FEFF 	 bl prvCheckForValidListAndQueue
 358:../Dave/Generated/FREERTOS/timers.c **** 
 359:../Dave/Generated/FREERTOS/timers.c ****             /* Initialise the timer structure members using the function
 360:../Dave/Generated/FREERTOS/timers.c ****              * parameters. */
 361:../Dave/Generated/FREERTOS/timers.c ****             pxNewTimer->pcTimerName = pcTimerName;
 416              	 .loc 1 361 0
 417 0032 7B6A     	 ldr r3,[r7,#36]
 418 0034 FA68     	 ldr r2,[r7,#12]
 419 0036 1A60     	 str r2,[r3]
 362:../Dave/Generated/FREERTOS/timers.c ****             pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 420              	 .loc 1 362 0
 421 0038 7B6A     	 ldr r3,[r7,#36]
 422 003a BA68     	 ldr r2,[r7,#8]
 423 003c 9A61     	 str r2,[r3,#24]
 363:../Dave/Generated/FREERTOS/timers.c ****             pxNewTimer->pvTimerID = pvTimerID;
 424              	 .loc 1 363 0
 425 003e 7B6A     	 ldr r3,[r7,#36]
 426 0040 3A68     	 ldr r2,[r7]
 427 0042 DA61     	 str r2,[r3,#28]
 364:../Dave/Generated/FREERTOS/timers.c ****             pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 428              	 .loc 1 364 0
 429 0044 7B6A     	 ldr r3,[r7,#36]
 430 0046 3A6A     	 ldr r2,[r7,#32]
 431 0048 1A62     	 str r2,[r3,#32]
 365:../Dave/Generated/FREERTOS/timers.c ****             vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 432              	 .loc 1 365 0
 433 004a 7B6A     	 ldr r3,[r7,#36]
 434 004c 0433     	 adds r3,r3,#4
 435 004e 1846     	 mov r0,r3
 436 0050 FFF7FEFF 	 bl vListInitialiseItem
 366:../Dave/Generated/FREERTOS/timers.c **** 
 367:../Dave/Generated/FREERTOS/timers.c ****             if( uxAutoReload != pdFALSE )
 437              	 .loc 1 367 0
 438 0054 7B68     	 ldr r3,[r7,#4]
 439 0056 002B     	 cmp r3,#0
 440 0058 08D0     	 beq .L19
 368:../Dave/Generated/FREERTOS/timers.c ****             {
 369:../Dave/Generated/FREERTOS/timers.c ****                 pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 441              	 .loc 1 369 0
 442 005a 7B6A     	 ldr r3,[r7,#36]
 443 005c 93F82830 	 ldrb r3,[r3,#40]
 444 0060 43F00403 	 orr r3,r3,#4
 445 0064 DAB2     	 uxtb r2,r3
 446 0066 7B6A     	 ldr r3,[r7,#36]
 447 0068 83F82820 	 strb r2,[r3,#40]
 448              	.L19:
 370:../Dave/Generated/FREERTOS/timers.c ****             }
 371:../Dave/Generated/FREERTOS/timers.c **** 
 372:../Dave/Generated/FREERTOS/timers.c ****             traceTIMER_CREATE( pxNewTimer );
 373:../Dave/Generated/FREERTOS/timers.c ****         }
 374:../Dave/Generated/FREERTOS/timers.c ****     }
 449              	 .loc 1 374 0
 450 006c 1837     	 adds r7,r7,#24
 451              	.LCFI18:
 452              	 .cfi_def_cfa_offset 8
 453 006e BD46     	 mov sp,r7
 454              	.LCFI19:
 455              	 .cfi_def_cfa_register 13
 456              	 
 457 0070 80BD     	 pop {r7,pc}
 458              	 .cfi_endproc
 459              	.LFE140:
 461 0072 00BF     	 .section .text.xTimerGenericCommand,"ax",%progbits
 462              	 .align 2
 463              	 .global xTimerGenericCommand
 464              	 .thumb
 465              	 .thumb_func
 467              	xTimerGenericCommand:
 468              	.LFB141:
 375:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 376:../Dave/Generated/FREERTOS/timers.c **** 
 377:../Dave/Generated/FREERTOS/timers.c ****     BaseType_t xTimerGenericCommand( TimerHandle_t xTimer,
 378:../Dave/Generated/FREERTOS/timers.c ****                                      const BaseType_t xCommandID,
 379:../Dave/Generated/FREERTOS/timers.c ****                                      const TickType_t xOptionalValue,
 380:../Dave/Generated/FREERTOS/timers.c ****                                      BaseType_t * const pxHigherPriorityTaskWoken,
 381:../Dave/Generated/FREERTOS/timers.c ****                                      const TickType_t xTicksToWait )
 382:../Dave/Generated/FREERTOS/timers.c ****     {
 469              	 .loc 1 382 0
 470              	 .cfi_startproc
 471              	 
 472              	 
 473 0000 80B5     	 push {r7,lr}
 474              	.LCFI20:
 475              	 .cfi_def_cfa_offset 8
 476              	 .cfi_offset 7,-8
 477              	 .cfi_offset 14,-4
 478 0002 8AB0     	 sub sp,sp,#40
 479              	.LCFI21:
 480              	 .cfi_def_cfa_offset 48
 481 0004 00AF     	 add r7,sp,#0
 482              	.LCFI22:
 483              	 .cfi_def_cfa_register 7
 484 0006 F860     	 str r0,[r7,#12]
 485 0008 B960     	 str r1,[r7,#8]
 486 000a 7A60     	 str r2,[r7,#4]
 487 000c 3B60     	 str r3,[r7]
 383:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xReturn = pdFAIL;
 488              	 .loc 1 383 0
 489 000e 0023     	 movs r3,#0
 490 0010 7B62     	 str r3,[r7,#36]
 384:../Dave/Generated/FREERTOS/timers.c ****         DaemonTaskMessage_t xMessage;
 385:../Dave/Generated/FREERTOS/timers.c **** 
 386:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 491              	 .loc 1 386 0
 492 0012 FB68     	 ldr r3,[r7,#12]
 493 0014 002B     	 cmp r3,#0
 494 0016 09D1     	 bne .L24
 495              	.LBB55:
 496              	.LBB56:
 497              	 .loc 2 197 0 discriminator 1
 498              	
 499 0018 4FF0FC03 	 mov r3,#252
 500 001c 83F31188 	 msr basepri,r3
 501 0020 BFF36F8F 	 isb 
 502 0024 BFF34F8F 	 dsb 
 503              	
 504              	
 505              	 .thumb
 506 0028 3B62     	 str r3,[r7,#32]
 507              	.L25:
 508              	.LBE56:
 509              	.LBE55:
 510              	 .loc 1 386 0 discriminator 1
 511 002a FEE7     	 b .L25
 512              	.L24:
 387:../Dave/Generated/FREERTOS/timers.c **** 
 388:../Dave/Generated/FREERTOS/timers.c ****         /* Send a message to the timer service task to perform a particular action
 389:../Dave/Generated/FREERTOS/timers.c ****          * on a particular timer definition. */
 390:../Dave/Generated/FREERTOS/timers.c ****         if( xTimerQueue != NULL )
 513              	 .loc 1 390 0
 514 002c 1C4B     	 ldr r3,.L32
 515 002e 1B68     	 ldr r3,[r3]
 516 0030 002B     	 cmp r3,#0
 517 0032 30D0     	 beq .L26
 391:../Dave/Generated/FREERTOS/timers.c ****         {
 392:../Dave/Generated/FREERTOS/timers.c ****             /* Send a command to the timer service task to start the xTimer timer. */
 393:../Dave/Generated/FREERTOS/timers.c ****             xMessage.xMessageID = xCommandID;
 518              	 .loc 1 393 0
 519 0034 BB68     	 ldr r3,[r7,#8]
 520 0036 3B61     	 str r3,[r7,#16]
 394:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 521              	 .loc 1 394 0
 522 0038 7B68     	 ldr r3,[r7,#4]
 523 003a 7B61     	 str r3,[r7,#20]
 395:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 524              	 .loc 1 395 0
 525 003c FB68     	 ldr r3,[r7,#12]
 526 003e BB61     	 str r3,[r7,#24]
 396:../Dave/Generated/FREERTOS/timers.c **** 
 397:../Dave/Generated/FREERTOS/timers.c ****             if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 527              	 .loc 1 397 0
 528 0040 BB68     	 ldr r3,[r7,#8]
 529 0042 052B     	 cmp r3,#5
 530 0044 1CDC     	 bgt .L27
 398:../Dave/Generated/FREERTOS/timers.c ****             {
 399:../Dave/Generated/FREERTOS/timers.c ****                 if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 531              	 .loc 1 399 0
 532 0046 FFF7FEFF 	 bl xTaskGetSchedulerState
 533 004a 0346     	 mov r3,r0
 534 004c 022B     	 cmp r3,#2
 535 004e 0BD1     	 bne .L28
 400:../Dave/Generated/FREERTOS/timers.c ****                 {
 401:../Dave/Generated/FREERTOS/timers.c ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 536              	 .loc 1 401 0
 537 0050 134B     	 ldr r3,.L32
 538 0052 1A68     	 ldr r2,[r3]
 539 0054 07F11003 	 add r3,r7,#16
 540 0058 1046     	 mov r0,r2
 541 005a 1946     	 mov r1,r3
 542 005c 3A6B     	 ldr r2,[r7,#48]
 543 005e 0023     	 movs r3,#0
 544 0060 FFF7FEFF 	 bl xQueueGenericSend
 545 0064 7862     	 str r0,[r7,#36]
 546 0066 16E0     	 b .L26
 547              	.L28:
 402:../Dave/Generated/FREERTOS/timers.c ****                 }
 403:../Dave/Generated/FREERTOS/timers.c ****                 else
 404:../Dave/Generated/FREERTOS/timers.c ****                 {
 405:../Dave/Generated/FREERTOS/timers.c ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 548              	 .loc 1 405 0
 549 0068 0D4B     	 ldr r3,.L32
 550 006a 1A68     	 ldr r2,[r3]
 551 006c 07F11003 	 add r3,r7,#16
 552 0070 1046     	 mov r0,r2
 553 0072 1946     	 mov r1,r3
 554 0074 0022     	 movs r2,#0
 555 0076 0023     	 movs r3,#0
 556 0078 FFF7FEFF 	 bl xQueueGenericSend
 557 007c 7862     	 str r0,[r7,#36]
 558 007e 0AE0     	 b .L26
 559              	.L27:
 406:../Dave/Generated/FREERTOS/timers.c ****                 }
 407:../Dave/Generated/FREERTOS/timers.c ****             }
 408:../Dave/Generated/FREERTOS/timers.c ****             else
 409:../Dave/Generated/FREERTOS/timers.c ****             {
 410:../Dave/Generated/FREERTOS/timers.c ****                 xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoke
 560              	 .loc 1 410 0
 561 0080 074B     	 ldr r3,.L32
 562 0082 1A68     	 ldr r2,[r3]
 563 0084 07F11003 	 add r3,r7,#16
 564 0088 1046     	 mov r0,r2
 565 008a 1946     	 mov r1,r3
 566 008c 3A68     	 ldr r2,[r7]
 567 008e 0023     	 movs r3,#0
 568 0090 FFF7FEFF 	 bl xQueueGenericSendFromISR
 569 0094 7862     	 str r0,[r7,#36]
 570              	.L26:
 411:../Dave/Generated/FREERTOS/timers.c ****             }
 412:../Dave/Generated/FREERTOS/timers.c **** 
 413:../Dave/Generated/FREERTOS/timers.c ****             traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:../Dave/Generated/FREERTOS/timers.c ****         }
 415:../Dave/Generated/FREERTOS/timers.c ****         else
 416:../Dave/Generated/FREERTOS/timers.c ****         {
 417:../Dave/Generated/FREERTOS/timers.c ****             mtCOVERAGE_TEST_MARKER();
 418:../Dave/Generated/FREERTOS/timers.c ****         }
 419:../Dave/Generated/FREERTOS/timers.c **** 
 420:../Dave/Generated/FREERTOS/timers.c ****         return xReturn;
 571              	 .loc 1 420 0
 572 0096 7B6A     	 ldr r3,[r7,#36]
 421:../Dave/Generated/FREERTOS/timers.c ****     }
 573              	 .loc 1 421 0
 574 0098 1846     	 mov r0,r3
 575 009a 2837     	 adds r7,r7,#40
 576              	.LCFI23:
 577              	 .cfi_def_cfa_offset 8
 578 009c BD46     	 mov sp,r7
 579              	.LCFI24:
 580              	 .cfi_def_cfa_register 13
 581              	 
 582 009e 80BD     	 pop {r7,pc}
 583              	.L33:
 584              	 .align 2
 585              	.L32:
 586 00a0 00000000 	 .word xTimerQueue
 587              	 .cfi_endproc
 588              	.LFE141:
 590              	 .section .text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 591              	 .align 2
 592              	 .global xTimerGetTimerDaemonTaskHandle
 593              	 .thumb
 594              	 .thumb_func
 596              	xTimerGetTimerDaemonTaskHandle:
 597              	.LFB142:
 422:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 423:../Dave/Generated/FREERTOS/timers.c **** 
 424:../Dave/Generated/FREERTOS/timers.c ****     TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:../Dave/Generated/FREERTOS/timers.c ****     {
 598              	 .loc 1 425 0
 599              	 .cfi_startproc
 600              	 
 601              	 
 602              	 
 603 0000 80B4     	 push {r7}
 604              	.LCFI25:
 605              	 .cfi_def_cfa_offset 4
 606              	 .cfi_offset 7,-4
 607 0002 83B0     	 sub sp,sp,#12
 608              	.LCFI26:
 609              	 .cfi_def_cfa_offset 16
 610 0004 00AF     	 add r7,sp,#0
 611              	.LCFI27:
 612              	 .cfi_def_cfa_register 7
 426:../Dave/Generated/FREERTOS/timers.c ****         /* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:../Dave/Generated/FREERTOS/timers.c ****          * started, then xTimerTaskHandle will be NULL. */
 428:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( ( xTimerTaskHandle != NULL ) );
 613              	 .loc 1 428 0
 614 0006 0B4B     	 ldr r3,.L38
 615 0008 1B68     	 ldr r3,[r3]
 616 000a 002B     	 cmp r3,#0
 617 000c 09D1     	 bne .L35
 618              	.LBB57:
 619              	.LBB58:
 620              	 .loc 2 197 0 discriminator 1
 621              	
 622 000e 4FF0FC03 	 mov r3,#252
 623 0012 83F31188 	 msr basepri,r3
 624 0016 BFF36F8F 	 isb 
 625 001a BFF34F8F 	 dsb 
 626              	
 627              	
 628              	 .thumb
 629 001e 7B60     	 str r3,[r7,#4]
 630              	.L36:
 631              	.LBE58:
 632              	.LBE57:
 633              	 .loc 1 428 0 discriminator 1
 634 0020 FEE7     	 b .L36
 635              	.L35:
 429:../Dave/Generated/FREERTOS/timers.c ****         return xTimerTaskHandle;
 636              	 .loc 1 429 0
 637 0022 044B     	 ldr r3,.L38
 638 0024 1B68     	 ldr r3,[r3]
 430:../Dave/Generated/FREERTOS/timers.c ****     }
 639              	 .loc 1 430 0
 640 0026 1846     	 mov r0,r3
 641 0028 0C37     	 adds r7,r7,#12
 642              	.LCFI28:
 643              	 .cfi_def_cfa_offset 4
 644 002a BD46     	 mov sp,r7
 645              	.LCFI29:
 646              	 .cfi_def_cfa_register 13
 647              	 
 648 002c 5DF8047B 	 ldr r7,[sp],#4
 649              	.LCFI30:
 650              	 .cfi_restore 7
 651              	 .cfi_def_cfa_offset 0
 652 0030 7047     	 bx lr
 653              	.L39:
 654 0032 00BF     	 .align 2
 655              	.L38:
 656 0034 00000000 	 .word xTimerTaskHandle
 657              	 .cfi_endproc
 658              	.LFE142:
 660              	 .section .text.xTimerGetPeriod,"ax",%progbits
 661              	 .align 2
 662              	 .global xTimerGetPeriod
 663              	 .thumb
 664              	 .thumb_func
 666              	xTimerGetPeriod:
 667              	.LFB143:
 431:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 432:../Dave/Generated/FREERTOS/timers.c **** 
 433:../Dave/Generated/FREERTOS/timers.c ****     TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:../Dave/Generated/FREERTOS/timers.c ****     {
 668              	 .loc 1 434 0
 669              	 .cfi_startproc
 670              	 
 671              	 
 672              	 
 673 0000 80B4     	 push {r7}
 674              	.LCFI31:
 675              	 .cfi_def_cfa_offset 4
 676              	 .cfi_offset 7,-4
 677 0002 85B0     	 sub sp,sp,#20
 678              	.LCFI32:
 679              	 .cfi_def_cfa_offset 24
 680 0004 00AF     	 add r7,sp,#0
 681              	.LCFI33:
 682              	 .cfi_def_cfa_register 7
 683 0006 7860     	 str r0,[r7,#4]
 435:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 684              	 .loc 1 435 0
 685 0008 7B68     	 ldr r3,[r7,#4]
 686 000a FB60     	 str r3,[r7,#12]
 436:../Dave/Generated/FREERTOS/timers.c **** 
 437:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 687              	 .loc 1 437 0
 688 000c 7B68     	 ldr r3,[r7,#4]
 689 000e 002B     	 cmp r3,#0
 690 0010 09D1     	 bne .L41
 691              	.LBB59:
 692              	.LBB60:
 693              	 .loc 2 197 0 discriminator 1
 694              	
 695 0012 4FF0FC03 	 mov r3,#252
 696 0016 83F31188 	 msr basepri,r3
 697 001a BFF36F8F 	 isb 
 698 001e BFF34F8F 	 dsb 
 699              	
 700              	
 701              	 .thumb
 702 0022 BB60     	 str r3,[r7,#8]
 703              	.L42:
 704              	.LBE60:
 705              	.LBE59:
 706              	 .loc 1 437 0 discriminator 1
 707 0024 FEE7     	 b .L42
 708              	.L41:
 438:../Dave/Generated/FREERTOS/timers.c ****         return pxTimer->xTimerPeriodInTicks;
 709              	 .loc 1 438 0
 710 0026 FB68     	 ldr r3,[r7,#12]
 711 0028 9B69     	 ldr r3,[r3,#24]
 439:../Dave/Generated/FREERTOS/timers.c ****     }
 712              	 .loc 1 439 0
 713 002a 1846     	 mov r0,r3
 714 002c 1437     	 adds r7,r7,#20
 715              	.LCFI34:
 716              	 .cfi_def_cfa_offset 4
 717 002e BD46     	 mov sp,r7
 718              	.LCFI35:
 719              	 .cfi_def_cfa_register 13
 720              	 
 721 0030 5DF8047B 	 ldr r7,[sp],#4
 722              	.LCFI36:
 723              	 .cfi_restore 7
 724              	 .cfi_def_cfa_offset 0
 725 0034 7047     	 bx lr
 726              	 .cfi_endproc
 727              	.LFE143:
 729 0036 00BF     	 .section .text.vTimerSetReloadMode,"ax",%progbits
 730              	 .align 2
 731              	 .global vTimerSetReloadMode
 732              	 .thumb
 733              	 .thumb_func
 735              	vTimerSetReloadMode:
 736              	.LFB144:
 440:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 441:../Dave/Generated/FREERTOS/timers.c **** 
 442:../Dave/Generated/FREERTOS/timers.c ****     void vTimerSetReloadMode( TimerHandle_t xTimer,
 443:../Dave/Generated/FREERTOS/timers.c ****                               const UBaseType_t uxAutoReload )
 444:../Dave/Generated/FREERTOS/timers.c ****     {
 737              	 .loc 1 444 0
 738              	 .cfi_startproc
 739              	 
 740              	 
 741 0000 80B5     	 push {r7,lr}
 742              	.LCFI37:
 743              	 .cfi_def_cfa_offset 8
 744              	 .cfi_offset 7,-8
 745              	 .cfi_offset 14,-4
 746 0002 84B0     	 sub sp,sp,#16
 747              	.LCFI38:
 748              	 .cfi_def_cfa_offset 24
 749 0004 00AF     	 add r7,sp,#0
 750              	.LCFI39:
 751              	 .cfi_def_cfa_register 7
 752 0006 7860     	 str r0,[r7,#4]
 753 0008 3960     	 str r1,[r7]
 445:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 754              	 .loc 1 445 0
 755 000a 7B68     	 ldr r3,[r7,#4]
 756 000c FB60     	 str r3,[r7,#12]
 446:../Dave/Generated/FREERTOS/timers.c **** 
 447:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 757              	 .loc 1 447 0
 758 000e 7B68     	 ldr r3,[r7,#4]
 759 0010 002B     	 cmp r3,#0
 760 0012 09D1     	 bne .L45
 761              	.LBB61:
 762              	.LBB62:
 763              	 .loc 2 197 0 discriminator 1
 764              	
 765 0014 4FF0FC03 	 mov r3,#252
 766 0018 83F31188 	 msr basepri,r3
 767 001c BFF36F8F 	 isb 
 768 0020 BFF34F8F 	 dsb 
 769              	
 770              	
 771              	 .thumb
 772 0024 BB60     	 str r3,[r7,#8]
 773              	.L46:
 774              	.LBE62:
 775              	.LBE61:
 776              	 .loc 1 447 0 discriminator 1
 777 0026 FEE7     	 b .L46
 778              	.L45:
 448:../Dave/Generated/FREERTOS/timers.c ****         taskENTER_CRITICAL();
 779              	 .loc 1 448 0
 780 0028 FFF7FEFF 	 bl vPortEnterCritical
 449:../Dave/Generated/FREERTOS/timers.c ****         {
 450:../Dave/Generated/FREERTOS/timers.c ****             if( uxAutoReload != pdFALSE )
 781              	 .loc 1 450 0
 782 002c 3B68     	 ldr r3,[r7]
 783 002e 002B     	 cmp r3,#0
 784 0030 09D0     	 beq .L47
 451:../Dave/Generated/FREERTOS/timers.c ****             {
 452:../Dave/Generated/FREERTOS/timers.c ****                 pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 785              	 .loc 1 452 0
 786 0032 FB68     	 ldr r3,[r7,#12]
 787 0034 93F82830 	 ldrb r3,[r3,#40]
 788 0038 43F00403 	 orr r3,r3,#4
 789 003c DAB2     	 uxtb r2,r3
 790 003e FB68     	 ldr r3,[r7,#12]
 791 0040 83F82820 	 strb r2,[r3,#40]
 792 0044 08E0     	 b .L48
 793              	.L47:
 453:../Dave/Generated/FREERTOS/timers.c ****             }
 454:../Dave/Generated/FREERTOS/timers.c ****             else
 455:../Dave/Generated/FREERTOS/timers.c ****             {
 456:../Dave/Generated/FREERTOS/timers.c ****                 pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 794              	 .loc 1 456 0
 795 0046 FB68     	 ldr r3,[r7,#12]
 796 0048 93F82830 	 ldrb r3,[r3,#40]
 797 004c 23F00403 	 bic r3,r3,#4
 798 0050 DAB2     	 uxtb r2,r3
 799 0052 FB68     	 ldr r3,[r7,#12]
 800 0054 83F82820 	 strb r2,[r3,#40]
 801              	.L48:
 457:../Dave/Generated/FREERTOS/timers.c ****             }
 458:../Dave/Generated/FREERTOS/timers.c ****         }
 459:../Dave/Generated/FREERTOS/timers.c ****         taskEXIT_CRITICAL();
 802              	 .loc 1 459 0
 803 0058 FFF7FEFF 	 bl vPortExitCritical
 460:../Dave/Generated/FREERTOS/timers.c ****     }
 804              	 .loc 1 460 0
 805 005c 1037     	 adds r7,r7,#16
 806              	.LCFI40:
 807              	 .cfi_def_cfa_offset 8
 808 005e BD46     	 mov sp,r7
 809              	.LCFI41:
 810              	 .cfi_def_cfa_register 13
 811              	 
 812 0060 80BD     	 pop {r7,pc}
 813              	 .cfi_endproc
 814              	.LFE144:
 816 0062 00BF     	 .section .text.uxTimerGetReloadMode,"ax",%progbits
 817              	 .align 2
 818              	 .global uxTimerGetReloadMode
 819              	 .thumb
 820              	 .thumb_func
 822              	uxTimerGetReloadMode:
 823              	.LFB145:
 461:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 462:../Dave/Generated/FREERTOS/timers.c **** 
 463:../Dave/Generated/FREERTOS/timers.c ****     UBaseType_t uxTimerGetReloadMode( TimerHandle_t xTimer )
 464:../Dave/Generated/FREERTOS/timers.c ****     {
 824              	 .loc 1 464 0
 825              	 .cfi_startproc
 826              	 
 827              	 
 828 0000 80B5     	 push {r7,lr}
 829              	.LCFI42:
 830              	 .cfi_def_cfa_offset 8
 831              	 .cfi_offset 7,-8
 832              	 .cfi_offset 14,-4
 833 0002 86B0     	 sub sp,sp,#24
 834              	.LCFI43:
 835              	 .cfi_def_cfa_offset 32
 836 0004 00AF     	 add r7,sp,#0
 837              	.LCFI44:
 838              	 .cfi_def_cfa_register 7
 839 0006 7860     	 str r0,[r7,#4]
 465:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 840              	 .loc 1 465 0
 841 0008 7B68     	 ldr r3,[r7,#4]
 842 000a 3B61     	 str r3,[r7,#16]
 466:../Dave/Generated/FREERTOS/timers.c ****         UBaseType_t uxReturn;
 467:../Dave/Generated/FREERTOS/timers.c **** 
 468:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 843              	 .loc 1 468 0
 844 000c 7B68     	 ldr r3,[r7,#4]
 845 000e 002B     	 cmp r3,#0
 846 0010 09D1     	 bne .L50
 847              	.LBB63:
 848              	.LBB64:
 849              	 .loc 2 197 0 discriminator 1
 850              	
 851 0012 4FF0FC03 	 mov r3,#252
 852 0016 83F31188 	 msr basepri,r3
 853 001a BFF36F8F 	 isb 
 854 001e BFF34F8F 	 dsb 
 855              	
 856              	
 857              	 .thumb
 858 0022 FB60     	 str r3,[r7,#12]
 859              	.L51:
 860              	.LBE64:
 861              	.LBE63:
 862              	 .loc 1 468 0 discriminator 1
 863 0024 FEE7     	 b .L51
 864              	.L50:
 469:../Dave/Generated/FREERTOS/timers.c ****         taskENTER_CRITICAL();
 865              	 .loc 1 469 0
 866 0026 FFF7FEFF 	 bl vPortEnterCritical
 470:../Dave/Generated/FREERTOS/timers.c ****         {
 471:../Dave/Generated/FREERTOS/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) == 0 )
 867              	 .loc 1 471 0
 868 002a 3B69     	 ldr r3,[r7,#16]
 869 002c 93F82830 	 ldrb r3,[r3,#40]
 870 0030 03F00403 	 and r3,r3,#4
 871 0034 002B     	 cmp r3,#0
 872 0036 02D1     	 bne .L52
 472:../Dave/Generated/FREERTOS/timers.c ****             {
 473:../Dave/Generated/FREERTOS/timers.c ****                 /* Not an auto-reload timer. */
 474:../Dave/Generated/FREERTOS/timers.c ****                 uxReturn = ( UBaseType_t ) pdFALSE;
 873              	 .loc 1 474 0
 874 0038 0023     	 movs r3,#0
 875 003a 7B61     	 str r3,[r7,#20]
 876 003c 01E0     	 b .L53
 877              	.L52:
 475:../Dave/Generated/FREERTOS/timers.c ****             }
 476:../Dave/Generated/FREERTOS/timers.c ****             else
 477:../Dave/Generated/FREERTOS/timers.c ****             {
 478:../Dave/Generated/FREERTOS/timers.c ****                 /* Is an auto-reload timer. */
 479:../Dave/Generated/FREERTOS/timers.c ****                 uxReturn = ( UBaseType_t ) pdTRUE;
 878              	 .loc 1 479 0
 879 003e 0123     	 movs r3,#1
 880 0040 7B61     	 str r3,[r7,#20]
 881              	.L53:
 480:../Dave/Generated/FREERTOS/timers.c ****             }
 481:../Dave/Generated/FREERTOS/timers.c ****         }
 482:../Dave/Generated/FREERTOS/timers.c ****         taskEXIT_CRITICAL();
 882              	 .loc 1 482 0
 883 0042 FFF7FEFF 	 bl vPortExitCritical
 483:../Dave/Generated/FREERTOS/timers.c **** 
 484:../Dave/Generated/FREERTOS/timers.c ****         return uxReturn;
 884              	 .loc 1 484 0
 885 0046 7B69     	 ldr r3,[r7,#20]
 485:../Dave/Generated/FREERTOS/timers.c ****     }
 886              	 .loc 1 485 0
 887 0048 1846     	 mov r0,r3
 888 004a 1837     	 adds r7,r7,#24
 889              	.LCFI45:
 890              	 .cfi_def_cfa_offset 8
 891 004c BD46     	 mov sp,r7
 892              	.LCFI46:
 893              	 .cfi_def_cfa_register 13
 894              	 
 895 004e 80BD     	 pop {r7,pc}
 896              	 .cfi_endproc
 897              	.LFE145:
 899              	 .section .text.xTimerGetExpiryTime,"ax",%progbits
 900              	 .align 2
 901              	 .global xTimerGetExpiryTime
 902              	 .thumb
 903              	 .thumb_func
 905              	xTimerGetExpiryTime:
 906              	.LFB146:
 486:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 487:../Dave/Generated/FREERTOS/timers.c **** 
 488:../Dave/Generated/FREERTOS/timers.c ****     TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 489:../Dave/Generated/FREERTOS/timers.c ****     {
 907              	 .loc 1 489 0
 908              	 .cfi_startproc
 909              	 
 910              	 
 911              	 
 912 0000 80B4     	 push {r7}
 913              	.LCFI47:
 914              	 .cfi_def_cfa_offset 4
 915              	 .cfi_offset 7,-4
 916 0002 87B0     	 sub sp,sp,#28
 917              	.LCFI48:
 918              	 .cfi_def_cfa_offset 32
 919 0004 00AF     	 add r7,sp,#0
 920              	.LCFI49:
 921              	 .cfi_def_cfa_register 7
 922 0006 7860     	 str r0,[r7,#4]
 490:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 923              	 .loc 1 490 0
 924 0008 7B68     	 ldr r3,[r7,#4]
 925 000a 7B61     	 str r3,[r7,#20]
 491:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xReturn;
 492:../Dave/Generated/FREERTOS/timers.c **** 
 493:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 926              	 .loc 1 493 0
 927 000c 7B68     	 ldr r3,[r7,#4]
 928 000e 002B     	 cmp r3,#0
 929 0010 09D1     	 bne .L56
 930              	.LBB65:
 931              	.LBB66:
 932              	 .loc 2 197 0 discriminator 1
 933              	
 934 0012 4FF0FC03 	 mov r3,#252
 935 0016 83F31188 	 msr basepri,r3
 936 001a BFF36F8F 	 isb 
 937 001e BFF34F8F 	 dsb 
 938              	
 939              	
 940              	 .thumb
 941 0022 FB60     	 str r3,[r7,#12]
 942              	.L57:
 943              	.LBE66:
 944              	.LBE65:
 945              	 .loc 1 493 0 discriminator 1
 946 0024 FEE7     	 b .L57
 947              	.L56:
 494:../Dave/Generated/FREERTOS/timers.c ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 948              	 .loc 1 494 0
 949 0026 7B69     	 ldr r3,[r7,#20]
 950 0028 5B68     	 ldr r3,[r3,#4]
 951 002a 3B61     	 str r3,[r7,#16]
 495:../Dave/Generated/FREERTOS/timers.c ****         return xReturn;
 952              	 .loc 1 495 0
 953 002c 3B69     	 ldr r3,[r7,#16]
 496:../Dave/Generated/FREERTOS/timers.c ****     }
 954              	 .loc 1 496 0
 955 002e 1846     	 mov r0,r3
 956 0030 1C37     	 adds r7,r7,#28
 957              	.LCFI50:
 958              	 .cfi_def_cfa_offset 4
 959 0032 BD46     	 mov sp,r7
 960              	.LCFI51:
 961              	 .cfi_def_cfa_register 13
 962              	 
 963 0034 5DF8047B 	 ldr r7,[sp],#4
 964              	.LCFI52:
 965              	 .cfi_restore 7
 966              	 .cfi_def_cfa_offset 0
 967 0038 7047     	 bx lr
 968              	 .cfi_endproc
 969              	.LFE146:
 971 003a 00BF     	 .section .text.pcTimerGetName,"ax",%progbits
 972              	 .align 2
 973              	 .global pcTimerGetName
 974              	 .thumb
 975              	 .thumb_func
 977              	pcTimerGetName:
 978              	.LFB147:
 497:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 498:../Dave/Generated/FREERTOS/timers.c **** 
 499:../Dave/Generated/FREERTOS/timers.c ****     const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are all
 500:../Dave/Generated/FREERTOS/timers.c ****     {
 979              	 .loc 1 500 0
 980              	 .cfi_startproc
 981              	 
 982              	 
 983              	 
 984 0000 80B4     	 push {r7}
 985              	.LCFI53:
 986              	 .cfi_def_cfa_offset 4
 987              	 .cfi_offset 7,-4
 988 0002 85B0     	 sub sp,sp,#20
 989              	.LCFI54:
 990              	 .cfi_def_cfa_offset 24
 991 0004 00AF     	 add r7,sp,#0
 992              	.LCFI55:
 993              	 .cfi_def_cfa_register 7
 994 0006 7860     	 str r0,[r7,#4]
 501:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 995              	 .loc 1 501 0
 996 0008 7B68     	 ldr r3,[r7,#4]
 997 000a FB60     	 str r3,[r7,#12]
 502:../Dave/Generated/FREERTOS/timers.c **** 
 503:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 998              	 .loc 1 503 0
 999 000c 7B68     	 ldr r3,[r7,#4]
 1000 000e 002B     	 cmp r3,#0
 1001 0010 09D1     	 bne .L60
 1002              	.LBB67:
 1003              	.LBB68:
 1004              	 .loc 2 197 0 discriminator 1
 1005              	
 1006 0012 4FF0FC03 	 mov r3,#252
 1007 0016 83F31188 	 msr basepri,r3
 1008 001a BFF36F8F 	 isb 
 1009 001e BFF34F8F 	 dsb 
 1010              	
 1011              	
 1012              	 .thumb
 1013 0022 BB60     	 str r3,[r7,#8]
 1014              	.L61:
 1015              	.LBE68:
 1016              	.LBE67:
 1017              	 .loc 1 503 0 discriminator 1
 1018 0024 FEE7     	 b .L61
 1019              	.L60:
 504:../Dave/Generated/FREERTOS/timers.c ****         return pxTimer->pcTimerName;
 1020              	 .loc 1 504 0
 1021 0026 FB68     	 ldr r3,[r7,#12]
 1022 0028 1B68     	 ldr r3,[r3]
 505:../Dave/Generated/FREERTOS/timers.c ****     }
 1023              	 .loc 1 505 0
 1024 002a 1846     	 mov r0,r3
 1025 002c 1437     	 adds r7,r7,#20
 1026              	.LCFI56:
 1027              	 .cfi_def_cfa_offset 4
 1028 002e BD46     	 mov sp,r7
 1029              	.LCFI57:
 1030              	 .cfi_def_cfa_register 13
 1031              	 
 1032 0030 5DF8047B 	 ldr r7,[sp],#4
 1033              	.LCFI58:
 1034              	 .cfi_restore 7
 1035              	 .cfi_def_cfa_offset 0
 1036 0034 7047     	 bx lr
 1037              	 .cfi_endproc
 1038              	.LFE147:
 1040 0036 00BF     	 .section .text.prvProcessExpiredTimer,"ax",%progbits
 1041              	 .align 2
 1042              	 .thumb
 1043              	 .thumb_func
 1045              	prvProcessExpiredTimer:
 1046              	.LFB148:
 506:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 507:../Dave/Generated/FREERTOS/timers.c **** 
 508:../Dave/Generated/FREERTOS/timers.c ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 509:../Dave/Generated/FREERTOS/timers.c ****                                         const TickType_t xTimeNow )
 510:../Dave/Generated/FREERTOS/timers.c ****     {
 1047              	 .loc 1 510 0
 1048              	 .cfi_startproc
 1049              	 
 1050              	 
 1051 0000 80B5     	 push {r7,lr}
 1052              	.LCFI59:
 1053              	 .cfi_def_cfa_offset 8
 1054              	 .cfi_offset 7,-8
 1055              	 .cfi_offset 14,-4
 1056 0002 88B0     	 sub sp,sp,#32
 1057              	.LCFI60:
 1058              	 .cfi_def_cfa_offset 40
 1059 0004 02AF     	 add r7,sp,#8
 1060              	.LCFI61:
 1061              	 .cfi_def_cfa 7,32
 1062 0006 7860     	 str r0,[r7,#4]
 1063 0008 3960     	 str r1,[r7]
 511:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xResult;
 512:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); 
 1064              	 .loc 1 512 0
 1065 000a 224B     	 ldr r3,.L67
 1066 000c 1B68     	 ldr r3,[r3]
 1067 000e DB68     	 ldr r3,[r3,#12]
 1068 0010 DB68     	 ldr r3,[r3,#12]
 1069 0012 7B61     	 str r3,[r7,#20]
 513:../Dave/Generated/FREERTOS/timers.c **** 
 514:../Dave/Generated/FREERTOS/timers.c ****         /* Remove the timer from the list of active timers.  A check has already
 515:../Dave/Generated/FREERTOS/timers.c ****          * been performed to ensure the list is not empty. */
 516:../Dave/Generated/FREERTOS/timers.c **** 
 517:../Dave/Generated/FREERTOS/timers.c ****         ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1070              	 .loc 1 517 0
 1071 0014 7B69     	 ldr r3,[r7,#20]
 1072 0016 0433     	 adds r3,r3,#4
 1073 0018 1846     	 mov r0,r3
 1074 001a FFF7FEFF 	 bl uxListRemove
 518:../Dave/Generated/FREERTOS/timers.c ****         traceTIMER_EXPIRED( pxTimer );
 519:../Dave/Generated/FREERTOS/timers.c **** 
 520:../Dave/Generated/FREERTOS/timers.c ****         /* If the timer is an auto-reload timer then calculate the next
 521:../Dave/Generated/FREERTOS/timers.c ****          * expiry time and re-insert the timer in the list of active timers. */
 522:../Dave/Generated/FREERTOS/timers.c ****         if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 1075              	 .loc 1 522 0
 1076 001e 7B69     	 ldr r3,[r7,#20]
 1077 0020 93F82830 	 ldrb r3,[r3,#40]
 1078 0024 03F00403 	 and r3,r3,#4
 1079 0028 002B     	 cmp r3,#0
 1080 002a 22D0     	 beq .L64
 523:../Dave/Generated/FREERTOS/timers.c ****         {
 524:../Dave/Generated/FREERTOS/timers.c ****             /* The timer is inserted into a list using a time relative to anything
 525:../Dave/Generated/FREERTOS/timers.c ****              * other than the current time.  It will therefore be inserted into the
 526:../Dave/Generated/FREERTOS/timers.c ****              * correct list relative to the time this task thinks it is now. */
 527:../Dave/Generated/FREERTOS/timers.c ****             if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTic
 1081              	 .loc 1 527 0
 1082 002c 7B69     	 ldr r3,[r7,#20]
 1083 002e 9A69     	 ldr r2,[r3,#24]
 1084 0030 7B68     	 ldr r3,[r7,#4]
 1085 0032 1344     	 add r3,r3,r2
 1086 0034 7869     	 ldr r0,[r7,#20]
 1087 0036 1946     	 mov r1,r3
 1088 0038 3A68     	 ldr r2,[r7]
 1089 003a 7B68     	 ldr r3,[r7,#4]
 1090 003c FFF7FEFF 	 bl prvInsertTimerInActiveList
 1091 0040 0346     	 mov r3,r0
 1092 0042 002B     	 cmp r3,#0
 1093 0044 1ED0     	 beq .L65
 528:../Dave/Generated/FREERTOS/timers.c ****             {
 529:../Dave/Generated/FREERTOS/timers.c ****                 /* The timer expired before it was added to the active timer
 530:../Dave/Generated/FREERTOS/timers.c ****                  * list.  Reload it now.  */
 531:../Dave/Generated/FREERTOS/timers.c ****                 xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTi
 1094              	 .loc 1 531 0
 1095 0046 0023     	 movs r3,#0
 1096 0048 0093     	 str r3,[sp]
 1097 004a 7869     	 ldr r0,[r7,#20]
 1098 004c 0021     	 movs r1,#0
 1099 004e 7A68     	 ldr r2,[r7,#4]
 1100 0050 0023     	 movs r3,#0
 1101 0052 FFF7FEFF 	 bl xTimerGenericCommand
 1102 0056 3861     	 str r0,[r7,#16]
 532:../Dave/Generated/FREERTOS/timers.c ****                 configASSERT( xResult );
 1103              	 .loc 1 532 0
 1104 0058 3B69     	 ldr r3,[r7,#16]
 1105 005a 002B     	 cmp r3,#0
 1106 005c 12D1     	 bne .L65
 1107              	.LBB69:
 1108              	.LBB70:
 1109              	 .loc 2 197 0 discriminator 1
 1110              	
 1111 005e 4FF0FC03 	 mov r3,#252
 1112 0062 83F31188 	 msr basepri,r3
 1113 0066 BFF36F8F 	 isb 
 1114 006a BFF34F8F 	 dsb 
 1115              	
 1116              	
 1117              	 .thumb
 1118 006e FB60     	 str r3,[r7,#12]
 1119              	.L66:
 1120              	.LBE70:
 1121              	.LBE69:
 1122              	 .loc 1 532 0 discriminator 1
 1123 0070 FEE7     	 b .L66
 1124              	.L64:
 533:../Dave/Generated/FREERTOS/timers.c ****                 ( void ) xResult;
 534:../Dave/Generated/FREERTOS/timers.c ****             }
 535:../Dave/Generated/FREERTOS/timers.c ****             else
 536:../Dave/Generated/FREERTOS/timers.c ****             {
 537:../Dave/Generated/FREERTOS/timers.c ****                 mtCOVERAGE_TEST_MARKER();
 538:../Dave/Generated/FREERTOS/timers.c ****             }
 539:../Dave/Generated/FREERTOS/timers.c ****         }
 540:../Dave/Generated/FREERTOS/timers.c ****         else
 541:../Dave/Generated/FREERTOS/timers.c ****         {
 542:../Dave/Generated/FREERTOS/timers.c ****             pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 1125              	 .loc 1 542 0
 1126 0072 7B69     	 ldr r3,[r7,#20]
 1127 0074 93F82830 	 ldrb r3,[r3,#40]
 1128 0078 23F00103 	 bic r3,r3,#1
 1129 007c DAB2     	 uxtb r2,r3
 1130 007e 7B69     	 ldr r3,[r7,#20]
 1131 0080 83F82820 	 strb r2,[r3,#40]
 1132              	.L65:
 543:../Dave/Generated/FREERTOS/timers.c ****             mtCOVERAGE_TEST_MARKER();
 544:../Dave/Generated/FREERTOS/timers.c ****         }
 545:../Dave/Generated/FREERTOS/timers.c **** 
 546:../Dave/Generated/FREERTOS/timers.c ****         /* Call the timer callback. */
 547:../Dave/Generated/FREERTOS/timers.c ****         pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1133              	 .loc 1 547 0
 1134 0084 7B69     	 ldr r3,[r7,#20]
 1135 0086 1B6A     	 ldr r3,[r3,#32]
 1136 0088 7869     	 ldr r0,[r7,#20]
 1137 008a 9847     	 blx r3
 548:../Dave/Generated/FREERTOS/timers.c ****     }
 1138              	 .loc 1 548 0
 1139 008c 1837     	 adds r7,r7,#24
 1140              	.LCFI62:
 1141              	 .cfi_def_cfa_offset 8
 1142 008e BD46     	 mov sp,r7
 1143              	.LCFI63:
 1144              	 .cfi_def_cfa_register 13
 1145              	 
 1146 0090 80BD     	 pop {r7,pc}
 1147              	.L68:
 1148 0092 00BF     	 .align 2
 1149              	.L67:
 1150 0094 00000000 	 .word pxCurrentTimerList
 1151              	 .cfi_endproc
 1152              	.LFE148:
 1154              	 .section .text.prvTimerTask,"ax",%progbits
 1155              	 .align 2
 1156              	 .thumb
 1157              	 .thumb_func
 1159              	prvTimerTask:
 1160              	.LFB149:
 549:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 550:../Dave/Generated/FREERTOS/timers.c **** 
 551:../Dave/Generated/FREERTOS/timers.c ****     static portTASK_FUNCTION( prvTimerTask, pvParameters )
 552:../Dave/Generated/FREERTOS/timers.c ****     {
 1161              	 .loc 1 552 0
 1162              	 .cfi_startproc
 1163              	 
 1164              	 
 1165 0000 80B5     	 push {r7,lr}
 1166              	.LCFI64:
 1167              	 .cfi_def_cfa_offset 8
 1168              	 .cfi_offset 7,-8
 1169              	 .cfi_offset 14,-4
 1170 0002 84B0     	 sub sp,sp,#16
 1171              	.LCFI65:
 1172              	 .cfi_def_cfa_offset 24
 1173 0004 00AF     	 add r7,sp,#0
 1174              	.LCFI66:
 1175              	 .cfi_def_cfa_register 7
 1176 0006 7860     	 str r0,[r7,#4]
 1177              	.L70:
 553:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xNextExpireTime;
 554:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xListWasEmpty;
 555:../Dave/Generated/FREERTOS/timers.c **** 
 556:../Dave/Generated/FREERTOS/timers.c ****         /* Just to avoid compiler warnings. */
 557:../Dave/Generated/FREERTOS/timers.c ****         ( void ) pvParameters;
 558:../Dave/Generated/FREERTOS/timers.c **** 
 559:../Dave/Generated/FREERTOS/timers.c ****         #if ( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 560:../Dave/Generated/FREERTOS/timers.c ****             {
 561:../Dave/Generated/FREERTOS/timers.c ****                 extern void vApplicationDaemonTaskStartupHook( void );
 562:../Dave/Generated/FREERTOS/timers.c **** 
 563:../Dave/Generated/FREERTOS/timers.c ****                 /* Allow the application writer to execute some code in the context of
 564:../Dave/Generated/FREERTOS/timers.c ****                  * this task at the point the task starts executing.  This is useful if the
 565:../Dave/Generated/FREERTOS/timers.c ****                  * application includes initialisation code that would benefit from
 566:../Dave/Generated/FREERTOS/timers.c ****                  * executing after the scheduler has been started. */
 567:../Dave/Generated/FREERTOS/timers.c ****                 vApplicationDaemonTaskStartupHook();
 568:../Dave/Generated/FREERTOS/timers.c ****             }
 569:../Dave/Generated/FREERTOS/timers.c ****         #endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 570:../Dave/Generated/FREERTOS/timers.c **** 
 571:../Dave/Generated/FREERTOS/timers.c ****         for( ; ; )
 572:../Dave/Generated/FREERTOS/timers.c ****         {
 573:../Dave/Generated/FREERTOS/timers.c ****             /* Query the timers list to see if it contains any timers, and if so,
 574:../Dave/Generated/FREERTOS/timers.c ****              * obtain the time at which the next timer will expire. */
 575:../Dave/Generated/FREERTOS/timers.c ****             xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 1178              	 .loc 1 575 0 discriminator 1
 1179 0008 07F10803 	 add r3,r7,#8
 1180 000c 1846     	 mov r0,r3
 1181 000e FFF7FEFF 	 bl prvGetNextExpireTime
 1182 0012 F860     	 str r0,[r7,#12]
 576:../Dave/Generated/FREERTOS/timers.c **** 
 577:../Dave/Generated/FREERTOS/timers.c ****             /* If a timer has expired, process it.  Otherwise, block this task
 578:../Dave/Generated/FREERTOS/timers.c ****              * until either a timer does expire, or a command is received. */
 579:../Dave/Generated/FREERTOS/timers.c ****             prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 1183              	 .loc 1 579 0 discriminator 1
 1184 0014 BB68     	 ldr r3,[r7,#8]
 1185 0016 F868     	 ldr r0,[r7,#12]
 1186 0018 1946     	 mov r1,r3
 1187 001a FFF7FEFF 	 bl prvProcessTimerOrBlockTask
 580:../Dave/Generated/FREERTOS/timers.c **** 
 581:../Dave/Generated/FREERTOS/timers.c ****             /* Empty the command queue. */
 582:../Dave/Generated/FREERTOS/timers.c ****             prvProcessReceivedCommands();
 1188              	 .loc 1 582 0 discriminator 1
 1189 001e FFF7FEFF 	 bl prvProcessReceivedCommands
 583:../Dave/Generated/FREERTOS/timers.c ****         }
 1190              	 .loc 1 583 0 discriminator 1
 1191 0022 F1E7     	 b .L70
 1192              	 .cfi_endproc
 1193              	.LFE149:
 1195              	 .section .text.prvProcessTimerOrBlockTask,"ax",%progbits
 1196              	 .align 2
 1197              	 .thumb
 1198              	 .thumb_func
 1200              	prvProcessTimerOrBlockTask:
 1201              	.LFB150:
 584:../Dave/Generated/FREERTOS/timers.c ****     }
 585:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 586:../Dave/Generated/FREERTOS/timers.c **** 
 587:../Dave/Generated/FREERTOS/timers.c ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 588:../Dave/Generated/FREERTOS/timers.c ****                                             BaseType_t xListWasEmpty )
 589:../Dave/Generated/FREERTOS/timers.c ****     {
 1202              	 .loc 1 589 0
 1203              	 .cfi_startproc
 1204              	 
 1205              	 
 1206 0000 80B5     	 push {r7,lr}
 1207              	.LCFI67:
 1208              	 .cfi_def_cfa_offset 8
 1209              	 .cfi_offset 7,-8
 1210              	 .cfi_offset 14,-4
 1211 0002 84B0     	 sub sp,sp,#16
 1212              	.LCFI68:
 1213              	 .cfi_def_cfa_offset 24
 1214 0004 00AF     	 add r7,sp,#0
 1215              	.LCFI69:
 1216              	 .cfi_def_cfa_register 7
 1217 0006 7860     	 str r0,[r7,#4]
 1218 0008 3960     	 str r1,[r7]
 590:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xTimeNow;
 591:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xTimerListsWereSwitched;
 592:../Dave/Generated/FREERTOS/timers.c **** 
 593:../Dave/Generated/FREERTOS/timers.c ****         vTaskSuspendAll();
 1219              	 .loc 1 593 0
 1220 000a FFF7FEFF 	 bl vTaskSuspendAll
 594:../Dave/Generated/FREERTOS/timers.c ****         {
 595:../Dave/Generated/FREERTOS/timers.c ****             /* Obtain the time now to make an assessment as to whether the timer
 596:../Dave/Generated/FREERTOS/timers.c ****              * has expired or not.  If obtaining the time causes the lists to switch
 597:../Dave/Generated/FREERTOS/timers.c ****              * then don't process this timer as any timers that remained in the list
 598:../Dave/Generated/FREERTOS/timers.c ****              * when the lists were switched will have been processed within the
 599:../Dave/Generated/FREERTOS/timers.c ****              * prvSampleTimeNow() function. */
 600:../Dave/Generated/FREERTOS/timers.c ****             xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 1221              	 .loc 1 600 0
 1222 000e 07F10803 	 add r3,r7,#8
 1223 0012 1846     	 mov r0,r3
 1224 0014 FFF7FEFF 	 bl prvSampleTimeNow
 1225 0018 F860     	 str r0,[r7,#12]
 601:../Dave/Generated/FREERTOS/timers.c **** 
 602:../Dave/Generated/FREERTOS/timers.c ****             if( xTimerListsWereSwitched == pdFALSE )
 1226              	 .loc 1 602 0
 1227 001a BB68     	 ldr r3,[r7,#8]
 1228 001c 002B     	 cmp r3,#0
 1229 001e 31D1     	 bne .L72
 603:../Dave/Generated/FREERTOS/timers.c ****             {
 604:../Dave/Generated/FREERTOS/timers.c ****                 /* The tick count has not overflowed, has the timer expired? */
 605:../Dave/Generated/FREERTOS/timers.c ****                 if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 1230              	 .loc 1 605 0
 1231 0020 3B68     	 ldr r3,[r7]
 1232 0022 002B     	 cmp r3,#0
 1233 0024 0AD1     	 bne .L73
 1234              	 .loc 1 605 0 is_stmt 0 discriminator 1
 1235 0026 7A68     	 ldr r2,[r7,#4]
 1236 0028 FB68     	 ldr r3,[r7,#12]
 1237 002a 9A42     	 cmp r2,r3
 1238 002c 06D8     	 bhi .L73
 606:../Dave/Generated/FREERTOS/timers.c ****                 {
 607:../Dave/Generated/FREERTOS/timers.c ****                     ( void ) xTaskResumeAll();
 1239              	 .loc 1 607 0 is_stmt 1
 1240 002e FFF7FEFF 	 bl xTaskResumeAll
 608:../Dave/Generated/FREERTOS/timers.c ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1241              	 .loc 1 608 0
 1242 0032 7868     	 ldr r0,[r7,#4]
 1243 0034 F968     	 ldr r1,[r7,#12]
 1244 0036 FFF7FEFF 	 bl prvProcessExpiredTimer
 1245 003a 25E0     	 b .L71
 1246              	.L73:
 609:../Dave/Generated/FREERTOS/timers.c ****                 }
 610:../Dave/Generated/FREERTOS/timers.c ****                 else
 611:../Dave/Generated/FREERTOS/timers.c ****                 {
 612:../Dave/Generated/FREERTOS/timers.c ****                     /* The tick count has not overflowed, and the next expire
 613:../Dave/Generated/FREERTOS/timers.c ****                      * time has not been reached yet.  This task should therefore
 614:../Dave/Generated/FREERTOS/timers.c ****                      * block to wait for the next expire time or a command to be
 615:../Dave/Generated/FREERTOS/timers.c ****                      * received - whichever comes first.  The following line cannot
 616:../Dave/Generated/FREERTOS/timers.c ****                      * be reached unless xNextExpireTime > xTimeNow, except in the
 617:../Dave/Generated/FREERTOS/timers.c ****                      * case when the current timer list is empty. */
 618:../Dave/Generated/FREERTOS/timers.c ****                     if( xListWasEmpty != pdFALSE )
 1247              	 .loc 1 618 0
 1248 003c 3B68     	 ldr r3,[r7]
 1249 003e 002B     	 cmp r3,#0
 1250 0040 08D0     	 beq .L75
 619:../Dave/Generated/FREERTOS/timers.c ****                     {
 620:../Dave/Generated/FREERTOS/timers.c ****                         /* The current timer list is empty - is the overflow list
 621:../Dave/Generated/FREERTOS/timers.c ****                          * also empty? */
 622:../Dave/Generated/FREERTOS/timers.c ****                         xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 1251              	 .loc 1 622 0
 1252 0042 134B     	 ldr r3,.L79
 1253 0044 1B68     	 ldr r3,[r3]
 1254 0046 1B68     	 ldr r3,[r3]
 1255 0048 002B     	 cmp r3,#0
 1256 004a 01D1     	 bne .L76
 1257              	 .loc 1 622 0 is_stmt 0 discriminator 1
 1258 004c 0123     	 movs r3,#1
 1259 004e 00E0     	 b .L77
 1260              	.L76:
 1261              	 .loc 1 622 0 discriminator 2
 1262 0050 0023     	 movs r3,#0
 1263              	.L77:
 1264              	 .loc 1 622 0 discriminator 4
 1265 0052 3B60     	 str r3,[r7]
 1266              	.L75:
 623:../Dave/Generated/FREERTOS/timers.c ****                     }
 624:../Dave/Generated/FREERTOS/timers.c **** 
 625:../Dave/Generated/FREERTOS/timers.c ****                     vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xL
 1267              	 .loc 1 625 0 is_stmt 1
 1268 0054 0F4B     	 ldr r3,.L79+4
 1269 0056 1968     	 ldr r1,[r3]
 1270 0058 7A68     	 ldr r2,[r7,#4]
 1271 005a FB68     	 ldr r3,[r7,#12]
 1272 005c D31A     	 subs r3,r2,r3
 1273 005e 0846     	 mov r0,r1
 1274 0060 1946     	 mov r1,r3
 1275 0062 3A68     	 ldr r2,[r7]
 1276 0064 FFF7FEFF 	 bl vQueueWaitForMessageRestricted
 626:../Dave/Generated/FREERTOS/timers.c **** 
 627:../Dave/Generated/FREERTOS/timers.c ****                     if( xTaskResumeAll() == pdFALSE )
 1277              	 .loc 1 627 0
 1278 0068 FFF7FEFF 	 bl xTaskResumeAll
 1279 006c 0346     	 mov r3,r0
 1280 006e 002B     	 cmp r3,#0
 1281 0070 0AD1     	 bne .L71
 628:../Dave/Generated/FREERTOS/timers.c ****                     {
 629:../Dave/Generated/FREERTOS/timers.c ****                         /* Yield to wait for either a command to arrive, or the
 630:../Dave/Generated/FREERTOS/timers.c ****                          * block time to expire.  If a command arrived between the
 631:../Dave/Generated/FREERTOS/timers.c ****                          * critical section being exited and this yield then the yield
 632:../Dave/Generated/FREERTOS/timers.c ****                          * will not cause the task to block. */
 633:../Dave/Generated/FREERTOS/timers.c ****                         portYIELD_WITHIN_API();
 1282              	 .loc 1 633 0
 1283 0072 094B     	 ldr r3,.L79+8
 1284 0074 4FF08052 	 mov r2,#268435456
 1285 0078 1A60     	 str r2,[r3]
 1286              	
 1287 007a BFF34F8F 	 dsb
 1288              	
 1289              	
 1290 007e BFF36F8F 	 isb
 1291              	
 1292              	 .thumb
 1293 0082 01E0     	 b .L71
 1294              	.L72:
 634:../Dave/Generated/FREERTOS/timers.c ****                     }
 635:../Dave/Generated/FREERTOS/timers.c ****                     else
 636:../Dave/Generated/FREERTOS/timers.c ****                     {
 637:../Dave/Generated/FREERTOS/timers.c ****                         mtCOVERAGE_TEST_MARKER();
 638:../Dave/Generated/FREERTOS/timers.c ****                     }
 639:../Dave/Generated/FREERTOS/timers.c ****                 }
 640:../Dave/Generated/FREERTOS/timers.c ****             }
 641:../Dave/Generated/FREERTOS/timers.c ****             else
 642:../Dave/Generated/FREERTOS/timers.c ****             {
 643:../Dave/Generated/FREERTOS/timers.c ****                 ( void ) xTaskResumeAll();
 1295              	 .loc 1 643 0
 1296 0084 FFF7FEFF 	 bl xTaskResumeAll
 1297              	.L71:
 644:../Dave/Generated/FREERTOS/timers.c ****             }
 645:../Dave/Generated/FREERTOS/timers.c ****         }
 646:../Dave/Generated/FREERTOS/timers.c ****     }
 1298              	 .loc 1 646 0
 1299 0088 1037     	 adds r7,r7,#16
 1300              	.LCFI70:
 1301              	 .cfi_def_cfa_offset 8
 1302 008a BD46     	 mov sp,r7
 1303              	.LCFI71:
 1304              	 .cfi_def_cfa_register 13
 1305              	 
 1306 008c 80BD     	 pop {r7,pc}
 1307              	.L80:
 1308 008e 00BF     	 .align 2
 1309              	.L79:
 1310 0090 00000000 	 .word pxOverflowTimerList
 1311 0094 00000000 	 .word xTimerQueue
 1312 0098 04ED00E0 	 .word -536810236
 1313              	 .cfi_endproc
 1314              	.LFE150:
 1316              	 .section .text.prvGetNextExpireTime,"ax",%progbits
 1317              	 .align 2
 1318              	 .thumb
 1319              	 .thumb_func
 1321              	prvGetNextExpireTime:
 1322              	.LFB151:
 647:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 648:../Dave/Generated/FREERTOS/timers.c **** 
 649:../Dave/Generated/FREERTOS/timers.c ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 650:../Dave/Generated/FREERTOS/timers.c ****     {
 1323              	 .loc 1 650 0
 1324              	 .cfi_startproc
 1325              	 
 1326              	 
 1327              	 
 1328 0000 80B4     	 push {r7}
 1329              	.LCFI72:
 1330              	 .cfi_def_cfa_offset 4
 1331              	 .cfi_offset 7,-4
 1332 0002 85B0     	 sub sp,sp,#20
 1333              	.LCFI73:
 1334              	 .cfi_def_cfa_offset 24
 1335 0004 00AF     	 add r7,sp,#0
 1336              	.LCFI74:
 1337              	 .cfi_def_cfa_register 7
 1338 0006 7860     	 str r0,[r7,#4]
 651:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xNextExpireTime;
 652:../Dave/Generated/FREERTOS/timers.c **** 
 653:../Dave/Generated/FREERTOS/timers.c ****         /* Timers are listed in expiry time order, with the head of the list
 654:../Dave/Generated/FREERTOS/timers.c ****          * referencing the task that will expire first.  Obtain the time at which
 655:../Dave/Generated/FREERTOS/timers.c ****          * the timer with the nearest expiry time will expire.  If there are no
 656:../Dave/Generated/FREERTOS/timers.c ****          * active timers then just set the next expire time to 0.  That will cause
 657:../Dave/Generated/FREERTOS/timers.c ****          * this task to unblock when the tick count overflows, at which point the
 658:../Dave/Generated/FREERTOS/timers.c ****          * timer lists will be switched and the next expiry time can be
 659:../Dave/Generated/FREERTOS/timers.c ****          * re-assessed.  */
 660:../Dave/Generated/FREERTOS/timers.c ****         *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 1339              	 .loc 1 660 0
 1340 0008 0E4B     	 ldr r3,.L87
 1341 000a 1B68     	 ldr r3,[r3]
 1342 000c 1B68     	 ldr r3,[r3]
 1343 000e 002B     	 cmp r3,#0
 1344 0010 01D1     	 bne .L82
 1345              	 .loc 1 660 0 is_stmt 0 discriminator 1
 1346 0012 0122     	 movs r2,#1
 1347 0014 00E0     	 b .L83
 1348              	.L82:
 1349              	 .loc 1 660 0 discriminator 2
 1350 0016 0022     	 movs r2,#0
 1351              	.L83:
 1352              	 .loc 1 660 0 discriminator 4
 1353 0018 7B68     	 ldr r3,[r7,#4]
 1354 001a 1A60     	 str r2,[r3]
 661:../Dave/Generated/FREERTOS/timers.c **** 
 662:../Dave/Generated/FREERTOS/timers.c ****         if( *pxListWasEmpty == pdFALSE )
 1355              	 .loc 1 662 0 is_stmt 1 discriminator 4
 1356 001c 7B68     	 ldr r3,[r7,#4]
 1357 001e 1B68     	 ldr r3,[r3]
 1358 0020 002B     	 cmp r3,#0
 1359 0022 05D1     	 bne .L84
 663:../Dave/Generated/FREERTOS/timers.c ****         {
 664:../Dave/Generated/FREERTOS/timers.c ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 1360              	 .loc 1 664 0
 1361 0024 074B     	 ldr r3,.L87
 1362 0026 1B68     	 ldr r3,[r3]
 1363 0028 DB68     	 ldr r3,[r3,#12]
 1364 002a 1B68     	 ldr r3,[r3]
 1365 002c FB60     	 str r3,[r7,#12]
 1366 002e 01E0     	 b .L85
 1367              	.L84:
 665:../Dave/Generated/FREERTOS/timers.c ****         }
 666:../Dave/Generated/FREERTOS/timers.c ****         else
 667:../Dave/Generated/FREERTOS/timers.c ****         {
 668:../Dave/Generated/FREERTOS/timers.c ****             /* Ensure the task unblocks when the tick count rolls over. */
 669:../Dave/Generated/FREERTOS/timers.c ****             xNextExpireTime = ( TickType_t ) 0U;
 1368              	 .loc 1 669 0
 1369 0030 0023     	 movs r3,#0
 1370 0032 FB60     	 str r3,[r7,#12]
 1371              	.L85:
 670:../Dave/Generated/FREERTOS/timers.c ****         }
 671:../Dave/Generated/FREERTOS/timers.c **** 
 672:../Dave/Generated/FREERTOS/timers.c ****         return xNextExpireTime;
 1372              	 .loc 1 672 0
 1373 0034 FB68     	 ldr r3,[r7,#12]
 673:../Dave/Generated/FREERTOS/timers.c ****     }
 1374              	 .loc 1 673 0
 1375 0036 1846     	 mov r0,r3
 1376 0038 1437     	 adds r7,r7,#20
 1377              	.LCFI75:
 1378              	 .cfi_def_cfa_offset 4
 1379 003a BD46     	 mov sp,r7
 1380              	.LCFI76:
 1381              	 .cfi_def_cfa_register 13
 1382              	 
 1383 003c 5DF8047B 	 ldr r7,[sp],#4
 1384              	.LCFI77:
 1385              	 .cfi_restore 7
 1386              	 .cfi_def_cfa_offset 0
 1387 0040 7047     	 bx lr
 1388              	.L88:
 1389 0042 00BF     	 .align 2
 1390              	.L87:
 1391 0044 00000000 	 .word pxCurrentTimerList
 1392              	 .cfi_endproc
 1393              	.LFE151:
 1395              	 .section .text.prvSampleTimeNow,"ax",%progbits
 1396              	 .align 2
 1397              	 .thumb
 1398              	 .thumb_func
 1400              	prvSampleTimeNow:
 1401              	.LFB152:
 674:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 675:../Dave/Generated/FREERTOS/timers.c **** 
 676:../Dave/Generated/FREERTOS/timers.c ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 677:../Dave/Generated/FREERTOS/timers.c ****     {
 1402              	 .loc 1 677 0
 1403              	 .cfi_startproc
 1404              	 
 1405              	 
 1406 0000 80B5     	 push {r7,lr}
 1407              	.LCFI78:
 1408              	 .cfi_def_cfa_offset 8
 1409              	 .cfi_offset 7,-8
 1410              	 .cfi_offset 14,-4
 1411 0002 84B0     	 sub sp,sp,#16
 1412              	.LCFI79:
 1413              	 .cfi_def_cfa_offset 24
 1414 0004 00AF     	 add r7,sp,#0
 1415              	.LCFI80:
 1416              	 .cfi_def_cfa_register 7
 1417 0006 7860     	 str r0,[r7,#4]
 678:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xTimeNow;
 679:../Dave/Generated/FREERTOS/timers.c ****         PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is o
 680:../Dave/Generated/FREERTOS/timers.c **** 
 681:../Dave/Generated/FREERTOS/timers.c ****         xTimeNow = xTaskGetTickCount();
 1418              	 .loc 1 681 0
 1419 0008 FFF7FEFF 	 bl xTaskGetTickCount
 1420 000c F860     	 str r0,[r7,#12]
 682:../Dave/Generated/FREERTOS/timers.c **** 
 683:../Dave/Generated/FREERTOS/timers.c ****         if( xTimeNow < xLastTime )
 1421              	 .loc 1 683 0
 1422 000e 0B4B     	 ldr r3,.L93
 1423 0010 1B68     	 ldr r3,[r3]
 1424 0012 FA68     	 ldr r2,[r7,#12]
 1425 0014 9A42     	 cmp r2,r3
 1426 0016 05D2     	 bcs .L90
 684:../Dave/Generated/FREERTOS/timers.c ****         {
 685:../Dave/Generated/FREERTOS/timers.c ****             prvSwitchTimerLists();
 1427              	 .loc 1 685 0
 1428 0018 FFF7FEFF 	 bl prvSwitchTimerLists
 686:../Dave/Generated/FREERTOS/timers.c ****             *pxTimerListsWereSwitched = pdTRUE;
 1429              	 .loc 1 686 0
 1430 001c 7B68     	 ldr r3,[r7,#4]
 1431 001e 0122     	 movs r2,#1
 1432 0020 1A60     	 str r2,[r3]
 1433 0022 02E0     	 b .L91
 1434              	.L90:
 687:../Dave/Generated/FREERTOS/timers.c ****         }
 688:../Dave/Generated/FREERTOS/timers.c ****         else
 689:../Dave/Generated/FREERTOS/timers.c ****         {
 690:../Dave/Generated/FREERTOS/timers.c ****             *pxTimerListsWereSwitched = pdFALSE;
 1435              	 .loc 1 690 0
 1436 0024 7B68     	 ldr r3,[r7,#4]
 1437 0026 0022     	 movs r2,#0
 1438 0028 1A60     	 str r2,[r3]
 1439              	.L91:
 691:../Dave/Generated/FREERTOS/timers.c ****         }
 692:../Dave/Generated/FREERTOS/timers.c **** 
 693:../Dave/Generated/FREERTOS/timers.c ****         xLastTime = xTimeNow;
 1440              	 .loc 1 693 0
 1441 002a 044A     	 ldr r2,.L93
 1442 002c FB68     	 ldr r3,[r7,#12]
 1443 002e 1360     	 str r3,[r2]
 694:../Dave/Generated/FREERTOS/timers.c **** 
 695:../Dave/Generated/FREERTOS/timers.c ****         return xTimeNow;
 1444              	 .loc 1 695 0
 1445 0030 FB68     	 ldr r3,[r7,#12]
 696:../Dave/Generated/FREERTOS/timers.c ****     }
 1446              	 .loc 1 696 0
 1447 0032 1846     	 mov r0,r3
 1448 0034 1037     	 adds r7,r7,#16
 1449              	.LCFI81:
 1450              	 .cfi_def_cfa_offset 8
 1451 0036 BD46     	 mov sp,r7
 1452              	.LCFI82:
 1453              	 .cfi_def_cfa_register 13
 1454              	 
 1455 0038 80BD     	 pop {r7,pc}
 1456              	.L94:
 1457 003a 00BF     	 .align 2
 1458              	.L93:
 1459 003c 00000000 	 .word xLastTime.8013
 1460              	 .cfi_endproc
 1461              	.LFE152:
 1463              	 .section .text.prvInsertTimerInActiveList,"ax",%progbits
 1464              	 .align 2
 1465              	 .thumb
 1466              	 .thumb_func
 1468              	prvInsertTimerInActiveList:
 1469              	.LFB153:
 697:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 698:../Dave/Generated/FREERTOS/timers.c **** 
 699:../Dave/Generated/FREERTOS/timers.c ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 700:../Dave/Generated/FREERTOS/timers.c ****                                                   const TickType_t xNextExpiryTime,
 701:../Dave/Generated/FREERTOS/timers.c ****                                                   const TickType_t xTimeNow,
 702:../Dave/Generated/FREERTOS/timers.c ****                                                   const TickType_t xCommandTime )
 703:../Dave/Generated/FREERTOS/timers.c ****     {
 1470              	 .loc 1 703 0
 1471              	 .cfi_startproc
 1472              	 
 1473              	 
 1474 0000 80B5     	 push {r7,lr}
 1475              	.LCFI83:
 1476              	 .cfi_def_cfa_offset 8
 1477              	 .cfi_offset 7,-8
 1478              	 .cfi_offset 14,-4
 1479 0002 86B0     	 sub sp,sp,#24
 1480              	.LCFI84:
 1481              	 .cfi_def_cfa_offset 32
 1482 0004 00AF     	 add r7,sp,#0
 1483              	.LCFI85:
 1484              	 .cfi_def_cfa_register 7
 1485 0006 F860     	 str r0,[r7,#12]
 1486 0008 B960     	 str r1,[r7,#8]
 1487 000a 7A60     	 str r2,[r7,#4]
 1488 000c 3B60     	 str r3,[r7]
 704:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xProcessTimerNow = pdFALSE;
 1489              	 .loc 1 704 0
 1490 000e 0023     	 movs r3,#0
 1491 0010 7B61     	 str r3,[r7,#20]
 705:../Dave/Generated/FREERTOS/timers.c **** 
 706:../Dave/Generated/FREERTOS/timers.c ****         listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 1492              	 .loc 1 706 0
 1493 0012 FB68     	 ldr r3,[r7,#12]
 1494 0014 BA68     	 ldr r2,[r7,#8]
 1495 0016 5A60     	 str r2,[r3,#4]
 707:../Dave/Generated/FREERTOS/timers.c ****         listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 1496              	 .loc 1 707 0
 1497 0018 FB68     	 ldr r3,[r7,#12]
 1498 001a FA68     	 ldr r2,[r7,#12]
 1499 001c 1A61     	 str r2,[r3,#16]
 708:../Dave/Generated/FREERTOS/timers.c **** 
 709:../Dave/Generated/FREERTOS/timers.c ****         if( xNextExpiryTime <= xTimeNow )
 1500              	 .loc 1 709 0
 1501 001e BA68     	 ldr r2,[r7,#8]
 1502 0020 7B68     	 ldr r3,[r7,#4]
 1503 0022 9A42     	 cmp r2,r3
 1504 0024 12D8     	 bhi .L96
 710:../Dave/Generated/FREERTOS/timers.c ****         {
 711:../Dave/Generated/FREERTOS/timers.c ****             /* Has the expiry time elapsed between the command to start/reset a
 712:../Dave/Generated/FREERTOS/timers.c ****              * timer was issued, and the time the command was processed? */
 713:../Dave/Generated/FREERTOS/timers.c ****             if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*
 1505              	 .loc 1 713 0
 1506 0026 7A68     	 ldr r2,[r7,#4]
 1507 0028 3B68     	 ldr r3,[r7]
 1508 002a D21A     	 subs r2,r2,r3
 1509 002c FB68     	 ldr r3,[r7,#12]
 1510 002e 9B69     	 ldr r3,[r3,#24]
 1511 0030 9A42     	 cmp r2,r3
 1512 0032 02D3     	 bcc .L97
 714:../Dave/Generated/FREERTOS/timers.c ****             {
 715:../Dave/Generated/FREERTOS/timers.c ****                 /* The time between a command being issued and the command being
 716:../Dave/Generated/FREERTOS/timers.c ****                  * processed actually exceeds the timers period.  */
 717:../Dave/Generated/FREERTOS/timers.c ****                 xProcessTimerNow = pdTRUE;
 1513              	 .loc 1 717 0
 1514 0034 0123     	 movs r3,#1
 1515 0036 7B61     	 str r3,[r7,#20]
 1516 0038 1BE0     	 b .L99
 1517              	.L97:
 718:../Dave/Generated/FREERTOS/timers.c ****             }
 719:../Dave/Generated/FREERTOS/timers.c ****             else
 720:../Dave/Generated/FREERTOS/timers.c ****             {
 721:../Dave/Generated/FREERTOS/timers.c ****                 vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 1518              	 .loc 1 721 0
 1519 003a 104B     	 ldr r3,.L102
 1520 003c 1A68     	 ldr r2,[r3]
 1521 003e FB68     	 ldr r3,[r7,#12]
 1522 0040 0433     	 adds r3,r3,#4
 1523 0042 1046     	 mov r0,r2
 1524 0044 1946     	 mov r1,r3
 1525 0046 FFF7FEFF 	 bl vListInsert
 1526 004a 12E0     	 b .L99
 1527              	.L96:
 722:../Dave/Generated/FREERTOS/timers.c ****             }
 723:../Dave/Generated/FREERTOS/timers.c ****         }
 724:../Dave/Generated/FREERTOS/timers.c ****         else
 725:../Dave/Generated/FREERTOS/timers.c ****         {
 726:../Dave/Generated/FREERTOS/timers.c ****             if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 1528              	 .loc 1 726 0
 1529 004c 7A68     	 ldr r2,[r7,#4]
 1530 004e 3B68     	 ldr r3,[r7]
 1531 0050 9A42     	 cmp r2,r3
 1532 0052 06D2     	 bcs .L100
 1533              	 .loc 1 726 0 is_stmt 0 discriminator 1
 1534 0054 BA68     	 ldr r2,[r7,#8]
 1535 0056 3B68     	 ldr r3,[r7]
 1536 0058 9A42     	 cmp r2,r3
 1537 005a 02D3     	 bcc .L100
 727:../Dave/Generated/FREERTOS/timers.c ****             {
 728:../Dave/Generated/FREERTOS/timers.c ****                 /* If, since the command was issued, the tick count has overflowed
 729:../Dave/Generated/FREERTOS/timers.c ****                  * but the expiry time has not, then the timer must have already passed
 730:../Dave/Generated/FREERTOS/timers.c ****                  * its expiry time and should be processed immediately. */
 731:../Dave/Generated/FREERTOS/timers.c ****                 xProcessTimerNow = pdTRUE;
 1538              	 .loc 1 731 0 is_stmt 1
 1539 005c 0123     	 movs r3,#1
 1540 005e 7B61     	 str r3,[r7,#20]
 1541 0060 07E0     	 b .L99
 1542              	.L100:
 732:../Dave/Generated/FREERTOS/timers.c ****             }
 733:../Dave/Generated/FREERTOS/timers.c ****             else
 734:../Dave/Generated/FREERTOS/timers.c ****             {
 735:../Dave/Generated/FREERTOS/timers.c ****                 vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 1543              	 .loc 1 735 0
 1544 0062 074B     	 ldr r3,.L102+4
 1545 0064 1A68     	 ldr r2,[r3]
 1546 0066 FB68     	 ldr r3,[r7,#12]
 1547 0068 0433     	 adds r3,r3,#4
 1548 006a 1046     	 mov r0,r2
 1549 006c 1946     	 mov r1,r3
 1550 006e FFF7FEFF 	 bl vListInsert
 1551              	.L99:
 736:../Dave/Generated/FREERTOS/timers.c ****             }
 737:../Dave/Generated/FREERTOS/timers.c ****         }
 738:../Dave/Generated/FREERTOS/timers.c **** 
 739:../Dave/Generated/FREERTOS/timers.c ****         return xProcessTimerNow;
 1552              	 .loc 1 739 0
 1553 0072 7B69     	 ldr r3,[r7,#20]
 740:../Dave/Generated/FREERTOS/timers.c ****     }
 1554              	 .loc 1 740 0
 1555 0074 1846     	 mov r0,r3
 1556 0076 1837     	 adds r7,r7,#24
 1557              	.LCFI86:
 1558              	 .cfi_def_cfa_offset 8
 1559 0078 BD46     	 mov sp,r7
 1560              	.LCFI87:
 1561              	 .cfi_def_cfa_register 13
 1562              	 
 1563 007a 80BD     	 pop {r7,pc}
 1564              	.L103:
 1565              	 .align 2
 1566              	.L102:
 1567 007c 00000000 	 .word pxOverflowTimerList
 1568 0080 00000000 	 .word pxCurrentTimerList
 1569              	 .cfi_endproc
 1570              	.LFE153:
 1572              	 .section .text.prvProcessReceivedCommands,"ax",%progbits
 1573              	 .align 2
 1574              	 .thumb
 1575              	 .thumb_func
 1577              	prvProcessReceivedCommands:
 1578              	.LFB154:
 741:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 742:../Dave/Generated/FREERTOS/timers.c **** 
 743:../Dave/Generated/FREERTOS/timers.c ****     static void prvProcessReceivedCommands( void )
 744:../Dave/Generated/FREERTOS/timers.c ****     {
 1579              	 .loc 1 744 0
 1580              	 .cfi_startproc
 1581              	 
 1582              	 
 1583 0000 80B5     	 push {r7,lr}
 1584              	.LCFI88:
 1585              	 .cfi_def_cfa_offset 8
 1586              	 .cfi_offset 7,-8
 1587              	 .cfi_offset 14,-4
 1588 0002 8EB0     	 sub sp,sp,#56
 1589              	.LCFI89:
 1590              	 .cfi_def_cfa_offset 64
 1591 0004 02AF     	 add r7,sp,#8
 1592              	.LCFI90:
 1593              	 .cfi_def_cfa 7,56
 745:../Dave/Generated/FREERTOS/timers.c ****         DaemonTaskMessage_t xMessage;
 746:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer;
 747:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xTimerListsWereSwitched, xResult;
 748:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xTimeNow;
 749:../Dave/Generated/FREERTOS/timers.c **** 
 750:../Dave/Generated/FREERTOS/timers.c ****         while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessa
 1594              	 .loc 1 750 0
 1595 0006 CBE0     	 b .L105
 1596              	.L122:
 751:../Dave/Generated/FREERTOS/timers.c ****         {
 752:../Dave/Generated/FREERTOS/timers.c ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 753:../Dave/Generated/FREERTOS/timers.c ****                 {
 754:../Dave/Generated/FREERTOS/timers.c ****                     /* Negative commands are pended function calls rather than timer
 755:../Dave/Generated/FREERTOS/timers.c ****                      * commands. */
 756:../Dave/Generated/FREERTOS/timers.c ****                     if( xMessage.xMessageID < ( BaseType_t ) 0 )
 1597              	 .loc 1 756 0
 1598 0008 7B68     	 ldr r3,[r7,#4]
 1599 000a 002B     	 cmp r3,#0
 1600 000c 18DA     	 bge .L106
 1601              	.LBB71:
 757:../Dave/Generated/FREERTOS/timers.c ****                     {
 758:../Dave/Generated/FREERTOS/timers.c ****                         const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackPara
 1602              	 .loc 1 758 0
 1603 000e 3B1D     	 adds r3,r7,#4
 1604 0010 0433     	 adds r3,r3,#4
 1605 0012 FB62     	 str r3,[r7,#44]
 759:../Dave/Generated/FREERTOS/timers.c **** 
 760:../Dave/Generated/FREERTOS/timers.c ****                         /* The timer uses the xCallbackParameters member to request a
 761:../Dave/Generated/FREERTOS/timers.c ****                          * callback be executed.  Check the callback is not NULL. */
 762:../Dave/Generated/FREERTOS/timers.c ****                         configASSERT( pxCallback );
 1606              	 .loc 1 762 0
 1607 0014 FB6A     	 ldr r3,[r7,#44]
 1608 0016 002B     	 cmp r3,#0
 1609 0018 09D1     	 bne .L107
 1610              	.LBB72:
 1611              	.LBB73:
 1612              	 .loc 2 197 0 discriminator 1
 1613              	
 1614 001a 4FF0FC03 	 mov r3,#252
 1615 001e 83F31188 	 msr basepri,r3
 1616 0022 BFF36F8F 	 isb 
 1617 0026 BFF34F8F 	 dsb 
 1618              	
 1619              	
 1620              	 .thumb
 1621 002a FB61     	 str r3,[r7,#28]
 1622              	.L108:
 1623              	.LBE73:
 1624              	.LBE72:
 1625              	 .loc 1 762 0 discriminator 1
 1626 002c FEE7     	 b .L108
 1627              	.L107:
 763:../Dave/Generated/FREERTOS/timers.c **** 
 764:../Dave/Generated/FREERTOS/timers.c ****                         /* Call the function. */
 765:../Dave/Generated/FREERTOS/timers.c ****                         pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulPar
 1628              	 .loc 1 765 0
 1629 002e FB6A     	 ldr r3,[r7,#44]
 1630 0030 1B68     	 ldr r3,[r3]
 1631 0032 FA6A     	 ldr r2,[r7,#44]
 1632 0034 5168     	 ldr r1,[r2,#4]
 1633 0036 FA6A     	 ldr r2,[r7,#44]
 1634 0038 9268     	 ldr r2,[r2,#8]
 1635 003a 0846     	 mov r0,r1
 1636 003c 1146     	 mov r1,r2
 1637 003e 9847     	 blx r3
 1638              	.L106:
 1639              	.LBE71:
 766:../Dave/Generated/FREERTOS/timers.c ****                     }
 767:../Dave/Generated/FREERTOS/timers.c ****                     else
 768:../Dave/Generated/FREERTOS/timers.c ****                     {
 769:../Dave/Generated/FREERTOS/timers.c ****                         mtCOVERAGE_TEST_MARKER();
 770:../Dave/Generated/FREERTOS/timers.c ****                     }
 771:../Dave/Generated/FREERTOS/timers.c ****                 }
 772:../Dave/Generated/FREERTOS/timers.c ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 773:../Dave/Generated/FREERTOS/timers.c **** 
 774:../Dave/Generated/FREERTOS/timers.c ****             /* Commands that are positive are timer commands rather than pended
 775:../Dave/Generated/FREERTOS/timers.c ****              * function calls. */
 776:../Dave/Generated/FREERTOS/timers.c ****             if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 1640              	 .loc 1 776 0
 1641 0040 7B68     	 ldr r3,[r7,#4]
 1642 0042 002B     	 cmp r3,#0
 1643 0044 C0F2AC80 	 blt .L105
 777:../Dave/Generated/FREERTOS/timers.c ****             {
 778:../Dave/Generated/FREERTOS/timers.c ****                 /* The messages uses the xTimerParameters member to work on a
 779:../Dave/Generated/FREERTOS/timers.c ****                  * software timer. */
 780:../Dave/Generated/FREERTOS/timers.c ****                 pxTimer = xMessage.u.xTimerParameters.pxTimer;
 1644              	 .loc 1 780 0
 1645 0048 FB68     	 ldr r3,[r7,#12]
 1646 004a BB62     	 str r3,[r7,#40]
 781:../Dave/Generated/FREERTOS/timers.c **** 
 782:../Dave/Generated/FREERTOS/timers.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*li
 1647              	 .loc 1 782 0
 1648 004c BB6A     	 ldr r3,[r7,#40]
 1649 004e 5B69     	 ldr r3,[r3,#20]
 1650 0050 002B     	 cmp r3,#0
 1651 0052 04D0     	 beq .L109
 783:../Dave/Generated/FREERTOS/timers.c ****                 {
 784:../Dave/Generated/FREERTOS/timers.c ****                     /* The timer is in a list, remove it. */
 785:../Dave/Generated/FREERTOS/timers.c ****                     ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1652              	 .loc 1 785 0
 1653 0054 BB6A     	 ldr r3,[r7,#40]
 1654 0056 0433     	 adds r3,r3,#4
 1655 0058 1846     	 mov r0,r3
 1656 005a FFF7FEFF 	 bl uxListRemove
 1657              	.L109:
 786:../Dave/Generated/FREERTOS/timers.c ****                 }
 787:../Dave/Generated/FREERTOS/timers.c ****                 else
 788:../Dave/Generated/FREERTOS/timers.c ****                 {
 789:../Dave/Generated/FREERTOS/timers.c ****                     mtCOVERAGE_TEST_MARKER();
 790:../Dave/Generated/FREERTOS/timers.c ****                 }
 791:../Dave/Generated/FREERTOS/timers.c **** 
 792:../Dave/Generated/FREERTOS/timers.c ****                 traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParamet
 793:../Dave/Generated/FREERTOS/timers.c **** 
 794:../Dave/Generated/FREERTOS/timers.c ****                 /* In this case the xTimerListsWereSwitched parameter is not used, but
 795:../Dave/Generated/FREERTOS/timers.c ****                  *  it must be present in the function call.  prvSampleTimeNow() must be
 796:../Dave/Generated/FREERTOS/timers.c ****                  *  called after the message is received from xTimerQueue so there is no
 797:../Dave/Generated/FREERTOS/timers.c ****                  *  possibility of a higher priority task adding a message to the message
 798:../Dave/Generated/FREERTOS/timers.c ****                  *  queue with a time that is ahead of the timer daemon task (because it
 799:../Dave/Generated/FREERTOS/timers.c ****                  *  pre-empted the timer daemon task after the xTimeNow value was set). */
 800:../Dave/Generated/FREERTOS/timers.c ****                 xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 1658              	 .loc 1 800 0
 1659 005e 3B46     	 mov r3,r7
 1660 0060 1846     	 mov r0,r3
 1661 0062 FFF7FEFF 	 bl prvSampleTimeNow
 1662 0066 7862     	 str r0,[r7,#36]
 801:../Dave/Generated/FREERTOS/timers.c **** 
 802:../Dave/Generated/FREERTOS/timers.c ****                 switch( xMessage.xMessageID )
 1663              	 .loc 1 802 0
 1664 0068 7B68     	 ldr r3,[r7,#4]
 1665 006a 092B     	 cmp r3,#9
 1666 006c 00F29780 	 bhi .L123
 1667 0070 01A2     	 adr r2,.L112
 1668 0072 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1669 0076 00BF     	 .p2align 2
 1670              	.L112:
 1671 0078 A1000000 	 .word .L111+1
 1672 007c A1000000 	 .word .L111+1
 1673 0080 A1000000 	 .word .L111+1
 1674 0084 17010000 	 .word .L113+1
 1675 0088 2B010000 	 .word .L114+1
 1676 008c 75010000 	 .word .L115+1
 1677 0090 A1000000 	 .word .L111+1
 1678 0094 A1000000 	 .word .L111+1
 1679 0098 17010000 	 .word .L113+1
 1680 009c 2B010000 	 .word .L114+1
 1681              	 .p2align 1
 1682              	.L111:
 803:../Dave/Generated/FREERTOS/timers.c ****                 {
 804:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_START:
 805:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_START_FROM_ISR:
 806:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_RESET:
 807:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_RESET_FROM_ISR:
 808:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_START_DONT_TRACE:
 809:../Dave/Generated/FREERTOS/timers.c ****                         /* Start or restart a timer. */
 810:../Dave/Generated/FREERTOS/timers.c ****                         pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 1683              	 .loc 1 810 0
 1684 00a0 BB6A     	 ldr r3,[r7,#40]
 1685 00a2 93F82830 	 ldrb r3,[r3,#40]
 1686 00a6 43F00103 	 orr r3,r3,#1
 1687 00aa DAB2     	 uxtb r2,r3
 1688 00ac BB6A     	 ldr r3,[r7,#40]
 1689 00ae 83F82820 	 strb r2,[r3,#40]
 811:../Dave/Generated/FREERTOS/timers.c **** 
 812:../Dave/Generated/FREERTOS/timers.c ****                         if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessa
 1690              	 .loc 1 812 0
 1691 00b2 BA68     	 ldr r2,[r7,#8]
 1692 00b4 BB6A     	 ldr r3,[r7,#40]
 1693 00b6 9B69     	 ldr r3,[r3,#24]
 1694 00b8 1A44     	 add r2,r2,r3
 1695 00ba BB68     	 ldr r3,[r7,#8]
 1696 00bc B86A     	 ldr r0,[r7,#40]
 1697 00be 1146     	 mov r1,r2
 1698 00c0 7A6A     	 ldr r2,[r7,#36]
 1699 00c2 FFF7FEFF 	 bl prvInsertTimerInActiveList
 1700 00c6 0346     	 mov r3,r0
 1701 00c8 002B     	 cmp r3,#0
 1702 00ca 23D0     	 beq .L116
 813:../Dave/Generated/FREERTOS/timers.c ****                         {
 814:../Dave/Generated/FREERTOS/timers.c ****                             /* The timer expired before it was added to the active
 815:../Dave/Generated/FREERTOS/timers.c ****                              * timer list.  Process it now. */
 816:../Dave/Generated/FREERTOS/timers.c ****                             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1703              	 .loc 1 816 0
 1704 00cc BB6A     	 ldr r3,[r7,#40]
 1705 00ce 1B6A     	 ldr r3,[r3,#32]
 1706 00d0 B86A     	 ldr r0,[r7,#40]
 1707 00d2 9847     	 blx r3
 817:../Dave/Generated/FREERTOS/timers.c ****                             traceTIMER_EXPIRED( pxTimer );
 818:../Dave/Generated/FREERTOS/timers.c **** 
 819:../Dave/Generated/FREERTOS/timers.c ****                             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 1708              	 .loc 1 819 0
 1709 00d4 BB6A     	 ldr r3,[r7,#40]
 1710 00d6 93F82830 	 ldrb r3,[r3,#40]
 1711 00da 03F00403 	 and r3,r3,#4
 1712 00de 002B     	 cmp r3,#0
 1713 00e0 18D0     	 beq .L116
 820:../Dave/Generated/FREERTOS/timers.c ****                             {
 821:../Dave/Generated/FREERTOS/timers.c ****                                 xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRAC
 1714              	 .loc 1 821 0
 1715 00e2 BA68     	 ldr r2,[r7,#8]
 1716 00e4 BB6A     	 ldr r3,[r7,#40]
 1717 00e6 9B69     	 ldr r3,[r3,#24]
 1718 00e8 1A44     	 add r2,r2,r3
 1719 00ea 0023     	 movs r3,#0
 1720 00ec 0093     	 str r3,[sp]
 1721 00ee B86A     	 ldr r0,[r7,#40]
 1722 00f0 0021     	 movs r1,#0
 1723 00f2 0023     	 movs r3,#0
 1724 00f4 FFF7FEFF 	 bl xTimerGenericCommand
 1725 00f8 3862     	 str r0,[r7,#32]
 822:../Dave/Generated/FREERTOS/timers.c ****                                 configASSERT( xResult );
 1726              	 .loc 1 822 0
 1727 00fa 3B6A     	 ldr r3,[r7,#32]
 1728 00fc 002B     	 cmp r3,#0
 1729 00fe 09D1     	 bne .L116
 1730              	.LBB74:
 1731              	.LBB75:
 1732              	 .loc 2 197 0 discriminator 1
 1733              	
 1734 0100 4FF0FC03 	 mov r3,#252
 1735 0104 83F31188 	 msr basepri,r3
 1736 0108 BFF36F8F 	 isb 
 1737 010c BFF34F8F 	 dsb 
 1738              	
 1739              	
 1740              	 .thumb
 1741 0110 BB61     	 str r3,[r7,#24]
 1742              	.L117:
 1743              	.LBE75:
 1744              	.LBE74:
 1745              	 .loc 1 822 0 discriminator 2
 1746 0112 FEE7     	 b .L117
 1747              	.L116:
 823:../Dave/Generated/FREERTOS/timers.c ****                                 ( void ) xResult;
 824:../Dave/Generated/FREERTOS/timers.c ****                             }
 825:../Dave/Generated/FREERTOS/timers.c ****                             else
 826:../Dave/Generated/FREERTOS/timers.c ****                             {
 827:../Dave/Generated/FREERTOS/timers.c ****                                 mtCOVERAGE_TEST_MARKER();
 828:../Dave/Generated/FREERTOS/timers.c ****                             }
 829:../Dave/Generated/FREERTOS/timers.c ****                         }
 830:../Dave/Generated/FREERTOS/timers.c ****                         else
 831:../Dave/Generated/FREERTOS/timers.c ****                         {
 832:../Dave/Generated/FREERTOS/timers.c ****                             mtCOVERAGE_TEST_MARKER();
 833:../Dave/Generated/FREERTOS/timers.c ****                         }
 834:../Dave/Generated/FREERTOS/timers.c **** 
 835:../Dave/Generated/FREERTOS/timers.c ****                         break;
 1748              	 .loc 1 835 0 discriminator 4
 1749 0114 44E0     	 b .L105
 1750              	.L113:
 836:../Dave/Generated/FREERTOS/timers.c **** 
 837:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_STOP:
 838:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_STOP_FROM_ISR:
 839:../Dave/Generated/FREERTOS/timers.c ****                         /* The timer has already been removed from the active list. */
 840:../Dave/Generated/FREERTOS/timers.c ****                         pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 1751              	 .loc 1 840 0
 1752 0116 BB6A     	 ldr r3,[r7,#40]
 1753 0118 93F82830 	 ldrb r3,[r3,#40]
 1754 011c 23F00103 	 bic r3,r3,#1
 1755 0120 DAB2     	 uxtb r2,r3
 1756 0122 BB6A     	 ldr r3,[r7,#40]
 1757 0124 83F82820 	 strb r2,[r3,#40]
 841:../Dave/Generated/FREERTOS/timers.c ****                         break;
 1758              	 .loc 1 841 0
 1759 0128 3AE0     	 b .L105
 1760              	.L114:
 842:../Dave/Generated/FREERTOS/timers.c **** 
 843:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_CHANGE_PERIOD:
 844:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR:
 845:../Dave/Generated/FREERTOS/timers.c ****                         pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 1761              	 .loc 1 845 0
 1762 012a BB6A     	 ldr r3,[r7,#40]
 1763 012c 93F82830 	 ldrb r3,[r3,#40]
 1764 0130 43F00103 	 orr r3,r3,#1
 1765 0134 DAB2     	 uxtb r2,r3
 1766 0136 BB6A     	 ldr r3,[r7,#40]
 1767 0138 83F82820 	 strb r2,[r3,#40]
 846:../Dave/Generated/FREERTOS/timers.c ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1768              	 .loc 1 846 0
 1769 013c BA68     	 ldr r2,[r7,#8]
 1770 013e BB6A     	 ldr r3,[r7,#40]
 1771 0140 9A61     	 str r2,[r3,#24]
 847:../Dave/Generated/FREERTOS/timers.c ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1772              	 .loc 1 847 0
 1773 0142 BB6A     	 ldr r3,[r7,#40]
 1774 0144 9B69     	 ldr r3,[r3,#24]
 1775 0146 002B     	 cmp r3,#0
 1776 0148 09D1     	 bne .L118
 1777              	.LBB76:
 1778              	.LBB77:
 1779              	 .loc 2 197 0 discriminator 1
 1780              	
 1781 014a 4FF0FC03 	 mov r3,#252
 1782 014e 83F31188 	 msr basepri,r3
 1783 0152 BFF36F8F 	 isb 
 1784 0156 BFF34F8F 	 dsb 
 1785              	
 1786              	
 1787              	 .thumb
 1788 015a 7B61     	 str r3,[r7,#20]
 1789              	.L119:
 1790              	.LBE77:
 1791              	.LBE76:
 1792              	 .loc 1 847 0 discriminator 5
 1793 015c FEE7     	 b .L119
 1794              	.L118:
 848:../Dave/Generated/FREERTOS/timers.c **** 
 849:../Dave/Generated/FREERTOS/timers.c ****                         /* The new period does not really have a reference, and can
 850:../Dave/Generated/FREERTOS/timers.c ****                          * be longer or shorter than the old one.  The command time is
 851:../Dave/Generated/FREERTOS/timers.c ****                          * therefore set to the current time, and as the period cannot
 852:../Dave/Generated/FREERTOS/timers.c ****                          * be zero the next expiry time can only be in the future,
 853:../Dave/Generated/FREERTOS/timers.c ****                          * meaning (unlike for the xTimerStart() case above) there is
 854:../Dave/Generated/FREERTOS/timers.c ****                          * no fail case that needs to be handled here. */
 855:../Dave/Generated/FREERTOS/timers.c ****                         ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerP
 1795              	 .loc 1 855 0
 1796 015e BB6A     	 ldr r3,[r7,#40]
 1797 0160 9A69     	 ldr r2,[r3,#24]
 1798 0162 7B6A     	 ldr r3,[r7,#36]
 1799 0164 1344     	 add r3,r3,r2
 1800 0166 B86A     	 ldr r0,[r7,#40]
 1801 0168 1946     	 mov r1,r3
 1802 016a 7A6A     	 ldr r2,[r7,#36]
 1803 016c 7B6A     	 ldr r3,[r7,#36]
 1804 016e FFF7FEFF 	 bl prvInsertTimerInActiveList
 856:../Dave/Generated/FREERTOS/timers.c ****                         break;
 1805              	 .loc 1 856 0
 1806 0172 15E0     	 b .L105
 1807              	.L115:
 857:../Dave/Generated/FREERTOS/timers.c **** 
 858:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_DELETE:
 859:../Dave/Generated/FREERTOS/timers.c ****                         #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 860:../Dave/Generated/FREERTOS/timers.c ****                             {
 861:../Dave/Generated/FREERTOS/timers.c ****                                 /* The timer has already been removed from the active list,
 862:../Dave/Generated/FREERTOS/timers.c ****                                  * just free up the memory if the memory was dynamically
 863:../Dave/Generated/FREERTOS/timers.c ****                                  * allocated. */
 864:../Dave/Generated/FREERTOS/timers.c ****                                 if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( 
 1808              	 .loc 1 864 0
 1809 0174 BB6A     	 ldr r3,[r7,#40]
 1810 0176 93F82830 	 ldrb r3,[r3,#40]
 1811 017a 03F00203 	 and r3,r3,#2
 1812 017e 002B     	 cmp r3,#0
 1813 0180 03D1     	 bne .L120
 865:../Dave/Generated/FREERTOS/timers.c ****                                 {
 866:../Dave/Generated/FREERTOS/timers.c ****                                     vPortFree( pxTimer );
 1814              	 .loc 1 866 0
 1815 0182 B86A     	 ldr r0,[r7,#40]
 1816 0184 FFF7FEFF 	 bl vPortFree
 1817 0188 08E0     	 b .L121
 1818              	.L120:
 867:../Dave/Generated/FREERTOS/timers.c ****                                 }
 868:../Dave/Generated/FREERTOS/timers.c ****                                 else
 869:../Dave/Generated/FREERTOS/timers.c ****                                 {
 870:../Dave/Generated/FREERTOS/timers.c ****                                     pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 1819              	 .loc 1 870 0
 1820 018a BB6A     	 ldr r3,[r7,#40]
 1821 018c 93F82830 	 ldrb r3,[r3,#40]
 1822 0190 23F00103 	 bic r3,r3,#1
 1823 0194 DAB2     	 uxtb r2,r3
 1824 0196 BB6A     	 ldr r3,[r7,#40]
 1825 0198 83F82820 	 strb r2,[r3,#40]
 1826              	.L121:
 871:../Dave/Generated/FREERTOS/timers.c ****                                 }
 872:../Dave/Generated/FREERTOS/timers.c ****                             }
 873:../Dave/Generated/FREERTOS/timers.c ****                         #else /* if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) */
 874:../Dave/Generated/FREERTOS/timers.c ****                             {
 875:../Dave/Generated/FREERTOS/timers.c ****                                 /* If dynamic allocation is not enabled, the memory
 876:../Dave/Generated/FREERTOS/timers.c ****                                  * could not have been dynamically allocated. So there is
 877:../Dave/Generated/FREERTOS/timers.c ****                                  * no need to free the memory - just mark the timer as
 878:../Dave/Generated/FREERTOS/timers.c ****                                  * "not active". */
 879:../Dave/Generated/FREERTOS/timers.c ****                                 pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 880:../Dave/Generated/FREERTOS/timers.c ****                             }
 881:../Dave/Generated/FREERTOS/timers.c ****                         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 882:../Dave/Generated/FREERTOS/timers.c ****                         break;
 1827              	 .loc 1 882 0
 1828 019c 00E0     	 b .L105
 1829              	.L123:
 883:../Dave/Generated/FREERTOS/timers.c **** 
 884:../Dave/Generated/FREERTOS/timers.c ****                     default:
 885:../Dave/Generated/FREERTOS/timers.c ****                         /* Don't expect to get here. */
 886:../Dave/Generated/FREERTOS/timers.c ****                         break;
 1830              	 .loc 1 886 0
 1831 019e 00BF     	 nop
 1832              	.L105:
 750:../Dave/Generated/FREERTOS/timers.c ****         {
 1833              	 .loc 1 750 0
 1834 01a0 074B     	 ldr r3,.L124
 1835 01a2 1A68     	 ldr r2,[r3]
 1836 01a4 3B1D     	 adds r3,r7,#4
 1837 01a6 1046     	 mov r0,r2
 1838 01a8 1946     	 mov r1,r3
 1839 01aa 0022     	 movs r2,#0
 1840 01ac FFF7FEFF 	 bl xQueueReceive
 1841 01b0 0346     	 mov r3,r0
 1842 01b2 002B     	 cmp r3,#0
 1843 01b4 7FF428AF 	 bne .L122
 887:../Dave/Generated/FREERTOS/timers.c ****                 }
 888:../Dave/Generated/FREERTOS/timers.c ****             }
 889:../Dave/Generated/FREERTOS/timers.c ****         }
 890:../Dave/Generated/FREERTOS/timers.c ****     }
 1844              	 .loc 1 890 0
 1845 01b8 3037     	 adds r7,r7,#48
 1846              	.LCFI91:
 1847              	 .cfi_def_cfa_offset 8
 1848 01ba BD46     	 mov sp,r7
 1849              	.LCFI92:
 1850              	 .cfi_def_cfa_register 13
 1851              	 
 1852 01bc 80BD     	 pop {r7,pc}
 1853              	.L125:
 1854 01be 00BF     	 .align 2
 1855              	.L124:
 1856 01c0 00000000 	 .word xTimerQueue
 1857              	 .cfi_endproc
 1858              	.LFE154:
 1860              	 .section .text.prvSwitchTimerLists,"ax",%progbits
 1861              	 .align 2
 1862              	 .thumb
 1863              	 .thumb_func
 1865              	prvSwitchTimerLists:
 1866              	.LFB155:
 891:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 892:../Dave/Generated/FREERTOS/timers.c **** 
 893:../Dave/Generated/FREERTOS/timers.c ****     static void prvSwitchTimerLists( void )
 894:../Dave/Generated/FREERTOS/timers.c ****     {
 1867              	 .loc 1 894 0
 1868              	 .cfi_startproc
 1869              	 
 1870              	 
 1871 0000 80B5     	 push {r7,lr}
 1872              	.LCFI93:
 1873              	 .cfi_def_cfa_offset 8
 1874              	 .cfi_offset 7,-8
 1875              	 .cfi_offset 14,-4
 1876 0002 88B0     	 sub sp,sp,#32
 1877              	.LCFI94:
 1878              	 .cfi_def_cfa_offset 40
 1879 0004 02AF     	 add r7,sp,#8
 1880              	.LCFI95:
 1881              	 .cfi_def_cfa 7,32
 895:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xNextExpireTime, xReloadTime;
 896:../Dave/Generated/FREERTOS/timers.c ****         List_t * pxTemp;
 897:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer;
 898:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xResult;
 899:../Dave/Generated/FREERTOS/timers.c **** 
 900:../Dave/Generated/FREERTOS/timers.c ****         /* The tick count has overflowed.  The timer lists must be switched.
 901:../Dave/Generated/FREERTOS/timers.c ****          * If there are any timers still referenced from the current timer list
 902:../Dave/Generated/FREERTOS/timers.c ****          * then they must have expired and should be processed before the lists
 903:../Dave/Generated/FREERTOS/timers.c ****          * are switched. */
 904:../Dave/Generated/FREERTOS/timers.c ****         while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 1882              	 .loc 1 904 0
 1883 0006 47E0     	 b .L127
 1884              	.L130:
 905:../Dave/Generated/FREERTOS/timers.c ****         {
 906:../Dave/Generated/FREERTOS/timers.c ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 1885              	 .loc 1 906 0
 1886 0008 2C4B     	 ldr r3,.L131
 1887 000a 1B68     	 ldr r3,[r3]
 1888 000c DB68     	 ldr r3,[r3,#12]
 1889 000e 1B68     	 ldr r3,[r3]
 1890 0010 7B61     	 str r3,[r7,#20]
 907:../Dave/Generated/FREERTOS/timers.c **** 
 908:../Dave/Generated/FREERTOS/timers.c ****             /* Remove the timer from the list. */
 909:../Dave/Generated/FREERTOS/timers.c ****             pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e908
 1891              	 .loc 1 909 0
 1892 0012 2A4B     	 ldr r3,.L131
 1893 0014 1B68     	 ldr r3,[r3]
 1894 0016 DB68     	 ldr r3,[r3,#12]
 1895 0018 DB68     	 ldr r3,[r3,#12]
 1896 001a 3B61     	 str r3,[r7,#16]
 910:../Dave/Generated/FREERTOS/timers.c ****             ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1897              	 .loc 1 910 0
 1898 001c 3B69     	 ldr r3,[r7,#16]
 1899 001e 0433     	 adds r3,r3,#4
 1900 0020 1846     	 mov r0,r3
 1901 0022 FFF7FEFF 	 bl uxListRemove
 911:../Dave/Generated/FREERTOS/timers.c ****             traceTIMER_EXPIRED( pxTimer );
 912:../Dave/Generated/FREERTOS/timers.c **** 
 913:../Dave/Generated/FREERTOS/timers.c ****             /* Execute its callback, then send a command to restart the timer if
 914:../Dave/Generated/FREERTOS/timers.c ****              * it is an auto-reload timer.  It cannot be restarted here as the lists
 915:../Dave/Generated/FREERTOS/timers.c ****              * have not yet been switched. */
 916:../Dave/Generated/FREERTOS/timers.c ****             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1902              	 .loc 1 916 0
 1903 0026 3B69     	 ldr r3,[r7,#16]
 1904 0028 1B6A     	 ldr r3,[r3,#32]
 1905 002a 3869     	 ldr r0,[r7,#16]
 1906 002c 9847     	 blx r3
 917:../Dave/Generated/FREERTOS/timers.c **** 
 918:../Dave/Generated/FREERTOS/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 1907              	 .loc 1 918 0
 1908 002e 3B69     	 ldr r3,[r7,#16]
 1909 0030 93F82830 	 ldrb r3,[r3,#40]
 1910 0034 03F00403 	 and r3,r3,#4
 1911 0038 002B     	 cmp r3,#0
 1912 003a 2DD0     	 beq .L127
 919:../Dave/Generated/FREERTOS/timers.c ****             {
 920:../Dave/Generated/FREERTOS/timers.c ****                 /* Calculate the reload value, and if the reload value results in
 921:../Dave/Generated/FREERTOS/timers.c ****                  * the timer going into the same timer list then it has already expired
 922:../Dave/Generated/FREERTOS/timers.c ****                  * and the timer should be re-inserted into the current list so it is
 923:../Dave/Generated/FREERTOS/timers.c ****                  * processed again within this loop.  Otherwise a command should be sent
 924:../Dave/Generated/FREERTOS/timers.c ****                  * to restart the timer to ensure it is only inserted into a list after
 925:../Dave/Generated/FREERTOS/timers.c ****                  * the lists have been swapped. */
 926:../Dave/Generated/FREERTOS/timers.c ****                 xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 1913              	 .loc 1 926 0
 1914 003c 3B69     	 ldr r3,[r7,#16]
 1915 003e 9A69     	 ldr r2,[r3,#24]
 1916 0040 7B69     	 ldr r3,[r7,#20]
 1917 0042 1344     	 add r3,r3,r2
 1918 0044 FB60     	 str r3,[r7,#12]
 927:../Dave/Generated/FREERTOS/timers.c **** 
 928:../Dave/Generated/FREERTOS/timers.c ****                 if( xReloadTime > xNextExpireTime )
 1919              	 .loc 1 928 0
 1920 0046 FA68     	 ldr r2,[r7,#12]
 1921 0048 7B69     	 ldr r3,[r7,#20]
 1922 004a 9A42     	 cmp r2,r3
 1923 004c 0ED9     	 bls .L128
 929:../Dave/Generated/FREERTOS/timers.c ****                 {
 930:../Dave/Generated/FREERTOS/timers.c ****                     listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 1924              	 .loc 1 930 0
 1925 004e 3B69     	 ldr r3,[r7,#16]
 1926 0050 FA68     	 ldr r2,[r7,#12]
 1927 0052 5A60     	 str r2,[r3,#4]
 931:../Dave/Generated/FREERTOS/timers.c ****                     listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 1928              	 .loc 1 931 0
 1929 0054 3B69     	 ldr r3,[r7,#16]
 1930 0056 3A69     	 ldr r2,[r7,#16]
 1931 0058 1A61     	 str r2,[r3,#16]
 932:../Dave/Generated/FREERTOS/timers.c ****                     vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 1932              	 .loc 1 932 0
 1933 005a 184B     	 ldr r3,.L131
 1934 005c 1A68     	 ldr r2,[r3]
 1935 005e 3B69     	 ldr r3,[r7,#16]
 1936 0060 0433     	 adds r3,r3,#4
 1937 0062 1046     	 mov r0,r2
 1938 0064 1946     	 mov r1,r3
 1939 0066 FFF7FEFF 	 bl vListInsert
 1940 006a 15E0     	 b .L127
 1941              	.L128:
 933:../Dave/Generated/FREERTOS/timers.c ****                 }
 934:../Dave/Generated/FREERTOS/timers.c ****                 else
 935:../Dave/Generated/FREERTOS/timers.c ****                 {
 936:../Dave/Generated/FREERTOS/timers.c ****                     xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpi
 1942              	 .loc 1 936 0
 1943 006c 0023     	 movs r3,#0
 1944 006e 0093     	 str r3,[sp]
 1945 0070 3869     	 ldr r0,[r7,#16]
 1946 0072 0021     	 movs r1,#0
 1947 0074 7A69     	 ldr r2,[r7,#20]
 1948 0076 0023     	 movs r3,#0
 1949 0078 FFF7FEFF 	 bl xTimerGenericCommand
 1950 007c B860     	 str r0,[r7,#8]
 937:../Dave/Generated/FREERTOS/timers.c ****                     configASSERT( xResult );
 1951              	 .loc 1 937 0
 1952 007e BB68     	 ldr r3,[r7,#8]
 1953 0080 002B     	 cmp r3,#0
 1954 0082 09D1     	 bne .L127
 1955              	.LBB78:
 1956              	.LBB79:
 1957              	 .loc 2 197 0 discriminator 1
 1958              	
 1959 0084 4FF0FC03 	 mov r3,#252
 1960 0088 83F31188 	 msr basepri,r3
 1961 008c BFF36F8F 	 isb 
 1962 0090 BFF34F8F 	 dsb 
 1963              	
 1964              	
 1965              	 .thumb
 1966 0094 3B60     	 str r3,[r7]
 1967              	.L129:
 1968              	.LBE79:
 1969              	.LBE78:
 1970              	 .loc 1 937 0 discriminator 1
 1971 0096 FEE7     	 b .L129
 1972              	.L127:
 904:../Dave/Generated/FREERTOS/timers.c ****         {
 1973              	 .loc 1 904 0
 1974 0098 084B     	 ldr r3,.L131
 1975 009a 1B68     	 ldr r3,[r3]
 1976 009c 1B68     	 ldr r3,[r3]
 1977 009e 002B     	 cmp r3,#0
 1978 00a0 B2D1     	 bne .L130
 938:../Dave/Generated/FREERTOS/timers.c ****                     ( void ) xResult;
 939:../Dave/Generated/FREERTOS/timers.c ****                 }
 940:../Dave/Generated/FREERTOS/timers.c ****             }
 941:../Dave/Generated/FREERTOS/timers.c ****             else
 942:../Dave/Generated/FREERTOS/timers.c ****             {
 943:../Dave/Generated/FREERTOS/timers.c ****                 mtCOVERAGE_TEST_MARKER();
 944:../Dave/Generated/FREERTOS/timers.c ****             }
 945:../Dave/Generated/FREERTOS/timers.c ****         }
 946:../Dave/Generated/FREERTOS/timers.c **** 
 947:../Dave/Generated/FREERTOS/timers.c ****         pxTemp = pxCurrentTimerList;
 1979              	 .loc 1 947 0
 1980 00a2 064B     	 ldr r3,.L131
 1981 00a4 1B68     	 ldr r3,[r3]
 1982 00a6 7B60     	 str r3,[r7,#4]
 948:../Dave/Generated/FREERTOS/timers.c ****         pxCurrentTimerList = pxOverflowTimerList;
 1983              	 .loc 1 948 0
 1984 00a8 054B     	 ldr r3,.L131+4
 1985 00aa 1B68     	 ldr r3,[r3]
 1986 00ac 034A     	 ldr r2,.L131
 1987 00ae 1360     	 str r3,[r2]
 949:../Dave/Generated/FREERTOS/timers.c ****         pxOverflowTimerList = pxTemp;
 1988              	 .loc 1 949 0
 1989 00b0 034A     	 ldr r2,.L131+4
 1990 00b2 7B68     	 ldr r3,[r7,#4]
 1991 00b4 1360     	 str r3,[r2]
 950:../Dave/Generated/FREERTOS/timers.c ****     }
 1992              	 .loc 1 950 0
 1993 00b6 1837     	 adds r7,r7,#24
 1994              	.LCFI96:
 1995              	 .cfi_def_cfa_offset 8
 1996 00b8 BD46     	 mov sp,r7
 1997              	.LCFI97:
 1998              	 .cfi_def_cfa_register 13
 1999              	 
 2000 00ba 80BD     	 pop {r7,pc}
 2001              	.L132:
 2002              	 .align 2
 2003              	.L131:
 2004 00bc 00000000 	 .word pxCurrentTimerList
 2005 00c0 00000000 	 .word pxOverflowTimerList
 2006              	 .cfi_endproc
 2007              	.LFE155:
 2009              	 .section .rodata
 2010              	 .align 2
 2011              	.LC1:
 2012 0008 546D7251 	 .ascii "TmrQ\000"
 2012      00
 2013 000d 000000   	 .section .text.prvCheckForValidListAndQueue,"ax",%progbits
 2014              	 .align 2
 2015              	 .thumb
 2016              	 .thumb_func
 2018              	prvCheckForValidListAndQueue:
 2019              	.LFB156:
 951:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 952:../Dave/Generated/FREERTOS/timers.c **** 
 953:../Dave/Generated/FREERTOS/timers.c ****     static void prvCheckForValidListAndQueue( void )
 954:../Dave/Generated/FREERTOS/timers.c ****     {
 2020              	 .loc 1 954 0
 2021              	 .cfi_startproc
 2022              	 
 2023              	 
 2024 0000 80B5     	 push {r7,lr}
 2025              	.LCFI98:
 2026              	 .cfi_def_cfa_offset 8
 2027              	 .cfi_offset 7,-8
 2028              	 .cfi_offset 14,-4
 2029 0002 82B0     	 sub sp,sp,#8
 2030              	.LCFI99:
 2031              	 .cfi_def_cfa_offset 16
 2032 0004 02AF     	 add r7,sp,#8
 2033              	.LCFI100:
 2034              	 .cfi_def_cfa 7,8
 955:../Dave/Generated/FREERTOS/timers.c ****         /* Check that the list from which active timers are referenced, and the
 956:../Dave/Generated/FREERTOS/timers.c ****          * queue used to communicate with the timer service, have been
 957:../Dave/Generated/FREERTOS/timers.c ****          * initialised. */
 958:../Dave/Generated/FREERTOS/timers.c ****         taskENTER_CRITICAL();
 2035              	 .loc 1 958 0
 2036 0006 FFF7FEFF 	 bl vPortEnterCritical
 959:../Dave/Generated/FREERTOS/timers.c ****         {
 960:../Dave/Generated/FREERTOS/timers.c ****             if( xTimerQueue == NULL )
 2037              	 .loc 1 960 0
 2038 000a 144B     	 ldr r3,.L135
 2039 000c 1B68     	 ldr r3,[r3]
 2040 000e 002B     	 cmp r3,#0
 2041 0010 20D1     	 bne .L134
 961:../Dave/Generated/FREERTOS/timers.c ****             {
 962:../Dave/Generated/FREERTOS/timers.c ****                 vListInitialise( &xActiveTimerList1 );
 2042              	 .loc 1 962 0
 2043 0012 1348     	 ldr r0,.L135+4
 2044 0014 FFF7FEFF 	 bl vListInitialise
 963:../Dave/Generated/FREERTOS/timers.c ****                 vListInitialise( &xActiveTimerList2 );
 2045              	 .loc 1 963 0
 2046 0018 1248     	 ldr r0,.L135+8
 2047 001a FFF7FEFF 	 bl vListInitialise
 964:../Dave/Generated/FREERTOS/timers.c ****                 pxCurrentTimerList = &xActiveTimerList1;
 2048              	 .loc 1 964 0
 2049 001e 124B     	 ldr r3,.L135+12
 2050 0020 0F4A     	 ldr r2,.L135+4
 2051 0022 1A60     	 str r2,[r3]
 965:../Dave/Generated/FREERTOS/timers.c ****                 pxOverflowTimerList = &xActiveTimerList2;
 2052              	 .loc 1 965 0
 2053 0024 114B     	 ldr r3,.L135+16
 2054 0026 0F4A     	 ldr r2,.L135+8
 2055 0028 1A60     	 str r2,[r3]
 2056              	.LBB80:
 966:../Dave/Generated/FREERTOS/timers.c **** 
 967:../Dave/Generated/FREERTOS/timers.c ****                 #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 968:../Dave/Generated/FREERTOS/timers.c ****                     {
 969:../Dave/Generated/FREERTOS/timers.c ****                         /* The timer queue is allocated statically in case
 970:../Dave/Generated/FREERTOS/timers.c ****                          * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 971:../Dave/Generated/FREERTOS/timers.c ****                         PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;                    
 972:../Dave/Generated/FREERTOS/timers.c ****                         PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) config
 973:../Dave/Generated/FREERTOS/timers.c **** 
 974:../Dave/Generated/FREERTOS/timers.c ****                         xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH,
 2057              	 .loc 1 974 0
 2058 002a 0023     	 movs r3,#0
 2059 002c 0093     	 str r3,[sp]
 2060 002e 0520     	 movs r0,#5
 2061 0030 1021     	 movs r1,#16
 2062 0032 0F4A     	 ldr r2,.L135+20
 2063 0034 0F4B     	 ldr r3,.L135+24
 2064 0036 FFF7FEFF 	 bl xQueueGenericCreateStatic
 2065 003a 0246     	 mov r2,r0
 2066 003c 074B     	 ldr r3,.L135
 2067 003e 1A60     	 str r2,[r3]
 2068              	.LBE80:
 975:../Dave/Generated/FREERTOS/timers.c ****                     }
 976:../Dave/Generated/FREERTOS/timers.c ****                 #else
 977:../Dave/Generated/FREERTOS/timers.c ****                     {
 978:../Dave/Generated/FREERTOS/timers.c ****                         xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeo
 979:../Dave/Generated/FREERTOS/timers.c ****                     }
 980:../Dave/Generated/FREERTOS/timers.c ****                 #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 981:../Dave/Generated/FREERTOS/timers.c **** 
 982:../Dave/Generated/FREERTOS/timers.c ****                 #if ( configQUEUE_REGISTRY_SIZE > 0 )
 983:../Dave/Generated/FREERTOS/timers.c ****                     {
 984:../Dave/Generated/FREERTOS/timers.c ****                         if( xTimerQueue != NULL )
 2069              	 .loc 1 984 0
 2070 0040 064B     	 ldr r3,.L135
 2071 0042 1B68     	 ldr r3,[r3]
 2072 0044 002B     	 cmp r3,#0
 2073 0046 05D0     	 beq .L134
 985:../Dave/Generated/FREERTOS/timers.c ****                         {
 986:../Dave/Generated/FREERTOS/timers.c ****                             vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 2074              	 .loc 1 986 0
 2075 0048 044B     	 ldr r3,.L135
 2076 004a 1B68     	 ldr r3,[r3]
 2077 004c 1846     	 mov r0,r3
 2078 004e 0A49     	 ldr r1,.L135+28
 2079 0050 FFF7FEFF 	 bl vQueueAddToRegistry
 2080              	.L134:
 987:../Dave/Generated/FREERTOS/timers.c ****                         }
 988:../Dave/Generated/FREERTOS/timers.c ****                         else
 989:../Dave/Generated/FREERTOS/timers.c ****                         {
 990:../Dave/Generated/FREERTOS/timers.c ****                             mtCOVERAGE_TEST_MARKER();
 991:../Dave/Generated/FREERTOS/timers.c ****                         }
 992:../Dave/Generated/FREERTOS/timers.c ****                     }
 993:../Dave/Generated/FREERTOS/timers.c ****                 #endif /* configQUEUE_REGISTRY_SIZE */
 994:../Dave/Generated/FREERTOS/timers.c ****             }
 995:../Dave/Generated/FREERTOS/timers.c ****             else
 996:../Dave/Generated/FREERTOS/timers.c ****             {
 997:../Dave/Generated/FREERTOS/timers.c ****                 mtCOVERAGE_TEST_MARKER();
 998:../Dave/Generated/FREERTOS/timers.c ****             }
 999:../Dave/Generated/FREERTOS/timers.c ****         }
1000:../Dave/Generated/FREERTOS/timers.c ****         taskEXIT_CRITICAL();
 2081              	 .loc 1 1000 0
 2082 0054 FFF7FEFF 	 bl vPortExitCritical
1001:../Dave/Generated/FREERTOS/timers.c ****     }
 2083              	 .loc 1 1001 0
 2084 0058 BD46     	 mov sp,r7
 2085              	.LCFI101:
 2086              	 .cfi_def_cfa_register 13
 2087              	 
 2088 005a 80BD     	 pop {r7,pc}
 2089              	.L136:
 2090              	 .align 2
 2091              	.L135:
 2092 005c 00000000 	 .word xTimerQueue
 2093 0060 00000000 	 .word xActiveTimerList1
 2094 0064 00000000 	 .word xActiveTimerList2
 2095 0068 00000000 	 .word pxCurrentTimerList
 2096 006c 00000000 	 .word pxOverflowTimerList
 2097 0070 00000000 	 .word ucStaticTimerQueueStorage.8064
 2098 0074 00000000 	 .word xStaticTimerQueue.8063
 2099 0078 08000000 	 .word .LC1
 2100              	 .cfi_endproc
 2101              	.LFE156:
 2103              	 .section .text.xTimerIsTimerActive,"ax",%progbits
 2104              	 .align 2
 2105              	 .global xTimerIsTimerActive
 2106              	 .thumb
 2107              	 .thumb_func
 2109              	xTimerIsTimerActive:
 2110              	.LFB157:
1002:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1003:../Dave/Generated/FREERTOS/timers.c **** 
1004:../Dave/Generated/FREERTOS/timers.c ****     BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
1005:../Dave/Generated/FREERTOS/timers.c ****     {
 2111              	 .loc 1 1005 0
 2112              	 .cfi_startproc
 2113              	 
 2114              	 
 2115 0000 80B5     	 push {r7,lr}
 2116              	.LCFI102:
 2117              	 .cfi_def_cfa_offset 8
 2118              	 .cfi_offset 7,-8
 2119              	 .cfi_offset 14,-4
 2120 0002 86B0     	 sub sp,sp,#24
 2121              	.LCFI103:
 2122              	 .cfi_def_cfa_offset 32
 2123 0004 00AF     	 add r7,sp,#0
 2124              	.LCFI104:
 2125              	 .cfi_def_cfa_register 7
 2126 0006 7860     	 str r0,[r7,#4]
1006:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xReturn;
1007:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 2127              	 .loc 1 1007 0
 2128 0008 7B68     	 ldr r3,[r7,#4]
 2129 000a 3B61     	 str r3,[r7,#16]
1008:../Dave/Generated/FREERTOS/timers.c **** 
1009:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 2130              	 .loc 1 1009 0
 2131 000c 7B68     	 ldr r3,[r7,#4]
 2132 000e 002B     	 cmp r3,#0
 2133 0010 09D1     	 bne .L138
 2134              	.LBB81:
 2135              	.LBB82:
 2136              	 .loc 2 197 0 discriminator 1
 2137              	
 2138 0012 4FF0FC03 	 mov r3,#252
 2139 0016 83F31188 	 msr basepri,r3
 2140 001a BFF36F8F 	 isb 
 2141 001e BFF34F8F 	 dsb 
 2142              	
 2143              	
 2144              	 .thumb
 2145 0022 FB60     	 str r3,[r7,#12]
 2146              	.L139:
 2147              	.LBE82:
 2148              	.LBE81:
 2149              	 .loc 1 1009 0 discriminator 1
 2150 0024 FEE7     	 b .L139
 2151              	.L138:
1010:../Dave/Generated/FREERTOS/timers.c **** 
1011:../Dave/Generated/FREERTOS/timers.c ****         /* Is the timer in the list of active timers? */
1012:../Dave/Generated/FREERTOS/timers.c ****         taskENTER_CRITICAL();
 2152              	 .loc 1 1012 0
 2153 0026 FFF7FEFF 	 bl vPortEnterCritical
1013:../Dave/Generated/FREERTOS/timers.c ****         {
1014:../Dave/Generated/FREERTOS/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 2154              	 .loc 1 1014 0
 2155 002a 3B69     	 ldr r3,[r7,#16]
 2156 002c 93F82830 	 ldrb r3,[r3,#40]
 2157 0030 03F00103 	 and r3,r3,#1
 2158 0034 002B     	 cmp r3,#0
 2159 0036 02D1     	 bne .L140
1015:../Dave/Generated/FREERTOS/timers.c ****             {
1016:../Dave/Generated/FREERTOS/timers.c ****                 xReturn = pdFALSE;
 2160              	 .loc 1 1016 0
 2161 0038 0023     	 movs r3,#0
 2162 003a 7B61     	 str r3,[r7,#20]
 2163 003c 01E0     	 b .L141
 2164              	.L140:
1017:../Dave/Generated/FREERTOS/timers.c ****             }
1018:../Dave/Generated/FREERTOS/timers.c ****             else
1019:../Dave/Generated/FREERTOS/timers.c ****             {
1020:../Dave/Generated/FREERTOS/timers.c ****                 xReturn = pdTRUE;
 2165              	 .loc 1 1020 0
 2166 003e 0123     	 movs r3,#1
 2167 0040 7B61     	 str r3,[r7,#20]
 2168              	.L141:
1021:../Dave/Generated/FREERTOS/timers.c ****             }
1022:../Dave/Generated/FREERTOS/timers.c ****         }
1023:../Dave/Generated/FREERTOS/timers.c ****         taskEXIT_CRITICAL();
 2169              	 .loc 1 1023 0
 2170 0042 FFF7FEFF 	 bl vPortExitCritical
1024:../Dave/Generated/FREERTOS/timers.c **** 
1025:../Dave/Generated/FREERTOS/timers.c ****         return xReturn;
 2171              	 .loc 1 1025 0
 2172 0046 7B69     	 ldr r3,[r7,#20]
1026:../Dave/Generated/FREERTOS/timers.c ****     } /*lint !e818 Can't be pointer to const due to the typedef. */
 2173              	 .loc 1 1026 0
 2174 0048 1846     	 mov r0,r3
 2175 004a 1837     	 adds r7,r7,#24
 2176              	.LCFI105:
 2177              	 .cfi_def_cfa_offset 8
 2178 004c BD46     	 mov sp,r7
 2179              	.LCFI106:
 2180              	 .cfi_def_cfa_register 13
 2181              	 
 2182 004e 80BD     	 pop {r7,pc}
 2183              	 .cfi_endproc
 2184              	.LFE157:
 2186              	 .section .text.pvTimerGetTimerID,"ax",%progbits
 2187              	 .align 2
 2188              	 .global pvTimerGetTimerID
 2189              	 .thumb
 2190              	 .thumb_func
 2192              	pvTimerGetTimerID:
 2193              	.LFB158:
1027:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1028:../Dave/Generated/FREERTOS/timers.c **** 
1029:../Dave/Generated/FREERTOS/timers.c ****     void * pvTimerGetTimerID( const TimerHandle_t xTimer )
1030:../Dave/Generated/FREERTOS/timers.c ****     {
 2194              	 .loc 1 1030 0
 2195              	 .cfi_startproc
 2196              	 
 2197              	 
 2198 0000 80B5     	 push {r7,lr}
 2199              	.LCFI107:
 2200              	 .cfi_def_cfa_offset 8
 2201              	 .cfi_offset 7,-8
 2202              	 .cfi_offset 14,-4
 2203 0002 86B0     	 sub sp,sp,#24
 2204              	.LCFI108:
 2205              	 .cfi_def_cfa_offset 32
 2206 0004 00AF     	 add r7,sp,#0
 2207              	.LCFI109:
 2208              	 .cfi_def_cfa_register 7
 2209 0006 7860     	 str r0,[r7,#4]
1031:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * const pxTimer = xTimer;
 2210              	 .loc 1 1031 0
 2211 0008 7B68     	 ldr r3,[r7,#4]
 2212 000a 7B61     	 str r3,[r7,#20]
1032:../Dave/Generated/FREERTOS/timers.c ****         void * pvReturn;
1033:../Dave/Generated/FREERTOS/timers.c **** 
1034:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 2213              	 .loc 1 1034 0
 2214 000c 7B68     	 ldr r3,[r7,#4]
 2215 000e 002B     	 cmp r3,#0
 2216 0010 09D1     	 bne .L144
 2217              	.LBB83:
 2218              	.LBB84:
 2219              	 .loc 2 197 0 discriminator 1
 2220              	
 2221 0012 4FF0FC03 	 mov r3,#252
 2222 0016 83F31188 	 msr basepri,r3
 2223 001a BFF36F8F 	 isb 
 2224 001e BFF34F8F 	 dsb 
 2225              	
 2226              	
 2227              	 .thumb
 2228 0022 FB60     	 str r3,[r7,#12]
 2229              	.L145:
 2230              	.LBE84:
 2231              	.LBE83:
 2232              	 .loc 1 1034 0 discriminator 1
 2233 0024 FEE7     	 b .L145
 2234              	.L144:
1035:../Dave/Generated/FREERTOS/timers.c **** 
1036:../Dave/Generated/FREERTOS/timers.c ****         taskENTER_CRITICAL();
 2235              	 .loc 1 1036 0
 2236 0026 FFF7FEFF 	 bl vPortEnterCritical
1037:../Dave/Generated/FREERTOS/timers.c ****         {
1038:../Dave/Generated/FREERTOS/timers.c ****             pvReturn = pxTimer->pvTimerID;
 2237              	 .loc 1 1038 0
 2238 002a 7B69     	 ldr r3,[r7,#20]
 2239 002c DB69     	 ldr r3,[r3,#28]
 2240 002e 3B61     	 str r3,[r7,#16]
1039:../Dave/Generated/FREERTOS/timers.c ****         }
1040:../Dave/Generated/FREERTOS/timers.c ****         taskEXIT_CRITICAL();
 2241              	 .loc 1 1040 0
 2242 0030 FFF7FEFF 	 bl vPortExitCritical
1041:../Dave/Generated/FREERTOS/timers.c **** 
1042:../Dave/Generated/FREERTOS/timers.c ****         return pvReturn;
 2243              	 .loc 1 1042 0
 2244 0034 3B69     	 ldr r3,[r7,#16]
1043:../Dave/Generated/FREERTOS/timers.c ****     }
 2245              	 .loc 1 1043 0
 2246 0036 1846     	 mov r0,r3
 2247 0038 1837     	 adds r7,r7,#24
 2248              	.LCFI110:
 2249              	 .cfi_def_cfa_offset 8
 2250 003a BD46     	 mov sp,r7
 2251              	.LCFI111:
 2252              	 .cfi_def_cfa_register 13
 2253              	 
 2254 003c 80BD     	 pop {r7,pc}
 2255              	 .cfi_endproc
 2256              	.LFE158:
 2258 003e 00BF     	 .section .text.vTimerSetTimerID,"ax",%progbits
 2259              	 .align 2
 2260              	 .global vTimerSetTimerID
 2261              	 .thumb
 2262              	 .thumb_func
 2264              	vTimerSetTimerID:
 2265              	.LFB159:
1044:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1045:../Dave/Generated/FREERTOS/timers.c **** 
1046:../Dave/Generated/FREERTOS/timers.c ****     void vTimerSetTimerID( TimerHandle_t xTimer,
1047:../Dave/Generated/FREERTOS/timers.c ****                            void * pvNewID )
1048:../Dave/Generated/FREERTOS/timers.c ****     {
 2266              	 .loc 1 1048 0
 2267              	 .cfi_startproc
 2268              	 
 2269              	 
 2270 0000 80B5     	 push {r7,lr}
 2271              	.LCFI112:
 2272              	 .cfi_def_cfa_offset 8
 2273              	 .cfi_offset 7,-8
 2274              	 .cfi_offset 14,-4
 2275 0002 84B0     	 sub sp,sp,#16
 2276              	.LCFI113:
 2277              	 .cfi_def_cfa_offset 24
 2278 0004 00AF     	 add r7,sp,#0
 2279              	.LCFI114:
 2280              	 .cfi_def_cfa_register 7
 2281 0006 7860     	 str r0,[r7,#4]
 2282 0008 3960     	 str r1,[r7]
1049:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * const pxTimer = xTimer;
 2283              	 .loc 1 1049 0
 2284 000a 7B68     	 ldr r3,[r7,#4]
 2285 000c FB60     	 str r3,[r7,#12]
1050:../Dave/Generated/FREERTOS/timers.c **** 
1051:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 2286              	 .loc 1 1051 0
 2287 000e 7B68     	 ldr r3,[r7,#4]
 2288 0010 002B     	 cmp r3,#0
 2289 0012 09D1     	 bne .L148
 2290              	.LBB85:
 2291              	.LBB86:
 2292              	 .loc 2 197 0 discriminator 1
 2293              	
 2294 0014 4FF0FC03 	 mov r3,#252
 2295 0018 83F31188 	 msr basepri,r3
 2296 001c BFF36F8F 	 isb 
 2297 0020 BFF34F8F 	 dsb 
 2298              	
 2299              	
 2300              	 .thumb
 2301 0024 BB60     	 str r3,[r7,#8]
 2302              	.L149:
 2303              	.LBE86:
 2304              	.LBE85:
 2305              	 .loc 1 1051 0 discriminator 1
 2306 0026 FEE7     	 b .L149
 2307              	.L148:
1052:../Dave/Generated/FREERTOS/timers.c **** 
1053:../Dave/Generated/FREERTOS/timers.c ****         taskENTER_CRITICAL();
 2308              	 .loc 1 1053 0
 2309 0028 FFF7FEFF 	 bl vPortEnterCritical
1054:../Dave/Generated/FREERTOS/timers.c ****         {
1055:../Dave/Generated/FREERTOS/timers.c ****             pxTimer->pvTimerID = pvNewID;
 2310              	 .loc 1 1055 0
 2311 002c FB68     	 ldr r3,[r7,#12]
 2312 002e 3A68     	 ldr r2,[r7]
 2313 0030 DA61     	 str r2,[r3,#28]
1056:../Dave/Generated/FREERTOS/timers.c ****         }
1057:../Dave/Generated/FREERTOS/timers.c ****         taskEXIT_CRITICAL();
 2314              	 .loc 1 1057 0
 2315 0032 FFF7FEFF 	 bl vPortExitCritical
1058:../Dave/Generated/FREERTOS/timers.c ****     }
 2316              	 .loc 1 1058 0
 2317 0036 1037     	 adds r7,r7,#16
 2318              	.LCFI115:
 2319              	 .cfi_def_cfa_offset 8
 2320 0038 BD46     	 mov sp,r7
 2321              	.LCFI116:
 2322              	 .cfi_def_cfa_register 13
 2323              	 
 2324 003a 80BD     	 pop {r7,pc}
 2325              	 .cfi_endproc
 2326              	.LFE159:
 2328              	 .section .text.xTimerPendFunctionCallFromISR,"ax",%progbits
 2329              	 .align 2
 2330              	 .global xTimerPendFunctionCallFromISR
 2331              	 .thumb
 2332              	 .thumb_func
 2334              	xTimerPendFunctionCallFromISR:
 2335              	.LFB160:
1059:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1060:../Dave/Generated/FREERTOS/timers.c **** 
1061:../Dave/Generated/FREERTOS/timers.c ****     #if ( INCLUDE_xTimerPendFunctionCall == 1 )
1062:../Dave/Generated/FREERTOS/timers.c **** 
1063:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend,
1064:../Dave/Generated/FREERTOS/timers.c ****                                                   void * pvParameter1,
1065:../Dave/Generated/FREERTOS/timers.c ****                                                   uint32_t ulParameter2,
1066:../Dave/Generated/FREERTOS/timers.c ****                                                   BaseType_t * pxHigherPriorityTaskWoken )
1067:../Dave/Generated/FREERTOS/timers.c ****         {
 2336              	 .loc 1 1067 0
 2337              	 .cfi_startproc
 2338              	 
 2339              	 
 2340 0000 80B5     	 push {r7,lr}
 2341              	.LCFI117:
 2342              	 .cfi_def_cfa_offset 8
 2343              	 .cfi_offset 7,-8
 2344              	 .cfi_offset 14,-4
 2345 0002 8AB0     	 sub sp,sp,#40
 2346              	.LCFI118:
 2347              	 .cfi_def_cfa_offset 48
 2348 0004 00AF     	 add r7,sp,#0
 2349              	.LCFI119:
 2350              	 .cfi_def_cfa_register 7
 2351 0006 F860     	 str r0,[r7,#12]
 2352 0008 B960     	 str r1,[r7,#8]
 2353 000a 7A60     	 str r2,[r7,#4]
 2354 000c 3B60     	 str r3,[r7]
1068:../Dave/Generated/FREERTOS/timers.c ****             DaemonTaskMessage_t xMessage;
1069:../Dave/Generated/FREERTOS/timers.c ****             BaseType_t xReturn;
1070:../Dave/Generated/FREERTOS/timers.c **** 
1071:../Dave/Generated/FREERTOS/timers.c ****             /* Complete the message with the function parameters and post it to the
1072:../Dave/Generated/FREERTOS/timers.c ****              * daemon task. */
1073:../Dave/Generated/FREERTOS/timers.c ****             xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 2355              	 .loc 1 1073 0
 2356 000e 6FF00103 	 mvn r3,#1
 2357 0012 7B61     	 str r3,[r7,#20]
1074:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 2358              	 .loc 1 1074 0
 2359 0014 FB68     	 ldr r3,[r7,#12]
 2360 0016 BB61     	 str r3,[r7,#24]
1075:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 2361              	 .loc 1 1075 0
 2362 0018 BB68     	 ldr r3,[r7,#8]
 2363 001a FB61     	 str r3,[r7,#28]
1076:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 2364              	 .loc 1 1076 0
 2365 001c 7B68     	 ldr r3,[r7,#4]
 2366 001e 3B62     	 str r3,[r7,#32]
1077:../Dave/Generated/FREERTOS/timers.c **** 
1078:../Dave/Generated/FREERTOS/timers.c ****             xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 2367              	 .loc 1 1078 0
 2368 0020 074B     	 ldr r3,.L152
 2369 0022 1A68     	 ldr r2,[r3]
 2370 0024 07F11403 	 add r3,r7,#20
 2371 0028 1046     	 mov r0,r2
 2372 002a 1946     	 mov r1,r3
 2373 002c 3A68     	 ldr r2,[r7]
 2374 002e 0023     	 movs r3,#0
 2375 0030 FFF7FEFF 	 bl xQueueGenericSendFromISR
 2376 0034 7862     	 str r0,[r7,#36]
1079:../Dave/Generated/FREERTOS/timers.c **** 
1080:../Dave/Generated/FREERTOS/timers.c ****             tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1081:../Dave/Generated/FREERTOS/timers.c **** 
1082:../Dave/Generated/FREERTOS/timers.c ****             return xReturn;
 2377              	 .loc 1 1082 0
 2378 0036 7B6A     	 ldr r3,[r7,#36]
1083:../Dave/Generated/FREERTOS/timers.c ****         }
 2379              	 .loc 1 1083 0
 2380 0038 1846     	 mov r0,r3
 2381 003a 2837     	 adds r7,r7,#40
 2382              	.LCFI120:
 2383              	 .cfi_def_cfa_offset 8
 2384 003c BD46     	 mov sp,r7
 2385              	.LCFI121:
 2386              	 .cfi_def_cfa_register 13
 2387              	 
 2388 003e 80BD     	 pop {r7,pc}
 2389              	.L153:
 2390              	 .align 2
 2391              	.L152:
 2392 0040 00000000 	 .word xTimerQueue
 2393              	 .cfi_endproc
 2394              	.LFE160:
 2396              	 .section .text.xTimerPendFunctionCall,"ax",%progbits
 2397              	 .align 2
 2398              	 .global xTimerPendFunctionCall
 2399              	 .thumb
 2400              	 .thumb_func
 2402              	xTimerPendFunctionCall:
 2403              	.LFB161:
1084:../Dave/Generated/FREERTOS/timers.c **** 
1085:../Dave/Generated/FREERTOS/timers.c ****     #endif /* INCLUDE_xTimerPendFunctionCall */
1086:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1087:../Dave/Generated/FREERTOS/timers.c **** 
1088:../Dave/Generated/FREERTOS/timers.c ****     #if ( INCLUDE_xTimerPendFunctionCall == 1 )
1089:../Dave/Generated/FREERTOS/timers.c **** 
1090:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend,
1091:../Dave/Generated/FREERTOS/timers.c ****                                            void * pvParameter1,
1092:../Dave/Generated/FREERTOS/timers.c ****                                            uint32_t ulParameter2,
1093:../Dave/Generated/FREERTOS/timers.c ****                                            TickType_t xTicksToWait )
1094:../Dave/Generated/FREERTOS/timers.c ****         {
 2404              	 .loc 1 1094 0
 2405              	 .cfi_startproc
 2406              	 
 2407              	 
 2408 0000 80B5     	 push {r7,lr}
 2409              	.LCFI122:
 2410              	 .cfi_def_cfa_offset 8
 2411              	 .cfi_offset 7,-8
 2412              	 .cfi_offset 14,-4
 2413 0002 8AB0     	 sub sp,sp,#40
 2414              	.LCFI123:
 2415              	 .cfi_def_cfa_offset 48
 2416 0004 00AF     	 add r7,sp,#0
 2417              	.LCFI124:
 2418              	 .cfi_def_cfa_register 7
 2419 0006 F860     	 str r0,[r7,#12]
 2420 0008 B960     	 str r1,[r7,#8]
 2421 000a 7A60     	 str r2,[r7,#4]
 2422 000c 3B60     	 str r3,[r7]
1095:../Dave/Generated/FREERTOS/timers.c ****             DaemonTaskMessage_t xMessage;
1096:../Dave/Generated/FREERTOS/timers.c ****             BaseType_t xReturn;
1097:../Dave/Generated/FREERTOS/timers.c **** 
1098:../Dave/Generated/FREERTOS/timers.c ****             /* This function can only be called after a timer has been created or
1099:../Dave/Generated/FREERTOS/timers.c ****              * after the scheduler has been started because, until then, the timer
1100:../Dave/Generated/FREERTOS/timers.c ****              * queue does not exist. */
1101:../Dave/Generated/FREERTOS/timers.c ****             configASSERT( xTimerQueue );
 2423              	 .loc 1 1101 0
 2424 000e 134B     	 ldr r3,.L158
 2425 0010 1B68     	 ldr r3,[r3]
 2426 0012 002B     	 cmp r3,#0
 2427 0014 09D1     	 bne .L155
 2428              	.LBB87:
 2429              	.LBB88:
 2430              	 .loc 2 197 0 discriminator 1
 2431              	
 2432 0016 4FF0FC03 	 mov r3,#252
 2433 001a 83F31188 	 msr basepri,r3
 2434 001e BFF36F8F 	 isb 
 2435 0022 BFF34F8F 	 dsb 
 2436              	
 2437              	
 2438              	 .thumb
 2439 0026 3B62     	 str r3,[r7,#32]
 2440              	.L156:
 2441              	.LBE88:
 2442              	.LBE87:
 2443              	 .loc 1 1101 0 discriminator 1
 2444 0028 FEE7     	 b .L156
 2445              	.L155:
1102:../Dave/Generated/FREERTOS/timers.c **** 
1103:../Dave/Generated/FREERTOS/timers.c ****             /* Complete the message with the function parameters and post it to the
1104:../Dave/Generated/FREERTOS/timers.c ****              * daemon task. */
1105:../Dave/Generated/FREERTOS/timers.c ****             xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 2446              	 .loc 1 1105 0
 2447 002a 4FF0FF33 	 mov r3,#-1
 2448 002e 3B61     	 str r3,[r7,#16]
1106:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 2449              	 .loc 1 1106 0
 2450 0030 FB68     	 ldr r3,[r7,#12]
 2451 0032 7B61     	 str r3,[r7,#20]
1107:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 2452              	 .loc 1 1107 0
 2453 0034 BB68     	 ldr r3,[r7,#8]
 2454 0036 BB61     	 str r3,[r7,#24]
1108:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 2455              	 .loc 1 1108 0
 2456 0038 7B68     	 ldr r3,[r7,#4]
 2457 003a FB61     	 str r3,[r7,#28]
1109:../Dave/Generated/FREERTOS/timers.c **** 
1110:../Dave/Generated/FREERTOS/timers.c ****             xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 2458              	 .loc 1 1110 0
 2459 003c 074B     	 ldr r3,.L158
 2460 003e 1A68     	 ldr r2,[r3]
 2461 0040 07F11003 	 add r3,r7,#16
 2462 0044 1046     	 mov r0,r2
 2463 0046 1946     	 mov r1,r3
 2464 0048 3A68     	 ldr r2,[r7]
 2465 004a 0023     	 movs r3,#0
 2466 004c FFF7FEFF 	 bl xQueueGenericSend
 2467 0050 7862     	 str r0,[r7,#36]
1111:../Dave/Generated/FREERTOS/timers.c **** 
1112:../Dave/Generated/FREERTOS/timers.c ****             tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1113:../Dave/Generated/FREERTOS/timers.c **** 
1114:../Dave/Generated/FREERTOS/timers.c ****             return xReturn;
 2468              	 .loc 1 1114 0
 2469 0052 7B6A     	 ldr r3,[r7,#36]
1115:../Dave/Generated/FREERTOS/timers.c ****         }
 2470              	 .loc 1 1115 0
 2471 0054 1846     	 mov r0,r3
 2472 0056 2837     	 adds r7,r7,#40
 2473              	.LCFI125:
 2474              	 .cfi_def_cfa_offset 8
 2475 0058 BD46     	 mov sp,r7
 2476              	.LCFI126:
 2477              	 .cfi_def_cfa_register 13
 2478              	 
 2479 005a 80BD     	 pop {r7,pc}
 2480              	.L159:
 2481              	 .align 2
 2482              	.L158:
 2483 005c 00000000 	 .word xTimerQueue
 2484              	 .cfi_endproc
 2485              	.LFE161:
 2487              	 .section .text.uxTimerGetTimerNumber,"ax",%progbits
 2488              	 .align 2
 2489              	 .global uxTimerGetTimerNumber
 2490              	 .thumb
 2491              	 .thumb_func
 2493              	uxTimerGetTimerNumber:
 2494              	.LFB162:
1116:../Dave/Generated/FREERTOS/timers.c **** 
1117:../Dave/Generated/FREERTOS/timers.c ****     #endif /* INCLUDE_xTimerPendFunctionCall */
1118:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1119:../Dave/Generated/FREERTOS/timers.c **** 
1120:../Dave/Generated/FREERTOS/timers.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
1121:../Dave/Generated/FREERTOS/timers.c **** 
1122:../Dave/Generated/FREERTOS/timers.c ****         UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1123:../Dave/Generated/FREERTOS/timers.c ****         {
 2495              	 .loc 1 1123 0
 2496              	 .cfi_startproc
 2497              	 
 2498              	 
 2499              	 
 2500 0000 80B4     	 push {r7}
 2501              	.LCFI127:
 2502              	 .cfi_def_cfa_offset 4
 2503              	 .cfi_offset 7,-4
 2504 0002 83B0     	 sub sp,sp,#12
 2505              	.LCFI128:
 2506              	 .cfi_def_cfa_offset 16
 2507 0004 00AF     	 add r7,sp,#0
 2508              	.LCFI129:
 2509              	 .cfi_def_cfa_register 7
 2510 0006 7860     	 str r0,[r7,#4]
1124:../Dave/Generated/FREERTOS/timers.c ****             return ( ( Timer_t * ) xTimer )->uxTimerNumber;
 2511              	 .loc 1 1124 0
 2512 0008 7B68     	 ldr r3,[r7,#4]
 2513 000a 5B6A     	 ldr r3,[r3,#36]
1125:../Dave/Generated/FREERTOS/timers.c ****         }
 2514              	 .loc 1 1125 0
 2515 000c 1846     	 mov r0,r3
 2516 000e 0C37     	 adds r7,r7,#12
 2517              	.LCFI130:
 2518              	 .cfi_def_cfa_offset 4
 2519 0010 BD46     	 mov sp,r7
 2520              	.LCFI131:
 2521              	 .cfi_def_cfa_register 13
 2522              	 
 2523 0012 5DF8047B 	 ldr r7,[sp],#4
 2524              	.LCFI132:
 2525              	 .cfi_restore 7
 2526              	 .cfi_def_cfa_offset 0
 2527 0016 7047     	 bx lr
 2528              	 .cfi_endproc
 2529              	.LFE162:
 2531              	 .section .text.vTimerSetTimerNumber,"ax",%progbits
 2532              	 .align 2
 2533              	 .global vTimerSetTimerNumber
 2534              	 .thumb
 2535              	 .thumb_func
 2537              	vTimerSetTimerNumber:
 2538              	.LFB163:
1126:../Dave/Generated/FREERTOS/timers.c **** 
1127:../Dave/Generated/FREERTOS/timers.c ****     #endif /* configUSE_TRACE_FACILITY */
1128:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1129:../Dave/Generated/FREERTOS/timers.c **** 
1130:../Dave/Generated/FREERTOS/timers.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
1131:../Dave/Generated/FREERTOS/timers.c **** 
1132:../Dave/Generated/FREERTOS/timers.c ****         void vTimerSetTimerNumber( TimerHandle_t xTimer,
1133:../Dave/Generated/FREERTOS/timers.c ****                                    UBaseType_t uxTimerNumber )
1134:../Dave/Generated/FREERTOS/timers.c ****         {
 2539              	 .loc 1 1134 0
 2540              	 .cfi_startproc
 2541              	 
 2542              	 
 2543              	 
 2544 0000 80B4     	 push {r7}
 2545              	.LCFI133:
 2546              	 .cfi_def_cfa_offset 4
 2547              	 .cfi_offset 7,-4
 2548 0002 83B0     	 sub sp,sp,#12
 2549              	.LCFI134:
 2550              	 .cfi_def_cfa_offset 16
 2551 0004 00AF     	 add r7,sp,#0
 2552              	.LCFI135:
 2553              	 .cfi_def_cfa_register 7
 2554 0006 7860     	 str r0,[r7,#4]
 2555 0008 3960     	 str r1,[r7]
1135:../Dave/Generated/FREERTOS/timers.c ****             ( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 2556              	 .loc 1 1135 0
 2557 000a 7B68     	 ldr r3,[r7,#4]
 2558 000c 3A68     	 ldr r2,[r7]
 2559 000e 5A62     	 str r2,[r3,#36]
1136:../Dave/Generated/FREERTOS/timers.c ****         }
 2560              	 .loc 1 1136 0
 2561 0010 0C37     	 adds r7,r7,#12
 2562              	.LCFI136:
 2563              	 .cfi_def_cfa_offset 4
 2564 0012 BD46     	 mov sp,r7
 2565              	.LCFI137:
 2566              	 .cfi_def_cfa_register 13
 2567              	 
 2568 0014 5DF8047B 	 ldr r7,[sp],#4
 2569              	.LCFI138:
 2570              	 .cfi_restore 7
 2571              	 .cfi_def_cfa_offset 0
 2572 0018 7047     	 bx lr
 2573              	 .cfi_endproc
 2574              	.LFE163:
 2576 001a 00BF     	 .section .bss.xLastTime.8013,"aw",%nobits
 2577              	 .align 2
 2580              	xLastTime.8013:
 2581 0000 00000000 	 .space 4
 2582              	 .section .bss.ucStaticTimerQueueStorage.8064,"aw",%nobits
 2583              	 .align 2
 2586              	ucStaticTimerQueueStorage.8064:
 2587 0000 00000000 	 .space 80
 2587      00000000 
 2587      00000000 
 2587      00000000 
 2587      00000000 
 2588              	 .section .bss.xStaticTimerQueue.8063,"aw",%nobits
 2589              	 .align 2
 2592              	xStaticTimerQueue.8063:
 2593 0000 00000000 	 .space 84
 2593      00000000 
 2593      00000000 
 2593      00000000 
 2593      00000000 
 2594              	 .text
 2595              	.Letext0:
 2596              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 2597              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2598              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2599              	 .file 6 "../Dave/Generated/FREERTOS/projdefs.h"
 2600              	 .file 7 "../Dave/Generated/FREERTOS/FreeRTOS.h"
 2601              	 .file 8 "../Dave/Generated/FREERTOS/list.h"
 2602              	 .file 9 "../Dave/Generated/FREERTOS/task.h"
 2603              	 .file 10 "../Dave/Generated/FREERTOS/queue.h"
 2604              	 .file 11 "../Dave/Generated/FREERTOS/timers.h"
 2605              	 .file 12 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/cmsis_gcc.h"
 2606              	 .file 13 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 timers.c
    {standard input}:20     .bss.xActiveTimerList1:00000000 $d
    {standard input}:23     .bss.xActiveTimerList1:00000000 xActiveTimerList1
    {standard input}:26     .bss.xActiveTimerList2:00000000 $d
    {standard input}:29     .bss.xActiveTimerList2:00000000 xActiveTimerList2
    {standard input}:32     .bss.pxCurrentTimerList:00000000 $d
    {standard input}:35     .bss.pxCurrentTimerList:00000000 pxCurrentTimerList
    {standard input}:38     .bss.pxOverflowTimerList:00000000 $d
    {standard input}:41     .bss.pxOverflowTimerList:00000000 pxOverflowTimerList
    {standard input}:44     .bss.xTimerQueue:00000000 $d
    {standard input}:47     .bss.xTimerQueue:00000000 xTimerQueue
    {standard input}:50     .bss.xTimerTaskHandle:00000000 $d
    {standard input}:53     .bss.xTimerTaskHandle:00000000 xTimerTaskHandle
    {standard input}:56     .rodata:00000000 $d
    {standard input}:60     .text.xTimerCreateTimerTask:00000000 $t
    {standard input}:65     .text.xTimerCreateTimerTask:00000000 xTimerCreateTimerTask
    {standard input}:2018   .text.prvCheckForValidListAndQueue:00000000 prvCheckForValidListAndQueue
    {standard input}:175    .text.xTimerCreateTimerTask:00000084 $d
    {standard input}:1159   .text.prvTimerTask:00000000 prvTimerTask
    {standard input}:183    .text.xTimerCreate:00000000 $t
    {standard input}:188    .text.xTimerCreate:00000000 xTimerCreate
    {standard input}:367    .text.prvInitialiseNewTimer:00000000 prvInitialiseNewTimer
    {standard input}:248    .text.xTimerCreateStatic:00000000 $t
    {standard input}:253    .text.xTimerCreateStatic:00000000 xTimerCreateStatic
    {standard input}:363    .text.prvInitialiseNewTimer:00000000 $t
    {standard input}:462    .text.xTimerGenericCommand:00000000 $t
    {standard input}:467    .text.xTimerGenericCommand:00000000 xTimerGenericCommand
    {standard input}:586    .text.xTimerGenericCommand:000000a0 $d
    {standard input}:591    .text.xTimerGetTimerDaemonTaskHandle:00000000 $t
    {standard input}:596    .text.xTimerGetTimerDaemonTaskHandle:00000000 xTimerGetTimerDaemonTaskHandle
    {standard input}:656    .text.xTimerGetTimerDaemonTaskHandle:00000034 $d
    {standard input}:661    .text.xTimerGetPeriod:00000000 $t
    {standard input}:666    .text.xTimerGetPeriod:00000000 xTimerGetPeriod
    {standard input}:730    .text.vTimerSetReloadMode:00000000 $t
    {standard input}:735    .text.vTimerSetReloadMode:00000000 vTimerSetReloadMode
    {standard input}:817    .text.uxTimerGetReloadMode:00000000 $t
    {standard input}:822    .text.uxTimerGetReloadMode:00000000 uxTimerGetReloadMode
    {standard input}:900    .text.xTimerGetExpiryTime:00000000 $t
    {standard input}:905    .text.xTimerGetExpiryTime:00000000 xTimerGetExpiryTime
    {standard input}:972    .text.pcTimerGetName:00000000 $t
    {standard input}:977    .text.pcTimerGetName:00000000 pcTimerGetName
    {standard input}:1041   .text.prvProcessExpiredTimer:00000000 $t
    {standard input}:1045   .text.prvProcessExpiredTimer:00000000 prvProcessExpiredTimer
    {standard input}:1468   .text.prvInsertTimerInActiveList:00000000 prvInsertTimerInActiveList
    {standard input}:1150   .text.prvProcessExpiredTimer:00000094 $d
    {standard input}:1155   .text.prvTimerTask:00000000 $t
    {standard input}:1321   .text.prvGetNextExpireTime:00000000 prvGetNextExpireTime
    {standard input}:1200   .text.prvProcessTimerOrBlockTask:00000000 prvProcessTimerOrBlockTask
    {standard input}:1577   .text.prvProcessReceivedCommands:00000000 prvProcessReceivedCommands
    {standard input}:1196   .text.prvProcessTimerOrBlockTask:00000000 $t
    {standard input}:1400   .text.prvSampleTimeNow:00000000 prvSampleTimeNow
    {standard input}:1310   .text.prvProcessTimerOrBlockTask:00000090 $d
    {standard input}:1317   .text.prvGetNextExpireTime:00000000 $t
    {standard input}:1391   .text.prvGetNextExpireTime:00000044 $d
    {standard input}:1396   .text.prvSampleTimeNow:00000000 $t
    {standard input}:1865   .text.prvSwitchTimerLists:00000000 prvSwitchTimerLists
    {standard input}:1459   .text.prvSampleTimeNow:0000003c $d
    {standard input}:2580   .bss.xLastTime.8013:00000000 xLastTime.8013
    {standard input}:1464   .text.prvInsertTimerInActiveList:00000000 $t
    {standard input}:1567   .text.prvInsertTimerInActiveList:0000007c $d
    {standard input}:1573   .text.prvProcessReceivedCommands:00000000 $t
    {standard input}:1671   .text.prvProcessReceivedCommands:00000078 $d
    {standard input}:1681   .text.prvProcessReceivedCommands:000000a0 $t
    {standard input}:1856   .text.prvProcessReceivedCommands:000001c0 $d
    {standard input}:1861   .text.prvSwitchTimerLists:00000000 $t
    {standard input}:2004   .text.prvSwitchTimerLists:000000bc $d
    {standard input}:2014   .text.prvCheckForValidListAndQueue:00000000 $t
    {standard input}:2092   .text.prvCheckForValidListAndQueue:0000005c $d
    {standard input}:2586   .bss.ucStaticTimerQueueStorage.8064:00000000 ucStaticTimerQueueStorage.8064
    {standard input}:2592   .bss.xStaticTimerQueue.8063:00000000 xStaticTimerQueue.8063
    {standard input}:2104   .text.xTimerIsTimerActive:00000000 $t
    {standard input}:2109   .text.xTimerIsTimerActive:00000000 xTimerIsTimerActive
    {standard input}:2187   .text.pvTimerGetTimerID:00000000 $t
    {standard input}:2192   .text.pvTimerGetTimerID:00000000 pvTimerGetTimerID
    {standard input}:2259   .text.vTimerSetTimerID:00000000 $t
    {standard input}:2264   .text.vTimerSetTimerID:00000000 vTimerSetTimerID
    {standard input}:2329   .text.xTimerPendFunctionCallFromISR:00000000 $t
    {standard input}:2334   .text.xTimerPendFunctionCallFromISR:00000000 xTimerPendFunctionCallFromISR
    {standard input}:2392   .text.xTimerPendFunctionCallFromISR:00000040 $d
    {standard input}:2397   .text.xTimerPendFunctionCall:00000000 $t
    {standard input}:2402   .text.xTimerPendFunctionCall:00000000 xTimerPendFunctionCall
    {standard input}:2483   .text.xTimerPendFunctionCall:0000005c $d
    {standard input}:2488   .text.uxTimerGetTimerNumber:00000000 $t
    {standard input}:2493   .text.uxTimerGetTimerNumber:00000000 uxTimerGetTimerNumber
    {standard input}:2532   .text.vTimerSetTimerNumber:00000000 $t
    {standard input}:2537   .text.vTimerSetTimerNumber:00000000 vTimerSetTimerNumber
    {standard input}:2577   .bss.xLastTime.8013:00000000 $d
    {standard input}:2583   .bss.ucStaticTimerQueueStorage.8064:00000000 $d
    {standard input}:2589   .bss.xStaticTimerQueue.8063:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
vListInitialiseItem
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
vPortEnterCritical
vPortExitCritical
uxListRemove
vTaskSuspendAll
xTaskResumeAll
vQueueWaitForMessageRestricted
xTaskGetTickCount
vListInsert
vPortFree
xQueueReceive
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
