   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_vadc.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_VADC_GROUP_ExternalMuxControlInit,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_VADC_GROUP_ExternalMuxControlInit:
  25              	.LFB191:
  26              	 .file 1 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc/xmc_vadc.h"
   1:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
   2:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @file xmc_vadc.h
   3:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @date 2019-12-02
   4:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
   5:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @cond
   6:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *****************************************************************************
   7:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
   9:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * All rights reserved.
  11:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  12:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  14:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * do so, all subject to the following:
  20:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  21:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * a source language processor.
  27:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  28:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  36:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * at XMCSupport@infineon.com.
  39:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *****************************************************************************
  40:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  41:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Change History
  42:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * --------------
  43:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  44:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-02-15:
  45:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Initial <br>
  46:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  47:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-02-20:
  48:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Revised for XMC1201 device.<br>
  49:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  50:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-04-27:
  51:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for SHS.<br>
  52:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added New APIs for trigger edge selection.<BR>
  53:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  54:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  55:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  56:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-06-20:
  57:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  58:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-06-25:
  59:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - BFL configuration in channel initialization fixed.
  60:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  61:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-07-28:
  62:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - CLOCK_GATING_SUPPORTED and PERIPHERAL_RESET_SUPPORTED macros used
  63:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC13 XMC12 and XMC14
  64:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC44 XMC47 and XMC48
  65:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  66:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GLOBAL_SetIndividualBoundary
  67:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetIndividualBoundary
  68:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetAlias
  69:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetInputClass
  70:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelSetIclass
  71:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetResultAlignment
  72:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetInputClass
  73:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetResultSubtractionValue
  74:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  75:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  76:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added:
  77:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC4300 device supported
  78:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  79:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed:
  80:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_TriggerEvent API updated. OR operation removed.
  81:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_ClearEvent API updated. Multiple events triggering on clearing the event i
  82:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Wrong MACRO name defined in xmc_vadc_map.h file corrected for XMC4200/4100 devices.
  83:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *       XMC_VADC_G3_SAMPLE renamed to XMC_VADC_G1_SAMPLE
  84:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  85:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  86:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  87:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled
  88:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled
  89:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the analog calibration voltage for XMC1100 to external reference upper supply range.
  90:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the XMC_VADC_GLOBAL_StartupCalibration() for XMC1100.
  91:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  92:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-03-09:
  93:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Optimization of write only registers
  94:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  95:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-03-18:
  96:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_IsConverterReady(): API checks the STEPCFG register for the read
  97:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *       SHSCFG SFR.
  98:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  99:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-06-17:
 100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New macros added XMC_VADC_SHS_FULL_SET_REG, XMC_VADC_RESULT_PRIORITY_AVAILABLE
 101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New Enum added XMC_VADC_SHS_GAIN_LEVEL_t and XMC_VADC_SYNCTR_EVAL_t
 102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs added are:
 103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetSyncSlaveReadySignal
 104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetAssertedEvents
 105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetAssertedResultEvents
 106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetResultRegPriority
 107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetSyncReadySignal
 108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetSyncReadySignal
 109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetResultRegPriority
 110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2017-02-06:
 112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new functions to remove channels from background request source, XMC_VADC_GLOBAL_Bac
 113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2017-06-24:
 115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new function XMC_VADC_GLOBAL_SHS_SetAnalogReference() for XMC1 family
 116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2017-08-14:
 118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added XMC_VADC_GLOBAL_DETAILED_RESULT_t
 119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *       You can cast the return of XMC_VADC_GLOBAL_GetDetailedResult() to a varible of type XMC_VA
 120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_SetAnalogReference() to update AREF bitfield correctly
 121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2019-03-30:
 123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Changed XMC_VADC_GROUP_SetChannelAlias() to inline function
 124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added XMC_VADC_GROUP_GetChannelAlias()
 125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2019-12-02:
 127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fix including files following the convention: angle brackets are used for standard include
 128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2020-09-03:
 130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added XMC_VADC_GROUP_GetPowerMode()
 131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
 132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2020-11-11:
 133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_SetAnalogReference() and XMC_VADC_GROUP_SetChannelAlias()
 134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
 135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @endcond
 136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #ifndef XMC_VADC_H
 140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_H
 141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * HEADER FILES
 144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #include "xmc_common.h"
 146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #include "xmc_scu.h"
 147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #include "xmc_vadc_map.h"
 148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @addtogroup XMClib XMC Peripheral Library
 151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @{
 152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @addtogroup VADC
 156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @brief Versatile Analog to Digital Converter (VADC) driver for XMC microcontroller family.
 157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The XMC microcontroller provides a series of analog input channels connected to a cluster of Ana
 159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Converters using the Successive Approximation Register (SAR) principle to convert analog input v
 160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * to discrete digital values.
 161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \if XMC1
 162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The XMC1x is based on Sample & Hold converters, where a cluster contains 2 Sample&Hold units whi
 163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter.
 164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \endif
 165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each converter of the ADC cluster can operate independent of the others, controlled by a dedicat
 167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * registers and triggered by a dedicated group request source. The results of each channel can be 
 168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * dedicated channel-specific result register or in a group-specific result register.<BR>
 169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The Versatile Analog to Digital Converter module (VADC) of the XMC comprises a set of converter 
 171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * can be operated either independently or via a common request source that emulates a background c
 172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each converter block is equipped with a dedicated input multiplexer and dedicated request source
 173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * which together build separate groups.
 174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \if XMC4
 176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc4x.png"
 177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \else
 178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc1x.png"
 179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \endif
 180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The VADC LLD is split into GLOBAL and GROUP related APIs.<BR>
 182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <B>GLOBAL: </B><BR>
 183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <UL>
 184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Global APIs act on the entire ADC module. Configures global configuration registers</LI>
 185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Allows configuration of the background request source of the VADC.</LI>
 186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The clock related configurations for the VADC module are configured in the Global APIs/</LI>
 187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The Global API names are prefixed by the \b XMC_VADC_GLOBAL_ and they accept ::XMC_VADC_GLOB
 188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the background request source of the VADC. The APIs which act on the background r
 190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_Background</LI>
 191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the sample and hold unit of the VADC. The APIs which act on the SHS related regis
 192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_SHS_</LI>
 193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <B>GROUP: </B><BR>
 196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <UL>
 197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Group APIs act on a VADC group. Configures the group configuration registers</LI>
 198:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the queue request source of the VADC. The APIs which act on the queue related reg
 199:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Queue</LI>
 200:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the scan request source of the VADC. The APIs which act on the scan related regis
 201:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Scan</LI>
 202:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configuration of the channels of each group are done by the API which have a prefix as
 203:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     \b XMC_VADC_GROUP_Channel.</LI>
 204:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The Group API names are prefixed by the \b XMC_VADC_GROUP_ and they accept ::XMC_VADC_GROUP_
 205:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 206:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 207:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @{
 208:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 209:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 210:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 211:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * MACROS
 212:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 213:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 214:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if ((UC_SERIES == XMC42)||(UC_SERIES == XMC41) || (UC_SERIES == XMC43))
 215:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE           (1U) /*  Defines the availability of group resource in a
 216:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE           (1U) /*  Defines the availability of scan request resour
 217:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE           (1U) /*  Defines the availability of queue request resou
 218:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE            (1U) /*  Defines the availability of external multiplexe
 219:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 220:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE        (1U) /*  Defines the availability of boundary check supp
 221:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS      (1U) /*  Defines the availability of synchronous request
 222:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS        (2U) /*  Defines the maximum number of groups available 
 223:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT      (1U) /*  Defines the availability of boundary flags in a
 224:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE         (1U) /*  Defines the external multiplexer channel select
 225:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 226:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE             (0U) /* Defines the availability of sample and hold modu
 227:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG          (0U) /* Defines the availability of sample and hold modu
 228:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE    (1U) /* Define the availability of a source specific res
 229:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 230:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 231:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 232:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC44 || UC_SERIES == XMC47 || UC_SERIES == XMC48)
 233:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 234:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 235:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 236:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 237:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 238:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 239:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 240:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 241:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 242:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 243:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 244:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 245:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 246:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 247:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 248:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 249:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 250:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC45)
 251:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 252:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 253:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 254:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 255:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 256:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 257:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 258:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 259:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 260:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 261:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 262:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 263:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 264:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 265:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 266:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 267:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 268:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC14 || UC_SERIES == XMC13 || UC_SERIES == XMC12)
 269:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 270:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 271:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 272:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 273:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 274:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 275:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 276:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 277:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 278:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 279:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 280:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 281:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (1U) /* Defines the availability of sample and hold module
 282:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 283:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (1U) /* Define the availability of a priority for result
 284:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 285:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 286:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC11)
 287:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (0U) /*  Defines the availability of group resource in a d
 288:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (0U) /*  Defines the availability of scan request resource
 289:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (0U) /*  Defines the availability of queue request resourc
 290:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (0U) /*  Defines the availability of external multiplexer 
 291:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 292:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (0U) /*  Defines the availability of boundary check suppor
 293:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (0U) /*  Defines the availability of synchronous request s
 294:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 295:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 296:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_START_UP_CAL_ACTIVE (3U) /*  Defines the need for SHS startup calibration acti
 297:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 devices */
 298:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_CONV_ENABLE_FOR_XMC11   (*(uint32_t*) 0x40010500UL) /*  Defines the additional err
 299:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 device for effective working*/
 300:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 301:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 302:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 303:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 304:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 305:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 306:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 307:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 308:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_PORTS               (16U) /* Defines the number of hardware ports that can be 
 309:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     as triggers and gating signals */
 310:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 311:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_RESULT_REGISTERS    (16U) /* Defines the number of result holding registers pe
 312:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 313:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_CHANNELS_PER_GROUP  (8U)  /**< Defines the number of ADC channels per group */
 314:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 315:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 316:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * ENUMS
 317:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 318:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef uint16_t XMC_VADC_RESULT_SIZE_t; /**< Type defined the converted result size to unsigned 16
 319:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef VADC_GLOBAL_TypeDef XMC_VADC_GLOBAL_t; /**< Type defined the device header file vadc global
 320:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                              type to VADC type*/
 321:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 322:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_AVAILABLE == 1U)
 323:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef VADC_G_TypeDef XMC_VADC_GROUP_t; /**< Type defined the device header file vadc group regist
 324:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                              type to VADC Group type*/
 325:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 326:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 327:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 328:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef SHS_Type XMC_VADC_GLOBAL_SHS_t; /**< Type defined the sample and hold register structure*/
 329:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 330:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 331:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the return status after execution of VADC specific API's. Use @ref XMC_VADC_STATUS_t fo
 332:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 333:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STATUS
 334:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 335:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_SUCCESS = 0,   /**< Returned when the API has been able to fulfill the callers re
 336:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_ERROR          /**< Returned when the API cannot fulfill the request */
 337:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STATUS_t;
 338:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 339:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 340:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the various service requests lines. Each group can raise up to 4 service requests indep
 341:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  all groups together have the possibility of raising 4 module wide service requests. Use @ref XM
 342:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 343:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 344:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SR
 345:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 346:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR0 = 0, /**< Group specific Service Request-0 */
 347:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR1,     /**< Group specific Service Request-1 */
 348:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR2,     /**< Group specific Service Request-2 */
 349:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR3,     /**< Group specific Service Request-3 */
 350:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR0,    /**< Module Wide Common Service Request-0 */
 351:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR1,    /**< Module Wide Common Service Request-1 */
 352:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR2,    /**< Module Wide Common Service Request-2 */
 353:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR3    /**< Module Wide Common Service Request-3 */
 354:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SR_t;
 355:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 356:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 357:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the mode of operation of a channel, when an ongoing conversion gets interrupted in betw
 358:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_STARTMODE_t for this enumeration.
 359:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 360:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STARTMODE
 361:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 362:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_WFS = 0, /**< An ongoing conversion completes without interruption */
 363:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CIR,     /**< An ongoing conversion can be interrupted and resumed later*/
 364:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CNR     /**< An ongoing conversion can be interrupted and never resumed */
 365:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STARTMODE_t;
 366:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 367:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 368:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the edge sensitivity of the trigger signal which can assert a conversion.
 369:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_EDGE_t for this enumeration.
 370:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 371:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_EDGE
 372:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 373:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_NONE = 0, /**< No external trigger. Conversion request can be asserted by s
 374:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_FALLING,  /**< The falling edge of the external trigger can assert conversi
 375:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_RISING,   /**< The rising edge of the external trigger can assert conversio
 376:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_ANY       /**< Both the edges can assert conversion request */
 377:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_EDGE_t;
 378:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 379:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 380:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the external trigger input selection possibilities, to assert a conversion. Refer the V
 381:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  section of the reference manual for details of peripherals which can be used. Also refer xmc_va
 382:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  detailed definitions of the peripherals which can take the control of these enumeration items.
 383:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_INPUT_SELECT_t for this enumeration.
 384:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 385:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_INPUT_SELECT
 386:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 387:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_A = 0, /**< Trigger select signal A */
 388:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_B,     /**< Trigger select signal B */
 389:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_C,     /**< Trigger select signal C */
 390:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_D,     /**< Trigger select signal D */
 391:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_E,     /**< Trigger select signal E */
 392:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_F,     /**< Trigger select signal F */
 393:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_G,     /**< Trigger select signal G */
 394:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_H,     /**< Trigger select signal H */
 395:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_I,     /**< Trigger select signal I */
 396:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_J,     /**< Trigger select signal J */
 397:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_K,     /**< Trigger select signal K */
 398:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_L,     /**< Trigger select signal L */
 399:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_M,     /**< Trigger select signal M */
 400:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_N,     /**< Trigger select signal N */
 401:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_O,     /**< Trigger select signal O */
 402:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_P      /**< Trigger select signal P */
 403:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 404:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_INPUT_SELECT_t;
 405:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 406:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 407:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the external gating input selection possibilities, to gate the conversion requests. Ref
 408:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  interconnects section of the reference manual for details of peripherals which can be used. Als
 409:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  xmc_vadc_map.h file for detailed definitions of the peripherals which can take the control of t
 410:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  items. Use @ref XMC_VADC_GATE_INPUT_SELECT_t for this enumeration.
 411:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 412:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATE_INPUT_SELECT
 413:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 414:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_A = 0, /**< Gating select signal A */
 415:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_B,     /**< Gating select signal B */
 416:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_C,     /**< Gating select signal C */
 417:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_D,     /**< Gating select signal D */
 418:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_E,     /**< Gating select signal E */
 419:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_F,     /**< Gating select signal F */
 420:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_G,     /**< Gating select signal G */
 421:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_H,     /**< Gating select signal H */
 422:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_I,     /**< Gating select signal I */
 423:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_J,     /**< Gating select signal J */
 424:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_K,     /**< Gating select signal K */
 425:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_L,     /**< Gating select signal L */
 426:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_M,     /**< Gating select signal M */
 427:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_N,     /**< Gating select signal N */
 428:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_O,     /**< Gating select signal O */
 429:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_P      /**< Gating select signal P */
 430:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 431:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATE_INPUT_SELECT_t;
 432:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 433:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 434:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the condition for gating the conversion requests. It can be used to set the ENGT field
 435:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * of ASMR/BSMR/QMR register respectively for auto_scan/background_scan/queue request sources.
 436:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_GATEMODE_t for this enumeration.
 437:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 438:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATEMODE
 439:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 440:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_BLOCK = 0,  /**< External triggers are permanently blocked */
 441:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_IGNORE,     /**< External triggers are unconditionally passed */
 442:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVEHIGH, /**< External trigger is passed only if the gate signal is high */
 443:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVELOW  /**< External trigger is passed only if the gate signal is low */
 444:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATEMODE_t;
 445:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 446:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 447:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion result handling mode. Use @ref XMC_VADC_DMM_t for this enumeration.
 448:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 449:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_DMM
 450:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 451:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_REDUCTION_MODE = 0, /**< Standard Data reduction mode*/
 452:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_FILTERING_MODE,     /**< Provide option to select Finite Impulse Response Filter (FI
 453:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                         Infinite Impulse Response Filter (IIR)*/
 454:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_DIFFERENCE_MODE,    /**< Difference mode is selected*/
 455:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_DMM_t;
 456:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 457:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 458:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the conversion mode. It defines the resolution of conversion. Use XMC_VADC_CONVMODE_t f
 459:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 460:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CONVMODE
 461:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 462:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_12BIT       = 0,  /**< Results of conversion are 12bits wide */
 463:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_10BIT       = 1,  /**< Results of conversion are 10bits wide */
 464:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_8BIT        = 2,  /**< Results of conversion are 8bits wide */
 465:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_FASTCOMPARE = 5  /**< Input signal compared with a preset range */
 466:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CONVMODE_t;
 467:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 468:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 469:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the output of a fast compare mode. Use @ref XMC_VADC_FAST_COMPARE_t for
 470:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  this enumeration.
 471:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 472:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_FAST_COMPARE
 473:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 474:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_LOW = 0, /**< Input lower than than programmed reference */
 475:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_HIGH,    /**< Input higher than than programmed reference */
 476:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_UNKNOWN  /**< Unknown, Conversion probably still ongoing */
 477:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_FAST_COMPARE_t;
 478:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 479:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 480:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the type of scan request source to be used. It can choose between auto scan and backgrou
 481:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * source methods. Use @ref XMC_VADC_SCAN_TYPE_t for this enumeration.
 482:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 483:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_TYPE
 484:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 485:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_GROUPSCAN = 0, /**< Auto scan mode of operation selected. Also called as Group
 486:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_BACKGROUND    /**< Background scan mode of operation selected. Also called as 
 487:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_TYPE_t;
 488:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 489:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 490:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the behavior of load event for the scan request source. Use @ref XMC_VADC_SCAN_LOAD_t fo
 491:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 492:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_LOAD
 493:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 494:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_OVERWRITE = 0, /**< The old set of channels is discarded in favor of the new s
 495:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                          awaiting conversion */
 496:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_COMBINE       /**< The new set of channels are combined with the pending chann
 497:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                          previous set */
 498:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_LOAD_t;
 499:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 500:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 501:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion classes that can be selected for each channel. The enumeration members ho
 502:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * global classes. The conversion classes decides the properties of conversion, like resolution, sa
 503:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_CHANNEL_CONV_t for this enumeration.
 504:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 505:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 506:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_CONV
 507:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 508:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 = 0, /**< Conversion property set-0 specific to the group */
 509:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS1,     /**< Conversion property set-1 specific to the group */
 510:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS0,    /**< Conversion property set-0, Module wide */
 511:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1    /**< Conversion property set-1, Module wide */
 512:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONV_t;
 513:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 514:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 515:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the references to boundary values used for limit checking feature. Each of these can be 
 516:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * either an upper bound or a lower bound. Use @ref XMC_VADC_CHANNEL_BOUNDARY_t for this enumeratio
 517:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 518:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 519:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY
 520:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 521:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 = 0, /**< Group specific Boundary-0 value */
 522:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1,     /**< Group specific Boundary-1 value */
 523:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0,    /**< Module wide Boundary-0 value */
 524:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1    /**< Module wide Boundary-1 value */
 525:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_t;
 526:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 527:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 528:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the voltage which the capacitor is charged to. Used in Broken wire detection feature. Us
 529:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @ref XMC_VADC_CHANNEL_BWDCH_t for this enumeration.
 530:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 531:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BWDCH
 532:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 533:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAGND = 0, /**< Capacitor pre-charged to ground*/
 534:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAREF     /**< Capacitor pre-charged to reference voltage*/
 535:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BWDCH_t;
 536:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 537:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 538:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Defines the criteria for event generation by the channel. Use @ref XMC_VADC_CHANNEL_EVGEN_t fo
 539:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 540:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_EVGEN
 541:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 542:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_NEVER     = 0,  /**< No event generated */
 543:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_INBOUND   = 1U, /**< Event generated when the result is within the normal 
 544:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPHIGH  = 1U, /**< Event generated when the result of fast compare opera
 545:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_OUTBOUND  = 2U, /**< Event generated when the result is outside the normal
 546:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPLOW   = 2U, /**< Event generated when the result result of fast compar
 547:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_ALWAYS    = 3U /**< Event generated always after conversion - unconditiona
 548:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_EVGEN_t;
 549:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 550:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 551:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the reference voltage selection for conversion. Use @ref XMC_VADC_CHANNEL_REF_t for this
 552:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 553:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_REF
 554:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 555:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_INTREF = 0, /**< Internal VARef */
 556:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_ALT_CH0    /**< External voltage available on Channel-0 of the perticular gr
 557:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_REF_t;
 558:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 559:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 560:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the criteria for boundary flag assertion. Use @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t
 561:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 562:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 563:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY_CONDITION
 564:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 565:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_ABOVE_BAND = 0, /**< Set Boundary condition criteria to asser
 566:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_BELOW_BAND     /**< Set Boundary condition criteria to assert
 567:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t;
 568:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 569:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 570:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the event which can lead to a global service request assertion. Use @ref XMC_VADC_GLOBAL
 571:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 572:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 573:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_EVENT
 574:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 575:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE = VADC_GLOBEFLAG_SEVGLB_Msk, /**< Background scan request sourc
 576:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_RESULT      = VADC_GLOBEFLAG_REVGLB_Msk  /**< Global result event */
 577:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_EVENT_t;
 578:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 579:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 580:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the power modes of a VADC Group. Use @ref XMC_VADC_GROUP_POWERMODE_t for this enumeratio
 581:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 582:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_POWERMODE
 583:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 584:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_OFF       = 0, /**< Group is powered down */
 585:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED1,     /**< Reserved */
 586:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED2,     /**< Reserved */
 587:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_NORMAL        /**< Group is powered up */
 588:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_POWERMODE_t;
 589:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 590:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 591:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the status of a VADC group (also known as kernel). Use @ref XMC_VADC_GROUP_STATE_t for 
 592:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 593:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_STATE
 594:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 595:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_IDLE = 0, /**< Idle and can convert if requested */
 596:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_BUSY      /**< Busy with an ongoing conversion */
 597:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_STATE_t;
 598:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 599:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 600:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the reference to sample time and conversion mode settings. Use @ref XMC_VADC_GROUP_CONV
 601:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 602:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 603:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_CONV
 604:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 605:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_STD = 0, /**< Settings pertaining to channels directly attached to VADC modul
 606:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_EMUX    /**< Settings pertaining to channels connected to VADC via EMUX */
 607:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONV_t;
 608:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 609:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 610:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbiter behavior. Use @ref XMC_VADC_GROUP_ARBMODE_t for this enumera
 611:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 612:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_ARBMODE
 613:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 614:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ALWAYS = 0, /**< Arbiter runs all the time */
 615:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ONDEMAND    /**< Arbiter runs only if a conversion request is asserted by 
 616:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                           request sources */
 617:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_ARBMODE_t;
 618:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 619:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 620:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX mode of operation. Use @ref XMC_VADC_GROUP_EMUXMODE_t for this enumeration.
 621:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 622:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXMODE
 623:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 624:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SWCTRL = 0,     /**< Perform EMUX in Software control mode*/
 625:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_STEADYMODE,     /**< Perform EMUX in Steady mode (Use EMUX set value)*/
 626:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SINGLEMODE,     /**< Perform EMUX in Single step mode*/
 627:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SEQUENCEMODE,   /**< Perform EMUX in Sequence mode*/
 628:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXMODE_t;
 629:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 630:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 631:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX channel selection encoding scheme. Use @ref XMC_VADC_GROUP_EMUXCODE_t for this
 632:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 633:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXCODE
 634:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 635:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_BINARY = 0, /**< A linearly incrementing code serves are MUX-SEL */
 636:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_GRAY       /**< The MUX-SEL is gray encoded */
 637:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCODE_t;
 638:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 639:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 640:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the service request set used. Use @ref XMC_VADC_GROUP_IRQ_t for this enumeration.
 641:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 642:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_IRQ
 643:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 644:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_KERNEL = 0, /**< Refers to Group specific service request */
 645:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_SHARED     /**< Refers to Module wide service request */
 646:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_IRQ_t;
 647:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 648:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 649:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the alignment of the converted result. Use @ref XMC_VADC_RESULT_ALIGN_t for this enumer
 650:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 651:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_ALIGN
 652:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 653:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_LEFT = 0,  /**< Always align result to left */
 654:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_RIGHT      /**< Always align result to right */
 655:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_ALIGN_t;
 656:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 657:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_SUBTRATION
 658:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 659:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_LEFT_ALIGN  = 0U,  /**< Always align result to left */
 660:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 661:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_LEFT_ALIGN  = 2U,  /**< Always align result to left */
 662:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 663:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_LEFT_ALIGN   = 4U,  /**< Always align result to left */
 664:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_RIGHT_ALIGN  = 0U,  /**< Always align result to right */
 665:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_SUBTRATION_t;
 666:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 667:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 668:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbitration priority. Use @ref XMC_VADC_GROUP_RS_PRIORITY_t for this
 669:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 670:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_RS_PRIORITY
 671:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 672:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_RS_PRIORITY_0 = 0, /**< Lowest priority for the request source*/
 673:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_RS_PRIORITY_1,     /**< Second lowest priority for the request source*/
 674:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_RS_PRIORITY_2,     /**< Second highest priority for the request source*/
 675:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_RS_PRIORITY_3,     /**< Highest priority for the request source*/
 676:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_RS_PRIORITY_t;
 677:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 678:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 679:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the various modes for the boundary flag. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t f
 680:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 681:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_BOUNDARY_FLAG_MODE
 682:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 683:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_DISABLED = 0,       /**< Disable boundary flag*/
 684:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED,            /**< Always enable boundary*/
 685:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_LOW, /**< Enable boundary flag when gate level i
 686:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_HIGH /**< Enable boundary flag when gate level i
 687:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t;
 688:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 689:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 690:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 691:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the boundary select for Channel. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t for this 
 692:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 693:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_SELECT
 694:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 695:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_LOWER_BOUND = 0U,       /**< Select the lower boundary*/
 696:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_UPPER_BOUND = 2U        /**< Selects the upper boundary*/
 697:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_BOUNDARY_SELECT_t;
 698:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 699:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 700:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 701:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the group indices. Use @ref XMC_VADC_GROUP_INDEX_t for this enumeration.
 702:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 703:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_INDEX
 704:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 705:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_INDEX_0   = 0,
 706:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_INDEX_1,
 707:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
 708:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_INDEX_2,
 709:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_INDEX_3
 710:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 711:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_INDEX_t;
 712:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 713:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 714:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** * Defines channel alias.
 715:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** * All enum items are available for channels 0 and 1. Other Channels can accept only XMC_VADC_CHANNE
 716:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** */
 717:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_ALIAS
 718:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 719:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_DISABLED = -1,
 720:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH0 = 0,
 721:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH1 = 1,
 722:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH2 = 2,
 723:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH3 = 3,
 724:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH4 = 4,
 725:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH5 = 5,
 726:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH6 = 6,
 727:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH7 = 7
 728:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_ALIAS_t;
 729:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 730:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 731:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 732:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 733:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selection of the reference voltage that is required for conversions (VREF).
 734:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 735:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_AREF
 736:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 737:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_EXTERNAL_VDD_UPPER_RANGE = 0 << SHS_SHSCFG_AREF_Pos, /**< External refer
 738:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_INTERNAL_VDD_UPPER_RANGE = 2 << SHS_SHSCFG_AREF_Pos, /**< Internal refer
 739:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_INTERNAL_VDD_LOWER_RANGE = 3 << SHS_SHSCFG_AREF_Pos, /**< Internal refer
 740:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_SHS_AREF_t;
 741:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 742:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 743:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 744:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the gain calibration selection.
 745:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 746:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_GAIN_LEVEL
 747:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 748:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_0 = SHS_CALOC0_CALOFFVAL0_Pos, /**< Select the calibration value for gain
 749:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_1 = SHS_CALOC0_CALOFFVAL1_Pos, /**< Select the calibration value for gain
 750:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_2 = SHS_CALOC0_CALOFFVAL2_Pos, /**< Select the calibration value for gain
 751:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_3 = SHS_CALOC0_CALOFFVAL3_Pos  /**< Select the calibration value for gain
 752:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SHS_GAIN_LEVEL_t;
 753:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 754:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 755:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 756:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the Delta sigma loop.
 757:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 758:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_LOOP_CH
 759:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 760:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_0 = SHS_LOOP_LPCH0_Pos, /**< Select Delta-sigma loop 0*/
 761:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_1 = SHS_LOOP_LPCH1_Pos /**< Select Delta-sigma loop 1*/
 762:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SHS_LOOP_CH_t;
 763:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 764:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 765:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Provides the order in which the SHS should do the calibration
 766:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 767:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER
 768:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 769:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_POST_CONV = 0, /**< Calibration occur after conversion take
 770:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_PRE_CONV   /**< Calibration occur before conversion takes p
 771:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t;
 772:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 773:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 774:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 775:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 776:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Provides possible routing values for the boundary flag.
 777:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 778:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_NODE
 779:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 780:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_0 = 0U, /**<Route the Group boundary flag to Common b
 781:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_1,      /**<Route the Group boundary flag to Common b
 782:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_2,      /**<Route the Group boundary flag to Common b
 783:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_3,      /**<Route the Group boundary flag to Common b
 784:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_0,  /**<Route the Group boundary flag to Common Service Req
 785:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_1,  /**<Route the Group boundary flag to Common Service Req
 786:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_2,  /**<Route the Group boundary flag to Common Service Req
 787:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_3   /**<Route the Group boundary flag to Common Service Req
 788:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_BOUNDARY_NODE_t;
 789:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 790:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 791:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 792:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 793:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the ready signal selection
 794:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 795:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SYNCTR_EVAL
 796:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 797:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_1 = VADC_G_SYNCTR_EVALR1_Msk, /**<Mask to set the EVAL1 bits of SYNCTR */
 798:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
 799:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_2 = VADC_G_SYNCTR_EVALR2_Msk, /**<Mask to set the EVAL2 bits of SYNCTR */
 800:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_3 = VADC_G_SYNCTR_EVALR3_Msk  /**<Mask to set the EVAL3 bits of SYNCTR */
 801:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 802:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SYNCTR_EVAL_t;
 803:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 804:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 805:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * DATA STRUCTURES
 806:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 807:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard start*/
 808:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
 809:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #pragma push
 810:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #pragma anon_unions
 811:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
 812:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #pragma warning 586
 813:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 814:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 815:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 816:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC scan request source. Use type @ref XMC_VADC_SCAN_CONFIG_t for t
 817:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 818:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_SCAN_CONFIG
 819:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 820:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request s
 821:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how scan request source would
 822:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 823:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter. If the Conversion s
 824:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                          selected as Cancel inject repeat/Never mode then this fiel
 825:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                          priority of scan request source. Uses @ref XMC_VADC_GROUP_
 826:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 827:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 828:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 829:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 830:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 831:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t src_specific_result_reg : 4;  /**< Use any one Group related result register as the 
 832:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 833:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 834:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 835:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 4;
 836:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 837:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 4;
 838:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigger. U
 839:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_INPUT_SELECT_t enumeration*/
 840:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 1;
 841:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal. Uses @ref
 842:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_EDGE_t */
 843:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 1;
 844:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating. Us
 845:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_GATE_INPUT_SELECT_t */
 846:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 8;
 847:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t timer_mode              : 1;  /**< Decides whether timer mode for equi-distant sampl
 848:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       activated or not.*/
 849:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 3;
 850:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 851:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t asctrl;
 852:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
 853:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 854:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 855:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 856:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 857:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                    : 2;
 858:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t external_trigger   : 1;  /**< Conversions be initiated by external hardware trigger 
 859:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t req_src_interrupt  : 1;  /**< Request source event can be generated after a conversi
 860:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_auto_scan   : 1;  /**< Enables the continuous conversion mode. Conversion com
 861:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  of the last channel in a scan sequence will cause 
 862:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t load_mode          : 1;  /**< Selects load event mode. Uses @ref XMC_VADC_SCAN_LOAD_
 863:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                    : 26;
 864:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 865:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t asmr;
 866:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
 867:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_CONFIG_t;
 868:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 869:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 870:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef XMC_VADC_SCAN_CONFIG_t XMC_VADC_BACKGROUND_CONFIG_t; /**< Type defined the scan configurati
 871:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                  structure for background Request S
 872:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 873:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 874:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC channel. Use type XMC_VADC_CHANNEL_CONFIG_t for this enumeratio
 875:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 876:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_CHANNEL_CONFIG
 877:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 878:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 879:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 880:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 881:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 882:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t input_class                : 2;  /**< Input conversion class selection.
 883:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_CONV_t */
 884:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                            : 2;
 885:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t lower_boundary_select      : 2;  /**< Which boundary register serves as lower bound?
 886:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 887:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t upper_boundary_select      : 2;  /**< Which boundary register serves as upper bound?
 888:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 889:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t event_gen_criteria         : 2;  /**< When should an event be generated?
 890:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_EVGEN_t */
 891:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sync_conversion            : 1;  /**< Enables synchronous conversion for the configu
 892:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t alternate_reference        : 1;  /**< Input reference voltage selection either VARef
 893:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_REF_t*/
 894:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                            : 4;
 895:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result_reg_number          : 4;  /**< Group result register number */
 896:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t use_global_result          : 1;  /**< Use global result register for background requ
 897:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result_alignment           : 1;  /**< Alignment of the results read in the result re
 898:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_RESULT_ALIGN_t */
 899:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                            : 6;
 900:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t broken_wire_detect_channel : 2;  /**< Source to be used to charge the capacitor for 
 901:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BWDCH_t. */
 902:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t broken_wire_detect         : 1;  /**< Configures extra phase before the capacitor is
 903:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 904:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t chctr;
 905:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
 906:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 907:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 908:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 909:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 910:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 8;
 911:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 912:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t flag_output_condition_ch0 : 1; /**< Condition for which the boundary flag should cha
 913:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                        Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITIO
 914:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t flag_output_condition_ch1 : 1; /**< Condition for which the boundary flag should cha
 915:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 916:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t flag_output_condition_ch2 : 1; /**< Condition for which the boundary flag should cha
 917:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 918:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t flag_output_condition_ch3 : 1; /**< Condition for which the boundary flag should cha
 919:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 920:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 921:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 4;
 922:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 923:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 4;
 924:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 925:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t invert_boundary_flag_ch0  : 1; /**< Inverts boundary flag output.*/
 926:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t invert_boundary_flag_ch1  : 1; /**< Inverts boundary flag output.*/
 927:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t invert_boundary_flag_ch2  : 1; /**< Inverts boundary flag output.*/
 928:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t invert_boundary_flag_ch3  : 1; /**< Inverts boundary flag output.*/
 929:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 930:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 931:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_output_ch0  : 1; /**< Enable the boundary flag output on the specific 
 932:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_output_ch1  : 1; /**< Enable the boundary flag output on the specific 
 933:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_output_ch2  : 1; /**< Enable the boundary flag output on the specific 
 934:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_output_ch3  : 1; /**< Enable the boundary flag output on the specific 
 935:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 936:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 12;
 937:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 938:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t bfl;
 939:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
 940:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 941:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 942:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 943:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 944:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 945:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_mode_ch0    : 4; /**< Specify the basic operation of boundary flag 0
 946:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 947:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_mode_ch1    : 4; /**< Specify the basic operation of boundary flag 1
 948:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 949:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_mode_ch2    : 4; /**< Specify the basic operation of boundary flag 2
 950:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 951:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary_flag_mode_ch3    : 4; /**< Specify the basic operation of boundary flag 3
 952:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 953:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 16;
 954:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 955:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t bflc;
 956:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
 957:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 958:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   bool    channel_priority;  /**< Only non priority channels can be converted by Background Request
 959:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   int8_t  alias_channel;     /**< Specifies the channel which has to be aliased with CH0/CH1 (which
 960:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                     Force the value to \b(int8_t)-1 to bypass alias feature.
 961:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                     Uses @ref XMC_VADC_CHANNEL_ALIAS_t  for configuration.*/
 962:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONFIG_t;
 963:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 964:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 965:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize a queue entry. Use type @ref XMC_VADC_QUEUE_ENTRY_t.
 966:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 967:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_ENTRY
 968:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 969:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 970:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 971:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 972:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 973:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_num        : 5;  /**< Channel number associated with this queue entry.<BR>Ra
 974:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t refill_needed      : 1;  /**< Conversion completed channel gets inserted back into t
 975:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t generate_interrupt : 1;  /**< Generates a queue request source event */
 976:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t external_trigger   : 1;  /**< Conversion requests are raised on an external trigger.
 977:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                    : 24;
 978:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 979:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 980:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t qinr0;
 981:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
 982:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_ENTRY_t;
 983:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
 984:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 985:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing a VADC queue request source. Use type @ref XMC_VADC_QUEUE_CONFIG_t.
 986:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 987:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_CONFIG
 988:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 989:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request s
 990:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how queue request source woul
 991:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 992:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter.Uses @ref XMC_VADC_G
 993:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
 994:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
 995:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
 996:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 997:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 998:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t src_specific_result_reg : 4;  /**< Uses any one Group related result register as the
 999:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
1000:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
1001:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1002:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 4;
1003:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1004:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 4;
1005:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigger.
1006:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_INPUT_SELECT_t */
1007:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 1;
1008:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal.
1009:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_EDGE_t */
1010:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 1;
1011:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating.
1012:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GATE_INPUT_SELECT_t */
1013:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 8;
1014:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t timer_mode              : 1;  /**< Timer mode for equi-distant sampling shall be act
1015:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 3;
1016:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1017:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t qctrl0;
1018:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1019:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1020:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1021:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1022:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1023:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                   : 2;
1024:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t external_trigger  : 1;  /**< Are external triggers supported? */
1025:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                   : 29;
1026:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1027:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t qmr0;
1028:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1029:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_CONFIG_t;
1030:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1031:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1032:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1033:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the global input class configuration. Configured parameters are sample 
1034:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
1035:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1036:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLASS
1037:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1038:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1039:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1040:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1041:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1042:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly connect
1043:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1044:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 3;
1045:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly con
1046:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1047:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 5;
1048:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
1049:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected via EM
1050:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1051:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 3;
1052:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connected vi
1053:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1054:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 5;
1055:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1056:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 16;
1057:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1058:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1059:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t globiclass;
1060:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1061:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLASS_t;
1062:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1063:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1064:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1065:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize converter and arbiter clock configuration
1066:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1067:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLOCK
1068:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1069:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1070:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1071:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1072:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1073:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1074:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t analog_clock_divider     : 5;  /**< Clock for the converter. <BR>Range: [0x0 to 0x1F
1075:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 2;
1076:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t msb_conversion_clock     : 1;  /**< Additional clock cycle for analog converter */
1077:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t arbiter_clock_divider    : 2;  /**< Request source arbiter clock divider. <BR>Range:
1078:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 5;
1079:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 17;
1080:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1081:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t globcfg;
1082:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1083:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLOCK_t;
1084:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1085:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1086:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1087:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1088:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize the VADC Global functions
1089:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1090:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CONFIG
1091:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1092:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1093:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1094:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1095:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1096:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1097:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t            : 4;
1098:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1099:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t            : 4;
1100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t globbound;
1102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_CLOCK_t clock_config; /**< ADC clock configurations*/
1105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_CLASS_t  class0;      /**< ADC input conversion configurations for GLOBICLASS[0]*
1107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_CLASS_t  class1;      /**< ADC input conversion configurations for GLOBICLASS[1]*
1108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 16;
1113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t data_reduction_control  : 4;  /**< Data reduction stages */
1114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 4;
1115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t wait_for_read_mode      : 1;  /**< Results of the next conversion will not be overwr
1116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       result register until the previous value is r
1117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 6;
1118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new result.
1119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t globrcr;
1121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t module_disable              : 1;  /**< Disables the module clock.*/
1127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                             : 2;
1128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t disable_sleep_mode_control  : 1;  /**< Set it to true in order to disable the Sleep 
1129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                             : 28;
1130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t clc;
1132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CONFIG_t;
1134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the group input class configuration. Configured parameters are sample t
1138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
1139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CLASS
1141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly connect
1147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 3;
1149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly con
1150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 5;
1152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected via EM
1153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 3;
1155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connected vi
1156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                                 : 5;
1158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t g_iclass0;
1160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CLASS_t;
1162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  EMUX related configuration structure.
1166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_EMUXCFG
1168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t starting_external_channel : 3;  /**< External channel number to which the VADC will
1174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         generate a control signal (needed to select
1175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         the analog multiplexer)*/
1176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 13;
1177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t connected_channel         : 10; /**< The Channel to which the EMUX is connected. */
1179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t connected_channel         : 5;  /**< The Channel to which the EMUX is connected. */
1181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 5;
1182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_mode                 : 2;  /**< Selects the external multiplexer modes: Steady,
1184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         Uses @ref XMC_VADC_GROUP_EMUXMODE_t*/
1185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_coding               : 1;  /**< Select Binary or Gray coding. Uses @ref XMC_VAD
1186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t stce_usage                : 1;  /**< Use STCE for each conversion of an external cha
1187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_select_style : 1;  /**< Selects the style of configuring the \b connect
1189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         (Each bit represents the channel or entire 
1190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 1;
1191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                           : 2;
1193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t g_emuxctr;
1196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCFG_t;
1198:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1199:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1200:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1201:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Group Configuration Data Structures
1202:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1203:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1204:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CONFIG
1205:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1206:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCFG_t emux_config;    /**< External multiplexer related configurations */
1207:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CLASS_t class0;           /**< ADC input conversion configurations for GxICLASS[0]
1208:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CLASS_t class1;           /**< ADC input conversion configurations for GxICLASS[1]
1209:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1210:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1211:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1212:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1213:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1214:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t            : 4;
1215:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1216:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t            : 4;
1217:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1218:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t g_bound;
1219:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1220:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1221:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1222:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1223:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1224:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 4;
1225:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t arbitration_round_length : 2;  /**< Number of arbiter slots to be considered */
1226:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 1;
1227:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t arbiter_mode             : 1;  /**< Arbiter mode - Select either Continuous mode or 
1228:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_ARBMODE_t */
1229:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 24;
1230:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1231:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t g_arbcfg;
1232:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1233:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONFIG_t;
1234:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1235:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1236:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize VADC Group result register.
1237:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1238:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1239:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_RESULT_CONFIG
1240:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1241:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1242:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1243:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1244:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1245:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 16;
1246:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t data_reduction_control  : 4;  /**< Configures the data reduction stages */
1247:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t post_processing_mode    : 2;  /**< Result data processing mode. Uses @ref  XMC_VADC_
1248:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       For normal operation select
1249:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_DMM_t::XMC_VADC_DMM_REDUCTION_MODE
1250:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       and data_reduction_control as 0*/
1251:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 2;
1252:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t wait_for_read_mode      : 1;  /**< Allow the conversion only after previous results 
1253:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t part_of_fifo            : 2;  /**< Make the result register a part of Result FIFO? *
1254:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                         : 4;
1255:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new result.
1256:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1257:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t g_rcr;
1258:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1259:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_CONFIG_t;
1260:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1261:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1262:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1263:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1264:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Structure to initialize the Stepper configurations
1265:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1266:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_STEP_CONFIG
1267:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1268:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1269:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1270:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1271:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1272:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step0            : 3;  /**< Select a Sample and hold unit for the stepper's 
1273:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1274:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step0             : 1; /**< Should the step be added to the sequence */
1275:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step1            : 3;  /**< Select a Sample and hold unit for the stepper's 
1276:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1277:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step1             : 1; /**< Should the step be added to the sequence */
1278:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step2            : 3;  /**< Select a Sample and hold unit for the stepper's 
1279:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1280:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step2             : 1; /**< Should the step be added to the sequence */
1281:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step3            : 3;  /**< Select a Sample and hold unit for the stepper's 
1282:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1283:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step3             : 1; /**< Should the step be added to the sequence */
1284:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step4            : 3;  /**< Select a Sample and hold unit for the stepper's 
1285:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1286:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step4             : 1; /**< Should the step be added to the sequence */
1287:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step5            : 3;  /**< Select a Sample and hold unit for the stepper's 
1288:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1289:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step5             : 1; /**< Should the step be added to the sequence */
1290:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step6            : 3;  /**< Select a Sample and hold unit for the stepper's 
1291:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1292:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step6             : 1; /**< Should the step be added to the sequence */
1293:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step7            : 3;  /**< Select a Sample and hold unit for the stepper's 
1294:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1295:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step7             : 1; /**< Should the step be added to the sequence */
1296:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1297:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1298:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t stepcfg;
1299:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1300:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t;
1301:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1302:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1303:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sample and hold Initialization structure
1304:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1305:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_CONFIG
1306:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1307:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1308:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1309:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1310:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1311:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1312:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t shs_clock_divider        : 4; /**< The divider value for the SHS clock. Range: [0x0 
1313:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 6;
1314:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1315:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 10;
1316:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1317:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t analog_reference_select  : 2; /**< It is possible to different reference voltage for
1318:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          : 20;
1319:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1320:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t shscfg;
1321:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1322:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1323:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t calibration_order; /**< order in which the calibration sh
1324:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1325:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_SHS_CONFIG_t;
1326:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1327:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1328:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1329:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1330:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Detailed global result structure
1331:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1332:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_DETAILED_RESULT
1333:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1334:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1335:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1336:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1337:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1338:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result                   : 16; /**< Result of the Analog to digital conversion*/
1339:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t group_number             : 4;  /**< Indicates the group to which the channel_number 
1340:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_number           : 5;  /**< Converted channel number*/
1341:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_number      : 3;   /**< Converted external multiplexer channel number.
1342:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  Only applicable for GxRES[0] result register*/
1343:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t converted_request_source : 2;  /**< Converted request source*/
1344:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t fast_compare_result      : 1;  /**< Fast compare result if conversion mode is fast c
1345:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t vaild_result             : 1;  /**< Valid flag is set when a new result is available
1346:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1347:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t res;
1348:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1349:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_DETAILED_RESULT_t;
1350:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1351:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1352:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Detailed channel result structure
1353:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1354:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_DETAILED_RESULT
1355:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1356:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1357:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1358:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1359:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1360:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result                   : 16; /**< Result of the Analog to digital conversion*/
1361:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t data_reduction_counter   : 4;  /**< Results reduction counter value*/
1362:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_number           : 5;  /**< Converted channel number*/
1363:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_number      : 3;   /**< Converted external multiplexer channel number.
1364:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  Only applicable for GxRES[0] result register*/
1365:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t converted_request_source : 2;  /**< Converted request source*/
1366:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t fast_compare_result      : 1;  /**< Fast compare result if conversion mode is fast c
1367:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t vaild_result             : 1;  /**< Valid flag is set when a new result is available
1368:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1369:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t res;
1370:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1371:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_DETAILED_RESULT_t;
1372:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1373:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1374:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard end*/
1375:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
1376:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #pragma pop
1377:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
1378:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #pragma warning restore
1379:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1380:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1381:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * static inline functions
1382:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1383:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1384:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1385:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_CHECK_GROUP_PTR(XMC_VADC_GROUP_t *const group_ptr)
1386:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1387:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
1388:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr == VADC_G0) || (group_ptr == VADC_G1) || (group_ptr == VADC_G2) || (group_ptr 
1389:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1390:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr == VADC_G0) || (group_ptr == VADC_G1));
1391:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1392:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1393:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1394:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1395:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * API Prototypes
1396:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1397:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1398:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #ifdef __cplusplus
1399:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** extern "C" {
1400:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1401:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1402:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1403:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param None
1404:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1405:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1406:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1407:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1408:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module.<BR>\n
1409:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would ungate the clock to the VADC module (if applicable). Also this API would bring
1410:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the VADC module out of reset state(if applicable), by asserting the appropriate registers.
1411:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_UngatePeripheralClock() and XMC_SCU_RESET_DeassertPeripheral
1412:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * if needed. Directly accessed register is  COMPARATOR.ORCCTRL (Refer to the errata for XMC1100).
1413:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1414:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1415:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableModule().
1416:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1417:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_EnableModule(void);
1418:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1419:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1420:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param None
1421:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1422:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1423:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1424:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1425:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module.<BR>\n
1426:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would gate the clock to the VADC module (if applicable). Also this API would put
1427:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the VADC module into the reset state(if applicable) by asserting the appropriate registers.
1428:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_GatePeripheralClock() and XMC_SCU_RESET_AssertPeripheralRese
1429:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1430:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1431:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModule().
1432:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1433:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_DisableModule(void);
1434:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1435:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1436:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1437:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module.
1438:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config Pointer to initialization data structure
1439:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1440:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1441:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1442:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1443:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC global module with the associated configuration structure pointed by \a con
1444:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * enables the global access to registers by configuring reset and clock un-gating for selected dev
1445:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * initializes global class, boundary , result resources by setting GLOBICLASS,GLOBBOUND,GLOBRCR re
1446:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * configures the global analog and digital clock dividers by setting GLOBCFG register. Refer relat
1447:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the configurations later in the program.
1448:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1449:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1450:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_ClockInit()<BR>
1451:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1452:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
1453:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1454:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1455:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1456:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1457:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1458:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1459:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1460:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1461:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module clock.\n\n Call this API before any further configuration of VADC. It se
1462:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * register to enable.
1463:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1464:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1465:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1466:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1467:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1468:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1469:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1470:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Enable:Wrong Module Pointer", (global_ptr == VADC))
1471:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_DISR_Msk);
1472:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1473:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1474:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1475:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1476:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1477:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1478:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1479:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1480:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1481:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module clock.\n\n After this API call, no conversion will occur. Call
1482:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModuleClock() to enable the VADC module later in the program.
1483:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1484:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1485:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1486:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1487:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1488:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1489:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1490:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Disable:Wrong Module Pointer", (global_ptr == VADC))
1491:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_DISR_Pos);
1492:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1493:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1494:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1495:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1496:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1497:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1498:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1499:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1500:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1501:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables VADC module to sleep if a sleep request comes.\n\n
1502:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * It resets the EDIS bit of CLC register for enabling the sleep mode.
1503:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1504:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1505:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableSleepMode().
1506:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1507:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1508:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1509:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1510:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_EDIS_Msk);
1511:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1512:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1513:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1514:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1515:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1516:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1517:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1518:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1519:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1520:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Ignores the sleep mode request for the VADC.\n\n
1521:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * With the sleep feature enabled, the module will respond to sleep
1522:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * requests by going into a low power mode. It resets the EDIS bit of CLC register for enabling the
1523:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1524:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1525:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableSleepMode().
1526:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1527:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1528:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1529:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1530:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_EDIS_Pos);
1531:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1532:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1533:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1534:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1535:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1536:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1537:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to the data structure containing clock configuration data
1538:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1539:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1540:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1541:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1542:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the VADC clock.<BR>\n
1543:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the clock configuration of the VADC module using the config structure pointed by \a conf
1544:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The clock to the analog converter and to the request source arbiter is configured by setting the
1545:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1546:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1547:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1548:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1549:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1550:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClockInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_
1551:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1552:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClockInit:Wrong Module Pointer", (global_ptr == VADC))
1553:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1554:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Write the Clock configuration into the GLOBCFG register */
1555:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG = (uint32_t)(config->globcfg | (VADC_GLOBCFG_DIVWC_Msk));
1556:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1557:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1558:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1559:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1560:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1561:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1562:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Conversion class parameter structure
1563:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_type configure the input call for either standard conversion or EMUX related convers
1564:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
1565:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                Range: [0x0, 0x1]
1566:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1567:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1568:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the ADC conversion settings like sample time and resolution.<BR>\n
1569:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc global resource associated with \a config structure. It
1570:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
1571:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the GLOBALICLASS register specified by \a set_num with the required settings.
1572:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1573:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1574:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1575:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1576:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1577:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1578:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1579:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
1580:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                     const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set_num);
1581:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1582:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1583:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1584:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC global module
1585:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to result configuration data structure
1586:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1587:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1588:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1589:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1590:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes global result register.<BR>\n
1591:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes Global Result Register with specified settings configured in the \a config structure
1592:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * results in configuration of GLOBRCR register. This helps in configuring the Data reduction mode,
1593:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * , wait for read mode on the GLOBRES register.
1594:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1595:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1596:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1597:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1598:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1599:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1600:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1601:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ResultInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC
1602:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1603:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ResultInit:Wrong Module Pointer", (global_ptr == VADC))
1604:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1605:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Configure GLOBRCR*/
1606:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBRCR = config->g_rcr;
1607:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1608:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1609:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1610:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1611:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1612:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1613:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1614:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1615:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1616:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of G
1617:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * enable the startup calibration feature. After turning it on, it loops until all active groups fi
1618:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call XMC_VADC_GLOBAL_Enable() and XMC_VADC_GLOBAL_ClockInit() before calling this API in sequenc
1619:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableStartupCalibration() can disable the calibration feature at runtime.
1620:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1621:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1622:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1623:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1624:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1625:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1626:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr);
1627:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1628:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1629:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1630:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1631:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr  Constant pointer to the VADC module.
1632:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1633:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1634:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1635:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1636:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of 
1637:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * disable the startup calibration feature. Calling the API XMC_VADC_GLOBAL_EnsableStartupCalibrati
1638:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * calibration feature at runtime.
1639:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1640:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1641:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1642:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1643:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1644:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableStartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
1645:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1646:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableStartupCalibration:Wrong Module Pointer", (global_ptr == VADC)
1647:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= ~((uint32_t)VADC_GLOBCFG_SUCAL_Msk);
1648:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1649:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1650:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1651:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1652:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1653:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1654:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be disabled. <BR>
1655:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1656:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1657:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1658:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1659:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1660:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the post calibration for a particular group specified as \a group_number.\n\n It config
1661:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to disable the post calibration feature. Call XMC_VADC_GLOBAL_Enable() and
1662:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit() before calling this API in sequence. Calling the API
1663:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnablePostCalibration() can enable back the calibration feature at runtime.
1664:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1665:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1666:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1667:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1668:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1669:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1670:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1671:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1672:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, ui
1673:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1674:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1675:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1676:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG |= (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_numbe
1677:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1678:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1679:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1680:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1681:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1682:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be enabled. <BR>
1683:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1684:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1685:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1686:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1687:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1688:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the post calibration for a particular group specified as \a group_number.\n\n It configu
1689:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to enable the post calibration feature. Calling the API XMC_VADC_GLOBAL_Disa
1690:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * can disable the calibration feature at runtime.
1691:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1692:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1693:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1694:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1695:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1696:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, uin
1697:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1698:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1699:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1700:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= (~ (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_nu
1701:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1702:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1703:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1704:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
1705:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1706:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1707:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1708:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>Range[0 - 4095]
1709:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>Range[0 - 4095]
1710:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1711:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1712:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1713:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1714:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
1715:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * absolute boundaries. They define a range against which the result of a conversion can be compare
1716:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
1717:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
1718:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * GLOBBOUND1 who will derive their values from this palette.
1719:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1720:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1721:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1722:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1723:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1724:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t boundary0, c
1725:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1726:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1727:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1728:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1729:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param selection The boundary value selected for \b boundary_value.
1730:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_value  Boundary Value<BR>Range[0 - 4095]
1731:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1732:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1733:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1734:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1735:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs either the boundary 0 or boundary 1 for result comparison.\n\n This defines a range aga
1736:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result of a conversion can be compared. In the fast compare mode, the two boundaries provide
1737:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * capability to a compare value.
1738:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1739:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1740:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1741:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1742:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1743:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetIndividualBoundary(XMC_VADC_GLOBAL_t *const global_ptr,
1744:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const XMC_VADC_CHANNEL_BOUNDARY_t selection,
1745:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint16_t boundary_value);
1746:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1747:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1748:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_AVAILABLE== 1U)
1749:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1750:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1751:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module
1752:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param emuxif       The EMUX interface<BR>Range[0x0 - 0x1]
1753:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group        The VADC group which must be bound to the desired emux
1754:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1755:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1756:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1757:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1758:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Binds a VADC \a group to an EMUX interface specified in \a emuxif.<BR>\n
1759:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects which group's scan request source will control the EMUX interface (set of control select
1760:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * By passing \b group it would configure that group's scan request source to control the EMUX sele
1761:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \b emuxif.
1762:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1763:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1764:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1765:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1766:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
1767:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1768:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1769:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1770:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1771:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1772:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1773:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return uint32_t Complete global result register value GLOBRES
1774:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1775:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1776:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Retrieves the complete result from the global result register associated with the \a global_ptr.
1777:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result register GLOBRES for the validity of the data. If the validity is assured, data is fi
1778:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the global result register, cached locally next and subsequently returned to the caller.
1779:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1780:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @note You can cast the return to a varible of type XMC_VADC_GLOBAL_DETAILED_RESULT_t to easily a
1781:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1782:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1783:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetResult()
1784:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1785:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GLOBAL_GetDetailedResult(XMC_VADC_GLOBAL_t *const global_ptr)
1786:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1787:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetDetailedResult:Wrong Module Pointer", (global_ptr == VADC))
1788:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1789:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return (global_ptr->GLOBRES);
1790:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1791:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1792:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1793:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1794:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1795:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1796:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return XMC_VADC_RESULT_SIZE_t 16 bit result register value.<BR>
1797:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *         Range[0x0 - 0X0FFF]
1798:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1799:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1800:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Retrieves the conversion result from the global result register associated with the \a global_pt
1801:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * lightweight version of XMC_VADC_GLOBAL_GetDetailedResult(). The behavior is exactly the same, ju
1802:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * only the 16 bit numeric result returned back to the application instead of the complete GLOBRES 
1803:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1804:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1805:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetDetailedResult()
1806:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1807:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_RESULT_SIZE_t XMC_VADC_GLOBAL_GetResult(XMC_VADC_GLOBAL_t *const global_pt
1808:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1809:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetResult:Wrong Module Pointer", (global_ptr == VADC))
1810:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1811:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((XMC_VADC_RESULT_SIZE_t)global_ptr->GLOBRES);
1812:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1813:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1814:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1815:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1816:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1817:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param compare_val Compare value which the result of a conversion will be compared against.
1818:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *         <BR>Range[0x0 - 0X0FFF]
1819:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1820:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1821:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1822:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1823:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Set compare value in the global result register for fast compare mode.\n\n The result of a conve
1824:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * be compared to the compare value entered as part of \a compare_val. The prerequisite is that the
1825:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * with this global register must select an ICLASS which has the conversion mode configured as fast
1826:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @ref XMC_VADC_GLOBAL_GetCompareResult() after this API to
1827:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1828:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1829:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1830:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1831:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetCompareValue(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_SIZ
1832:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1833:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1834:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1835:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1836:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return compare high or low. Refer @ref XMC_VADC_FAST_COMPARE_t enum
1837:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1838:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1839:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1840:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1841:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines the result of fast compare operation.\n\n This API returns the result of fast compare
1842:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the valid flag in the global result register GLOBRES is set.
1843:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1844:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1845:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1846:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1847:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GLOBAL_GetCompareResult(XMC_VADC_GLOBAL_t *const global_ptr);
1848:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1849:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1850:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1851:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr         Constant pointer to the VADC module
1852:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param event_type   Desired event that must be manually asserted
1853:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1854:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1855:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1856:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1857:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts an event that can lead to an interrupt.\n\n This API manually asserts the reque
1858:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * (Background request source event or a global result event) by setting the GLOBEVFLAG register wi
1859:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \a event_type.
1860:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1861:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1862:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1863:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1864:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1865:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_TriggerEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32
1866:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1867:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Module Pointer", (global_ptr == VADC))
1868:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Global Event",
1869:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT ==
1870:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1871:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG = event_type;
1872:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1873:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1874:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1875:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1876:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1877:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param event_type Event that must be acknowledged
1878:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1879:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1880:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1881:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1882:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1883:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges an event that has been asserted manually or automatically.\n\n This API acknowledge
1884:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * by clearing GLOBEFLAG sticky flag.
1885:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1886:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1887:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1888:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1889:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClearEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t
1890:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1891:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Module Pointer", (global_ptr == VADC))
1892:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Global Event",
1893:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT ==
1894:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1895:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG = ((uint32_t)(event_type << (uint32_t)16));
1896:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1897:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1898:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1899:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1900:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1901:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr The service request to which the global result event is connected. Refer @ref XMC_VADC
1902:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1903:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1904:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1905:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1906:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Binds the global result event to one of the 4 shared service requests.\n\n This API binds the g
1907:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  to one of the 4 module wide shared service requests .Sets GLOBEVNP register with the correspond
1908:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1909:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1910:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode()
1911:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1912:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t
1913:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1914:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1915:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1916:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1917:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr The service request to which the global request source event is connected. Refer @ref 
1918:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1919:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1920:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1921:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1922:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Binds the background request source event to one of the 4 shared service requests.\n\n This API 
1923:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * request source event to one of the 4 module wide shared service requests. Sets GLOBEVNP register
1924:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * corresponding \a sr line.
1925:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1926:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1927:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SetResultEventInterruptNode()
1928:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1929:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC
1930:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1931:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1932:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1933:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1934:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  config Struct consisting of various SHS related configurations.
1935:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1936:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1937:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1938:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1939:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the basic SHS parameters.<BR>\n
1940:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would initialize the clock divider configuration, the analog reference selection and
1941:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the calibration order for the Sample and Hold unit.
1942:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1943:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1944:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1945:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1946:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_Init(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, const XMC_VADC_GLOBAL_SHS_CONFI
1947:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1948:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1949:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1950:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param aref    Analog reference used for conversions. Refer @ref XMC_VADC_GLOBAL_SHS_AREF_t enum
1951:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1952:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1953:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1954:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1955:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selection of the reference voltage that is required for conversions (VREF).
1956:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1957:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1958:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1959:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1960:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetAnalogReference(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1961:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const XMC_VADC_GLOBAL_SHS_AREF_t aref)
1962:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1963:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong SHS Pointer",
1964:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
1965:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1966:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG = (shs_ptr->SHSCFG & (uint32_t)~SHS_SHSCFG_AREF_Msk) | (uint32_t)aref | SHS_SHSCF
1967:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1968:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1969:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1970:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1971:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1972:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  config Struct consisting of various step configurations.
1973:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1974:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1975:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1976:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1977:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the stepper sequence for the converter.<BR>\n
1978:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Stepper of the SHS can be configured to take up a specific sequence of groups for conversion.
1979:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The stepper sequence is configured using this API.
1980:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1981:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1982:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1983:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1984:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetStepperSequence(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1985:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t *config)
1986:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
1987:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong SHS Pointer",
1988:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
1989:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong config pointer",
1990:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              (config == (XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t *)NULL))
1991:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1992:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->STEPCFG = (uint32_t) config->stepcfg;
1993:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
1994:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1995:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
1996:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1997:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1998:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1999:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return bool returns true if the analog converter is operable
2000:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *              returns false if the analog converter is powered down
2001:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2002:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2003:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the converter status.<BR>\n
2004:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the ANRDY bit field of the SHSCFG register.
2005:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2006:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2007:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2008:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2009:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_SHS_IsConverterReady(XMC_VADC_GLOBAL_SHS_t *const shs_ptr)
2010:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2011:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_IsConverterReady:Wrong SHS Pointer", (shs_ptr == (XMC_VADC_GLOBAL
2012:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2013:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((bool)((shs_ptr->SHSCFG >> (uint32_t)SHS_SHSCFG_ANRDY_Pos) & (uint32_t)0x1));
2014:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2015:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2016:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
2017:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2018:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2019:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
2020:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2021:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2022:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2023:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2024:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
2025:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
2026:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * this mode the ADC module will convert the input depending on the value stored in the SST bit of 
2027:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would configure the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
2028:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2029:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2030:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2031:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2032:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, XMC_VADC_GROUP
2033:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2034:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2035:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2036:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be disabled.<BR>Range: [0x
2037:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2038:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2039:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2040:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2041:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
2042:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from accelerated mode to compatible mode of conversion is neede
2043:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would clear the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
2044:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2045:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2046:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2047:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2048:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, XMC_VADC_GROU
2049:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2050:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2051:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2052:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
2053:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sst_value Value of short sample time that needs to be configured.<BR>
2054:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                  Range: [0x0 to 0x3F]
2055:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2056:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2057:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2058:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2059:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the Accelerated timing mode sample time.<BR>\n
2060:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
2061:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Accelerated mode the ADC module will convert the input depending on the value stored in the SST 
2062:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  SHS0_TIMCFGx. This API would configure the shot sample time either in SHS0_TIMCFG0.SST or SHS0_
2063:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2064:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2065:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2066:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2067:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetShortSampleTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2068:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_t group_num,
2069:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint8_t sst_value);
2070:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2071:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2072:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2073:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2074:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  divs_value The clock divider value that is possible
2075:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    <BR>Range:[0x0 to 0xF]
2076:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2077:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2078:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2079:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure Sample and hold clock divider value.<BR>\n
2080:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would initialize the clock divider configuration. This determines the frequency of conversio
2081:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * of the Sample and hold converter.
2082:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2083:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2084:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2085:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2086:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetClockDivider(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, uint
2087:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2088:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong SHS Pointer",
2089:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
2090:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong divide factor selected",
2091:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              (divs_value < (uint32_t)0x10))
2092:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2093:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG =  (shs_ptr->SHSCFG & (~(uint32_t)SHS_SHSCFG_DIVS_Msk)) | (uint32_t)SHS_SHSCFG_SC
2094:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG |=  ((uint32_t)divs_value << SHS_SHSCFG_DIVS_Pos) | (uint32_t)SHS_SHSCFG_SCWC_Msk
2095:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2096:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2097:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2098:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2099:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  gain_value gain value possible
2100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    Range:[0x0 to 0x3]
2101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  ch_num The channel number for which the gain has to be configured
2103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the gain value for SHS.<BR>\n
2107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would set the gain factor for a selected channel.
2108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetGainFactor(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                        uint8_t gain_value,
2114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                        XMC_VADC_GROUP_INDEX_t group_num,
2115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                        uint8_t ch_num);
2116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
2118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  max_calibration_time calibration time
2121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                              Range:[0x0 to 0x3F]
2122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the Maximum calibration timing.<BR>\n
2126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would initialize the Maximum time after which the calibration should occur. If no adc conver
2127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * occur during this duration then the calibration would run irrespective of conversions. The max t
2128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter can go without a calibration is set in this API.
2129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetMaxCalTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t max_calibration_time)
2135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetMaxCalTime:Wrong SHS Pointer",
2137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
2138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->CALCTR &= ~((uint32_t)SHS_CALCTR_CALMAX_Msk);
2140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->CALCTR |=  ((uint32_t)max_calibration_time << SHS_CALCTR_CALMAX_Pos);
2141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enable the Gain and offset calibration.<BR>\n
2151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enable the gain and offset calibration for all the Sample and hold units.
2152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations()<BR>.
2155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_t group_num);
2158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the Gain and offset calibration.<BR>\n
2166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the gain and offset calibration for all the Sample and hold units.
2167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_t group_num);
2173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
2178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Read the calibration value for the selected gain level.<BR>\n
2182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would return the offset calibration val
2183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * selected gain level. This is applicable for all the channels in the group that use the particula
2184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue()<BR>.
2187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** uint8_t XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_t group_num,
2190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_SHS_GAIN_LEVEL_t gain_level);
2191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
2196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  offset_calibration_value The offset calibration value to be set.
2197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2198:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2199:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2200:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Set the calibration value for the selected gain level.<BR>\n
2201:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would set the offset value of the selec
2202:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2203:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2204:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue()<BR>.
2205:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2206:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2207:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_t group_num,
2208:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_SHS_GAIN_LEVEL_t gain_level,
2209:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint8_t offset_calibration_value);
2210:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2211:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2212:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2213:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2214:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2215:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2216:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  ch_num Channel number for which the configurations applies
2217:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2218:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2219:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2220:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the delta sigma loop of the SHS.<BR>\n
2221:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * There are 2 Delta-Sigma loops that can be configured. This API would configure the loop (loop_se
2222:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * with the appropriate group_num and channel_num.
2223:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP bit fields.
2224:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2225:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2226:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop()<BR>.
2227:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2228:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2229:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_t group_num,
2230:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_SHS_LOOP_CH_t loop_select,
2231:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint8_t ch_num);
2232:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2233:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2234:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2235:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2236:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2237:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2238:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2239:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enable the selected Delta-Sigma loop.<BR>\n
2240:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2241:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2242:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2243:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2244:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2245:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2246:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2247:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_SHS_LOOP_CH_t loop_select)
2248:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2249:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong SHS Pointer",
2250:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
2251:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2252:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0) || (loop_select == XMC_VADC_SHS_LOOP_CH_1))
2253:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2254:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->LOOP |= (uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select;
2255:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2256:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2257:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2258:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2259:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2260:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2261:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2262:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2263:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the selected delta sigma loop.<BR>\n
2264:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2265:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2266:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2267:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2268:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2269:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2270:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr
2271:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_SHS_LOOP_CH_t loop_select)
2272:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2273:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong SHS Pointer",
2274:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
2275:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2276:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0) || (loop_select == XMC_VADC_SHS_LOOP_CH_1))
2277:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2278:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->LOOP &= ~((uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select);
2279:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2280:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2281:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2282:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2283:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
2284:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2285:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2286:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the VADC group.
2287:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config Pointer to the initialization data structure
2288:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2289:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2290:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2291:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2292:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC group module with the associated configuration structure pointed by \a conf
2293:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * initializes the group specified as part of the \a group_ptr. It initializes group conversion cla
2294:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * configuration , boundary configuration by setting GxICLASS,GxARBCFG,GxBOUND, registers. It also
2295:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * configures the EMUX control register if applicable. Refer related API's to change the configurat
2296:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  program.
2297:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2298:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2299:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_InputClassInit()<BR>
2300:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetPowerMode()<BR>
2301:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetBoundaries()<BR>
2302:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ExternalMuxControlInit()<BR>
2303:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2304:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_Init(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CONFIG_t *config);
2305:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2306:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2307:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2308:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group.
2309:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  group related conversion class parameter structure
2310:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_type Use direct channels or EMUX channels. Refer @ref XMC_VADC_GROUP_CONV_t enum
2311:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
2312:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                Range[0x0, 0x1]
2313:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2314:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2315:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2316:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2317:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc group resource associated with \a config structure. It 
2318:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
2319:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the G_ICLASS register specified by \a set_num with the required settings.
2320:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2321:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2322:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2323:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_Init()
2324:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2325:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2326:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_InputClassInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CLASS_t 
2327:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                    const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set_num);
2328:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2329:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2330:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2331:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC Group which must be set as a slave
2332:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param master_grp The master group number<BR>
2333:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2334:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param slave_group The slave group number<BR>
2335:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2336:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2337:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2338:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2339:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2340:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures a VADC Group as a slave group.\n\n Conversion of identically numbered channels across
2341:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2342:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is the
2343:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * master group while Groups-0 and 3 are the slave groups. It uses the SYNCCTR register for the con
2344:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2345:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2346:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_SetSyncMaster()<BR>
2347:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR>
2348:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_EnableChannelSyncRequest()<BR>
2349:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2350:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2351:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncSlave(XMC_VADC_GROUP_t *const group_ptr, uint32_t master_grp, uint32_t s
2352:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2353:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2354:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2355:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC Group.
2356:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param power_mode  Desired power mode
2357:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2358:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2359:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2360:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2361:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the power mode of a VADC group.\n\n For a VADC group to actually convert an analog si
2362:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter must be turned on.
2363:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2364:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2365:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2366:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2367:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetPowerMode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_POWERMODE_
2368:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2369:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2370:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2371:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC Group.
2372:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2373:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2374:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    XMC_VADC_GROUP_POWERMODE_t Current power mode
2375:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2376:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2377:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Retrieves the power mode of a VADC group.
2378:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2379:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2380:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_SetPowerMode()<BR>
2381:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2382:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE int32_t XMC_VADC_GROUP_GetPowerMode(XMC_VADC_GROUP_t *const group_ptr)
2383:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2384:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr->ARBCFG & (uint32_t)VADC_G_ARBCFG_ANONS_Msk) >> VADC_G_ARBCFG_ANONS_Pos);
2385:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2386:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2387:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2388:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2389:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2390:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2391:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2392:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2393:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2394:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures a VADC Group as a master group.<BR>\n
2395:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Conversion of identically numbered channels across groups can be
2396:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2397:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is therefore the mast
2398:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Groups-0 and 3 are the slave groups.
2399:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2400:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2401:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2402:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2403:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncMaster(XMC_VADC_GROUP_t *const group_ptr);
2404:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2405:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2406:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2407:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2408:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2409:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                     <BR>Range: [0x0 to 0x3]
2410:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2411:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2412:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2413:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the ready signal for master group.<BR>\n
2414:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would read the \b slave_group number and determine which EVAL configuration to apply fo
2415:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * slave set. Checks the readiness of slaves in synchronized conversions. Conversion of identically
2416:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * across groups can be synchronized. For example, when the trigger to convert CH-1 of Group-2 is r
2417:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * possible to simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this ex
2418:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * therefore the master group while Groups-0 and 3 are the slave groups. Before the master can requ
2419:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * for synchronized conversion, it has the option of checking the readiness of the slaves.
2420:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2421:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2422:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()
2423:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2424:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_CheckSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2425:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2426:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2427:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2428:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the master VADC Group
2429:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2430:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2431:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2432:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2433:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Clears the ready signal for master group.<BR>\n
2434:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Ignores the readiness of slaves in synchronized conversions.This API would read the \b slave_gro
2435:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * determine which EVAL configuration to apply for the given master slave set. Then clears the conf
2436:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is called when the master should issue the conversion request without waiting for the s
2437:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * assert a ready signal. The ready signal is asserted by the slave group(s) when the conversion is
2438:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * in these channels.
2439:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2440:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2441:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()<BR>
2442:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2443:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_IgnoreSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2444:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2445:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2446:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2447:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the VADC Group waiting for ready signal
2448:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param eval_waiting_group  The VADC Group which expects a ready signal to start it's conversion.
2449:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param eval_origin_group  The VADC Group from which the eval_waiting_group will expect a ready s
2450:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2451:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2452:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2453:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets the ready signal in the eval_waiting_group .<BR>\n
2454:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * For Synchronized conversion all the slaves participating need to configure the ready signal.
2455:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A slave group will also need to configure the ready signals coming from the other slave groups.
2456:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the Sync.slave's EVAL Bits (GxSYNCTR.EVALy).
2457:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2458:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2459:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR>
2460:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2461:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncSlaveReadySignal(XMC_VADC_GROUP_t *const group_ptr,
2462:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t eval_waiting_group,
2463:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t eval_origin_group);
2464:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2465:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2466:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2467:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the VADC Group
2468:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2469:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *         uint32_t EVAL bits for the group
2470:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2471:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2472:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Get the Eval bits of the group.<BR>\n
2473:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * For Synchronized conversion the master's ready signal configuration must be copied onto the slav
2474:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would return the Sync EVAL Bits (GxSYNCTR.EVALy) which can be used to set in 
2475:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2476:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2477:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR>
2478:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2479:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GROUP_GetSyncReadySignal(XMC_VADC_GROUP_t *const group_ptr)
2480:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2481:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t eval_mask;
2482:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetSyncReadySignal:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
2483:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2484:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
2485:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk | VADC_G_SYNCTR_EVALR2_Msk | VADC_G_SYNCTR_EVALR3_Msk;
2486:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #else
2487:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk;
2488:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2489:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return ( group_ptr->SYNCTR & eval_mask);
2490:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2491:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2492:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2493:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the VADC Group
2494:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param eval_mask  mask to configure the eval bits
2495:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Use XMC_VADC_SYNCTR_EVAL_t to create the mask.
2496:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2497:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2498:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2499:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Set the Eval bits of the group.<BR>\n
2500:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * For Synchronized conversion the master's ready signal configuration must be copied onto the slav
2501:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the Sync EVAL Bits (GxSYNCTR.EVALy).
2502:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2503:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2504:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR>
2505:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2506:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_SetSyncReadySignal(XMC_VADC_GROUP_t *const group_ptr, uint32_t 
2507:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2508:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t eval_mask;
2509:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncReadySignal:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
2510:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2511:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
2512:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk | VADC_G_SYNCTR_EVALR2_Msk | VADC_G_SYNCTR_EVALR3_Msk;
2513:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #else
2514:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk;
2515:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2516:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SYNCTR &= ~(eval_mask);
2517:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SYNCTR |= mask;
2518:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2519:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2520:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2521:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2522:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the master VADC Group
2523:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num  Channel whose conversion triggers conversion in slave groups
2524:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2525:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2526:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2527:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up a channel for synchronized conversion.\n\n Conversion of identically numbered channels a
2528:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * can be synchronized. For example, when the trigger to
2529:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * convert CH-1 of Group-2 is received, it is possible to simultaneously request conversion of CH-1
2530:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Group-3. Group-2 in this example is therefore the master group while Groups-0 and 3 are the slav
2531:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Before the master can request its slaves for synchronized conversion, it has the option of check
2532:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * of the slaves.
2533:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2534:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2535:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2536:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2537:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_EnableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
2538:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2539:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2540:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2541:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2542:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     Channel whose conversion triggers conversion in slave groups
2543:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2544:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2545:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2546:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the synchronization request for the particular channel specified as ch_num. To enable th
2547:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * call the API @ref XMC_VADC_GROUP_EnableChannelSyncRequest().
2548:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2549:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2550:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2551:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2552:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_DisableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_
2553:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2554:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2555:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2556:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2557:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2558:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return retuns IDLE if converter is free else returns busy. Refer @ref XMC_VADC_GROUP_STATE_t en
2559:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2560:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2561:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Checks the live status of the analog to digital converter. The converter can either idle doing n
2562:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sampling + converting.
2563:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2564:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2565:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2566:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2567:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** XMC_VADC_GROUP_STATE_t XMC_VADC_GROUP_IsConverterBusy(XMC_VADC_GROUP_t *const group_ptr);
2568:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2569:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2570:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2571:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group whose global boundary registers are to be pr
2572:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>
2573:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2574:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>
2575:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2576:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2577:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2578:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2579:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2580:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
2581:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * absolute boundaries. They defines a range against which the result of a conversion can be compar
2582:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
2583:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
2584:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * G_BOUND1 who will derive their values from this palette.
2585:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2586:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2587:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2588:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2589:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2590:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaries(XMC_VADC_GROUP_t *const group_ptr,
2591:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                   const uint32_t boundary0,
2592:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                   const uint32_t boundary1);
2593:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2594:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2595:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2596:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param selection The boundary value selected for \b boundary_value.
2597:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_value Select the boundary value.
2598:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2599:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2600:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2601:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2602:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundary with \a boundary_value for result comparison.\n\n This defines a range aga
2603:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result of a conversion can be compared. In the fast compare mode, the two boundaries provide
2604:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * capability to a compare value.
2605:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2606:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2607:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2608:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2609:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetIndividualBoundary(XMC_VADC_GROUP_t *const group_ptr,
2610:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const XMC_VADC_CHANNEL_BOUNDARY_t selection,
2611:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint16_t boundary_value);
2612:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2613:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2614:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2615:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr_num   The service request number (0 through 3)
2616:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param type     IRQ type (Kernel specific interrupt vs Module wide shared interrupt )
2617:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2618:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2619:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2620:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Activates a Service Request line(manually trigger).<BR>\n
2621:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * VADC provides few SR lines for each group and a few more which is shared across all the groups.
2622:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * These SR lines can be connected to an NVIC node which in-turn would generate an interrupt.
2623:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would manually trigger the given SR line. Could be used for evaluation and testing purp
2624:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2625:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2626:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2627:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2628:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_TriggerServiceRequest(XMC_VADC_GROUP_t *const group_ptr,
2629:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint32_t sr_num,
2630:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const XMC_VADC_GROUP_IRQ_t type);
2631:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2632:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2633:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2634:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group
2635:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param emux_cfg   EMUX configuration structure
2636:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2637:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2638:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2639:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures group EMUX parameters associated with the \a emux_cfg configuration structure.\n\n An
2640:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * interface allows additional channels to be connected to a VADC group. The conversion properties
2641:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * of such channels can be different from the standard channels which are directly connected to the
2642:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API configures conversion properties of channels connected via EMUX interface.
2643:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2644:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2645:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2646:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2647:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ExternalMuxControlInit(XMC_VADC_GROUP_t *const group_ptr,
2648:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const XMC_VADC_GROUP_EMUXCFG_t emux_cfg)
2649:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
  27              	 .loc 1 2649 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 85B0     	 sub sp,sp,#20
  36              	 .cfi_def_cfa_offset 24
  37 0004 00AF     	 add r7,sp,#0
  38              	 .cfi_def_cfa_register 7
  39 0006 7860     	 str r0,[r7,#4]
  40 0008 3960     	 str r1,[r7]
2650:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t   emux_config;
2651:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2652:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ExternalMuxControlInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
2653:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2654:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.starting_external_channel << (uint32_t)VADC_G_EMUXCTR_EMUXSET_P
  41              	 .loc 1 2654 0
  42 000a 3B78     	 ldrb r3,[r7]
  43 000c C3F30203 	 ubfx r3,r3,#0,#3
  44 0010 DBB2     	 uxtb r3,r3
  45 0012 1A46     	 mov r2,r3
2655:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.connected_channel << (uint32_t)VADC_G_EMUXCTR_EMUXCH_Pos);
  46              	 .loc 1 2655 0
  47 0014 7B88     	 ldrh r3,[r7,#2]
  48 0016 C3F30903 	 ubfx r3,r3,#0,#10
  49 001a 9BB2     	 uxth r3,r3
  50 001c 1B04     	 lsls r3,r3,#16
2654:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.connected_channel << (uint32_t)VADC_G_EMUXCTR_EMUXCH_Pos);
  51              	 .loc 1 2654 0
  52 001e 1343     	 orrs r3,r3,r2
  53 0020 FB60     	 str r3,[r7,#12]
2656:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2657:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->EMUXCTR  = emux_config;
  54              	 .loc 1 2657 0
  55 0022 7B68     	 ldr r3,[r7,#4]
  56 0024 FA68     	 ldr r2,[r7,#12]
  57 0026 C3F8F021 	 str r2,[r3,#496]
2658:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
  58              	 .loc 1 2658 0
  59 002a FB78     	 ldrb r3,[r7,#3]
  60 002c C3F30013 	 ubfx r3,r3,#4,#1
  61 0030 DBB2     	 uxtb r3,r3
  62 0032 1A07     	 lsls r2,r3,#28
2659:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.emux_mode  << (uint32_t)VADC_G_EMUXCTR_EMUXMODE_Pos) |
  63              	 .loc 1 2659 0
  64 0034 FB78     	 ldrb r3,[r7,#3]
  65 0036 C3F38103 	 ubfx r3,r3,#2,#2
  66 003a DBB2     	 uxtb r3,r3
  67 003c 9B06     	 lsls r3,r3,#26
2658:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
  68              	 .loc 1 2658 0
  69 003e 1A43     	 orrs r2,r2,r3
2660:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.stce_usage << (uint32_t)VADC_G_EMUXCTR_EMXST_Pos);
  70              	 .loc 1 2660 0
  71 0040 FB78     	 ldrb r3,[r7,#3]
  72 0042 C3F34013 	 ubfx r3,r3,#5,#1
  73 0046 DBB2     	 uxtb r3,r3
  74 0048 5B07     	 lsls r3,r3,#29
2658:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
  75              	 .loc 1 2658 0
  76 004a 1343     	 orrs r3,r3,r2
  77 004c FB60     	 str r3,[r7,#12]
2661:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2662:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
2663:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config |= ((uint32_t)emux_cfg.emux_channel_select_style << (uint32_t)VADC_G_EMUXCTR_EMXCSS_P
  78              	 .loc 1 2663 0
  79 004e FB78     	 ldrb r3,[r7,#3]
  80 0050 C3F38013 	 ubfx r3,r3,#6,#1
  81 0054 DBB2     	 uxtb r3,r3
  82 0056 9B07     	 lsls r3,r3,#30
  83 0058 FA68     	 ldr r2,[r7,#12]
  84 005a 1343     	 orrs r3,r3,r2
  85 005c FB60     	 str r3,[r7,#12]
2664:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2665:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->EMUXCTR  |= (emux_config | ((uint32_t)VADC_G_EMUXCTR_EMXWC_Msk)) ;
  86              	 .loc 1 2665 0
  87 005e 7B68     	 ldr r3,[r7,#4]
  88 0060 D3F8F021 	 ldr r2,[r3,#496]
  89 0064 FB68     	 ldr r3,[r7,#12]
  90 0066 1343     	 orrs r3,r3,r2
  91 0068 43F00042 	 orr r2,r3,#-2147483648
  92 006c 7B68     	 ldr r3,[r7,#4]
  93 006e C3F8F021 	 str r2,[r3,#496]
2666:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
  94              	 .loc 1 2666 0
  95 0072 1437     	 adds r7,r7,#20
  96              	 .cfi_def_cfa_offset 4
  97 0074 BD46     	 mov sp,r7
  98              	 .cfi_def_cfa_register 13
  99              	 
 100 0076 5DF8047B 	 ldr r7,[sp],#4
 101              	 .cfi_restore 7
 102              	 .cfi_def_cfa_offset 0
 103 007a 7047     	 bx lr
 104              	 .cfi_endproc
 105              	.LFE191:
 107              	 .section .text.XMC_VADC_GROUP_ScanEnableArbitrationSlot,"ax",%progbits
 108              	 .align 2
 109              	 .thumb
 110              	 .thumb_func
 112              	XMC_VADC_GROUP_ScanEnableArbitrationSlot:
 113              	.LFB194:
2667:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2668:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if XMC_VADC_BOUNDARY_FLAG_SELECT == 1U
2669:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2670:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2671:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2672:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_flag_num The Boundary flag for which the interrupt node needs to be configured.
2673:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                          Range: [0x0 to 0x3]
2674:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param node    Service Request node Id
2675:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2676:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2677:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2678:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2679:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Connects the boundary event to the SR line of VADC or to a common boundary flag.<BR>\n
2680:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a boundary event. Hence to get a interrupt o
2681:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
2682:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * field GxBFLNP.BFLxNP.
2683:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2684:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2685:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2686:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2687:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaryEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
2688:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint8_t boundary_flag_num,
2689:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const XMC_VADC_BOUNDARY_NODE_t node);
2690:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2691:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2692:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2693:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2694:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2695:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    uint32_t The complete GxALIAS register
2696:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2697:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2698:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the ALIAS values.\n The ALIAS value that is configured for Channel-0 and channel-1 are r
2699:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2700:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2701:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2702:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2703:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GROUP_GetAlias(XMC_VADC_GROUP_t *const group_ptr)
2704:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2705:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetAliasWrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
2706:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return (group_ptr->ALIAS);
2707:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2708:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2709:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2710:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2711:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_class  conversion property to be extracted
2712:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2713:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    XMC_VADC_GROUP_CLASS_t The complete GxICLASSy register
2714:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2715:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2716:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the input class configuration values.\n
2717:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This returns the sampling time configuration and resolution configured in the appropriate group 
2718:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \b conv_class. A call to this API would return the register GxICLASSy.
2719:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2720:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2721:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2722:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2723:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_GROUP_CLASS_t XMC_VADC_GROUP_GetInputClass(XMC_VADC_GROUP_t *const group_p
2724:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const XMC_VADC_CHANNEL_CONV_t conv_class)
2725:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2726:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CLASS_t input_value;
2727:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetInputClass:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
2728:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetInputClass:Wrong conv_class selected",
2729:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              (XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 == conv_class) || (XMC_VADC_CHANNEL_CONV_GROUP_CLA
2730:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2731:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   input_value.g_iclass0 = (uint32_t) 0xFFFFFFFF;
2732:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   if ((XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 == conv_class) || (XMC_VADC_CHANNEL_CONV_GROUP_CLASS1 == 
2733:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
2734:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     input_value.g_iclass0 = group_ptr->ICLASS[(uint32_t)conv_class];
2735:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   }
2736:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2737:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return (input_value);
2738:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2739:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2740:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2741:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GSCAN_AVAILABLE == 1U)
2742:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2743:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
2744:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to Scan configuration
2745:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2746:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2747:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2748:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC SCAN functional block.<BR>\n
2749:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The GROUP SCAN request source functional block converts channels sequentially starting with the 
2750:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * channel to the lowest. Channels must register themselves as being part of the the scan sequence.
2751:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_ScanEnableA
2752:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
2753:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_ScanDisableArbi
2754:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxASCTRL, GxASMR needed scan request s
2755:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2756:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2757:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR> XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2758:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanSelectGating()<BR>
2759:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2760:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_SCAN_CONFIG_t *confi
2761:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2762:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2763:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2764:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2765:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2766:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2767:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2768:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the scan request source.<BR>\n
2769:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2770:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2771:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the scan slot. Thus this must be enabled if any conversion need to take place.
2772:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2773:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2774:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2775:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2776:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2777:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2778:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 114              	 .loc 1 2778 0
 115              	 .cfi_startproc
 116              	 
 117              	 
 118              	 
 119 0000 80B4     	 push {r7}
 120              	 .cfi_def_cfa_offset 4
 121              	 .cfi_offset 7,-4
 122 0002 83B0     	 sub sp,sp,#12
 123              	 .cfi_def_cfa_offset 16
 124 0004 00AF     	 add r7,sp,#0
 125              	 .cfi_def_cfa_register 7
 126 0006 7860     	 str r0,[r7,#4]
2779:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2780:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN1_Msk;
 127              	 .loc 1 2780 0
 128 0008 7B68     	 ldr r3,[r7,#4]
 129 000a D3F88430 	 ldr r3,[r3,#132]
 130 000e 43F00072 	 orr r2,r3,#33554432
 131 0012 7B68     	 ldr r3,[r7,#4]
 132 0014 C3F88420 	 str r2,[r3,#132]
2781:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
 133              	 .loc 1 2781 0
 134 0018 0C37     	 adds r7,r7,#12
 135              	 .cfi_def_cfa_offset 4
 136 001a BD46     	 mov sp,r7
 137              	 .cfi_def_cfa_register 13
 138              	 
 139 001c 5DF8047B 	 ldr r7,[sp],#4
 140              	 .cfi_restore 7
 141              	 .cfi_def_cfa_offset 0
 142 0020 7047     	 bx lr
 143              	 .cfi_endproc
 144              	.LFE194:
 146 0022 00BF     	 .section .text.XMC_VADC_GROUP_ScanDisableArbitrationSlot,"ax",%progbits
 147              	 .align 2
 148              	 .thumb
 149              	 .thumb_func
 151              	XMC_VADC_GROUP_ScanDisableArbitrationSlot:
 152              	.LFB195:
2782:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2783:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2784:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2785:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2786:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2787:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2788:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2789:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the scan request source.<BR>\n
2790:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2791:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2792:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the scan slot.A call to this API will lead to all conversions request by scan to be blocked.
2793:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2794:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2795:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2796:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR>
2797:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2798:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2799:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 153              	 .loc 1 2799 0
 154              	 .cfi_startproc
 155              	 
 156              	 
 157              	 
 158 0000 80B4     	 push {r7}
 159              	 .cfi_def_cfa_offset 4
 160              	 .cfi_offset 7,-4
 161 0002 83B0     	 sub sp,sp,#12
 162              	 .cfi_def_cfa_offset 16
 163 0004 00AF     	 add r7,sp,#0
 164              	 .cfi_def_cfa_register 7
 165 0006 7860     	 str r0,[r7,#4]
2800:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
2801:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN1_Msk);
 166              	 .loc 1 2801 0
 167 0008 7B68     	 ldr r3,[r7,#4]
 168 000a D3F88430 	 ldr r3,[r3,#132]
 169 000e 23F00072 	 bic r2,r3,#33554432
 170 0012 7B68     	 ldr r3,[r7,#4]
 171 0014 C3F88420 	 str r2,[r3,#132]
2802:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
 172              	 .loc 1 2802 0
 173 0018 0C37     	 adds r7,r7,#12
 174              	 .cfi_def_cfa_offset 4
 175 001a BD46     	 mov sp,r7
 176              	 .cfi_def_cfa_register 13
 177              	 
 178 001c 5DF8047B 	 ldr r7,[sp],#4
 179              	 .cfi_restore 7
 180              	 .cfi_def_cfa_offset 0
 181 0020 7047     	 bx lr
 182              	 .cfi_endproc
 183              	.LFE195:
 185 0022 00BF     	 .section .text.XMC_VADC_GROUP_BackgroundEnableArbitrationSlot,"ax",%progbits
 186              	 .align 2
 187              	 .thumb
 188              	 .thumb_func
 190              	XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:
 191              	.LFB211:
2803:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2804:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2805:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2806:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2807:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    bool  returns true if the arbitration is enabled else returns false.
2808:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2809:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2810:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the arbitration status of the scan request source.<BR>\n
2811:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2812:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2813:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the scan slot. A call to this API would return the status of the arbitration slot of scan.
2814:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit field GxARBPR.ASEN1.
2815:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2816:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2817:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot(),<BR>  XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR
2818:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2819:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled(XMC_VADC_GROUP_t *const group_ptr)
2820:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2821:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled:Wrong Group Pointer", XMC_VADC_CHECK_GROU
2822:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2823:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr->ARBPR & (uint32_t)VADC_G_ARBPR_ASEN1_Msk) >> VADC_G_ARBPR_ASEN1_Pos);
2824:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2825:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2826:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2827:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2828:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_input  Choice of the input earmarked as a trigger line
2829:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2830:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2831:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2832:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2833:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for scan request source.<BR>\n
2834:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2835:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
2836:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2837:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
2838:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTSEL.
2839:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2840:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2841:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectGating()<BR> XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
2842:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2843:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_TRIGGER_INPUT_SEL
2844:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2845:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2846:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2847:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2848:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Trigger edge selection
2849:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2850:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2851:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2852:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2853:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the trigger edge for scan request source.<BR>\n
2854:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2855:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible trigger edges. This is
2856:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2857:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTMODE.
2858:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2859:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2860:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2861:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2862:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGER
2863:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2864:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2865:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2866:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param gating_input  Module input signal meant to be selected as gating input
2867:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2868:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2869:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2870:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2871:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for scan request source.<BR>\n
2872:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
2873:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the scan request source o
2874:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxASMR.ENGT has to be config
2875:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxAS
2876:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2877:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2878:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2879:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2880:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectGating(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_GATE_INPUT_SELECT_
2881:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2882:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2883:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2884:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the scan request source
2885:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2886:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2887:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2888:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2889:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of scan request source.<BR>\n
2890:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
2891:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
2892:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
2893:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2894:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2895:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectGating();
2896:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2897:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_G
2898:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2899:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2900:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMODE
2901:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2902:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
2903:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= (uint32_t) (~((uint32_t)VADC_G_ASMR_ENGT_Msk));
2904:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Set the new gating mode */
2905:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)((uint32_t)mode_sel << VADC_G_ASMR_ENGT_Pos);
2906:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2907:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2908:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2909:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2910:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2911:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2912:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2913:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2914:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
2915:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2916:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2917:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2918:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2919:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. Every request source event will cause a load event to occur. A call to this API would 
2920:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2921:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2922:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2923:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableContinuousMode()<BR>
2924:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2925:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2926:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2927:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
2928:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_SCAN_Msk;
2929:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2930:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2931:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2932:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2933:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2934:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2935:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2936:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2937:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
2938:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2939:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2940:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2941:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2942:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. By invoking this feature the Autoscan mode of operations is disabled. A call to this A
2943:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2944:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2945:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2946:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableContinuousMode()<BR>
2947:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2948:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2949:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2950:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2951:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_SCAN_Msk);
2952:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2953:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2954:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2955:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2956:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2957:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2958:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2959:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2960:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
2961:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
2962:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the s
2963:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxASMR.LD
2964:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2965:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2966:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2967:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2968:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
2969:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
2970:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
2971:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_LDEV_Msk;
2972:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
2973:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2974:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2975:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2976:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2977:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2978:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2979:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2980:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing scan sequence conversion.<BR>\n
2981:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
2982:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
2983:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
2984:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxASMR, GxASCTRL, GxARBPR to achieve the sequen
2985:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2986:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2987:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2988:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2989:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSequenceAbort(XMC_VADC_GROUP_t *const group_ptr);
2990:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
2991:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2992:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2993:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel meant to be added to scan sequence
2994:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
2995:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2996:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2997:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2998:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2999:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds a channel to the scan sequence.<BR>\n
3000:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the scan request source. This will be added to
3001:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
3002:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
3003:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3004:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3005:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddMultipleChannels()<BR>
3006:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3007:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddChannelToSequence(XMC_VADC_GROUP_t *const group_ptr, con
3008:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3009:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("VADC_GSCAN_AddSingleChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
3010:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddChannelToSequence:Wrong Channel Number",
3011:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3012:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASSEL |= (uint32_t)((uint32_t)1 << ch_num);
3013:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3014:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3015:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3016:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3017:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
3018:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
3019:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
3020:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the selected channels
3021:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
3022:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3023:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3024:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3025:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3026:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
3027:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
3028:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
3029:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
3030:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3031:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3032:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddChannelToSequence()<BR>
3033:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3034:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddMultipleChannels(XMC_VADC_GROUP_t *const group_ptr, cons
3035:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3036:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddMultipleChannels:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR
3037:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASSEL = ch_mask;
3038:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3039:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3040:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3041:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3042:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
3043:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3044:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3045:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
3046:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3047:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3048:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determine if the channel is pending for conversion.<BR>\n
3049:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
3050:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3051:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
3052:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the channel is found in the pending register (GxASPND).
3053:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3054:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3055:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanGetNumChannelsPending()<BR>
3056:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3057:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanIsChannelPending(XMC_VADC_GROUP_t *const group_ptr, const u
3058:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3059:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3060:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
3061:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_C
3062:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3063:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return ( (bool)((uint32_t)(group_ptr->ASPND >> ch_num) & 1U));
3064:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3065:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3066:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3067:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_ptr     Constant pointer to the VADC group
3068:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return  <BR>
3069:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
3070:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to 0x8]
3071:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3072:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3073:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the total number of pending channels.<BR>\n
3074:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
3075:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3076:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
3077:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * return the total number of channels pending (GxASPND).
3078:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3079:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3080:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanIsChannelPending()<BR>
3081:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3082:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_ScanGetNumChannelsPending(XMC_VADC_GROUP_t *const group_ptr);
3083:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3084:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3085:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3086:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3087:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3088:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3089:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3090:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
3091:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will set the request source event for scan. This will trigger a interrupt if the
3092:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
3093:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
3094:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3095:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3096:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
3097:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3098:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
3099:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
3101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SEFLAG    |= (uint32_t)VADC_G_SEFLAG_SEV1_Msk;
3102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges the scan conversion complete request source event.<BR>\n
3111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
3112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
3113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanTriggerReqSrcEvent()<BR>
3116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanClearReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
3118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanClearReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
3120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SEFCLR |= (uint32_t)VADC_G_SEFCLR_SEV1_Msk;
3121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
3127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
3128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
3131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will get the status of the scan request source event. Will return a true
3132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the event has occurred for scan. A call to this API would access the register bit field GxSEF
3133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanGetReqSrcEventStatus(XMC_VADC_GROUP_t *const group_ptr)
3138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GSCAN_GetRSEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
3140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return ( (bool)(group_ptr->SEFLAG & (uint32_t)VADC_G_SEFLAG_SEV1_Msk));
3141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
3145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr    Service Request Id
3146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Connects the scan request source event to the SR line of VADC.<BR>\n
3151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a scan request source event. Hence to get a 
3152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
3153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * field GxSEVNP.SEV1NP .
3154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VA
3159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the trigger for scan request source.<BR>\n
3167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API, the trigger signal will be activated for the scan request source. The trigger
3168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * edge will be selected from the ASCTRL register. The Selection of a input will be done by
3169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectTrigger(). A call to this API would configure the register bit field Gx
3170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanDisableExternalTrigger()<BR>
3173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
3175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
3177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_ENTR_Msk;
3179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the trigger for scan request source.<BR>
3188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the scan request source.
3189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the scan request source. If any configuration were
3190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * to select the trigger input in GxASCTRL, it will be not be effected by this API.
3191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENTR.
3192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
3195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
3197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3198:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
3199:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3200:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENTR_Msk);
3201:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3202:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3203:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3204:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3205:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param channel_num   channel number to be removed from the scan sequence.
3206:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3207:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3208:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3209:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3210:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Removes a channel from the scan sequence.<BR>
3211:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the it is possible to remove a single channel from the conversion sequence.
3212:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The remaining channels will continue however they are.
3213:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register GxASSEL.
3214:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3215:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3216:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3217:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3218:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanRemoveChannel(XMC_VADC_GROUP_t *const group_ptr, const uint32_t channel_num
3219:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3220:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3221:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3222:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3223:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3224:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3225:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3226:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the scan request source event .<BR>
3227:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be activated for the scan request source.
3228:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3229:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENSI.
3230:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3231:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3232:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableEvent(),<BR> XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode()<BR>
3233:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3234:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableEvent(XMC_VADC_GROUP_t *const group_ptr)
3235:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3236:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
3237:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3238:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= ((uint32_t)VADC_G_ASMR_ENSI_Msk);
3239:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3240:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3241:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3242:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3243:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3244:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3245:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3246:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3247:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the scan request source event .<BR>
3248:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be deactivated for the scan request source.
3249:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3250:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENSI.
3251:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3252:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3253:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableEvent(),<BR> XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode()<BR>
3254:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3255:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableEvent(XMC_VADC_GROUP_t *const group_ptr)
3256:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3257:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
3258:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3259:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENSI_Msk);
3260:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3261:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
3262:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3263:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3264:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Pointer to the VADC module
3265:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
3266:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3267:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3268:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the Background scan functional block.<BR>\n
3269:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The BACKGROUND SCAN request source functional block converts channels of all VADC groups that ha
3270:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * been assigned as a priority channel (priority channels can be converted only by queue and scan).
3271:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * request source converts the unprioritized channels. Unprioritized channels however can also be u
3272:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * and scan. But a channel which is prioritized can not be used with background request source.
3273:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3274:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3275:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR> XMC_VADC_GROUP_BackgroundDisableArbitratio
3276:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundSelectGating()<BR>
3277:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3278:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_
3279:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3280:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
3281:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3282:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group which may receive a
3283:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                  conversion request from background request source
3284:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3285:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3286:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3287:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3288:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3289:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the Background request source.<BR>\n
3290:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
3291:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
3292:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * comes to the Background slot. Thus this must be enabled if any conversion need to take place.
3293:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2.
3294:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3295:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3296:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableArbitrationSlot()<BR>
3297:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3298:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_p
3299:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 192              	 .loc 1 3299 0
 193              	 .cfi_startproc
 194              	 
 195              	 
 196              	 
 197 0000 80B4     	 push {r7}
 198              	 .cfi_def_cfa_offset 4
 199              	 .cfi_offset 7,-4
 200 0002 83B0     	 sub sp,sp,#12
 201              	 .cfi_def_cfa_offset 16
 202 0004 00AF     	 add r7,sp,#0
 203              	 .cfi_def_cfa_register 7
 204 0006 7860     	 str r0,[r7,#4]
3300:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK_
3301:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN2_Msk;
 205              	 .loc 1 3301 0
 206 0008 7B68     	 ldr r3,[r7,#4]
 207 000a D3F88430 	 ldr r3,[r3,#132]
 208 000e 43F08062 	 orr r2,r3,#67108864
 209 0012 7B68     	 ldr r3,[r7,#4]
 210 0014 C3F88420 	 str r2,[r3,#132]
3302:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
 211              	 .loc 1 3302 0
 212 0018 0C37     	 adds r7,r7,#12
 213              	 .cfi_def_cfa_offset 4
 214 001a BD46     	 mov sp,r7
 215              	 .cfi_def_cfa_register 13
 216              	 
 217 001c 5DF8047B 	 ldr r7,[sp],#4
 218              	 .cfi_restore 7
 219              	 .cfi_def_cfa_offset 0
 220 0020 7047     	 bx lr
 221              	 .cfi_endproc
 222              	.LFE211:
 224 0022 00BF     	 .section .text.XMC_VADC_GROUP_BackgroundDisableArbitrationSlot,"ax",%progbits
 225              	 .align 2
 226              	 .thumb
 227              	 .thumb_func
 229              	XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:
 230              	.LFB212:
3303:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3304:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3305:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group which may receive a conversion request
3306:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                     from background request source
3307:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3308:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3309:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3310:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3311:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the Background request source.<BR>\n
3312:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
3313:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
3314:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * comes to the Background slot.A call to this API will lead to all conversions request by Backgrou
3315:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2
3316:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3317:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3318:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR>
3319:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3320:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_
3321:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 231              	 .loc 1 3321 0
 232              	 .cfi_startproc
 233              	 
 234              	 
 235              	 
 236 0000 80B4     	 push {r7}
 237              	 .cfi_def_cfa_offset 4
 238              	 .cfi_offset 7,-4
 239 0002 83B0     	 sub sp,sp,#12
 240              	 .cfi_def_cfa_offset 16
 241 0004 00AF     	 add r7,sp,#0
 242              	 .cfi_def_cfa_register 7
 243 0006 7860     	 str r0,[r7,#4]
3322:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK
3323:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN2_Msk);
 244              	 .loc 1 3323 0
 245 0008 7B68     	 ldr r3,[r7,#4]
 246 000a D3F88430 	 ldr r3,[r3,#132]
 247 000e 23F08062 	 bic r2,r3,#67108864
 248 0012 7B68     	 ldr r3,[r7,#4]
 249 0014 C3F88420 	 str r2,[r3,#132]
3324:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
 250              	 .loc 1 3324 0
 251 0018 0C37     	 adds r7,r7,#12
 252              	 .cfi_def_cfa_offset 4
 253 001a BD46     	 mov sp,r7
 254              	 .cfi_def_cfa_register 13
 255              	 
 256 001c 5DF8047B 	 ldr r7,[sp],#4
 257              	 .cfi_restore 7
 258              	 .cfi_def_cfa_offset 0
 259 0020 7047     	 bx lr
 260              	 .cfi_endproc
 261              	.LFE212:
 263 0022 00BF     	 .section .text.XMC_VADC_GROUP_QueueEnableArbitrationSlot,"ax",%progbits
 264              	 .align 2
 265              	 .thumb
 266              	 .thumb_func
 268              	XMC_VADC_GROUP_QueueEnableArbitrationSlot:
 269              	.LFB229:
3325:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
3326:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3327:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3328:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3329:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
3330:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_TRIGGER_INPUT_SELECT_t
3331:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3332:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3333:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3334:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3335:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for Background request source.<BR>\n
3336:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
3337:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
3338:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
3339:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3340:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTSEL.
3341:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3342:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3343:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
3344:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3345:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTrigger(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t in
3346:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3347:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3348:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3349:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3350:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Select the trigger edge
3351:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3352:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3353:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3354:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3355:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger edge for Background request source.<BR>\n
3356:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
3357:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible values for the trigger 
3358:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
3359:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTMODE.
3360:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3361:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3362:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
3363:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3364:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
3365:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3366:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3367:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3368:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Module input signal meant to be selected as gating input
3369:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_GATE_INPUT_SELECT_t
3370:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3371:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3372:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3373:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3374:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for Background request source.<BR>\n
3375:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
3376:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the Background request so
3377:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxBRSMR.ENGT has to be confi
3378:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field BRSC
3379:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3380:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3381:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR>
3382:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3383:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectGating(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t inp
3384:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3385:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3386:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3387:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the background scan request source
3388:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3389:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3390:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3391:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <b>Details of function</b><br>
3392:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of background request source.<BR>\n
3393:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
3394:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
3395:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
3396:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENGT.
3397:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3398:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
3399:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectGating();
3400:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3401:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundSetGatingMode(XMC_VADC_GLOBAL_t *const global_ptr,
3402:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GATEMODE_t mode_sel)
3403:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3404:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong Module Pointer", (global_ptr == VADC))
3405:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_G
3406:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3407:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
3408:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= (uint32_t)(~((uint32_t)VADC_BRSMR_ENGT_Msk));
3409:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Configure the new gating mode*/
3410:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)((uint32_t)mode_sel << VADC_BRSMR_ENGT_Pos);
3411:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3412:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3413:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3414:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3415:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3416:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3417:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3418:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3419:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3420:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
3421:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
3422:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is needed. Using autoscan (continuous conversion)feature it is possible to start the con
3423:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * once and allow the sequence to repeat without any further triggers. Once all channels belonging 
3424:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * request source have been converted, a request source completion event is generated. Generation o
3425:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * can restart the Background configure sequence. Every request source event will cause a load even
3426:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would access the register bit field BRSMR.SCAN.
3427:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3428:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3429:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableContinuousMode()<BR>
3430:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3431:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableContinuousMode(XMC_VADC_GLOBAL_t *const global
3432:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3433:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableContinuousMode:Wrong Module Pointer", (global_ptr == 
3434:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_SCAN_Msk;
3435:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3436:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3437:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3438:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3439:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3440:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3441:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3442:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3443:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
3444:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
3445:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
3446:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a Background req
3447:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
3448:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. By invoking this API the Autoscan mode of operations is disabled. A call to this API w
3449:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * register bit field BRSMR.SCAN.
3450:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3451:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3452:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableContinuousMode()<BR>
3453:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3454:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableContinuousMode(XMC_VADC_GLOBAL_t *const globa
3455:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3456:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableContinuousMode:Wrong Module Pointer", (global_ptr ==
3457:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_SCAN_Msk);
3458:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3459:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3460:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3461:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3462:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3463:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3464:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3465:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3466:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
3467:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3468:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the b
3469:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * has already been filled up with entries. A call to this API would set the register bit field BRS
3470:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3471:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3472:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3473:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3474:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerConversion(XMC_VADC_GLOBAL_t *const global_pt
3475:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3476:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerConversion:Wrong Module Pointer", (global_ptr == VAD
3477:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_LDEV_Msk;
3478:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3479:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3480:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3481:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3482:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3483:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3484:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3485:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3486:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing background scan conversion(sequence).<BR>\n
3487:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
3488:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
3489:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
3490:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers BRSMR, BRSCTRL, GxARBPR(if group is available) 
3491:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * current scan sequence.
3492:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3493:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3494:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3495:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3496:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundAbortSequence(XMC_VADC_GLOBAL_t *const global_ptr);
3497:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3498:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3499:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3500:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3501:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Request source
3502:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The unprioritized channel meant to be added to the scan sequence
3503:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3504:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3505:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3506:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3507:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3508:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds a channel to the background scan sequence.<BR>\n
3509:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the background scan request source. This will 
3510:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
3511:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3512:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3513:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3514:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddMultipleChannels()<BR>
3515:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3516:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundAddChannelToSequence(XMC_VADC_GLOBAL_t *const global
3517:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint32_t grp_num,
3518:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint32_t ch_num)
3519:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3520:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Module Pointer", (global_ptr == 
3521:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Group Number", ((grp_num) < XMC_
3522:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Channel Number",
3523:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3524:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3525:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= (uint32_t)((uint32_t)1 << ch_num);
3526:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3527:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3528:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3529:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3530:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3531:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
3532:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
3533:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
3534:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the previously selected channels
3535:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
3536:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3537:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3538:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3539:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3540:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
3541:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
3542:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
3543:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3544:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3545:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3546:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3547:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3548:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgndAddMultipleChannels(XMC_VADC_GLOBAL_t *const global_ptr
3549:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint32_t grp_num,
3550:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint32_t ch_mask)
3551:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3552:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Module Pointer", (global_ptr == VADC
3553:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Group Number",   ((grp_num) < XMC_VA
3554:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= ch_mask;
3555:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3556:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3557:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3558:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3559:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3560:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Request source
3561:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The unprioritized channel meant to be added to the scan sequence
3562:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3563:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3564:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3565:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3566:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3567:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Removes a channel to the background scan sequence.<BR>\n
3568:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the background scan request source. This will 
3569:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
3570:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3571:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3572:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3573:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3574:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3575:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundRemoveChannelFromSequence(XMC_VADC_GLOBAL_t *const g
3576:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint32_t grp_num,
3577:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint32_t ch_num)
3578:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3579:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Module Pointer", (global_ptr == 
3580:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Group Number", ((grp_num) < XMC_
3581:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Channel Number",
3582:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3583:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3584:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] &= (uint32_t)~((uint32_t)1 << ch_num);
3585:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3586:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3587:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3588:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3589:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3590:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
3591:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
3592:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
3593:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the previously selected channels
3594:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
3595:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3596:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3597:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3598:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3599:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Removes multiple channels to the scan sequence.<BR>\n
3600:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
3601:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
3602:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3603:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3604:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3605:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3606:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3607:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgndRemoveMultipleChannels(XMC_VADC_GLOBAL_t *const global_
3608:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint32_t grp_num,
3609:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint32_t ch_mask)
3610:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3611:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Module Pointer", (global_ptr == VADC
3612:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Group Number",   ((grp_num) < XMC_VA
3613:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] &= (uint32_t)~ch_mask;
3614:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3615:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3616:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3617:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3618:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3619:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
3620:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3621:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3622:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
3623:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3624:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3625:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determine if the channel is pending.<BR>\n
3626:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
3627:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3628:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
3629:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the channel is found in the pending register (BRSPND[\b grp_num]).
3630:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3631:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3632:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending()<BR>
3633:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3634:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundIsChannelPending(XMC_VADC_GLOBAL_t *const global_ptr
3635:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint32_t grp_num,
3636:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     const uint32_t ch_num)
3637:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3638:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Module Pointer", (global_ptr == VADC
3639:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Group Number",   ((grp_num) < XMC_VA
3640:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Channel Number",
3641:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3642:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3643:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return ( (bool)(global_ptr->BRSPND[grp_num] & (uint32_t)((uint32_t)1 << ch_num)));
3644:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3645:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3646:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3647:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3648:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   * @return  <BR>
3649:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
3650:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to (0x8*number of groups)]
3651:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3652:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3653:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the number of pending channels.<BR>\n
3654:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
3655:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3656:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
3657:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * return the total number of channels pending (BRSPND[\b grp_num]).
3658:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3659:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3660:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundIsChannelPending()<BR>
3661:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3662:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending(XMC_VADC_GLOBAL_t *const global_ptr);
3663:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3664:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3665:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3666:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3667:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3668:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3669:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3670:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
3671:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will set the request source event for background scan. This will trigger a interrupt if
3672:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
3673:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB.
3674:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3675:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3676:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
3677:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3678:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent(XMC_VADC_GLOBAL_t *const global_p
3679:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3680:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent:Wrong Module Pointer", (global_ptr == VA
3681:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk;
3682:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3683:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3684:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3685:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3686:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3687:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3688:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3689:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3690:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges the background scan conversion complete request source event.<BR>\n
3691:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
3692:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB
3693:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3694:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3695:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent()<BR>
3696:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3697:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent(XMC_VADC_GLOBAL_t *const global_ptr
3698:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3699:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent:Wrong Module Pointer", (global_ptr == VADC
3700:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLBCLR_Msk;
3701:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3702:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3703:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3704:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3705:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3706:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
3707:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
3708:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3709:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3710:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
3711:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will get the status of the background scan request source event. Will return a true
3712:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the event has occurred for background scan. A call to this API would configure the register
3713:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit field GLOBEFLAG.SEVGLB.
3714:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3715:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3716:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3717:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3718:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus(XMC_VADC_GLOBAL_t *const global
3719:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3720:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus:Wrong Module Pointer", (global_ptr == 
3721:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((bool)(global_ptr->GLOBEFLAG & (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk));
3722:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3723:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3724:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3725:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3726:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3727:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3728:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3729:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3730:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the trigger for background scan request source.<BR>\n
3731:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be activated for the scan request source. The trigger signal 
3732:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * edge will be selected from the BRSCTRL register. The Selection of a input will be done by
3733:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectTrigger(). A call to this API would configure the register bit f
3734:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3735:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3736:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(
3737:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3738:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger(XMC_VADC_GLOBAL_t *const globa
3739:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3740:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger:Wrong Module Pointer", (global_ptr ==
3741:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3742:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_ENTR_Msk;
3743:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3744:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3745:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3746:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3747:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3748:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3749:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3750:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3751:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the trigger for background scan request source.<BR>
3752:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the background scan request source.
3753:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the background scan request source. If any configu
3754:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * to select the trigger input in BRSCTRL will be not be effected. A call to this API would configu
3755:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit field BRSMR.ENTR.
3756:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3757:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><br>
3758:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<BR>
3759:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3760:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(XMC_VADC_GLOBAL_t *const glob
3761:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3762:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger:Wrong Module Pointer", (global_ptr =
3763:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3764:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_ENTR_Msk);
3765:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3766:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3767:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3768:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3769:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3770:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3771:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3772:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3773:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the background scan request source event .<BR>
3774:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be activated for the background scan request sou
3775:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3776:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENSI.
3777:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3778:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3779:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableEvent(),<BR> XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptN
3780:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3781:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableEvent(XMC_VADC_GLOBAL_t *const global_ptr)
3782:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3783:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableEvent:Wrong Module Pointer", (global_ptr == VADC))
3784:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3785:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= ((uint32_t)VADC_BRSMR_ENSI_Msk);
3786:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3787:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3788:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3789:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr     Pointer to the VADC module
3790:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3791:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3792:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3793:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3794:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the background scan request source event .<BR>
3795:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be deactivated for the background scan request s
3796:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3797:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENSI.
3798:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3799:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3800:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableEvent(),<BR> XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNo
3801:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3802:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableEvent(XMC_VADC_GLOBAL_t *const global_ptr)
3803:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3804:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableEvent:Wrong Module Pointer", (global_ptr == VADC))
3805:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3806:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_ENSI_Msk);
3807:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3808:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3809:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_QUEUE_AVAILABLE == 1U)
3810:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3811:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
3812:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
3813:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3814:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3815:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3816:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3817:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes VADC QUEUE functional block.<BR>\n
3818:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The QUEUE request source functional block converts channels stored in a queue. The first channel
3819:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * queue is converted first. A channel once converted, can be placed back into the queue if desired
3820:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_QueueEnable
3821:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
3822:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_QueueDisableArb
3823:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxQCTRL0, GxQMR0 to configure the queu
3824:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * source.
3825:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3826:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3827:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR> XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR
3828:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR> XMC_VADC_GROUP_QueueSelectGating()<BR>
3829:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3830:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_QUEUE_CONFIG_t *con
3831:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3832:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3833:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3834:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3835:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3836:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3837:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3838:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the queue request source.<BR>\n
3839:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3840:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3841:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the queue slot. Thus this must be enabled if any conversion need to take place.
3842:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3843:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3844:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3845:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR>
3846:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3847:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3848:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 270              	 .loc 1 3848 0
 271              	 .cfi_startproc
 272              	 
 273              	 
 274              	 
 275 0000 80B4     	 push {r7}
 276              	 .cfi_def_cfa_offset 4
 277              	 .cfi_offset 7,-4
 278 0002 83B0     	 sub sp,sp,#12
 279              	 .cfi_def_cfa_offset 16
 280 0004 00AF     	 add r7,sp,#0
 281              	 .cfi_def_cfa_register 7
 282 0006 7860     	 str r0,[r7,#4]
3849:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
3850:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)1 << VADC_G_ARBPR_ASEN0_Pos);
 283              	 .loc 1 3850 0
 284 0008 7B68     	 ldr r3,[r7,#4]
 285 000a D3F88430 	 ldr r3,[r3,#132]
 286 000e 43F08072 	 orr r2,r3,#16777216
 287 0012 7B68     	 ldr r3,[r7,#4]
 288 0014 C3F88420 	 str r2,[r3,#132]
3851:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
 289              	 .loc 1 3851 0
 290 0018 0C37     	 adds r7,r7,#12
 291              	 .cfi_def_cfa_offset 4
 292 001a BD46     	 mov sp,r7
 293              	 .cfi_def_cfa_register 13
 294              	 
 295 001c 5DF8047B 	 ldr r7,[sp],#4
 296              	 .cfi_restore 7
 297              	 .cfi_def_cfa_offset 0
 298 0020 7047     	 bx lr
 299              	 .cfi_endproc
 300              	.LFE229:
 302 0022 00BF     	 .section .text.XMC_VADC_GROUP_QueueDisableArbitrationSlot,"ax",%progbits
 303              	 .align 2
 304              	 .thumb
 305              	 .thumb_func
 307              	XMC_VADC_GROUP_QueueDisableArbitrationSlot:
 308              	.LFB230:
3852:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3853:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3854:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3855:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3856:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3857:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3858:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3859:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the queue request source.<BR>\n
3860:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3861:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3862:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the queue slot.A call to this API will lead to all conversions request by queue to be blocked
3863:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3864:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3865:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3866:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR>
3867:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3868:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3869:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 309              	 .loc 1 3869 0
 310              	 .cfi_startproc
 311              	 
 312              	 
 313              	 
 314 0000 80B4     	 push {r7}
 315              	 .cfi_def_cfa_offset 4
 316              	 .cfi_offset 7,-4
 317 0002 83B0     	 sub sp,sp,#12
 318              	 .cfi_def_cfa_offset 16
 319 0004 00AF     	 add r7,sp,#0
 320              	 .cfi_def_cfa_register 7
 321 0006 7860     	 str r0,[r7,#4]
3870:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
3871:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN0_Msk);
 322              	 .loc 1 3871 0
 323 0008 7B68     	 ldr r3,[r7,#4]
 324 000a D3F88430 	 ldr r3,[r3,#132]
 325 000e 23F08072 	 bic r2,r3,#16777216
 326 0012 7B68     	 ldr r3,[r7,#4]
 327 0014 C3F88420 	 str r2,[r3,#132]
3872:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
 328              	 .loc 1 3872 0
 329 0018 0C37     	 adds r7,r7,#12
 330              	 .cfi_def_cfa_offset 4
 331 001a BD46     	 mov sp,r7
 332              	 .cfi_def_cfa_register 13
 333              	 
 334 001c 5DF8047B 	 ldr r7,[sp],#4
 335              	 .cfi_restore 7
 336              	 .cfi_def_cfa_offset 0
 337 0020 7047     	 bx lr
 338              	 .cfi_endproc
 339              	.LFE230:
 341 0022 00BF     	 .section .text.XMC_VADC_GROUP_QueueFlushEntries,"ax",%progbits
 342              	 .align 2
 343              	 .thumb
 344              	 .thumb_func
 346              	XMC_VADC_GROUP_QueueFlushEntries:
 347              	.LFB234:
3873:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3874:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3875:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3876:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3877:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3878:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    bool  returns true if the arbitration is enabled else returns false.
3879:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3880:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3881:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the arbitration status of the queue request source.<BR>\n
3882:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the queue request source must have its conversion request considered by the arbiter, it must 
3883:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3884:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the queue slot. A call to this API would return the status of the arbitration slot of queue.
3885:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit field GxARBPR.ASEN1.
3886:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3887:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3888:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot(),<BR>  XMC_VADC_GROUP_QueueDisableArbitrationSlot()<
3889:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3890:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled(XMC_VADC_GROUP_t *const group_ptr
3891:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3892:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled:Wrong Group Pointer", XMC_VADC_CHECK_GRO
3893:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3894:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr->ARBPR & (uint32_t)VADC_G_ARBPR_ASEN0_Msk) >> VADC_G_ARBPR_ASEN0_Pos);
3895:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3896:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3897:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3898:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3899:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
3900:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3901:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3902:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3903:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3904:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for queue request source.<BR>\n
3905:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3906:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
3907:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3908:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3909:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTSEL.
3910:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3911:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3912:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3913:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3914:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTrigger(XMC_VADC_GROUP_t *const group_ptr,
3915:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****                                        const XMC_VADC_TRIGGER_INPUT_SELECT_t input_num);
3916:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3917:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3918:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3919:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Choice of the trigger edge
3920:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3921:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3922:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3923:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3924:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal edge for queue request source.<BR>\n
3925:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3926:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 trigger edges. This is
3927:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3928:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3929:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTMODE.
3930:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3931:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3932:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3933:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3934:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGE
3935:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3936:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3937:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3938:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as the gating line
3939:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3940:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3941:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3942:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3943:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for queue request source.<BR>\n
3944:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
3945:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the queue request source 
3946:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxQMR0.ENGT has to be config
3947:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxQC
3948:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3949:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3950:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR>
3951:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3952:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectGating(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GATE_INPUT_
3953:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3954:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3955:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3956:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the queue request source
3957:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3958:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3959:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3960:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <b>Details of function</b><br>
3961:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of queue request source.<BR>\n
3962:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
3963:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
3964:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
3965:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQMR0.ENGT.
3966:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3967:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
3968:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_QueueSelectGating();
3969:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3970:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_
3971:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
3972:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
3973:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMOD
3974:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3975:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
3976:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 &= (uint32_t)(~((uint32_t) VADC_G_QMR0_ENGT_Msk));
3977:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Set the new gating mode */
3978:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)mode_sel << VADC_G_QMR0_ENGT_Pos);
3979:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
3980:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3981:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
3982:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3983:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3984:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3985:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3986:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3987:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3988:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>
3989:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3990:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the queue unit to generate a conversion request to the analog converter. It is assumed that the 
3991:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxQMR0.TR
3992:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3993:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Note:</b><br>
3994:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * The conversion of queue entry will start immediately after the entry has been loaded into GxQINR
3995:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This happens only if the queue entry has been loaded into the register without the need for the 
3996:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * If a H/W Trigger is selected while loading the entry, the conversion will occur in one of the 2 
3997:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <ul>
3998:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <li> The H/W generates a trigger needed for the queue request source.
3999:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * <li> The Conversion is triggered manually by calling this API.
4000:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * </ul>
4001:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4002:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4003:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
4004:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4005:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
4006:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
4007:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
4008:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)1 << VADC_G_QMR0_TREV_Pos);
4009:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
4010:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
4011:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4012:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4013:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4014:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    uint32_t returns the total number of channels.
4015:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *             <BR>Range: [0x0 to 0x8]
4016:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4017:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4018:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the number of channels present in the queue.<BR>\n
4019:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will return the queue buffer size. This buffer will be consisting of valid queue entrie
4020:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * will be converted when a trigger event occurs. All the entries that are loaded onto the GxQINR0 
4021:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * be added to the queue buffer. Hence if an application needs to get the number of valid queue ent
4022:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * this API would provide the interface. A call to this API would access the registers GxQBUR0, GxQ
4023:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * to determine the queue length.
4024:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4025:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4026:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
4027:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4028:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_QueueGetLength(XMC_VADC_GROUP_t *const group_ptr);
4029:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
4030:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4031:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4032:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4033:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4034:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4035:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4036:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing conversion by flushing the queue.<BR>\n
4037:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will flush the queue buffer. Ongoing conversion of the Queue request source will
4038:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
4039:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxQCTRL0, GxQMR0, GxARBPR in order to abort
4040:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * the queue sequence.
4041:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4042:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4043:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueFlushEntries() <BR>
4044:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4045:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueAbortSequence(XMC_VADC_GROUP_t *const group_ptr);
4046:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
4047:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4048:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4049:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4050:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4051:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4052:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4053:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * Flushing the queue Entry.<BR>\n
4054:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will flush one entry in the queue buffer. Ongoing conversion of the Queue request sourc
4055:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
4056:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers  GxQMR0. This is a Blocking API, i.e will only 
4057:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * all the entries are removed from the queue.
4058:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4059:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4060:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueAbortSequence(0<BR>
4061:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4062:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueFlushEntries(XMC_VADC_GROUP_t *const group_ptr)
4063:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** {
 348              	 .loc 1 4063 0
 349              	 .cfi_startproc
 350              	 
 351              	 
 352              	 
 353 0000 80B4     	 push {r7}
 354              	 .cfi_def_cfa_offset 4
 355              	 .cfi_offset 7,-4
 356 0002 83B0     	 sub sp,sp,#12
 357              	 .cfi_def_cfa_offset 16
 358 0004 00AF     	 add r7,sp,#0
 359              	 .cfi_def_cfa_register 7
 360 0006 7860     	 str r0,[r7,#4]
4064:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Initiate flushing of the queue */
4065:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_FLUSH_Msk;
 361              	 .loc 1 4065 0
 362 0008 7B68     	 ldr r3,[r7,#4]
 363 000a D3F80431 	 ldr r3,[r3,#260]
 364 000e 43F48062 	 orr r2,r3,#1024
 365 0012 7B68     	 ldr r3,[r7,#4]
 366 0014 C3F80421 	 str r2,[r3,#260]
4066:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** 
4067:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   while ( !((group_ptr->QSR0) & (uint32_t)VADC_G_QSR0_EMPTY_Msk))
 367              	 .loc 1 4067 0
 368 0018 00BF     	 nop
 369              	.L9:
 370              	 .loc 1 4067 0 is_stmt 0 discriminator 1
 371 001a 7B68     	 ldr r3,[r7,#4]
 372 001c D3F80831 	 ldr r3,[r3,#264]
 373 0020 03F02003 	 and r3,r3,#32
 374 0024 002B     	 cmp r3,#0
 375 0026 F8D0     	 beq .L9
4068:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   {
4069:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****     /* Wait until the queue is indeed flushed */
4070:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h ****   }
4071:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_vadc.h **** }
 376              	 .loc 1 4071 0 is_stmt 1
 377 0028 0C37     	 adds r7,r7,#12
 378              	 .cfi_def_cfa_offset 4
 379 002a BD46     	 mov sp,r7
 380              	 .cfi_def_cfa_register 13
 381              	 
 382 002c 5DF8047B 	 ldr r7,[sp],#4
 383              	 .cfi_restore 7
 384              	 .cfi_def_cfa_offset 0
 385 0030 7047     	 bx lr
 386              	 .cfi_endproc
 387              	.LFE234:
 389 0032 00BF     	 .section .rodata.g_xmc_vadc_group_array,"a",%progbits
 390              	 .align 2
 393              	g_xmc_vadc_group_array:
 394 0000 00440040 	 .word 1073759232
 395 0004 00480040 	 .word 1073760256
 396 0008 004C0040 	 .word 1073761280
 397 000c 00500040 	 .word 1073762304
 398              	 .section .text.XMC_VADC_GLOBAL_EnableModule,"ax",%progbits
 399              	 .align 2
 400              	 .global XMC_VADC_GLOBAL_EnableModule
 401              	 .thumb
 402              	 .thumb_func
 404              	XMC_VADC_GLOBAL_EnableModule:
 405              	.LFB256:
 406              	 .file 2 "../Libraries/XMCLib/src/xmc_vadc.c"
   1:../Libraries/XMCLib/src/xmc_vadc.c **** /**
   2:../Libraries/XMCLib/src/xmc_vadc.c ****  * @file xmc_vadc.c
   3:../Libraries/XMCLib/src/xmc_vadc.c ****  * @date 2019-12-16
   4:../Libraries/XMCLib/src/xmc_vadc.c ****  *
   5:../Libraries/XMCLib/src/xmc_vadc.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_vadc.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_vadc.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_vadc.c ****  *
   9:../Libraries/XMCLib/src/xmc_vadc.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_vadc.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  12:../Libraries/XMCLib/src/xmc_vadc.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  14:../Libraries/XMCLib/src/xmc_vadc.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_vadc.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_vadc.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_vadc.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_vadc.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_vadc.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  21:../Libraries/XMCLib/src/xmc_vadc.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_vadc.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_vadc.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_vadc.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_vadc.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_vadc.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  28:../Libraries/XMCLib/src/xmc_vadc.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_vadc.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_vadc.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_vadc.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_vadc.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_vadc.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_vadc.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  36:../Libraries/XMCLib/src/xmc_vadc.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_vadc.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_vadc.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_vadc.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  41:../Libraries/XMCLib/src/xmc_vadc.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_vadc.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  44:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-02-15:
  45:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  47:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-02-20:
  48:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Revised for XMC1201 device.<br>
  49:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  50:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-04-27:
  51:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Added new APIs for SHS.<br>
  52:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Added New APIs for trigger edge selection.<BR>
  53:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  54:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  55:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  56:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-06-20:
  57:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  58:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  59:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-06-25:
  60:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - BFL configuration in channel initialization fixed.
  61:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  62:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-07-28:
  63:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - CLOCK_GATING_SUPPORTED and PERIPHERAL_RESET_SUPPORTED macros used
  64:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Clubbed the macro definitions for XMC13 XMC12 and XMC14
  65:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Clubbed the macro definitions for XMC44 XMC47 and XMC48
  66:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - New APIs Created.
  67:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GLOBAL_SetIndividualBoundary
  68:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetIndividualBoundary
  69:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetAlias
  70:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetInputClass
  71:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelSetIclass
  72:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelGetResultAlignment
  73:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelGetInputClass
  74:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetResultSubtractionValue
  75:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  76:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-12-01:
  77:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fixed the analog calibration voltage for XMC1100 to external reference upper supply range.
  78:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fixed the XMC_VADC_GLOBAL_StartupCalibration() for XMC1100.
  79:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  80:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2016-06-17:
  81:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - New macros added XMC_VADC_SHS_FULL_SET_REG, XMC_VADC_RESULT_PRIORITY_AVAILABLE
  82:../Libraries/XMCLib/src/xmc_vadc.c ****  *       and XMC_VADC_SYNCTR_START_LOCATION
  83:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - New Enum added XMC_VADC_SHS_GAIN_LEVEL_t and XMC_VADC_SYNCTR_EVAL_t
  84:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fixed the EVAL configuration in API XMC_VADC_GROUP_CheckSlaveReadiness and XMC_VADC_GROUP_
  85:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - New APIs added are:
  86:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetSyncSlaveReadySignal
  87:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelGetAssertedEvents
  88:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetAssertedResultEvents
  89:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetResultRegPriority
  90:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetSyncReadySignal
  91:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetSyncReadySignal
  92:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetResultRegPriority
  93:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  94:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2017-01-11:
  95:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fix assertion in XMC_VADC_GROUP_CheckSlaveReadiness() and XMC_VADC_GROUP_IgnoreSlaveReadin
  96:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  97:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2018-06-26:
  98:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fixed XMC_VADC_GLOBAL_StartupCalibration(), added wait until calibration is started
  99:../Libraries/XMCLib/src/xmc_vadc.c ****  *
 100:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2019-03-30:
 101:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Changed XMC_VADC_GROUP_SetChannelAlias() to inline function
 102:../Libraries/XMCLib/src/xmc_vadc.c ****  *
 103:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2019-05-07:
 104:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fix compilation warnings
 105:../Libraries/XMCLib/src/xmc_vadc.c ****  *
 106:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2019-10-18:
 107:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Changed XMC_VADC_GLOBAL_StartupCalibration() to ensure calibration has started
 108:../Libraries/XMCLib/src/xmc_vadc.c ****  *
 109:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2019-12-16:
 110:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
 111:../Libraries/XMCLib/src/xmc_vadc.c ****  *
 112:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2020-03-18:
 113:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Changed XMC_VADC_GLOBAL_Init() setting ADC clock to 48MHz for XMC1400 series
 114:../Libraries/XMCLib/src/xmc_vadc.c ****  *
 115:../Libraries/XMCLib/src/xmc_vadc.c ****  * @endcond
 116:../Libraries/XMCLib/src/xmc_vadc.c ****  *
 117:../Libraries/XMCLib/src/xmc_vadc.c ****  */
 118:../Libraries/XMCLib/src/xmc_vadc.c **** 
 119:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 120:../Libraries/XMCLib/src/xmc_vadc.c ****  * HEADER FILES
 121:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 122:../Libraries/XMCLib/src/xmc_vadc.c **** #include "xmc_vadc.h"
 123:../Libraries/XMCLib/src/xmc_vadc.c **** 
 124:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 125:../Libraries/XMCLib/src/xmc_vadc.c ****  * MACROS
 126:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 127:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_MAX_ICLASS_SET          (2U)  /**< Defines the maximum number of conversion parame
 128:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_NUM_EMUX_INTERFACES     (2U)  /**< Defines the maximum number of external multiple
 129:../Libraries/XMCLib/src/xmc_vadc.c **** 
 130:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_RESULT_LEFT_ALIGN_10BIT (2U)  /**< Defines the 10 bit converted result register le
 131:../Libraries/XMCLib/src/xmc_vadc.c ****                                                     is used in the XMC_VADC_GLOBAL_SetCompareValue(
 132:../Libraries/XMCLib/src/xmc_vadc.c **** 
 133:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_SYNCTR_START_LOCATION (3U)  /**< Defines the location in SYNCTR needed for calcula
 134:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 135:../Libraries/XMCLib/src/xmc_vadc.c ****  * ENUMS
 136:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 137:../Libraries/XMCLib/src/xmc_vadc.c **** 
 138:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 139:../Libraries/XMCLib/src/xmc_vadc.c ****  * DATA STRUCTURES
 140:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 141:../Libraries/XMCLib/src/xmc_vadc.c **** 
 142:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 143:../Libraries/XMCLib/src/xmc_vadc.c ****  * GLOBAL DATA
 144:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 145:../Libraries/XMCLib/src/xmc_vadc.c **** 
 146:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 147:../Libraries/XMCLib/src/xmc_vadc.c **** 
 148:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
 149:../Libraries/XMCLib/src/xmc_vadc.c **** static VADC_G_TypeDef *const g_xmc_vadc_group_array[XMC_VADC_MAXIMUM_NUM_GROUPS] = {(VADC_G_TypeDef
 150:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 151:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 152:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 153:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                    };
 154:../Libraries/XMCLib/src/xmc_vadc.c **** #else
 155:../Libraries/XMCLib/src/xmc_vadc.c **** static VADC_G_TypeDef *const g_xmc_vadc_group_array[XMC_VADC_MAXIMUM_NUM_GROUPS] = {(VADC_G_TypeDef
 156:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 157:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                    };
 158:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 159:../Libraries/XMCLib/src/xmc_vadc.c **** 
 160:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 161:../Libraries/XMCLib/src/xmc_vadc.c **** 
 162:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 163:../Libraries/XMCLib/src/xmc_vadc.c ****  * LOCAL ROUTINES
 164:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 165:../Libraries/XMCLib/src/xmc_vadc.c **** 
 166:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 167:../Libraries/XMCLib/src/xmc_vadc.c ****  * API IMPLEMENTATION
 168:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 169:../Libraries/XMCLib/src/xmc_vadc.c **** 
 170:../Libraries/XMCLib/src/xmc_vadc.c **** /*API to enable the VADC Module*/
 171:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_EnableModule(void)
 172:../Libraries/XMCLib/src/xmc_vadc.c **** {
 407              	 .loc 2 172 0
 408              	 .cfi_startproc
 409              	 
 410              	 
 411 0000 80B5     	 push {r7,lr}
 412              	 .cfi_def_cfa_offset 8
 413              	 .cfi_offset 7,-8
 414              	 .cfi_offset 14,-4
 415 0002 00AF     	 add r7,sp,#0
 416              	 .cfi_def_cfa_register 7
 173:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
 174:../Libraries/XMCLib/src/xmc_vadc.c ****    * Enable Out of Range Comparator for ADC channels pins P2.2to P2.9. This hack is applicable only
 175:../Libraries/XMCLib/src/xmc_vadc.c ****    * and in particular the G11 step.
 176:../Libraries/XMCLib/src/xmc_vadc.c ****    *
 177:../Libraries/XMCLib/src/xmc_vadc.c ****    * Please refer to the XMC1000 Errata sheet V1.4 released 2014-06 Errata ID : ADC_AI.003 Additona
 178:../Libraries/XMCLib/src/xmc_vadc.c ****    * function
 179:../Libraries/XMCLib/src/xmc_vadc.c ****    */
 180:../Libraries/XMCLib/src/xmc_vadc.c **** 
 181:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined (COMPARATOR)
 182:../Libraries/XMCLib/src/xmc_vadc.c ****   COMPARATOR->ORCCTRL = (uint32_t)0xFF;
 183:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 184:../Libraries/XMCLib/src/xmc_vadc.c **** 
 185:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined(CLOCK_GATING_SUPPORTED)
 186:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_VADC);
 417              	 .loc 2 186 0
 418 0004 0120     	 movs r0,#1
 419 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 187:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 188:../Libraries/XMCLib/src/xmc_vadc.c **** 
 189:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 190:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Reset the Hardware */
 191:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_RESET_DeassertPeripheralReset((XMC_SCU_PERIPHERAL_RESET_t)XMC_SCU_PERIPHERAL_RESET_VADC )
 420              	 .loc 2 191 0
 421 000a 0120     	 movs r0,#1
 422 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 192:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 193:../Libraries/XMCLib/src/xmc_vadc.c **** }
 423              	 .loc 2 193 0
 424 0010 80BD     	 pop {r7,pc}
 425              	 .cfi_endproc
 426              	.LFE256:
 428 0012 00BF     	 .section .text.XMC_VADC_GLOBAL_DisableModule,"ax",%progbits
 429              	 .align 2
 430              	 .global XMC_VADC_GLOBAL_DisableModule
 431              	 .thumb
 432              	 .thumb_func
 434              	XMC_VADC_GLOBAL_DisableModule:
 435              	.LFB257:
 194:../Libraries/XMCLib/src/xmc_vadc.c **** 
 195:../Libraries/XMCLib/src/xmc_vadc.c **** /*API to Disable the VADC Module*/
 196:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_DisableModule(void)
 197:../Libraries/XMCLib/src/xmc_vadc.c **** {
 436              	 .loc 2 197 0
 437              	 .cfi_startproc
 438              	 
 439              	 
 440 0000 80B5     	 push {r7,lr}
 441              	 .cfi_def_cfa_offset 8
 442              	 .cfi_offset 7,-8
 443              	 .cfi_offset 14,-4
 444 0002 00AF     	 add r7,sp,#0
 445              	 .cfi_def_cfa_register 7
 198:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 199:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Reset the Hardware */
 200:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_RESET_AssertPeripheralReset((XMC_SCU_PERIPHERAL_RESET_t)XMC_SCU_PERIPHERAL_RESET_VADC );
 446              	 .loc 2 200 0
 447 0004 0120     	 movs r0,#1
 448 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 201:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 202:../Libraries/XMCLib/src/xmc_vadc.c **** 
 203:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined(CLOCK_GATING_SUPPORTED)
 204:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_VADC);
 449              	 .loc 2 204 0
 450 000a 0120     	 movs r0,#1
 451 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 205:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 206:../Libraries/XMCLib/src/xmc_vadc.c **** 
 207:../Libraries/XMCLib/src/xmc_vadc.c **** }
 452              	 .loc 2 207 0
 453 0010 80BD     	 pop {r7,pc}
 454              	 .cfi_endproc
 455              	.LFE257:
 457 0012 00BF     	 .section .text.XMC_VADC_GLOBAL_Init,"ax",%progbits
 458              	 .align 2
 459              	 .global XMC_VADC_GLOBAL_Init
 460              	 .thumb
 461              	 .thumb_func
 463              	XMC_VADC_GLOBAL_Init:
 464              	.LFB258:
 208:../Libraries/XMCLib/src/xmc_vadc.c **** 
 209:../Libraries/XMCLib/src/xmc_vadc.c **** 
 210:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize global resources */
 211:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
 212:../Libraries/XMCLib/src/xmc_vadc.c **** {
 465              	 .loc 2 212 0
 466              	 .cfi_startproc
 467              	 
 468              	 
 469 0000 80B5     	 push {r7,lr}
 470              	 .cfi_def_cfa_offset 8
 471              	 .cfi_offset 7,-8
 472              	 .cfi_offset 14,-4
 473 0002 82B0     	 sub sp,sp,#8
 474              	 .cfi_def_cfa_offset 16
 475 0004 00AF     	 add r7,sp,#0
 476              	 .cfi_def_cfa_register 7
 477 0006 7860     	 str r0,[r7,#4]
 478 0008 3960     	 str r1,[r7]
 213:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 0U)
 214:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
 215:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 216:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_Init:Wrong Module Pointer", (global_ptr == VADC))
 217:../Libraries/XMCLib/src/xmc_vadc.c **** 
 218:../Libraries/XMCLib/src/xmc_vadc.c **** #if (UC_SERIES == XMC14)
 219:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_CLOCK_SetAdcClockSrc(XMC_SCU_CLOCK_ADCCLKSRC_48MHZ);
 220:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 221:../Libraries/XMCLib/src/xmc_vadc.c **** 
 222:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the VADC module*/
 223:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GLOBAL_EnableModule();
 479              	 .loc 2 223 0
 480 000a FFF7FEFF 	 bl XMC_VADC_GLOBAL_EnableModule
 224:../Libraries/XMCLib/src/xmc_vadc.c **** 
 225:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->CLC = (uint32_t)(config->clc);
 481              	 .loc 2 225 0
 482 000e 3B68     	 ldr r3,[r7]
 483 0010 5A69     	 ldr r2,[r3,#20]
 484 0012 7B68     	 ldr r3,[r7,#4]
 485 0014 1A60     	 str r2,[r3]
 226:../Libraries/XMCLib/src/xmc_vadc.c **** 
 227:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Clock configuration */
 228:../Libraries/XMCLib/src/xmc_vadc.c **** 
 229:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 230:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBCFG  = (uint32_t)(config->clock_config.globcfg | (uint32_t)(VADC_GLOBCFG_DIVWC_Ms
 486              	 .loc 2 230 0
 487 0016 3B68     	 ldr r3,[r7]
 488 0018 5B68     	 ldr r3,[r3,#4]
 489 001a 43F40042 	 orr r2,r3,#32768
 490 001e 7B68     	 ldr r3,[r7,#4]
 491 0020 C3F88020 	 str r2,[r3,#128]
 231:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 232:../Libraries/XMCLib/src/xmc_vadc.c **** 
 233:../Libraries/XMCLib/src/xmc_vadc.c ****   /* ICLASS-0 configuration */
 234:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBICLASS[0] = (uint32_t)(config->class0.globiclass);
 492              	 .loc 2 234 0
 493 0024 3B68     	 ldr r3,[r7]
 494 0026 9A68     	 ldr r2,[r3,#8]
 495 0028 7B68     	 ldr r3,[r7,#4]
 496 002a C3F8A020 	 str r2,[r3,#160]
 235:../Libraries/XMCLib/src/xmc_vadc.c **** 
 236:../Libraries/XMCLib/src/xmc_vadc.c ****   /* ICLASS-1 configuration */
 237:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBICLASS[1] = (uint32_t)(config->class1.globiclass);
 497              	 .loc 2 237 0
 498 002e 3B68     	 ldr r3,[r7]
 499 0030 DA68     	 ldr r2,[r3,#12]
 500 0032 7B68     	 ldr r3,[r7,#4]
 501 0034 C3F8A420 	 str r2,[r3,#164]
 238:../Libraries/XMCLib/src/xmc_vadc.c **** 
 239:../Libraries/XMCLib/src/xmc_vadc.c **** 
 240:../Libraries/XMCLib/src/xmc_vadc.c ****   /*Result generation related configuration */
 241:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRCR = (uint32_t)(config->globrcr);
 502              	 .loc 2 241 0
 503 0038 3B68     	 ldr r3,[r7]
 504 003a 1A69     	 ldr r2,[r3,#16]
 505 003c 7B68     	 ldr r3,[r7,#4]
 506 003e C3F88022 	 str r2,[r3,#640]
 242:../Libraries/XMCLib/src/xmc_vadc.c **** 
 243:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
 244:../Libraries/XMCLib/src/xmc_vadc.c **** 
 245:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Boundaries */
 246:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = (uint32_t)(config->globbound);
 507              	 .loc 2 246 0
 508 0042 3B68     	 ldr r3,[r7]
 509 0044 1A68     	 ldr r2,[r3]
 510 0046 7B68     	 ldr r3,[r7,#4]
 511 0048 C3F8B820 	 str r2,[r3,#184]
 247:../Libraries/XMCLib/src/xmc_vadc.c **** 
 248:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 249:../Libraries/XMCLib/src/xmc_vadc.c **** 
 250:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Configure the SHS register that are needed for XMC11xx devices*/
 251:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 0U)
 252:../Libraries/XMCLib/src/xmc_vadc.c **** 
 253:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enabling the Analog part of the converter*/
 254:../Libraries/XMCLib/src/xmc_vadc.c ****   reg = SHS0->SHSCFG  | SHS_SHSCFG_SCWC_Msk;
 255:../Libraries/XMCLib/src/xmc_vadc.c ****   reg &= ~(SHS_SHSCFG_ANOFF_Msk);
 256:../Libraries/XMCLib/src/xmc_vadc.c ****   SHS0->SHSCFG = reg;
 257:../Libraries/XMCLib/src/xmc_vadc.c **** 
 258:../Libraries/XMCLib/src/xmc_vadc.c ****   /* From the Errata sheet of XMC1100 V1.7*/
 259:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_CONV_ENABLE_FOR_XMC11 = 1U;
 260:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 261:../Libraries/XMCLib/src/xmc_vadc.c **** 
 262:../Libraries/XMCLib/src/xmc_vadc.c **** }
 512              	 .loc 2 262 0
 513 004c 0837     	 adds r7,r7,#8
 514              	 .cfi_def_cfa_offset 8
 515 004e BD46     	 mov sp,r7
 516              	 .cfi_def_cfa_register 13
 517              	 
 518 0050 80BD     	 pop {r7,pc}
 519              	 .cfi_endproc
 520              	.LFE258:
 522 0052 00BF     	 .section .text.XMC_VADC_GLOBAL_InputClassInit,"ax",%progbits
 523              	 .align 2
 524              	 .global XMC_VADC_GLOBAL_InputClassInit
 525              	 .thumb
 526              	 .thumb_func
 528              	XMC_VADC_GLOBAL_InputClassInit:
 529              	.LFB259:
 263:../Libraries/XMCLib/src/xmc_vadc.c **** 
 264:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to Set the Global IClass registers*/
 265:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
 266:../Libraries/XMCLib/src/xmc_vadc.c ****                                     const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set_num)
 267:../Libraries/XMCLib/src/xmc_vadc.c **** {
 530              	 .loc 2 267 0
 531              	 .cfi_startproc
 532              	 
 533              	 
 534              	 
 535 0000 80B4     	 push {r7}
 536              	 .cfi_def_cfa_offset 4
 537              	 .cfi_offset 7,-4
 538 0002 85B0     	 sub sp,sp,#20
 539              	 .cfi_def_cfa_offset 24
 540 0004 00AF     	 add r7,sp,#0
 541              	 .cfi_def_cfa_register 7
 542 0006 F860     	 str r0,[r7,#12]
 543 0008 B960     	 str r1,[r7,#8]
 544 000a 3B60     	 str r3,[r7]
 545 000c 1346     	 mov r3,r2
 546 000e FB71     	 strb r3,[r7,#7]
 268:../Libraries/XMCLib/src/xmc_vadc.c **** 
 269:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong Module Pointer", (global_ptr == VADC))
 270:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong Conversion Type", ((conv_type) <= XMC_VADC_GROUP
 271:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong ICLASS set number", (set_num < XMC_VADC_MAX_ICLA
 272:../Libraries/XMCLib/src/xmc_vadc.c **** 
 273:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 274:../Libraries/XMCLib/src/xmc_vadc.c ****   if (conv_type == XMC_VADC_GROUP_CONV_STD )
 547              	 .loc 2 274 0
 548 0010 FB79     	 ldrb r3,[r7,#7]
 549 0012 002B     	 cmp r3,#0
 550 0014 09D1     	 bne .L14
 275:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 276:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 277:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_UNUSED_ARG(conv_type);
 278:../Libraries/XMCLib/src/xmc_vadc.c ****     global_ptr->GLOBICLASS[set_num] = config.globiclass &
 551              	 .loc 2 278 0
 552 0016 BA68     	 ldr r2,[r7,#8]
 553 0018 40F21F73 	 movw r3,#1823
 554 001c 1340     	 ands r3,r3,r2
 555 001e FA68     	 ldr r2,[r7,#12]
 556 0020 3968     	 ldr r1,[r7]
 557 0022 2831     	 adds r1,r1,#40
 558 0024 42F82130 	 str r3,[r2,r1,lsl#2]
 559 0028 07E0     	 b .L13
 560              	.L14:
 279:../Libraries/XMCLib/src/xmc_vadc.c ****                                       (uint32_t)(VADC_GLOBICLASS_CMS_Msk | VADC_GLOBICLASS_STCS_Msk
 280:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 281:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 282:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 283:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 284:../Libraries/XMCLib/src/xmc_vadc.c ****     global_ptr->GLOBICLASS[set_num] = config.globiclass & (uint32_t)(VADC_GLOBICLASS_CME_Msk | VADC
 561              	 .loc 2 284 0
 562 002a BA68     	 ldr r2,[r7,#8]
 563 002c 054B     	 ldr r3,.L16
 564 002e 1340     	 ands r3,r3,r2
 565 0030 FA68     	 ldr r2,[r7,#12]
 566 0032 3968     	 ldr r1,[r7]
 567 0034 2831     	 adds r1,r1,#40
 568 0036 42F82130 	 str r3,[r2,r1,lsl#2]
 569              	.L13:
 285:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 286:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 287:../Libraries/XMCLib/src/xmc_vadc.c **** }
 570              	 .loc 2 287 0
 571 003a 1437     	 adds r7,r7,#20
 572              	 .cfi_def_cfa_offset 4
 573 003c BD46     	 mov sp,r7
 574              	 .cfi_def_cfa_register 13
 575              	 
 576 003e 5DF8047B 	 ldr r7,[sp],#4
 577              	 .cfi_restore 7
 578              	 .cfi_def_cfa_offset 0
 579 0042 7047     	 bx lr
 580              	.L17:
 581              	 .align 2
 582              	.L16:
 583 0044 00001F07 	 .word 119472128
 584              	 .cfi_endproc
 585              	.LFE259:
 587              	 .section .text.XMC_VADC_GLOBAL_StartupCalibration,"ax",%progbits
 588              	 .align 2
 589              	 .global XMC_VADC_GLOBAL_StartupCalibration
 590              	 .thumb
 591              	 .thumb_func
 593              	XMC_VADC_GLOBAL_StartupCalibration:
 594              	.LFB260:
 288:../Libraries/XMCLib/src/xmc_vadc.c **** 
 289:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable startup calibration feature */
 290:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
 291:../Libraries/XMCLib/src/xmc_vadc.c **** {
 595              	 .loc 2 291 0
 596              	 .cfi_startproc
 597              	 
 598              	 
 599              	 
 600 0000 80B4     	 push {r7}
 601              	 .cfi_def_cfa_offset 4
 602              	 .cfi_offset 7,-4
 603 0002 85B0     	 sub sp,sp,#20
 604              	 .cfi_def_cfa_offset 24
 605 0004 00AF     	 add r7,sp,#0
 606              	 .cfi_def_cfa_register 7
 607 0006 7860     	 str r0,[r7,#4]
 292:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 293:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t i;
 294:../Libraries/XMCLib/src/xmc_vadc.c ****   VADC_G_TypeDef *group_ptr;
 295:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 296:../Libraries/XMCLib/src/xmc_vadc.c **** 
 297:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_StartupCalibration:Wrong Module Pointer", (global_ptr == VADC))
 298:../Libraries/XMCLib/src/xmc_vadc.c **** 
 299:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBCFG |= (uint32_t)VADC_GLOBCFG_SUCAL_Msk;
 608              	 .loc 2 299 0
 609 0008 7B68     	 ldr r3,[r7,#4]
 610 000a D3F88030 	 ldr r3,[r3,#128]
 611 000e 43F00042 	 orr r2,r3,#-2147483648
 612 0012 7B68     	 ldr r3,[r7,#4]
 613 0014 C3F88020 	 str r2,[r3,#128]
 300:../Libraries/XMCLib/src/xmc_vadc.c **** 
 301:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 302:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop until all active groups finish calibration */
 303:../Libraries/XMCLib/src/xmc_vadc.c ****   for (i = 0U; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 614              	 .loc 2 303 0
 615 0018 0023     	 movs r3,#0
 616 001a FB73     	 strb r3,[r7,#15]
 617 001c 17E0     	 b .L19
 618              	.L23:
 304:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 305:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr = g_xmc_vadc_group_array[i];
 619              	 .loc 2 305 0
 620 001e FB7B     	 ldrb r3,[r7,#15]
 621 0020 0F4A     	 ldr r2,.L24
 622 0022 52F82330 	 ldr r3,[r2,r3,lsl#2]
 623 0026 BB60     	 str r3,[r7,#8]
 306:../Libraries/XMCLib/src/xmc_vadc.c ****     if ( (group_ptr->ARBCFG) & (uint32_t)VADC_G_ARBCFG_ANONS_Msk)
 624              	 .loc 2 306 0
 625 0028 BB68     	 ldr r3,[r7,#8]
 626 002a D3F88030 	 ldr r3,[r3,#128]
 627 002e 03F44033 	 and r3,r3,#196608
 628 0032 002B     	 cmp r3,#0
 629 0034 08D0     	 beq .L20
 307:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 308:../Libraries/XMCLib/src/xmc_vadc.c ****       /* This group is active. Loop until it finishes calibration */
 309:../Libraries/XMCLib/src/xmc_vadc.c **** #if UC_FAMILY == XMC1
 310:../Libraries/XMCLib/src/xmc_vadc.c ****       // wait until calibration is started
 311:../Libraries/XMCLib/src/xmc_vadc.c ****       while ((group_ptr->ARBCFG & (uint32_t)VADC_G_ARBCFG_CALS_Msk) == 0)
 312:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 313:../Libraries/XMCLib/src/xmc_vadc.c ****         __NOP();
 314:../Libraries/XMCLib/src/xmc_vadc.c ****       }
 315:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 316:../Libraries/XMCLib/src/xmc_vadc.c ****       while ((group_ptr->ARBCFG) & (uint32_t)VADC_G_ARBCFG_CAL_Msk)
 630              	 .loc 2 316 0
 631 0036 00E0     	 b .L21
 632              	.L22:
 317:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 318:../Libraries/XMCLib/src/xmc_vadc.c ****         __NOP();
 633              	 .loc 2 318 0
 634              	
 635 0038 00BF     	 nop
 636              	
 637              	 .thumb
 638              	.L21:
 316:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 639              	 .loc 2 316 0
 640 003a BB68     	 ldr r3,[r7,#8]
 641 003c D3F88030 	 ldr r3,[r3,#128]
 642 0040 03F08053 	 and r3,r3,#268435456
 643 0044 002B     	 cmp r3,#0
 644 0046 F7D1     	 bne .L22
 645              	.L20:
 303:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 646              	 .loc 2 303 0 discriminator 2
 647 0048 FB7B     	 ldrb r3,[r7,#15]
 648 004a 0133     	 adds r3,r3,#1
 649 004c FB73     	 strb r3,[r7,#15]
 650              	.L19:
 303:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 651              	 .loc 2 303 0 is_stmt 0 discriminator 1
 652 004e FB7B     	 ldrb r3,[r7,#15]
 653 0050 032B     	 cmp r3,#3
 654 0052 E4D9     	 bls .L23
 319:../Libraries/XMCLib/src/xmc_vadc.c ****       }
 320:../Libraries/XMCLib/src/xmc_vadc.c ****     }
 321:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 322:../Libraries/XMCLib/src/xmc_vadc.c **** #else
 323:../Libraries/XMCLib/src/xmc_vadc.c **** 
 324:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop until calibration is started */
 325:../Libraries/XMCLib/src/xmc_vadc.c ****   while ((((SHS0->SHSCFG) & (uint32_t)SHS_SHSCFG_STATE_Msk) >> (uint32_t)SHS_SHSCFG_STATE_Pos) !=
 326:../Libraries/XMCLib/src/xmc_vadc.c ****          XMC_VADC_SHS_START_UP_CAL_ACTIVE  )
 327:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 328:../Libraries/XMCLib/src/xmc_vadc.c ****     __NOP();
 329:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 330:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop until it finishes calibration */
 331:../Libraries/XMCLib/src/xmc_vadc.c ****   while ((((SHS0->SHSCFG) & (uint32_t)SHS_SHSCFG_STATE_Msk) >> (uint32_t)SHS_SHSCFG_STATE_Pos) ==
 332:../Libraries/XMCLib/src/xmc_vadc.c ****          XMC_VADC_SHS_START_UP_CAL_ACTIVE )
 333:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 334:../Libraries/XMCLib/src/xmc_vadc.c ****     __NOP();
 335:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 336:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 337:../Libraries/XMCLib/src/xmc_vadc.c **** }
 655              	 .loc 2 337 0 is_stmt 1
 656 0054 1437     	 adds r7,r7,#20
 657              	 .cfi_def_cfa_offset 4
 658 0056 BD46     	 mov sp,r7
 659              	 .cfi_def_cfa_register 13
 660              	 
 661 0058 5DF8047B 	 ldr r7,[sp],#4
 662              	 .cfi_restore 7
 663              	 .cfi_def_cfa_offset 0
 664 005c 7047     	 bx lr
 665              	.L25:
 666 005e 00BF     	 .align 2
 667              	.L24:
 668 0060 00000000 	 .word g_xmc_vadc_group_array
 669              	 .cfi_endproc
 670              	.LFE260:
 672              	 .section .text.XMC_VADC_GLOBAL_SetBoundaries,"ax",%progbits
 673              	 .align 2
 674              	 .global XMC_VADC_GLOBAL_SetBoundaries
 675              	 .thumb
 676              	 .thumb_func
 678              	XMC_VADC_GLOBAL_SetBoundaries:
 679              	.LFB261:
 338:../Libraries/XMCLib/src/xmc_vadc.c **** 
 339:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set boudaries for result of conversion. Should the boundaries be violated, interrupts are
 340:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
 341:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr,
 342:../Libraries/XMCLib/src/xmc_vadc.c ****                                    const uint32_t boundary0,
 343:../Libraries/XMCLib/src/xmc_vadc.c ****                                    const uint32_t boundary1)
 344:../Libraries/XMCLib/src/xmc_vadc.c **** {
 680              	 .loc 2 344 0
 681              	 .cfi_startproc
 682              	 
 683              	 
 684              	 
 685 0000 80B4     	 push {r7}
 686              	 .cfi_def_cfa_offset 4
 687              	 .cfi_offset 7,-4
 688 0002 87B0     	 sub sp,sp,#28
 689              	 .cfi_def_cfa_offset 32
 690 0004 00AF     	 add r7,sp,#0
 691              	 .cfi_def_cfa_register 7
 692 0006 F860     	 str r0,[r7,#12]
 693 0008 B960     	 str r1,[r7,#8]
 694 000a 7A60     	 str r2,[r7,#4]
 345:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t globbound;
 346:../Libraries/XMCLib/src/xmc_vadc.c **** 
 347:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Module Pointer", (global_ptr == VADC))
 348:../Libraries/XMCLib/src/xmc_vadc.c **** 
 349:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound = 0U;
 695              	 .loc 2 349 0
 696 000c 0023     	 movs r3,#0
 697 000e 7B61     	 str r3,[r7,#20]
 350:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound |= (uint32_t) (boundary0 << VADC_GLOBBOUND_BOUNDARY0_Pos);
 698              	 .loc 2 350 0
 699 0010 7A69     	 ldr r2,[r7,#20]
 700 0012 BB68     	 ldr r3,[r7,#8]
 701 0014 1343     	 orrs r3,r3,r2
 702 0016 7B61     	 str r3,[r7,#20]
 351:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound |= (uint32_t) (boundary1 << VADC_GLOBBOUND_BOUNDARY1_Pos);
 703              	 .loc 2 351 0
 704 0018 7B68     	 ldr r3,[r7,#4]
 705 001a 1B04     	 lsls r3,r3,#16
 706 001c 7A69     	 ldr r2,[r7,#20]
 707 001e 1343     	 orrs r3,r3,r2
 708 0020 7B61     	 str r3,[r7,#20]
 352:../Libraries/XMCLib/src/xmc_vadc.c **** 
 353:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = globbound;
 709              	 .loc 2 353 0
 710 0022 FB68     	 ldr r3,[r7,#12]
 711 0024 7A69     	 ldr r2,[r7,#20]
 712 0026 C3F8B820 	 str r2,[r3,#184]
 354:../Libraries/XMCLib/src/xmc_vadc.c **** }
 713              	 .loc 2 354 0
 714 002a 1C37     	 adds r7,r7,#28
 715              	 .cfi_def_cfa_offset 4
 716 002c BD46     	 mov sp,r7
 717              	 .cfi_def_cfa_register 13
 718              	 
 719 002e 5DF8047B 	 ldr r7,[sp],#4
 720              	 .cfi_restore 7
 721              	 .cfi_def_cfa_offset 0
 722 0032 7047     	 bx lr
 723              	 .cfi_endproc
 724              	.LFE261:
 726              	 .section .text.XMC_VADC_GLOBAL_SetIndividualBoundary,"ax",%progbits
 727              	 .align 2
 728              	 .global XMC_VADC_GLOBAL_SetIndividualBoundary
 729              	 .thumb
 730              	 .thumb_func
 732              	XMC_VADC_GLOBAL_SetIndividualBoundary:
 733              	.LFB262:
 355:../Libraries/XMCLib/src/xmc_vadc.c **** 
 356:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set an individual boundary for conversion results */
 357:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetIndividualBoundary(XMC_VADC_GLOBAL_t *const global_ptr,
 358:../Libraries/XMCLib/src/xmc_vadc.c ****     const XMC_VADC_CHANNEL_BOUNDARY_t selection,
 359:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint16_t boundary_value)
 360:../Libraries/XMCLib/src/xmc_vadc.c **** {
 734              	 .loc 2 360 0
 735              	 .cfi_startproc
 736              	 
 737              	 
 738              	 
 739 0000 80B4     	 push {r7}
 740              	 .cfi_def_cfa_offset 4
 741              	 .cfi_offset 7,-4
 742 0002 85B0     	 sub sp,sp,#20
 743              	 .cfi_def_cfa_offset 24
 744 0004 00AF     	 add r7,sp,#0
 745              	 .cfi_def_cfa_register 7
 746 0006 7860     	 str r0,[r7,#4]
 747 0008 0B46     	 mov r3,r1
 748 000a FB70     	 strb r3,[r7,#3]
 749 000c 1346     	 mov r3,r2
 750 000e 3B80     	 strh r3,[r7]
 361:../Libraries/XMCLib/src/xmc_vadc.c **** 
 362:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t globbound;
 363:../Libraries/XMCLib/src/xmc_vadc.c **** 
 364:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Module Pointer", (global_ptr == VADC))
 365:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Boundary Selection",
 366:../Libraries/XMCLib/src/xmc_vadc.c ****              ((XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0 == selection) ||
 367:../Libraries/XMCLib/src/xmc_vadc.c ****               (XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1 == selection)))
 368:../Libraries/XMCLib/src/xmc_vadc.c **** 
 369:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 370:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound = global_ptr->GLOBBOUND;
 751              	 .loc 2 370 0
 752 0010 7B68     	 ldr r3,[r7,#4]
 753 0012 D3F8B830 	 ldr r3,[r3,#184]
 754 0016 FB60     	 str r3,[r7,#12]
 371:../Libraries/XMCLib/src/xmc_vadc.c **** 
 372:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0 == selection)
 755              	 .loc 2 372 0
 756 0018 FB78     	 ldrb r3,[r7,#3]
 757 001a 022B     	 cmp r3,#2
 758 001c 0AD1     	 bne .L28
 373:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 374:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound &= ~((uint32_t) VADC_GLOBBOUND_BOUNDARY0_Msk);
 759              	 .loc 2 374 0
 760 001e FB68     	 ldr r3,[r7,#12]
 761 0020 23F47F63 	 bic r3,r3,#4080
 762 0024 23F00F03 	 bic r3,r3,#15
 763 0028 FB60     	 str r3,[r7,#12]
 375:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound |= (uint32_t) ((uint32_t) boundary_value << VADC_GLOBBOUND_BOUNDARY0_Pos);
 764              	 .loc 2 375 0
 765 002a 3B88     	 ldrh r3,[r7]
 766 002c FA68     	 ldr r2,[r7,#12]
 767 002e 1343     	 orrs r3,r3,r2
 768 0030 FB60     	 str r3,[r7,#12]
 769 0032 0DE0     	 b .L29
 770              	.L28:
 376:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 377:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1 == selection)
 771              	 .loc 2 377 0
 772 0034 FB78     	 ldrb r3,[r7,#3]
 773 0036 032B     	 cmp r3,#3
 774 0038 0AD1     	 bne .L29
 378:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 379:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound &= ~((uint32_t) VADC_GLOBBOUND_BOUNDARY1_Msk);
 775              	 .loc 2 379 0
 776 003a FB68     	 ldr r3,[r7,#12]
 777 003c 23F07F63 	 bic r3,r3,#267386880
 778 0040 23F47023 	 bic r3,r3,#983040
 779 0044 FB60     	 str r3,[r7,#12]
 380:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound |= (uint32_t) ((uint32_t) boundary_value << VADC_GLOBBOUND_BOUNDARY1_Pos);
 780              	 .loc 2 380 0
 781 0046 3B88     	 ldrh r3,[r7]
 782 0048 1B04     	 lsls r3,r3,#16
 783 004a FA68     	 ldr r2,[r7,#12]
 784 004c 1343     	 orrs r3,r3,r2
 785 004e FB60     	 str r3,[r7,#12]
 786              	.L29:
 381:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 382:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 383:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 384:../Libraries/XMCLib/src/xmc_vadc.c ****     /* For MISRA*/
 385:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 386:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = globbound;
 787              	 .loc 2 386 0
 788 0050 7B68     	 ldr r3,[r7,#4]
 789 0052 FA68     	 ldr r2,[r7,#12]
 790 0054 C3F8B820 	 str r2,[r3,#184]
 387:../Libraries/XMCLib/src/xmc_vadc.c **** 
 388:../Libraries/XMCLib/src/xmc_vadc.c **** }
 791              	 .loc 2 388 0
 792 0058 1437     	 adds r7,r7,#20
 793              	 .cfi_def_cfa_offset 4
 794 005a BD46     	 mov sp,r7
 795              	 .cfi_def_cfa_register 13
 796              	 
 797 005c 5DF8047B 	 ldr r7,[sp],#4
 798              	 .cfi_restore 7
 799              	 .cfi_def_cfa_offset 0
 800 0060 7047     	 bx lr
 801              	 .cfi_endproc
 802              	.LFE262:
 804 0062 00BF     	 .section .text.XMC_VADC_GLOBAL_SetCompareValue,"ax",%progbits
 805              	 .align 2
 806              	 .global XMC_VADC_GLOBAL_SetCompareValue
 807              	 .thumb
 808              	 .thumb_func
 810              	XMC_VADC_GLOBAL_SetCompareValue:
 811              	.LFB263:
 389:../Libraries/XMCLib/src/xmc_vadc.c **** 
 390:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 391:../Libraries/XMCLib/src/xmc_vadc.c **** 
 392:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set compare value for the result register. Result of conversion is compared against this 
 393:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetCompareValue(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_SIZ
 394:../Libraries/XMCLib/src/xmc_vadc.c **** {
 812              	 .loc 2 394 0
 813              	 .cfi_startproc
 814              	 
 815              	 
 816              	 
 817 0000 80B4     	 push {r7}
 818              	 .cfi_def_cfa_offset 4
 819              	 .cfi_offset 7,-4
 820 0002 83B0     	 sub sp,sp,#12
 821              	 .cfi_def_cfa_offset 16
 822 0004 00AF     	 add r7,sp,#0
 823              	 .cfi_def_cfa_register 7
 824 0006 7860     	 str r0,[r7,#4]
 825 0008 0B46     	 mov r3,r1
 826 000a 7B80     	 strh r3,[r7,#2]
 395:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetCompareValue:Wrong Module Pointer", (global_ptr == VADC))
 396:../Libraries/XMCLib/src/xmc_vadc.c **** 
 397:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRES &= ~((uint32_t)VADC_GLOBRES_RESULT_Msk);
 827              	 .loc 2 397 0
 828 000c 7B68     	 ldr r3,[r7,#4]
 829 000e D3F80033 	 ldr r3,[r3,#768]
 830 0012 1B0C     	 lsrs r3,r3,#16
 831 0014 1B04     	 lsls r3,r3,#16
 832 0016 7A68     	 ldr r2,[r7,#4]
 833 0018 C2F80033 	 str r3,[r2,#768]
 398:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRES |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 834              	 .loc 2 398 0
 835 001c 7B68     	 ldr r3,[r7,#4]
 836 001e D3F80023 	 ldr r2,[r3,#768]
 837 0022 7B88     	 ldrh r3,[r7,#2]
 838 0024 9B00     	 lsls r3,r3,#2
 839 0026 1A43     	 orrs r2,r2,r3
 840 0028 7B68     	 ldr r3,[r7,#4]
 841 002a C3F80023 	 str r2,[r3,#768]
 399:../Libraries/XMCLib/src/xmc_vadc.c **** }
 842              	 .loc 2 399 0
 843 002e 0C37     	 adds r7,r7,#12
 844              	 .cfi_def_cfa_offset 4
 845 0030 BD46     	 mov sp,r7
 846              	 .cfi_def_cfa_register 13
 847              	 
 848 0032 5DF8047B 	 ldr r7,[sp],#4
 849              	 .cfi_restore 7
 850              	 .cfi_def_cfa_offset 0
 851 0036 7047     	 bx lr
 852              	 .cfi_endproc
 853              	.LFE263:
 855              	 .section .text.XMC_VADC_GLOBAL_GetCompareResult,"ax",%progbits
 856              	 .align 2
 857              	 .global XMC_VADC_GLOBAL_GetCompareResult
 858              	 .thumb
 859              	 .thumb_func
 861              	XMC_VADC_GLOBAL_GetCompareResult:
 862              	.LFB264:
 400:../Libraries/XMCLib/src/xmc_vadc.c **** 
 401:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result of comparison */
 402:../Libraries/XMCLib/src/xmc_vadc.c **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GLOBAL_GetCompareResult(XMC_VADC_GLOBAL_t *const global_ptr)
 403:../Libraries/XMCLib/src/xmc_vadc.c **** {
 863              	 .loc 2 403 0
 864              	 .cfi_startproc
 865              	 
 866              	 
 867              	 
 868 0000 80B4     	 push {r7}
 869              	 .cfi_def_cfa_offset 4
 870              	 .cfi_offset 7,-4
 871 0002 85B0     	 sub sp,sp,#20
 872              	 .cfi_def_cfa_offset 24
 873 0004 00AF     	 add r7,sp,#0
 874              	 .cfi_def_cfa_register 7
 875 0006 7860     	 str r0,[r7,#4]
 404:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_FAST_COMPARE_t result;
 405:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res;
 406:../Libraries/XMCLib/src/xmc_vadc.c **** 
 407:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetCompareResult:Wrong Module Pointer", (global_ptr == VADC))
 408:../Libraries/XMCLib/src/xmc_vadc.c **** 
 409:../Libraries/XMCLib/src/xmc_vadc.c ****   res = global_ptr->GLOBRES;
 876              	 .loc 2 409 0
 877 0008 7B68     	 ldr r3,[r7,#4]
 878 000a D3F80033 	 ldr r3,[r3,#768]
 879 000e BB60     	 str r3,[r7,#8]
 410:../Libraries/XMCLib/src/xmc_vadc.c **** 
 411:../Libraries/XMCLib/src/xmc_vadc.c ****   if (res & (uint32_t)VADC_GLOBRES_VF_Msk)
 880              	 .loc 2 411 0
 881 0010 BB68     	 ldr r3,[r7,#8]
 882 0012 002B     	 cmp r3,#0
 883 0014 06DA     	 bge .L32
 412:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 413:../Libraries/XMCLib/src/xmc_vadc.c ****     result = (XMC_VADC_FAST_COMPARE_t)((uint32_t)(res >> (uint32_t)VADC_GLOBRES_FCR_Pos) & (uint32_
 884              	 .loc 2 413 0
 885 0016 BB68     	 ldr r3,[r7,#8]
 886 0018 9B0F     	 lsrs r3,r3,#30
 887 001a DBB2     	 uxtb r3,r3
 888 001c 03F00103 	 and r3,r3,#1
 889 0020 FB73     	 strb r3,[r7,#15]
 890 0022 01E0     	 b .L33
 891              	.L32:
 414:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 415:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 416:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 417:../Libraries/XMCLib/src/xmc_vadc.c ****     result = XMC_VADC_FAST_COMPARE_UNKNOWN;
 892              	 .loc 2 417 0
 893 0024 0223     	 movs r3,#2
 894 0026 FB73     	 strb r3,[r7,#15]
 895              	.L33:
 418:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 419:../Libraries/XMCLib/src/xmc_vadc.c **** 
 420:../Libraries/XMCLib/src/xmc_vadc.c ****   return result;
 896              	 .loc 2 420 0
 897 0028 FB7B     	 ldrb r3,[r7,#15]
 421:../Libraries/XMCLib/src/xmc_vadc.c **** }
 898              	 .loc 2 421 0
 899 002a 1846     	 mov r0,r3
 900 002c 1437     	 adds r7,r7,#20
 901              	 .cfi_def_cfa_offset 4
 902 002e BD46     	 mov sp,r7
 903              	 .cfi_def_cfa_register 13
 904              	 
 905 0030 5DF8047B 	 ldr r7,[sp],#4
 906              	 .cfi_restore 7
 907              	 .cfi_def_cfa_offset 0
 908 0034 7047     	 bx lr
 909              	 .cfi_endproc
 910              	.LFE264:
 912 0036 00BF     	 .section .text.XMC_VADC_GLOBAL_BindGroupToEMux,"ax",%progbits
 913              	 .align 2
 914              	 .global XMC_VADC_GLOBAL_BindGroupToEMux
 915              	 .thumb
 916              	 .thumb_func
 918              	XMC_VADC_GLOBAL_BindGroupToEMux:
 919              	.LFB265:
 422:../Libraries/XMCLib/src/xmc_vadc.c **** 
 423:../Libraries/XMCLib/src/xmc_vadc.c **** /* Bind one of the four groups to one of the two EMUX interfaces */
 424:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_EMUX_AVAILABLE == 1U)
 425:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
 426:../Libraries/XMCLib/src/xmc_vadc.c **** {
 920              	 .loc 2 426 0
 921              	 .cfi_startproc
 922              	 
 923              	 
 924              	 
 925 0000 80B4     	 push {r7}
 926              	 .cfi_def_cfa_offset 4
 927              	 .cfi_offset 7,-4
 928 0002 87B0     	 sub sp,sp,#28
 929              	 .cfi_def_cfa_offset 32
 930 0004 00AF     	 add r7,sp,#0
 931              	 .cfi_def_cfa_register 7
 932 0006 F860     	 str r0,[r7,#12]
 933 0008 B960     	 str r1,[r7,#8]
 934 000a 7A60     	 str r2,[r7,#4]
 427:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
 428:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t pos;
 429:../Libraries/XMCLib/src/xmc_vadc.c **** 
 430:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong Module Pointer", (global_ptr == VADC))
 431:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong EMUX Group", (emuxif < XMC_VADC_NUM_EMUX_INTERF
 432:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong VADC Group", (group < XMC_VADC_MAXIMUM_NUM_GROU
 433:../Libraries/XMCLib/src/xmc_vadc.c **** 
 434:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == emuxif)
 935              	 .loc 2 434 0
 936 000c BB68     	 ldr r3,[r7,#8]
 937 000e 002B     	 cmp r3,#0
 938 0010 04D1     	 bne .L36
 435:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 436:../Libraries/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t)VADC_EMUXSEL_EMUXGRP0_Pos;
 939              	 .loc 2 436 0
 940 0012 0023     	 movs r3,#0
 941 0014 3B61     	 str r3,[r7,#16]
 437:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)VADC_EMUXSEL_EMUXGRP0_Msk;
 942              	 .loc 2 437 0
 943 0016 0F23     	 movs r3,#15
 944 0018 7B61     	 str r3,[r7,#20]
 945 001a 03E0     	 b .L37
 946              	.L36:
 438:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 439:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 440:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 441:../Libraries/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t)VADC_EMUXSEL_EMUXGRP1_Pos;
 947              	 .loc 2 441 0
 948 001c 0423     	 movs r3,#4
 949 001e 3B61     	 str r3,[r7,#16]
 442:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)VADC_EMUXSEL_EMUXGRP1_Msk;
 950              	 .loc 2 442 0
 951 0020 F023     	 movs r3,#240
 952 0022 7B61     	 str r3,[r7,#20]
 953              	.L37:
 443:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 444:../Libraries/XMCLib/src/xmc_vadc.c **** 
 445:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->EMUXSEL &= ~(mask);
 954              	 .loc 2 445 0
 955 0024 FB68     	 ldr r3,[r7,#12]
 956 0026 D3F8F023 	 ldr r2,[r3,#1008]
 957 002a 7B69     	 ldr r3,[r7,#20]
 958 002c DB43     	 mvns r3,r3
 959 002e 1A40     	 ands r2,r2,r3
 960 0030 FB68     	 ldr r3,[r7,#12]
 961 0032 C3F8F023 	 str r2,[r3,#1008]
 446:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->EMUXSEL |= (uint32_t) (group << pos);
 962              	 .loc 2 446 0
 963 0036 FB68     	 ldr r3,[r7,#12]
 964 0038 D3F8F023 	 ldr r2,[r3,#1008]
 965 003c 3B69     	 ldr r3,[r7,#16]
 966 003e 7968     	 ldr r1,[r7,#4]
 967 0040 01FA03F3 	 lsl r3,r1,r3
 968 0044 1A43     	 orrs r2,r2,r3
 969 0046 FB68     	 ldr r3,[r7,#12]
 970 0048 C3F8F023 	 str r2,[r3,#1008]
 447:../Libraries/XMCLib/src/xmc_vadc.c **** 
 448:../Libraries/XMCLib/src/xmc_vadc.c **** }
 971              	 .loc 2 448 0
 972 004c 1C37     	 adds r7,r7,#28
 973              	 .cfi_def_cfa_offset 4
 974 004e BD46     	 mov sp,r7
 975              	 .cfi_def_cfa_register 13
 976              	 
 977 0050 5DF8047B 	 ldr r7,[sp],#4
 978              	 .cfi_restore 7
 979              	 .cfi_def_cfa_offset 0
 980 0054 7047     	 bx lr
 981              	 .cfi_endproc
 982              	.LFE265:
 984 0056 00BF     	 .section .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode,"ax",%progbits
 985              	 .align 2
 986              	 .global XMC_VADC_GLOBAL_SetResultEventInterruptNode
 987              	 .thumb
 988              	 .thumb_func
 990              	XMC_VADC_GLOBAL_SetResultEventInterruptNode:
 991              	.LFB266:
 449:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 450:../Libraries/XMCLib/src/xmc_vadc.c **** 
 451:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to bind result event with a service request line */
 452:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t
 453:../Libraries/XMCLib/src/xmc_vadc.c **** {
 992              	 .loc 2 453 0
 993              	 .cfi_startproc
 994              	 
 995              	 
 996              	 
 997 0000 80B4     	 push {r7}
 998              	 .cfi_def_cfa_offset 4
 999              	 .cfi_offset 7,-4
 1000 0002 85B0     	 sub sp,sp,#20
 1001              	 .cfi_def_cfa_offset 24
 1002 0004 00AF     	 add r7,sp,#0
 1003              	 .cfi_def_cfa_register 7
 1004 0006 7860     	 str r0,[r7,#4]
 1005 0008 0B46     	 mov r3,r1
 1006 000a FB70     	 strb r3,[r7,#3]
 454:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t node;
 455:../Libraries/XMCLib/src/xmc_vadc.c **** 
 456:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetResultEventInterruptNode:Wrong Module Pointer", (global_ptr == VAD
 457:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetResultEventInterruptNode:Wrong SR Number", (sr <= XMC_VADC_SR_SHAR
 458:../Libraries/XMCLib/src/xmc_vadc.c **** 
 459:../Libraries/XMCLib/src/xmc_vadc.c ****   if (sr >= XMC_VADC_SR_SHARED_SR0)
 1007              	 .loc 2 459 0
 1008 000c FB78     	 ldrb r3,[r7,#3]
 1009 000e 032B     	 cmp r3,#3
 1010 0010 03D9     	 bls .L39
 460:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 461:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr - (uint32_t)XMC_VADC_SR_SHARED_SR0;
 1011              	 .loc 2 461 0
 1012 0012 FB78     	 ldrb r3,[r7,#3]
 1013 0014 043B     	 subs r3,r3,#4
 1014 0016 FB60     	 str r3,[r7,#12]
 1015 0018 01E0     	 b .L40
 1016              	.L39:
 462:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 463:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 464:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 465:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr;
 1017              	 .loc 2 465 0
 1018 001a FB78     	 ldrb r3,[r7,#3]
 1019 001c FB60     	 str r3,[r7,#12]
 1020              	.L40:
 466:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 467:../Libraries/XMCLib/src/xmc_vadc.c **** 
 468:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP &= ~((uint32_t)VADC_GLOBEVNP_REV0NP_Msk);
 1021              	 .loc 2 468 0
 1022 001e 7B68     	 ldr r3,[r7,#4]
 1023 0020 D3F84031 	 ldr r3,[r3,#320]
 1024 0024 23F47022 	 bic r2,r3,#983040
 1025 0028 7B68     	 ldr r3,[r7,#4]
 1026 002a C3F84021 	 str r2,[r3,#320]
 469:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t)(node << VADC_GLOBEVNP_REV0NP_Pos);
 1027              	 .loc 2 469 0
 1028 002e 7B68     	 ldr r3,[r7,#4]
 1029 0030 D3F84021 	 ldr r2,[r3,#320]
 1030 0034 FB68     	 ldr r3,[r7,#12]
 1031 0036 1B04     	 lsls r3,r3,#16
 1032 0038 1A43     	 orrs r2,r2,r3
 1033 003a 7B68     	 ldr r3,[r7,#4]
 1034 003c C3F84021 	 str r2,[r3,#320]
 470:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1035              	 .loc 2 470 0
 1036 0040 1437     	 adds r7,r7,#20
 1037              	 .cfi_def_cfa_offset 4
 1038 0042 BD46     	 mov sp,r7
 1039              	 .cfi_def_cfa_register 13
 1040              	 
 1041 0044 5DF8047B 	 ldr r7,[sp],#4
 1042              	 .cfi_restore 7
 1043              	 .cfi_def_cfa_offset 0
 1044 0048 7047     	 bx lr
 1045              	 .cfi_endproc
 1046              	.LFE266:
 1048 004a 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode,"ax",%progbits
 1049              	 .align 2
 1050              	 .global XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode
 1051              	 .thumb
 1052              	 .thumb_func
 1054              	XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:
 1055              	.LFB267:
 471:../Libraries/XMCLib/src/xmc_vadc.c **** 
 472:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to bind request source event with a service request line */
 473:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC
 474:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1056              	 .loc 2 474 0
 1057              	 .cfi_startproc
 1058              	 
 1059              	 
 1060              	 
 1061 0000 80B4     	 push {r7}
 1062              	 .cfi_def_cfa_offset 4
 1063              	 .cfi_offset 7,-4
 1064 0002 85B0     	 sub sp,sp,#20
 1065              	 .cfi_def_cfa_offset 24
 1066 0004 00AF     	 add r7,sp,#0
 1067              	 .cfi_def_cfa_register 7
 1068 0006 7860     	 str r0,[r7,#4]
 1069 0008 0B46     	 mov r3,r1
 1070 000a FB70     	 strb r3,[r7,#3]
 475:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t node;
 476:../Libraries/XMCLib/src/xmc_vadc.c **** 
 477:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:Wrong Module Pointer", (global_
 478:../Libraries/XMCLib/src/xmc_vadc.c **** 
 479:../Libraries/XMCLib/src/xmc_vadc.c ****   if (sr >= XMC_VADC_SR_SHARED_SR0)
 1071              	 .loc 2 479 0
 1072 000c FB78     	 ldrb r3,[r7,#3]
 1073 000e 032B     	 cmp r3,#3
 1074 0010 03D9     	 bls .L42
 480:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 481:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr - (uint32_t)XMC_VADC_SR_SHARED_SR0;
 1075              	 .loc 2 481 0
 1076 0012 FB78     	 ldrb r3,[r7,#3]
 1077 0014 043B     	 subs r3,r3,#4
 1078 0016 FB60     	 str r3,[r7,#12]
 1079 0018 01E0     	 b .L43
 1080              	.L42:
 482:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 483:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 484:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 485:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr;
 1081              	 .loc 2 485 0
 1082 001a FB78     	 ldrb r3,[r7,#3]
 1083 001c FB60     	 str r3,[r7,#12]
 1084              	.L43:
 486:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 487:../Libraries/XMCLib/src/xmc_vadc.c **** 
 488:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP &= ~((uint32_t)VADC_GLOBEVNP_SEV0NP_Msk);
 1085              	 .loc 2 488 0
 1086 001e 7B68     	 ldr r3,[r7,#4]
 1087 0020 D3F84031 	 ldr r3,[r3,#320]
 1088 0024 23F00F02 	 bic r2,r3,#15
 1089 0028 7B68     	 ldr r3,[r7,#4]
 1090 002a C3F84021 	 str r2,[r3,#320]
 489:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t) (node << VADC_GLOBEVNP_SEV0NP_Pos);
 1091              	 .loc 2 489 0
 1092 002e 7B68     	 ldr r3,[r7,#4]
 1093 0030 D3F84021 	 ldr r2,[r3,#320]
 1094 0034 FB68     	 ldr r3,[r7,#12]
 1095 0036 1A43     	 orrs r2,r2,r3
 1096 0038 7B68     	 ldr r3,[r7,#4]
 1097 003a C3F84021 	 str r2,[r3,#320]
 490:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1098              	 .loc 2 490 0
 1099 003e 1437     	 adds r7,r7,#20
 1100              	 .cfi_def_cfa_offset 4
 1101 0040 BD46     	 mov sp,r7
 1102              	 .cfi_def_cfa_register 13
 1103              	 
 1104 0042 5DF8047B 	 ldr r7,[sp],#4
 1105              	 .cfi_restore 7
 1106              	 .cfi_def_cfa_offset 0
 1107 0046 7047     	 bx lr
 1108              	 .cfi_endproc
 1109              	.LFE267:
 1111              	 .section .text.XMC_VADC_GROUP_Init,"ax",%progbits
 1112              	 .align 2
 1113              	 .global XMC_VADC_GROUP_Init
 1114              	 .thumb
 1115              	 .thumb_func
 1117              	XMC_VADC_GROUP_Init:
 1118              	.LFB268:
 491:../Libraries/XMCLib/src/xmc_vadc.c **** 
 492:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize an instance of group of VADC hardware */
 493:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 494:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_Init( XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CONFIG_t *config)
 495:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1119              	 .loc 2 495 0
 1120              	 .cfi_startproc
 1121              	 
 1122              	 
 1123 0000 80B5     	 push {r7,lr}
 1124              	 .cfi_def_cfa_offset 8
 1125              	 .cfi_offset 7,-8
 1126              	 .cfi_offset 14,-4
 1127 0002 82B0     	 sub sp,sp,#8
 1128              	 .cfi_def_cfa_offset 16
 1129 0004 00AF     	 add r7,sp,#0
 1130              	 .cfi_def_cfa_register 7
 1131 0006 7860     	 str r0,[r7,#4]
 1132 0008 3960     	 str r1,[r7]
 496:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_Init:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
 497:../Libraries/XMCLib/src/xmc_vadc.c **** 
 498:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the input classes */
 499:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class0, XMC_VADC_GROUP_CONV_STD, 0U);
 1133              	 .loc 2 499 0
 1134 000a 3B68     	 ldr r3,[r7]
 1135 000c 7868     	 ldr r0,[r7,#4]
 1136 000e 5968     	 ldr r1,[r3,#4]
 1137 0010 0022     	 movs r2,#0
 1138 0012 0023     	 movs r3,#0
 1139 0014 FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 500:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class0, XMC_VADC_GROUP_CONV_EMUX, 0U);
 1140              	 .loc 2 500 0
 1141 0018 3B68     	 ldr r3,[r7]
 1142 001a 7868     	 ldr r0,[r7,#4]
 1143 001c 5968     	 ldr r1,[r3,#4]
 1144 001e 0122     	 movs r2,#1
 1145 0020 0023     	 movs r3,#0
 1146 0022 FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 501:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class1, XMC_VADC_GROUP_CONV_STD, 1U);
 1147              	 .loc 2 501 0
 1148 0026 3B68     	 ldr r3,[r7]
 1149 0028 7868     	 ldr r0,[r7,#4]
 1150 002a 9968     	 ldr r1,[r3,#8]
 1151 002c 0022     	 movs r2,#0
 1152 002e 0123     	 movs r3,#1
 1153 0030 FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 502:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class1, XMC_VADC_GROUP_CONV_EMUX, 1U);
 1154              	 .loc 2 502 0
 1155 0034 3B68     	 ldr r3,[r7]
 1156 0036 7868     	 ldr r0,[r7,#4]
 1157 0038 9968     	 ldr r1,[r3,#8]
 1158 003a 0122     	 movs r2,#1
 1159 003c 0123     	 movs r3,#1
 1160 003e FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 503:../Libraries/XMCLib/src/xmc_vadc.c **** 
 504:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBCFG = config->g_arbcfg;
 1161              	 .loc 2 504 0
 1162 0042 3B68     	 ldr r3,[r7]
 1163 0044 1A69     	 ldr r2,[r3,#16]
 1164 0046 7B68     	 ldr r3,[r7,#4]
 1165 0048 C3F88020 	 str r2,[r3,#128]
 505:../Libraries/XMCLib/src/xmc_vadc.c **** 
 506:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = config->g_bound;
 1166              	 .loc 2 506 0
 1167 004c 3B68     	 ldr r3,[r7]
 1168 004e DA68     	 ldr r2,[r3,#12]
 1169 0050 7B68     	 ldr r3,[r7,#4]
 1170 0052 C3F8B820 	 str r2,[r3,#184]
 507:../Libraries/XMCLib/src/xmc_vadc.c **** 
 508:../Libraries/XMCLib/src/xmc_vadc.c ****   /* External mux configuration */
 509:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ExternalMuxControlInit(group_ptr, config->emux_config);
 1171              	 .loc 2 509 0
 1172 0056 3B68     	 ldr r3,[r7]
 1173 0058 7868     	 ldr r0,[r7,#4]
 1174 005a 1968     	 ldr r1,[r3]
 1175 005c FFF7FEFF 	 bl XMC_VADC_GROUP_ExternalMuxControlInit
 510:../Libraries/XMCLib/src/xmc_vadc.c **** 
 511:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1176              	 .loc 2 511 0
 1177 0060 0837     	 adds r7,r7,#8
 1178              	 .cfi_def_cfa_offset 8
 1179 0062 BD46     	 mov sp,r7
 1180              	 .cfi_def_cfa_register 13
 1181              	 
 1182 0064 80BD     	 pop {r7,pc}
 1183              	 .cfi_endproc
 1184              	.LFE268:
 1186 0066 00BF     	 .section .text.XMC_VADC_GROUP_InputClassInit,"ax",%progbits
 1187              	 .align 2
 1188              	 .global XMC_VADC_GROUP_InputClassInit
 1189              	 .thumb
 1190              	 .thumb_func
 1192              	XMC_VADC_GROUP_InputClassInit:
 1193              	.LFB269:
 512:../Libraries/XMCLib/src/xmc_vadc.c **** 
 513:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to program conversion characteristics */
 514:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_InputClassInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CLASS_t 
 515:../Libraries/XMCLib/src/xmc_vadc.c ****                                    const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set_num)
 516:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1194              	 .loc 2 516 0
 1195              	 .cfi_startproc
 1196              	 
 1197              	 
 1198              	 
 1199 0000 80B4     	 push {r7}
 1200              	 .cfi_def_cfa_offset 4
 1201              	 .cfi_offset 7,-4
 1202 0002 8DB0     	 sub sp,sp,#52
 1203              	 .cfi_def_cfa_offset 56
 1204 0004 00AF     	 add r7,sp,#0
 1205              	 .cfi_def_cfa_register 7
 1206 0006 F860     	 str r0,[r7,#12]
 1207 0008 B960     	 str r1,[r7,#8]
 1208 000a 3B60     	 str r3,[r7]
 1209 000c 1346     	 mov r3,r2
 1210 000e FB71     	 strb r3,[r7,#7]
 517:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_class;
 518:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_mode_pos;
 519:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time_pos;
 520:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_mode_mask;
 521:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time_mask;
 522:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time;
 523:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_CONVMODE_t conv_mode;
 524:../Libraries/XMCLib/src/xmc_vadc.c **** 
 525:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_pt
 526:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong Conversion Type", ((conv_type) <= XMC_VADC_GROUP_
 527:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong ICLASS set number", (set_num < XMC_VADC_MAX_ICLAS
 528:../Libraries/XMCLib/src/xmc_vadc.c **** 
 529:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
 530:../Libraries/XMCLib/src/xmc_vadc.c ****    * Obtain the mask and position macros of the parameters based on what is being requested - Stand
 531:../Libraries/XMCLib/src/xmc_vadc.c ****    * external mux channels.
 532:../Libraries/XMCLib/src/xmc_vadc.c ****    */
 533:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_GROUP_CONV_STD == conv_type)
 1211              	 .loc 2 533 0
 1212 0010 FB79     	 ldrb r3,[r7,#7]
 1213 0012 002B     	 cmp r3,#0
 1214 0014 13D1     	 bne .L46
 534:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 535:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_pos    = (uint32_t) VADC_G_ICLASS_CMS_Pos;
 1215              	 .loc 2 535 0
 1216 0016 0823     	 movs r3,#8
 1217 0018 FB62     	 str r3,[r7,#44]
 536:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_mask   = (uint32_t) VADC_G_ICLASS_CMS_Msk;
 1218              	 .loc 2 536 0
 1219 001a 4FF4E063 	 mov r3,#1792
 1220 001e 7B62     	 str r3,[r7,#36]
 537:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_pos  = (uint32_t) VADC_G_ICLASS_STCS_Pos;
 1221              	 .loc 2 537 0
 1222 0020 0023     	 movs r3,#0
 1223 0022 BB62     	 str r3,[r7,#40]
 538:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_mask = (uint32_t) VADC_G_ICLASS_STCS_Msk;
 1224              	 .loc 2 538 0
 1225 0024 1F23     	 movs r3,#31
 1226 0026 3B62     	 str r3,[r7,#32]
 539:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time      = (uint32_t) config.sample_time_std_conv;
 1227              	 .loc 2 539 0
 1228 0028 3B7A     	 ldrb r3,[r7,#8]
 1229 002a C3F30403 	 ubfx r3,r3,#0,#5
 1230 002e DBB2     	 uxtb r3,r3
 1231 0030 FB61     	 str r3,[r7,#28]
 540:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_standard;
 1232              	 .loc 2 540 0
 1233 0032 7B7A     	 ldrb r3,[r7,#9]
 1234 0034 C3F30203 	 ubfx r3,r3,#0,#3
 1235 0038 DBB2     	 uxtb r3,r3
 1236 003a FB76     	 strb r3,[r7,#27]
 1237 003c 13E0     	 b .L47
 1238              	.L46:
 541:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 542:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 543:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 544:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_pos    = (uint32_t) VADC_G_ICLASS_CME_Pos;
 1239              	 .loc 2 544 0
 1240 003e 1823     	 movs r3,#24
 1241 0040 FB62     	 str r3,[r7,#44]
 545:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_mask   = (uint32_t) VADC_G_ICLASS_CME_Msk;
 1242              	 .loc 2 545 0
 1243 0042 4FF0E063 	 mov r3,#117440512
 1244 0046 7B62     	 str r3,[r7,#36]
 546:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_pos  = (uint32_t) VADC_G_ICLASS_STCE_Pos;
 1245              	 .loc 2 546 0
 1246 0048 1023     	 movs r3,#16
 1247 004a BB62     	 str r3,[r7,#40]
 547:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_mask = (uint32_t) VADC_G_ICLASS_STCE_Msk;
 1248              	 .loc 2 547 0
 1249 004c 4FF4F813 	 mov r3,#2031616
 1250 0050 3B62     	 str r3,[r7,#32]
 548:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time      = (uint32_t) config.sampling_phase_emux_channel;
 1251              	 .loc 2 548 0
 1252 0052 BB7A     	 ldrb r3,[r7,#10]
 1253 0054 C3F30403 	 ubfx r3,r3,#0,#5
 1254 0058 DBB2     	 uxtb r3,r3
 1255 005a FB61     	 str r3,[r7,#28]
 549:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_emux;
 1256              	 .loc 2 549 0
 1257 005c FB7A     	 ldrb r3,[r7,#11]
 1258 005e C3F30203 	 ubfx r3,r3,#0,#3
 1259 0062 DBB2     	 uxtb r3,r3
 1260 0064 FB76     	 strb r3,[r7,#27]
 1261              	.L47:
 550:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 551:../Libraries/XMCLib/src/xmc_vadc.c **** 
 552:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Determine the class */
 553:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class  = group_ptr->ICLASS[set_num];
 1262              	 .loc 2 553 0
 1263 0066 FB68     	 ldr r3,[r7,#12]
 1264 0068 3A68     	 ldr r2,[r7]
 1265 006a 2832     	 adds r2,r2,#40
 1266 006c 53F82230 	 ldr r3,[r3,r2,lsl#2]
 1267 0070 7B61     	 str r3,[r7,#20]
 554:../Libraries/XMCLib/src/xmc_vadc.c **** 
 555:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the class register */
 556:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(conv_mode_mask);
 1268              	 .loc 2 556 0
 1269 0072 7B6A     	 ldr r3,[r7,#36]
 1270 0074 DB43     	 mvns r3,r3
 1271 0076 7A69     	 ldr r2,[r7,#20]
 1272 0078 1340     	 ands r3,r3,r2
 1273 007a 7B61     	 str r3,[r7,#20]
 557:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)((uint32_t) conv_mode << conv_mode_pos);
 1274              	 .loc 2 557 0
 1275 007c FA7E     	 ldrb r2,[r7,#27]
 1276 007e FB6A     	 ldr r3,[r7,#44]
 1277 0080 02FA03F3 	 lsl r3,r2,r3
 1278 0084 7A69     	 ldr r2,[r7,#20]
 1279 0086 1343     	 orrs r3,r3,r2
 1280 0088 7B61     	 str r3,[r7,#20]
 558:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(sample_time_mask);
 1281              	 .loc 2 558 0
 1282 008a 3B6A     	 ldr r3,[r7,#32]
 1283 008c DB43     	 mvns r3,r3
 1284 008e 7A69     	 ldr r2,[r7,#20]
 1285 0090 1340     	 ands r3,r3,r2
 1286 0092 7B61     	 str r3,[r7,#20]
 559:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)(sample_time <<  sample_time_pos);
 1287              	 .loc 2 559 0
 1288 0094 BB6A     	 ldr r3,[r7,#40]
 1289 0096 FA69     	 ldr r2,[r7,#28]
 1290 0098 02FA03F3 	 lsl r3,r2,r3
 1291 009c 7A69     	 ldr r2,[r7,#20]
 1292 009e 1343     	 orrs r3,r3,r2
 1293 00a0 7B61     	 str r3,[r7,#20]
 560:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ICLASS[set_num] = conv_class;
 1294              	 .loc 2 560 0
 1295 00a2 FB68     	 ldr r3,[r7,#12]
 1296 00a4 3A68     	 ldr r2,[r7]
 1297 00a6 2832     	 adds r2,r2,#40
 1298 00a8 7969     	 ldr r1,[r7,#20]
 1299 00aa 43F82210 	 str r1,[r3,r2,lsl#2]
 561:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1300              	 .loc 2 561 0
 1301 00ae 3437     	 adds r7,r7,#52
 1302              	 .cfi_def_cfa_offset 4
 1303 00b0 BD46     	 mov sp,r7
 1304              	 .cfi_def_cfa_register 13
 1305              	 
 1306 00b2 5DF8047B 	 ldr r7,[sp],#4
 1307              	 .cfi_restore 7
 1308              	 .cfi_def_cfa_offset 0
 1309 00b6 7047     	 bx lr
 1310              	 .cfi_endproc
 1311              	.LFE269:
 1313              	 .section .text.XMC_VADC_GROUP_SetPowerMode,"ax",%progbits
 1314              	 .align 2
 1315              	 .global XMC_VADC_GROUP_SetPowerMode
 1316              	 .thumb
 1317              	 .thumb_func
 1319              	XMC_VADC_GROUP_SetPowerMode:
 1320              	.LFB270:
 562:../Libraries/XMCLib/src/xmc_vadc.c **** 
 563:../Libraries/XMCLib/src/xmc_vadc.c **** /* API which sets the power mode of analog converter of a VADC group */
 564:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetPowerMode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_POWERMODE_
 565:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1321              	 .loc 2 565 0
 1322              	 .cfi_startproc
 1323              	 
 1324              	 
 1325              	 
 1326 0000 80B4     	 push {r7}
 1327              	 .cfi_def_cfa_offset 4
 1328              	 .cfi_offset 7,-4
 1329 0002 85B0     	 sub sp,sp,#20
 1330              	 .cfi_def_cfa_offset 24
 1331 0004 00AF     	 add r7,sp,#0
 1332              	 .cfi_def_cfa_register 7
 1333 0006 7860     	 str r0,[r7,#4]
 1334 0008 0B46     	 mov r3,r1
 1335 000a FB70     	 strb r3,[r7,#3]
 566:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t arbcfg;
 567:../Libraries/XMCLib/src/xmc_vadc.c **** 
 568:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetPowerMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
 569:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetPowerMode:Wrong Power Mode", (power_mode <= XMC_VADC_GROUP_POWERMOD
 570:../Libraries/XMCLib/src/xmc_vadc.c **** 
 571:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg = group_ptr->ARBCFG;
 1336              	 .loc 2 571 0
 1337 000c 7B68     	 ldr r3,[r7,#4]
 1338 000e D3F88030 	 ldr r3,[r3,#128]
 1339 0012 FB60     	 str r3,[r7,#12]
 572:../Libraries/XMCLib/src/xmc_vadc.c **** 
 573:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg &= ~((uint32_t)VADC_G_ARBCFG_ANONC_Msk);
 1340              	 .loc 2 573 0
 1341 0014 FB68     	 ldr r3,[r7,#12]
 1342 0016 23F00303 	 bic r3,r3,#3
 1343 001a FB60     	 str r3,[r7,#12]
 574:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg |= (uint32_t)power_mode;
 1344              	 .loc 2 574 0
 1345 001c FB78     	 ldrb r3,[r7,#3]
 1346 001e FA68     	 ldr r2,[r7,#12]
 1347 0020 1343     	 orrs r3,r3,r2
 1348 0022 FB60     	 str r3,[r7,#12]
 575:../Libraries/XMCLib/src/xmc_vadc.c **** 
 576:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBCFG = arbcfg;
 1349              	 .loc 2 576 0
 1350 0024 7B68     	 ldr r3,[r7,#4]
 1351 0026 FA68     	 ldr r2,[r7,#12]
 1352 0028 C3F88020 	 str r2,[r3,#128]
 577:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1353              	 .loc 2 577 0
 1354 002c 1437     	 adds r7,r7,#20
 1355              	 .cfi_def_cfa_offset 4
 1356 002e BD46     	 mov sp,r7
 1357              	 .cfi_def_cfa_register 13
 1358              	 
 1359 0030 5DF8047B 	 ldr r7,[sp],#4
 1360              	 .cfi_restore 7
 1361              	 .cfi_def_cfa_offset 0
 1362 0034 7047     	 bx lr
 1363              	 .cfi_endproc
 1364              	.LFE270:
 1366 0036 00BF     	 .section .text.XMC_VADC_GROUP_SetSyncSlave,"ax",%progbits
 1367              	 .align 2
 1368              	 .global XMC_VADC_GROUP_SetSyncSlave
 1369              	 .thumb
 1370              	 .thumb_func
 1372              	XMC_VADC_GROUP_SetSyncSlave:
 1373              	.LFB271:
 578:../Libraries/XMCLib/src/xmc_vadc.c **** 
 579:../Libraries/XMCLib/src/xmc_vadc.c **** /* API which programs a group as a slave group during sync conversions */
 580:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncSlave(XMC_VADC_GROUP_t *const group_ptr, uint32_t master_grp, uint32_t s
 581:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1374              	 .loc 2 581 0
 1375              	 .cfi_startproc
 1376              	 
 1377              	 
 1378              	 
 1379 0000 80B4     	 push {r7}
 1380              	 .cfi_def_cfa_offset 4
 1381              	 .cfi_offset 7,-4
 1382 0002 87B0     	 sub sp,sp,#28
 1383              	 .cfi_def_cfa_offset 32
 1384 0004 00AF     	 add r7,sp,#0
 1385              	 .cfi_def_cfa_register 7
 1386 0006 F860     	 str r0,[r7,#12]
 1387 0008 B960     	 str r1,[r7,#8]
 1388 000a 7A60     	 str r2,[r7,#4]
 582:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 583:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_MULTIPLE_SLAVEGROUPS == 1U )
 584:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 585:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncSlave:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
 586:../Libraries/XMCLib/src/xmc_vadc.c **** 
 587:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_MULTIPLE_SLAVEGROUPS == 1U )
 588:../Libraries/XMCLib/src/xmc_vadc.c **** 
 589:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Determine the coding of SYNCTR */
 590:../Libraries/XMCLib/src/xmc_vadc.c ****   if (slave_grp > master_grp)
 1389              	 .loc 2 590 0
 1390 000c 7A68     	 ldr r2,[r7,#4]
 1391 000e BB68     	 ldr r3,[r7,#8]
 1392 0010 9A42     	 cmp r2,r3
 1393 0012 02D9     	 bls .L50
 591:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 592:../Libraries/XMCLib/src/xmc_vadc.c ****     master_grp = master_grp + 1U;
 1394              	 .loc 2 592 0
 1395 0014 BB68     	 ldr r3,[r7,#8]
 1396 0016 0133     	 adds r3,r3,#1
 1397 0018 BB60     	 str r3,[r7,#8]
 1398              	.L50:
 593:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 594:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 595:../Libraries/XMCLib/src/xmc_vadc.c **** 
 596:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program SYNCTR */
 597:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr = group_ptr->SYNCTR;
 1399              	 .loc 2 597 0
 1400 001a FB68     	 ldr r3,[r7,#12]
 1401 001c D3F8C030 	 ldr r3,[r3,#192]
 1402 0020 7B61     	 str r3,[r7,#20]
 598:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   &= ~((uint32_t)VADC_G_SYNCTR_STSEL_Msk);
 1403              	 .loc 2 598 0
 1404 0022 7B69     	 ldr r3,[r7,#20]
 1405 0024 23F00303 	 bic r3,r3,#3
 1406 0028 7B61     	 str r3,[r7,#20]
 599:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   |= master_grp;
 1407              	 .loc 2 599 0
 1408 002a 7A69     	 ldr r2,[r7,#20]
 1409 002c BB68     	 ldr r3,[r7,#8]
 1410 002e 1343     	 orrs r3,r3,r2
 1411 0030 7B61     	 str r3,[r7,#20]
 600:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR = synctr;
 1412              	 .loc 2 600 0
 1413 0032 FB68     	 ldr r3,[r7,#12]
 1414 0034 7A69     	 ldr r2,[r7,#20]
 1415 0036 C3F8C020 	 str r2,[r3,#192]
 601:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1416              	 .loc 2 601 0
 1417 003a 1C37     	 adds r7,r7,#28
 1418              	 .cfi_def_cfa_offset 4
 1419 003c BD46     	 mov sp,r7
 1420              	 .cfi_def_cfa_register 13
 1421              	 
 1422 003e 5DF8047B 	 ldr r7,[sp],#4
 1423              	 .cfi_restore 7
 1424              	 .cfi_def_cfa_offset 0
 1425 0042 7047     	 bx lr
 1426              	 .cfi_endproc
 1427              	.LFE271:
 1429              	 .section .text.XMC_VADC_GROUP_SetSyncMaster,"ax",%progbits
 1430              	 .align 2
 1431              	 .global XMC_VADC_GROUP_SetSyncMaster
 1432              	 .thumb
 1433              	 .thumb_func
 1435              	XMC_VADC_GROUP_SetSyncMaster:
 1436              	.LFB272:
 602:../Libraries/XMCLib/src/xmc_vadc.c **** 
 603:../Libraries/XMCLib/src/xmc_vadc.c **** /* API which programs a group as a master group during sync conversions */
 604:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncMaster(XMC_VADC_GROUP_t *const group_ptr)
 605:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1437              	 .loc 2 605 0
 1438              	 .cfi_startproc
 1439              	 
 1440              	 
 1441              	 
 1442 0000 80B4     	 push {r7}
 1443              	 .cfi_def_cfa_offset 4
 1444              	 .cfi_offset 7,-4
 1445 0002 85B0     	 sub sp,sp,#20
 1446              	 .cfi_def_cfa_offset 24
 1447 0004 00AF     	 add r7,sp,#0
 1448              	 .cfi_def_cfa_register 7
 1449 0006 7860     	 str r0,[r7,#4]
 606:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 607:../Libraries/XMCLib/src/xmc_vadc.c **** 
 608:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncMaster:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
 609:../Libraries/XMCLib/src/xmc_vadc.c **** 
 610:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr = group_ptr->SYNCTR;
 1450              	 .loc 2 610 0
 1451 0008 7B68     	 ldr r3,[r7,#4]
 1452 000a D3F8C030 	 ldr r3,[r3,#192]
 1453 000e FB60     	 str r3,[r7,#12]
 611:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   &= ~((uint32_t)VADC_G_SYNCTR_STSEL_Msk);
 1454              	 .loc 2 611 0
 1455 0010 FB68     	 ldr r3,[r7,#12]
 1456 0012 23F00303 	 bic r3,r3,#3
 1457 0016 FB60     	 str r3,[r7,#12]
 612:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR = synctr;
 1458              	 .loc 2 612 0
 1459 0018 7B68     	 ldr r3,[r7,#4]
 1460 001a FA68     	 ldr r2,[r7,#12]
 1461 001c C3F8C020 	 str r2,[r3,#192]
 613:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1462              	 .loc 2 613 0
 1463 0020 1437     	 adds r7,r7,#20
 1464              	 .cfi_def_cfa_offset 4
 1465 0022 BD46     	 mov sp,r7
 1466              	 .cfi_def_cfa_register 13
 1467              	 
 1468 0024 5DF8047B 	 ldr r7,[sp],#4
 1469              	 .cfi_restore 7
 1470              	 .cfi_def_cfa_offset 0
 1471 0028 7047     	 bx lr
 1472              	 .cfi_endproc
 1473              	.LFE272:
 1475 002a 00BF     	 .section .text.XMC_VADC_GROUP_CheckSlaveReadiness,"ax",%progbits
 1476              	 .align 2
 1477              	 .global XMC_VADC_GROUP_CheckSlaveReadiness
 1478              	 .thumb
 1479              	 .thumb_func
 1481              	XMC_VADC_GROUP_CheckSlaveReadiness:
 1482              	.LFB273:
 614:../Libraries/XMCLib/src/xmc_vadc.c **** 
 615:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable checking of readiness of slaves before a synchronous conversion request is issued 
 616:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_CheckSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group)
 617:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1483              	 .loc 2 617 0
 1484              	 .cfi_startproc
 1485              	 
 1486              	 
 1487              	 
 1488 0000 80B4     	 push {r7}
 1489              	 .cfi_def_cfa_offset 4
 1490              	 .cfi_offset 7,-4
 1491 0002 85B0     	 sub sp,sp,#20
 1492              	 .cfi_def_cfa_offset 24
 1493 0004 00AF     	 add r7,sp,#0
 1494              	 .cfi_def_cfa_register 7
 1495 0006 7860     	 str r0,[r7,#4]
 1496 0008 3960     	 str r1,[r7]
 618:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i, master_grp_num;
 619:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_CheckSlaveReadiness:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
 620:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_CheckSlaveReadiness:Wrong Slave group", (slave_group <= (XMC_VADC_MAXI
 621:../Libraries/XMCLib/src/xmc_vadc.c **** 
 622:../Libraries/XMCLib/src/xmc_vadc.c ****   master_grp_num = 0;
 1497              	 .loc 2 622 0
 1498 000a 0023     	 movs r3,#0
 1499 000c BB60     	 str r3,[r7,#8]
 623:../Libraries/XMCLib/src/xmc_vadc.c ****   for (i = 0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 1500              	 .loc 2 623 0
 1501 000e 0023     	 movs r3,#0
 1502 0010 FB60     	 str r3,[r7,#12]
 1503 0012 0BE0     	 b .L53
 1504              	.L55:
 624:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 625:../Libraries/XMCLib/src/xmc_vadc.c ****     if (g_xmc_vadc_group_array[i] == group_ptr)
 1505              	 .loc 2 625 0
 1506 0014 134A     	 ldr r2,.L57
 1507 0016 FB68     	 ldr r3,[r7,#12]
 1508 0018 52F82320 	 ldr r2,[r2,r3,lsl#2]
 1509 001c 7B68     	 ldr r3,[r7,#4]
 1510 001e 9A42     	 cmp r2,r3
 1511 0020 01D1     	 bne .L54
 626:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 627:../Libraries/XMCLib/src/xmc_vadc.c ****       master_grp_num = i;
 1512              	 .loc 2 627 0
 1513 0022 FB68     	 ldr r3,[r7,#12]
 1514 0024 BB60     	 str r3,[r7,#8]
 1515              	.L54:
 623:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 1516              	 .loc 2 623 0 discriminator 2
 1517 0026 FB68     	 ldr r3,[r7,#12]
 1518 0028 0133     	 adds r3,r3,#1
 1519 002a FB60     	 str r3,[r7,#12]
 1520              	.L53:
 623:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 1521              	 .loc 2 623 0 is_stmt 0 discriminator 1
 1522 002c FB68     	 ldr r3,[r7,#12]
 1523 002e 032B     	 cmp r3,#3
 1524 0030 F0D9     	 bls .L55
 628:../Libraries/XMCLib/src/xmc_vadc.c ****     }
 629:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 630:../Libraries/XMCLib/src/xmc_vadc.c **** 
 631:../Libraries/XMCLib/src/xmc_vadc.c **** 
 632:../Libraries/XMCLib/src/xmc_vadc.c ****   if (slave_group < master_grp_num)
 1525              	 .loc 2 632 0 is_stmt 1
 1526 0032 3A68     	 ldr r2,[r7]
 1527 0034 BB68     	 ldr r3,[r7,#8]
 1528 0036 9A42     	 cmp r2,r3
 1529 0038 02D2     	 bcs .L56
 633:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 634:../Libraries/XMCLib/src/xmc_vadc.c ****     slave_group++;
 1530              	 .loc 2 634 0
 1531 003a 3B68     	 ldr r3,[r7]
 1532 003c 0133     	 adds r3,r3,#1
 1533 003e 3B60     	 str r3,[r7]
 1534              	.L56:
 635:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 636:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR |= (1U << (slave_group + XMC_VADC_SYNCTR_START_LOCATION));
 1535              	 .loc 2 636 0
 1536 0040 7B68     	 ldr r3,[r7,#4]
 1537 0042 D3F8C020 	 ldr r2,[r3,#192]
 1538 0046 3B68     	 ldr r3,[r7]
 1539 0048 0333     	 adds r3,r3,#3
 1540 004a 1946     	 mov r1,r3
 1541 004c 0123     	 movs r3,#1
 1542 004e 8B40     	 lsls r3,r3,r1
 1543 0050 1A43     	 orrs r2,r2,r3
 1544 0052 7B68     	 ldr r3,[r7,#4]
 1545 0054 C3F8C020 	 str r2,[r3,#192]
 637:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1546              	 .loc 2 637 0
 1547 0058 1437     	 adds r7,r7,#20
 1548              	 .cfi_def_cfa_offset 4
 1549 005a BD46     	 mov sp,r7
 1550              	 .cfi_def_cfa_register 13
 1551              	 
 1552 005c 5DF8047B 	 ldr r7,[sp],#4
 1553              	 .cfi_restore 7
 1554              	 .cfi_def_cfa_offset 0
 1555 0060 7047     	 bx lr
 1556              	.L58:
 1557 0062 00BF     	 .align 2
 1558              	.L57:
 1559 0064 00000000 	 .word g_xmc_vadc_group_array
 1560              	 .cfi_endproc
 1561              	.LFE273:
 1563              	 .section .text.XMC_VADC_GROUP_IgnoreSlaveReadiness,"ax",%progbits
 1564              	 .align 2
 1565              	 .global XMC_VADC_GROUP_IgnoreSlaveReadiness
 1566              	 .thumb
 1567              	 .thumb_func
 1569              	XMC_VADC_GROUP_IgnoreSlaveReadiness:
 1570              	.LFB274:
 638:../Libraries/XMCLib/src/xmc_vadc.c **** 
 639:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to disable checking of readiness of slaves during synchronous conversions */
 640:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_IgnoreSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group)
 641:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1571              	 .loc 2 641 0
 1572              	 .cfi_startproc
 1573              	 
 1574              	 
 1575              	 
 1576 0000 80B4     	 push {r7}
 1577              	 .cfi_def_cfa_offset 4
 1578              	 .cfi_offset 7,-4
 1579 0002 85B0     	 sub sp,sp,#20
 1580              	 .cfi_def_cfa_offset 24
 1581 0004 00AF     	 add r7,sp,#0
 1582              	 .cfi_def_cfa_register 7
 1583 0006 7860     	 str r0,[r7,#4]
 1584 0008 3960     	 str r1,[r7]
 642:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i, master_grp_num;
 643:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IgnoreSlaveReadiness:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
 644:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IgnoreSlaveReadiness:Wrong Slave group", (slave_group <= (XMC_VADC_MAX
 645:../Libraries/XMCLib/src/xmc_vadc.c **** 
 646:../Libraries/XMCLib/src/xmc_vadc.c ****   master_grp_num = 0;
 1585              	 .loc 2 646 0
 1586 000a 0023     	 movs r3,#0
 1587 000c BB60     	 str r3,[r7,#8]
 647:../Libraries/XMCLib/src/xmc_vadc.c ****   for (i = 0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 1588              	 .loc 2 647 0
 1589 000e 0023     	 movs r3,#0
 1590 0010 FB60     	 str r3,[r7,#12]
 1591 0012 0BE0     	 b .L60
 1592              	.L62:
 648:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 649:../Libraries/XMCLib/src/xmc_vadc.c ****     if (g_xmc_vadc_group_array[i] == group_ptr)
 1593              	 .loc 2 649 0
 1594 0014 134A     	 ldr r2,.L64
 1595 0016 FB68     	 ldr r3,[r7,#12]
 1596 0018 52F82320 	 ldr r2,[r2,r3,lsl#2]
 1597 001c 7B68     	 ldr r3,[r7,#4]
 1598 001e 9A42     	 cmp r2,r3
 1599 0020 01D1     	 bne .L61
 650:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 651:../Libraries/XMCLib/src/xmc_vadc.c ****       master_grp_num = i;
 1600              	 .loc 2 651 0
 1601 0022 FB68     	 ldr r3,[r7,#12]
 1602 0024 BB60     	 str r3,[r7,#8]
 1603              	.L61:
 647:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 1604              	 .loc 2 647 0 discriminator 2
 1605 0026 FB68     	 ldr r3,[r7,#12]
 1606 0028 0133     	 adds r3,r3,#1
 1607 002a FB60     	 str r3,[r7,#12]
 1608              	.L60:
 647:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 1609              	 .loc 2 647 0 is_stmt 0 discriminator 1
 1610 002c FB68     	 ldr r3,[r7,#12]
 1611 002e 032B     	 cmp r3,#3
 1612 0030 F0D9     	 bls .L62
 652:../Libraries/XMCLib/src/xmc_vadc.c ****     }
 653:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 654:../Libraries/XMCLib/src/xmc_vadc.c **** 
 655:../Libraries/XMCLib/src/xmc_vadc.c ****   if (slave_group < master_grp_num)
 1613              	 .loc 2 655 0 is_stmt 1
 1614 0032 3A68     	 ldr r2,[r7]
 1615 0034 BB68     	 ldr r3,[r7,#8]
 1616 0036 9A42     	 cmp r2,r3
 1617 0038 02D2     	 bcs .L63
 656:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 657:../Libraries/XMCLib/src/xmc_vadc.c ****     slave_group++;
 1618              	 .loc 2 657 0
 1619 003a 3B68     	 ldr r3,[r7]
 1620 003c 0133     	 adds r3,r3,#1
 1621 003e 3B60     	 str r3,[r7]
 1622              	.L63:
 658:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 659:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR &= ~(1U << (slave_group + XMC_VADC_SYNCTR_START_LOCATION));
 1623              	 .loc 2 659 0
 1624 0040 7B68     	 ldr r3,[r7,#4]
 1625 0042 D3F8C020 	 ldr r2,[r3,#192]
 1626 0046 3B68     	 ldr r3,[r7]
 1627 0048 0333     	 adds r3,r3,#3
 1628 004a 1946     	 mov r1,r3
 1629 004c 0123     	 movs r3,#1
 1630 004e 8B40     	 lsls r3,r3,r1
 1631 0050 DB43     	 mvns r3,r3
 1632 0052 1A40     	 ands r2,r2,r3
 1633 0054 7B68     	 ldr r3,[r7,#4]
 1634 0056 C3F8C020 	 str r2,[r3,#192]
 660:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1635              	 .loc 2 660 0
 1636 005a 1437     	 adds r7,r7,#20
 1637              	 .cfi_def_cfa_offset 4
 1638 005c BD46     	 mov sp,r7
 1639              	 .cfi_def_cfa_register 13
 1640              	 
 1641 005e 5DF8047B 	 ldr r7,[sp],#4
 1642              	 .cfi_restore 7
 1643              	 .cfi_def_cfa_offset 0
 1644 0062 7047     	 bx lr
 1645              	.L65:
 1646              	 .align 2
 1647              	.L64:
 1648 0064 00000000 	 .word g_xmc_vadc_group_array
 1649              	 .cfi_endproc
 1650              	.LFE274:
 1652              	 .section .text.XMC_VADC_GROUP_SetSyncSlaveReadySignal,"ax",%progbits
 1653              	 .align 2
 1654              	 .global XMC_VADC_GROUP_SetSyncSlaveReadySignal
 1655              	 .thumb
 1656              	 .thumb_func
 1658              	XMC_VADC_GROUP_SetSyncSlaveReadySignal:
 1659              	.LFB275:
 661:../Libraries/XMCLib/src/xmc_vadc.c **** 
 662:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to configure EVAL bit in the slave groups*/
 663:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncSlaveReadySignal(XMC_VADC_GROUP_t *const group_ptr,
 664:../Libraries/XMCLib/src/xmc_vadc.c ****     uint32_t eval_waiting_group,
 665:../Libraries/XMCLib/src/xmc_vadc.c ****     uint32_t eval_origin_group)
 666:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1660              	 .loc 2 666 0
 1661              	 .cfi_startproc
 1662              	 
 1663              	 
 1664              	 
 1665 0000 80B4     	 push {r7}
 1666              	 .cfi_def_cfa_offset 4
 1667              	 .cfi_offset 7,-4
 1668 0002 85B0     	 sub sp,sp,#20
 1669              	 .cfi_def_cfa_offset 24
 1670 0004 00AF     	 add r7,sp,#0
 1671              	 .cfi_def_cfa_register 7
 1672 0006 F860     	 str r0,[r7,#12]
 1673 0008 B960     	 str r1,[r7,#8]
 1674 000a 7A60     	 str r2,[r7,#4]
 667:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncSlaveReadySignal:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR
 668:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncSlaveReadySignal:Wrong Group numbers", (eval_waiting_group != e
 669:../Libraries/XMCLib/src/xmc_vadc.c **** 
 670:../Libraries/XMCLib/src/xmc_vadc.c ****   if (eval_origin_group < eval_waiting_group)
 1675              	 .loc 2 670 0
 1676 000c 7A68     	 ldr r2,[r7,#4]
 1677 000e BB68     	 ldr r3,[r7,#8]
 1678 0010 9A42     	 cmp r2,r3
 1679 0012 02D2     	 bcs .L67
 671:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 672:../Libraries/XMCLib/src/xmc_vadc.c ****     eval_origin_group++;
 1680              	 .loc 2 672 0
 1681 0014 7B68     	 ldr r3,[r7,#4]
 1682 0016 0133     	 adds r3,r3,#1
 1683 0018 7B60     	 str r3,[r7,#4]
 1684              	.L67:
 673:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 674:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR |= (1U << (eval_origin_group + XMC_VADC_SYNCTR_START_LOCATION));
 1685              	 .loc 2 674 0
 1686 001a FB68     	 ldr r3,[r7,#12]
 1687 001c D3F8C020 	 ldr r2,[r3,#192]
 1688 0020 7B68     	 ldr r3,[r7,#4]
 1689 0022 0333     	 adds r3,r3,#3
 1690 0024 1946     	 mov r1,r3
 1691 0026 0123     	 movs r3,#1
 1692 0028 8B40     	 lsls r3,r3,r1
 1693 002a 1A43     	 orrs r2,r2,r3
 1694 002c FB68     	 ldr r3,[r7,#12]
 1695 002e C3F8C020 	 str r2,[r3,#192]
 675:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1696              	 .loc 2 675 0
 1697 0032 1437     	 adds r7,r7,#20
 1698              	 .cfi_def_cfa_offset 4
 1699 0034 BD46     	 mov sp,r7
 1700              	 .cfi_def_cfa_register 13
 1701              	 
 1702 0036 5DF8047B 	 ldr r7,[sp],#4
 1703              	 .cfi_restore 7
 1704              	 .cfi_def_cfa_offset 0
 1705 003a 7047     	 bx lr
 1706              	 .cfi_endproc
 1707              	.LFE275:
 1709              	 .section .text.XMC_VADC_GROUP_EnableChannelSyncRequest,"ax",%progbits
 1710              	 .align 2
 1711              	 .global XMC_VADC_GROUP_EnableChannelSyncRequest
 1712              	 .thumb
 1713              	 .thumb_func
 1715              	XMC_VADC_GROUP_EnableChannelSyncRequest:
 1716              	.LFB276:
 676:../Libraries/XMCLib/src/xmc_vadc.c **** 
 677:../Libraries/XMCLib/src/xmc_vadc.c **** 
 678:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the synchronous conversion feature - Applicable only to kernel configured as maste
 679:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_EnableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
 680:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1717              	 .loc 2 680 0
 1718              	 .cfi_startproc
 1719              	 
 1720              	 
 1721              	 
 1722 0000 80B4     	 push {r7}
 1723              	 .cfi_def_cfa_offset 4
 1724              	 .cfi_offset 7,-4
 1725 0002 85B0     	 sub sp,sp,#20
 1726              	 .cfi_def_cfa_offset 24
 1727 0004 00AF     	 add r7,sp,#0
 1728              	 .cfi_def_cfa_register 7
 1729 0006 7860     	 str r0,[r7,#4]
 1730 0008 3960     	 str r1,[r7]
 681:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 682:../Libraries/XMCLib/src/xmc_vadc.c **** 
 683:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_EnableChannelSyncRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
 684:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_EnableChannelSyncRequest:Wrong Channel Number",
 685:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
 686:../Libraries/XMCLib/src/xmc_vadc.c **** 
 687:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr  = group_ptr->SYNCTR;
 1731              	 .loc 2 687 0
 1732 000a 7B68     	 ldr r3,[r7,#4]
 1733 000c D3F8C030 	 ldr r3,[r3,#192]
 1734 0010 FB60     	 str r3,[r7,#12]
 688:../Libraries/XMCLib/src/xmc_vadc.c **** 
 689:../Libraries/XMCLib/src/xmc_vadc.c ****   if (!(synctr &  (uint32_t)VADC_G_SYNCTR_STSEL_Msk))
 1735              	 .loc 2 689 0
 1736 0012 FB68     	 ldr r3,[r7,#12]
 1737 0014 03F00303 	 and r3,r3,#3
 1738 0018 002B     	 cmp r3,#0
 1739 001a 0BD1     	 bne .L68
 690:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 691:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->CHCTR[ch_num] |= (uint32_t)((uint32_t)1 << VADC_G_CHCTR_SYNC_Pos);
 1740              	 .loc 2 691 0
 1741 001c 7B68     	 ldr r3,[r7,#4]
 1742 001e 3A68     	 ldr r2,[r7]
 1743 0020 8032     	 adds r2,r2,#128
 1744 0022 53F82230 	 ldr r3,[r3,r2,lsl#2]
 1745 0026 43F48061 	 orr r1,r3,#1024
 1746 002a 7B68     	 ldr r3,[r7,#4]
 1747 002c 3A68     	 ldr r2,[r7]
 1748 002e 8032     	 adds r2,r2,#128
 1749 0030 43F82210 	 str r1,[r3,r2,lsl#2]
 1750              	.L68:
 692:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 693:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1751              	 .loc 2 693 0
 1752 0034 1437     	 adds r7,r7,#20
 1753              	 .cfi_def_cfa_offset 4
 1754 0036 BD46     	 mov sp,r7
 1755              	 .cfi_def_cfa_register 13
 1756              	 
 1757 0038 5DF8047B 	 ldr r7,[sp],#4
 1758              	 .cfi_restore 7
 1759              	 .cfi_def_cfa_offset 0
 1760 003c 7047     	 bx lr
 1761              	 .cfi_endproc
 1762              	.LFE276:
 1764 003e 00BF     	 .section .text.XMC_VADC_GROUP_DisableChannelSyncRequest,"ax",%progbits
 1765              	 .align 2
 1766              	 .global XMC_VADC_GROUP_DisableChannelSyncRequest
 1767              	 .thumb
 1768              	 .thumb_func
 1770              	XMC_VADC_GROUP_DisableChannelSyncRequest:
 1771              	.LFB277:
 694:../Libraries/XMCLib/src/xmc_vadc.c **** 
 695:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to disable synchronous conversion feature */
 696:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_DisableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_
 697:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1772              	 .loc 2 697 0
 1773              	 .cfi_startproc
 1774              	 
 1775              	 
 1776              	 
 1777 0000 80B4     	 push {r7}
 1778              	 .cfi_def_cfa_offset 4
 1779              	 .cfi_offset 7,-4
 1780 0002 85B0     	 sub sp,sp,#20
 1781              	 .cfi_def_cfa_offset 24
 1782 0004 00AF     	 add r7,sp,#0
 1783              	 .cfi_def_cfa_register 7
 1784 0006 7860     	 str r0,[r7,#4]
 1785 0008 3960     	 str r1,[r7]
 698:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    synctr;
 699:../Libraries/XMCLib/src/xmc_vadc.c **** 
 700:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_DisableChannelSyncRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
 701:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_DisableChannelSyncRequest:Wrong Channel Number",
 702:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
 703:../Libraries/XMCLib/src/xmc_vadc.c **** 
 704:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr  = group_ptr->SYNCTR;
 1786              	 .loc 2 704 0
 1787 000a 7B68     	 ldr r3,[r7,#4]
 1788 000c D3F8C030 	 ldr r3,[r3,#192]
 1789 0010 FB60     	 str r3,[r7,#12]
 705:../Libraries/XMCLib/src/xmc_vadc.c **** 
 706:../Libraries/XMCLib/src/xmc_vadc.c ****   if (synctr &  (uint32_t)VADC_G_SYNCTR_STSEL_Msk)
 1790              	 .loc 2 706 0
 1791 0012 FB68     	 ldr r3,[r7,#12]
 1792 0014 03F00303 	 and r3,r3,#3
 1793 0018 002B     	 cmp r3,#0
 1794 001a 0BD0     	 beq .L70
 707:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 708:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->CHCTR[ch_num] &= ~((uint32_t)VADC_G_CHCTR_SYNC_Msk);
 1795              	 .loc 2 708 0
 1796 001c 7B68     	 ldr r3,[r7,#4]
 1797 001e 3A68     	 ldr r2,[r7]
 1798 0020 8032     	 adds r2,r2,#128
 1799 0022 53F82230 	 ldr r3,[r3,r2,lsl#2]
 1800 0026 23F48061 	 bic r1,r3,#1024
 1801 002a 7B68     	 ldr r3,[r7,#4]
 1802 002c 3A68     	 ldr r2,[r7]
 1803 002e 8032     	 adds r2,r2,#128
 1804 0030 43F82210 	 str r1,[r3,r2,lsl#2]
 1805              	.L70:
 709:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 710:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1806              	 .loc 2 710 0
 1807 0034 1437     	 adds r7,r7,#20
 1808              	 .cfi_def_cfa_offset 4
 1809 0036 BD46     	 mov sp,r7
 1810              	 .cfi_def_cfa_register 13
 1811              	 
 1812 0038 5DF8047B 	 ldr r7,[sp],#4
 1813              	 .cfi_restore 7
 1814              	 .cfi_def_cfa_offset 0
 1815 003c 7047     	 bx lr
 1816              	 .cfi_endproc
 1817              	.LFE277:
 1819 003e 00BF     	 .section .text.XMC_VADC_GROUP_IsConverterBusy,"ax",%progbits
 1820              	 .align 2
 1821              	 .global XMC_VADC_GROUP_IsConverterBusy
 1822              	 .thumb
 1823              	 .thumb_func
 1825              	XMC_VADC_GROUP_IsConverterBusy:
 1826              	.LFB278:
 711:../Libraries/XMCLib/src/xmc_vadc.c **** 
 712:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the converter state - Idle vs Busy */
 713:../Libraries/XMCLib/src/xmc_vadc.c **** XMC_VADC_GROUP_STATE_t XMC_VADC_GROUP_IsConverterBusy(XMC_VADC_GROUP_t *const group_ptr)
 714:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1827              	 .loc 2 714 0
 1828              	 .cfi_startproc
 1829              	 
 1830              	 
 1831              	 
 1832 0000 80B4     	 push {r7}
 1833              	 .cfi_def_cfa_offset 4
 1834              	 .cfi_offset 7,-4
 1835 0002 85B0     	 sub sp,sp,#20
 1836              	 .cfi_def_cfa_offset 24
 1837 0004 00AF     	 add r7,sp,#0
 1838              	 .cfi_def_cfa_register 7
 1839 0006 7860     	 str r0,[r7,#4]
 715:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t      arbcfg;
 716:../Libraries/XMCLib/src/xmc_vadc.c **** 
 717:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsConverterBusy:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
 718:../Libraries/XMCLib/src/xmc_vadc.c **** 
 719:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg  = group_ptr->ARBCFG;
 1840              	 .loc 2 719 0
 1841 0008 7B68     	 ldr r3,[r7,#4]
 1842 000a D3F88030 	 ldr r3,[r3,#128]
 1843 000e FB60     	 str r3,[r7,#12]
 720:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg &= (uint32_t)VADC_G_ARBCFG_BUSY_Msk;
 1844              	 .loc 2 720 0
 1845 0010 FB68     	 ldr r3,[r7,#12]
 1846 0012 03F08043 	 and r3,r3,#1073741824
 1847 0016 FB60     	 str r3,[r7,#12]
 721:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg = arbcfg >> VADC_G_ARBCFG_BUSY_Pos;
 1848              	 .loc 2 721 0
 1849 0018 FB68     	 ldr r3,[r7,#12]
 1850 001a 9B0F     	 lsrs r3,r3,#30
 1851 001c FB60     	 str r3,[r7,#12]
 722:../Libraries/XMCLib/src/xmc_vadc.c **** 
 723:../Libraries/XMCLib/src/xmc_vadc.c ****   return ( (XMC_VADC_GROUP_STATE_t)arbcfg);
 1852              	 .loc 2 723 0
 1853 001e FB68     	 ldr r3,[r7,#12]
 1854 0020 DBB2     	 uxtb r3,r3
 724:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1855              	 .loc 2 724 0
 1856 0022 1846     	 mov r0,r3
 1857 0024 1437     	 adds r7,r7,#20
 1858              	 .cfi_def_cfa_offset 4
 1859 0026 BD46     	 mov sp,r7
 1860              	 .cfi_def_cfa_register 13
 1861              	 
 1862 0028 5DF8047B 	 ldr r7,[sp],#4
 1863              	 .cfi_restore 7
 1864              	 .cfi_def_cfa_offset 0
 1865 002c 7047     	 bx lr
 1866              	 .cfi_endproc
 1867              	.LFE278:
 1869 002e 00BF     	 .section .text.XMC_VADC_GROUP_SetBoundaries,"ax",%progbits
 1870              	 .align 2
 1871              	 .global XMC_VADC_GROUP_SetBoundaries
 1872              	 .thumb
 1873              	 .thumb_func
 1875              	XMC_VADC_GROUP_SetBoundaries:
 1876              	.LFB279:
 725:../Libraries/XMCLib/src/xmc_vadc.c **** 
 726:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set boundaries for conversion results */
 727:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetBoundaries(XMC_VADC_GROUP_t *const group_ptr, const uint32_t boundary0, cons
 728:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1877              	 .loc 2 728 0
 1878              	 .cfi_startproc
 1879              	 
 1880              	 
 1881              	 
 1882 0000 80B4     	 push {r7}
 1883              	 .cfi_def_cfa_offset 4
 1884              	 .cfi_offset 7,-4
 1885 0002 87B0     	 sub sp,sp,#28
 1886              	 .cfi_def_cfa_offset 32
 1887 0004 00AF     	 add r7,sp,#0
 1888              	 .cfi_def_cfa_register 7
 1889 0006 F860     	 str r0,[r7,#12]
 1890 0008 B960     	 str r1,[r7,#8]
 1891 000a 7A60     	 str r2,[r7,#4]
 729:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t bound;
 730:../Libraries/XMCLib/src/xmc_vadc.c **** 
 731:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetBoundaries:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
 732:../Libraries/XMCLib/src/xmc_vadc.c **** 
 733:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 734:../Libraries/XMCLib/src/xmc_vadc.c ****   bound  = group_ptr->BOUND;
 1892              	 .loc 2 734 0
 1893 000c FB68     	 ldr r3,[r7,#12]
 1894 000e D3F8B830 	 ldr r3,[r3,#184]
 1895 0012 7B61     	 str r3,[r7,#20]
 735:../Libraries/XMCLib/src/xmc_vadc.c ****   bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY0_Msk);
 1896              	 .loc 2 735 0
 1897 0014 7B69     	 ldr r3,[r7,#20]
 1898 0016 23F47F63 	 bic r3,r3,#4080
 1899 001a 23F00F03 	 bic r3,r3,#15
 1900 001e 7B61     	 str r3,[r7,#20]
 736:../Libraries/XMCLib/src/xmc_vadc.c ****   bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY1_Msk);
 1901              	 .loc 2 736 0
 1902 0020 7B69     	 ldr r3,[r7,#20]
 1903 0022 23F07F63 	 bic r3,r3,#267386880
 1904 0026 23F47023 	 bic r3,r3,#983040
 1905 002a 7B61     	 str r3,[r7,#20]
 737:../Libraries/XMCLib/src/xmc_vadc.c ****   bound |= (uint32_t) ((uint32_t) boundary0 << VADC_G_BOUND_BOUNDARY0_Pos);
 1906              	 .loc 2 737 0
 1907 002c 7A69     	 ldr r2,[r7,#20]
 1908 002e BB68     	 ldr r3,[r7,#8]
 1909 0030 1343     	 orrs r3,r3,r2
 1910 0032 7B61     	 str r3,[r7,#20]
 738:../Libraries/XMCLib/src/xmc_vadc.c ****   bound |= (uint32_t) ((uint32_t) boundary1 << VADC_G_BOUND_BOUNDARY1_Pos);
 1911              	 .loc 2 738 0
 1912 0034 7B68     	 ldr r3,[r7,#4]
 1913 0036 1B04     	 lsls r3,r3,#16
 1914 0038 7A69     	 ldr r2,[r7,#20]
 1915 003a 1343     	 orrs r3,r3,r2
 1916 003c 7B61     	 str r3,[r7,#20]
 739:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = bound;
 1917              	 .loc 2 739 0
 1918 003e FB68     	 ldr r3,[r7,#12]
 1919 0040 7A69     	 ldr r2,[r7,#20]
 1920 0042 C3F8B820 	 str r2,[r3,#184]
 740:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1921              	 .loc 2 740 0
 1922 0046 1C37     	 adds r7,r7,#28
 1923              	 .cfi_def_cfa_offset 4
 1924 0048 BD46     	 mov sp,r7
 1925              	 .cfi_def_cfa_register 13
 1926              	 
 1927 004a 5DF8047B 	 ldr r7,[sp],#4
 1928              	 .cfi_restore 7
 1929              	 .cfi_def_cfa_offset 0
 1930 004e 7047     	 bx lr
 1931              	 .cfi_endproc
 1932              	.LFE279:
 1934              	 .section .text.XMC_VADC_GROUP_SetIndividualBoundary,"ax",%progbits
 1935              	 .align 2
 1936              	 .global XMC_VADC_GROUP_SetIndividualBoundary
 1937              	 .thumb
 1938              	 .thumb_func
 1940              	XMC_VADC_GROUP_SetIndividualBoundary:
 1941              	.LFB280:
 741:../Libraries/XMCLib/src/xmc_vadc.c **** 
 742:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set an individual boundary for conversion results */
 743:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetIndividualBoundary(XMC_VADC_GROUP_t *const group_ptr,
 744:../Libraries/XMCLib/src/xmc_vadc.c ****     const XMC_VADC_CHANNEL_BOUNDARY_t selection,
 745:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint16_t boundary_value)
 746:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1942              	 .loc 2 746 0
 1943              	 .cfi_startproc
 1944              	 
 1945              	 
 1946              	 
 1947 0000 80B4     	 push {r7}
 1948              	 .cfi_def_cfa_offset 4
 1949              	 .cfi_offset 7,-4
 1950 0002 85B0     	 sub sp,sp,#20
 1951              	 .cfi_def_cfa_offset 24
 1952 0004 00AF     	 add r7,sp,#0
 1953              	 .cfi_def_cfa_register 7
 1954 0006 7860     	 str r0,[r7,#4]
 1955 0008 0B46     	 mov r3,r1
 1956 000a FB70     	 strb r3,[r7,#3]
 1957 000c 1346     	 mov r3,r2
 1958 000e 3B80     	 strh r3,[r7]
 747:../Libraries/XMCLib/src/xmc_vadc.c **** 
 748:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t bound;
 749:../Libraries/XMCLib/src/xmc_vadc.c **** 
 750:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetIndividualBoundary:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
 751:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetIndividualBoundary:Wrong Boundary Selection",
 752:../Libraries/XMCLib/src/xmc_vadc.c ****              ((XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 == selection) ||
 753:../Libraries/XMCLib/src/xmc_vadc.c ****               (XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1 == selection)))
 754:../Libraries/XMCLib/src/xmc_vadc.c **** 
 755:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 756:../Libraries/XMCLib/src/xmc_vadc.c ****   bound  = group_ptr->BOUND;
 1959              	 .loc 2 756 0
 1960 0010 7B68     	 ldr r3,[r7,#4]
 1961 0012 D3F8B830 	 ldr r3,[r3,#184]
 1962 0016 FB60     	 str r3,[r7,#12]
 757:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 == selection)
 1963              	 .loc 2 757 0
 1964 0018 FB78     	 ldrb r3,[r7,#3]
 1965 001a 002B     	 cmp r3,#0
 1966 001c 0AD1     	 bne .L76
 758:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 759:../Libraries/XMCLib/src/xmc_vadc.c ****     bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY0_Msk);
 1967              	 .loc 2 759 0
 1968 001e FB68     	 ldr r3,[r7,#12]
 1969 0020 23F47F63 	 bic r3,r3,#4080
 1970 0024 23F00F03 	 bic r3,r3,#15
 1971 0028 FB60     	 str r3,[r7,#12]
 760:../Libraries/XMCLib/src/xmc_vadc.c ****     bound |= (uint32_t) ((uint32_t) boundary_value << VADC_G_BOUND_BOUNDARY0_Pos);
 1972              	 .loc 2 760 0
 1973 002a 3B88     	 ldrh r3,[r7]
 1974 002c FA68     	 ldr r2,[r7,#12]
 1975 002e 1343     	 orrs r3,r3,r2
 1976 0030 FB60     	 str r3,[r7,#12]
 1977 0032 0DE0     	 b .L77
 1978              	.L76:
 761:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 762:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1 == selection)
 1979              	 .loc 2 762 0
 1980 0034 FB78     	 ldrb r3,[r7,#3]
 1981 0036 012B     	 cmp r3,#1
 1982 0038 0AD1     	 bne .L77
 763:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 764:../Libraries/XMCLib/src/xmc_vadc.c ****     bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY1_Msk);
 1983              	 .loc 2 764 0
 1984 003a FB68     	 ldr r3,[r7,#12]
 1985 003c 23F07F63 	 bic r3,r3,#267386880
 1986 0040 23F47023 	 bic r3,r3,#983040
 1987 0044 FB60     	 str r3,[r7,#12]
 765:../Libraries/XMCLib/src/xmc_vadc.c ****     bound |= (uint32_t) ((uint32_t) boundary_value << VADC_G_BOUND_BOUNDARY1_Pos);
 1988              	 .loc 2 765 0
 1989 0046 3B88     	 ldrh r3,[r7]
 1990 0048 1B04     	 lsls r3,r3,#16
 1991 004a FA68     	 ldr r2,[r7,#12]
 1992 004c 1343     	 orrs r3,r3,r2
 1993 004e FB60     	 str r3,[r7,#12]
 1994              	.L77:
 766:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 767:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 768:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 769:../Libraries/XMCLib/src/xmc_vadc.c ****     /* For MISRA*/
 770:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 771:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = bound;
 1995              	 .loc 2 771 0
 1996 0050 7B68     	 ldr r3,[r7,#4]
 1997 0052 FA68     	 ldr r2,[r7,#12]
 1998 0054 C3F8B820 	 str r2,[r3,#184]
 772:../Libraries/XMCLib/src/xmc_vadc.c **** 
 773:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1999              	 .loc 2 773 0
 2000 0058 1437     	 adds r7,r7,#20
 2001              	 .cfi_def_cfa_offset 4
 2002 005a BD46     	 mov sp,r7
 2003              	 .cfi_def_cfa_register 13
 2004              	 
 2005 005c 5DF8047B 	 ldr r7,[sp],#4
 2006              	 .cfi_restore 7
 2007              	 .cfi_def_cfa_offset 0
 2008 0060 7047     	 bx lr
 2009              	 .cfi_endproc
 2010              	.LFE280:
 2012 0062 00BF     	 .section .text.XMC_VADC_GROUP_TriggerServiceRequest,"ax",%progbits
 2013              	 .align 2
 2014              	 .global XMC_VADC_GROUP_TriggerServiceRequest
 2015              	 .thumb
 2016              	 .thumb_func
 2018              	XMC_VADC_GROUP_TriggerServiceRequest:
 2019              	.LFB281:
 774:../Libraries/XMCLib/src/xmc_vadc.c **** 
 775:../Libraries/XMCLib/src/xmc_vadc.c **** /* Manually assert service request (Interrupt) to NVIC */
 776:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_TriggerServiceRequest(XMC_VADC_GROUP_t *const group_ptr,
 777:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint32_t sr_num,
 778:../Libraries/XMCLib/src/xmc_vadc.c ****     const XMC_VADC_GROUP_IRQ_t type)
 779:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2020              	 .loc 2 779 0
 2021              	 .cfi_startproc
 2022              	 
 2023              	 
 2024              	 
 2025 0000 80B4     	 push {r7}
 2026              	 .cfi_def_cfa_offset 4
 2027              	 .cfi_offset 7,-4
 2028 0002 87B0     	 sub sp,sp,#28
 2029              	 .cfi_def_cfa_offset 32
 2030 0004 00AF     	 add r7,sp,#0
 2031              	 .cfi_def_cfa_register 7
 2032 0006 F860     	 str r0,[r7,#12]
 2033 0008 B960     	 str r1,[r7,#8]
 2034 000a 1346     	 mov r3,r2
 2035 000c FB71     	 strb r3,[r7,#7]
 780:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sract;
 781:../Libraries/XMCLib/src/xmc_vadc.c **** 
 782:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
 783:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong SR number", (sr_num <= XMC_VADC_SR_SHARED_
 784:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong SR type", ((type) <= XMC_VADC_GROUP_IRQ_SH
 785:../Libraries/XMCLib/src/xmc_vadc.c **** 
 786:../Libraries/XMCLib/src/xmc_vadc.c ****   sract = group_ptr->SRACT;
 2036              	 .loc 2 786 0
 2037 000e FB68     	 ldr r3,[r7,#12]
 2038 0010 D3F8C831 	 ldr r3,[r3,#456]
 2039 0014 7B61     	 str r3,[r7,#20]
 787:../Libraries/XMCLib/src/xmc_vadc.c **** 
 788:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_GROUP_IRQ_KERNEL == type)
 2040              	 .loc 2 788 0
 2041 0016 FB79     	 ldrb r3,[r7,#7]
 2042 0018 002B     	 cmp r3,#0
 2043 001a 07D1     	 bne .L79
 789:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 790:../Libraries/XMCLib/src/xmc_vadc.c ****     sract |= (uint32_t)((uint32_t)1 << sr_num);
 2044              	 .loc 2 790 0
 2045 001c BB68     	 ldr r3,[r7,#8]
 2046 001e 0122     	 movs r2,#1
 2047 0020 02FA03F3 	 lsl r3,r2,r3
 2048 0024 7A69     	 ldr r2,[r7,#20]
 2049 0026 1343     	 orrs r3,r3,r2
 2050 0028 7B61     	 str r3,[r7,#20]
 2051 002a 07E0     	 b .L80
 2052              	.L79:
 791:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 792:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 793:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 794:../Libraries/XMCLib/src/xmc_vadc.c ****     sract |= (uint32_t)((uint32_t)1 << (sr_num + (uint32_t)8));
 2053              	 .loc 2 794 0
 2054 002c BB68     	 ldr r3,[r7,#8]
 2055 002e 0833     	 adds r3,r3,#8
 2056 0030 1A46     	 mov r2,r3
 2057 0032 0123     	 movs r3,#1
 2058 0034 9340     	 lsls r3,r3,r2
 2059 0036 7A69     	 ldr r2,[r7,#20]
 2060 0038 1343     	 orrs r3,r3,r2
 2061 003a 7B61     	 str r3,[r7,#20]
 2062              	.L80:
 795:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 796:../Libraries/XMCLib/src/xmc_vadc.c **** 
 797:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SRACT = sract;
 2063              	 .loc 2 797 0
 2064 003c FB68     	 ldr r3,[r7,#12]
 2065 003e 7A69     	 ldr r2,[r7,#20]
 2066 0040 C3F8C821 	 str r2,[r3,#456]
 798:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2067              	 .loc 2 798 0
 2068 0044 1C37     	 adds r7,r7,#28
 2069              	 .cfi_def_cfa_offset 4
 2070 0046 BD46     	 mov sp,r7
 2071              	 .cfi_def_cfa_register 13
 2072              	 
 2073 0048 5DF8047B 	 ldr r7,[sp],#4
 2074              	 .cfi_restore 7
 2075              	 .cfi_def_cfa_offset 0
 2076 004c 7047     	 bx lr
 2077              	 .cfi_endproc
 2078              	.LFE281:
 2080 004e 00BF     	 .section .text.XMC_VADC_GROUP_SetBoundaryEventInterruptNode,"ax",%progbits
 2081              	 .align 2
 2082              	 .global XMC_VADC_GROUP_SetBoundaryEventInterruptNode
 2083              	 .thumb
 2084              	 .thumb_func
 2086              	XMC_VADC_GROUP_SetBoundaryEventInterruptNode:
 2087              	.LFB282:
 799:../Libraries/XMCLib/src/xmc_vadc.c **** 
 800:../Libraries/XMCLib/src/xmc_vadc.c **** #if XMC_VADC_BOUNDARY_FLAG_SELECT == 1U
 801:../Libraries/XMCLib/src/xmc_vadc.c **** 
 802:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the SR line for the Boundary flag node pointer*/
 803:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetBoundaryEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
 804:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint8_t boundary_flag_num,
 805:../Libraries/XMCLib/src/xmc_vadc.c ****     const XMC_VADC_BOUNDARY_NODE_t sr)
 806:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2088              	 .loc 2 806 0
 2089              	 .cfi_startproc
 2090              	 
 2091              	 
 2092              	 
 2093 0000 80B4     	 push {r7}
 2094              	 .cfi_def_cfa_offset 4
 2095              	 .cfi_offset 7,-4
 2096 0002 85B0     	 sub sp,sp,#20
 2097              	 .cfi_def_cfa_offset 24
 2098 0004 00AF     	 add r7,sp,#0
 2099              	 .cfi_def_cfa_register 7
 2100 0006 7860     	 str r0,[r7,#4]
 2101 0008 0B46     	 mov r3,r1
 2102 000a FB70     	 strb r3,[r7,#3]
 2103 000c 1346     	 mov r3,r2
 2104 000e BB70     	 strb r3,[r7,#2]
 807:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t flag_pos;
 808:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetBoundaryEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GRO
 809:../Libraries/XMCLib/src/xmc_vadc.c **** 
 810:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the GxBFLNP */
 811:../Libraries/XMCLib/src/xmc_vadc.c ****   flag_pos = (uint32_t)boundary_flag_num << (uint32_t)2;
 2105              	 .loc 2 811 0
 2106 0010 FB78     	 ldrb r3,[r7,#3]
 2107 0012 9B00     	 lsls r3,r3,#2
 2108 0014 FB60     	 str r3,[r7,#12]
 812:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP &= ~((uint32_t)VADC_G_BFLNP_BFL0NP_Msk << flag_pos);
 2109              	 .loc 2 812 0
 2110 0016 7B68     	 ldr r3,[r7,#4]
 2111 0018 D3F8D420 	 ldr r2,[r3,#212]
 2112 001c FB68     	 ldr r3,[r7,#12]
 2113 001e 0F21     	 movs r1,#15
 2114 0020 01FA03F3 	 lsl r3,r1,r3
 2115 0024 DB43     	 mvns r3,r3
 2116 0026 1A40     	 ands r2,r2,r3
 2117 0028 7B68     	 ldr r3,[r7,#4]
 2118 002a C3F8D420 	 str r2,[r3,#212]
 813:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP |= (uint32_t)sr << flag_pos;
 2119              	 .loc 2 813 0
 2120 002e 7B68     	 ldr r3,[r7,#4]
 2121 0030 D3F8D420 	 ldr r2,[r3,#212]
 2122 0034 B978     	 ldrb r1,[r7,#2]
 2123 0036 FB68     	 ldr r3,[r7,#12]
 2124 0038 01FA03F3 	 lsl r3,r1,r3
 2125 003c 1A43     	 orrs r2,r2,r3
 2126 003e 7B68     	 ldr r3,[r7,#4]
 2127 0040 C3F8D420 	 str r2,[r3,#212]
 814:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2128              	 .loc 2 814 0
 2129 0044 1437     	 adds r7,r7,#20
 2130              	 .cfi_def_cfa_offset 4
 2131 0046 BD46     	 mov sp,r7
 2132              	 .cfi_def_cfa_register 13
 2133              	 
 2134 0048 5DF8047B 	 ldr r7,[sp],#4
 2135              	 .cfi_restore 7
 2136              	 .cfi_def_cfa_offset 0
 2137 004c 7047     	 bx lr
 2138              	 .cfi_endproc
 2139              	.LFE282:
 2141 004e 00BF     	 .section .text.XMC_VADC_GROUP_ScanInit,"ax",%progbits
 2142              	 .align 2
 2143              	 .global XMC_VADC_GROUP_ScanInit
 2144              	 .thumb
 2145              	 .thumb_func
 2147              	XMC_VADC_GROUP_ScanInit:
 2148              	.LFB283:
 815:../Libraries/XMCLib/src/xmc_vadc.c **** 
 816:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 817:../Libraries/XMCLib/src/xmc_vadc.c **** 
 818:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 819:../Libraries/XMCLib/src/xmc_vadc.c **** 
 820:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 821:../Libraries/XMCLib/src/xmc_vadc.c **** 
 822:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to Initialize the Sample and hold features*/
 823:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_Init(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, const XMC_VADC_GLOBAL_SHS_CONFI
 824:../Libraries/XMCLib/src/xmc_vadc.c **** {
 825:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_Init:Wrong SHS Pointer", (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(vo
 826:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_Init:Wrong Index number", (config == (XMC_VADC_GLOBAL_SHS_CONFIG_
 827:../Libraries/XMCLib/src/xmc_vadc.c **** 
 828:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Initialize the SHS Configuration register*/
 829:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->SHSCFG = (uint32_t)((uint32_t)config->shscfg | (uint32_t)SHS_SHSCFG_SCWC_Msk);
 830:../Libraries/XMCLib/src/xmc_vadc.c **** 
 831:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 832:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Select the Calibration order*/
 833:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->CALCTR &= ~((uint32_t)SHS_CALCTR_CALORD_Msk);
 834:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->CALCTR |=  (uint32_t) ((uint32_t)config->calibration_order << SHS_CALCTR_CALORD_Pos);
 835:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 836:../Libraries/XMCLib/src/xmc_vadc.c **** }
 837:../Libraries/XMCLib/src/xmc_vadc.c **** 
 838:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 839:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the accelerated mode of conversion */
 840:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, XMC_VADC_GROUP
 841:../Libraries/XMCLib/src/xmc_vadc.c **** {
 842:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:Wrong SHS Pointer",
 843:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
 844:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:Wrong Index number", (group_num <= XMC_VADC
 845:../Libraries/XMCLib/src/xmc_vadc.c **** 
 846:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set the converted to Accelerated mode from compatible mode*/
 847:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 848:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 849:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 |= (uint32_t)SHS_TIMCFG0_AT_Msk;
 850:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 851:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 852:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 853:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 |= (uint32_t)SHS_TIMCFG1_AT_Msk;
 854:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 855:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 856:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 857:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 858:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 859:../Libraries/XMCLib/src/xmc_vadc.c **** }
 860:../Libraries/XMCLib/src/xmc_vadc.c **** 
 861:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to disable the accelerated mode of conversion */
 862:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, XMC_VADC_GROU
 863:../Libraries/XMCLib/src/xmc_vadc.c **** {
 864:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:Wrong SHS Pointer",
 865:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
 866:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:Wrong Index number", (group_num <= XMC_VAD
 867:../Libraries/XMCLib/src/xmc_vadc.c **** 
 868:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set the converted to Accelerated mode from compatible mode*/
 869:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 870:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 871:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 &= ~(uint32_t)SHS_TIMCFG0_AT_Msk;
 872:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 873:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 874:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 875:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 &= ~(uint32_t)SHS_TIMCFG1_AT_Msk;
 876:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 877:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 878:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 879:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 880:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 881:../Libraries/XMCLib/src/xmc_vadc.c **** }
 882:../Libraries/XMCLib/src/xmc_vadc.c **** 
 883:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the Short sample time of the Sample and hold module*/
 884:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetShortSampleTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 885:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_INDEX_t group_num,
 886:../Libraries/XMCLib/src/xmc_vadc.c ****     uint8_t sst_value)
 887:../Libraries/XMCLib/src/xmc_vadc.c **** {
 888:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong SHS Pointer",
 889:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
 890:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong Index number", (group_num <= XMC_VADC_GR
 891:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong SST value", (sst_value < 64U))
 892:../Libraries/XMCLib/src/xmc_vadc.c **** 
 893:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set the short sample time for the Accelerated mode of operation*/
 894:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 895:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 896:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 &= ~((uint32_t)SHS_TIMCFG0_SST_Msk);
 897:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 |= (uint32_t)((uint32_t)sst_value << SHS_TIMCFG0_SST_Pos );
 898:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 899:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 900:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 901:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 &= ~((uint32_t)SHS_TIMCFG1_SST_Msk);
 902:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 |= (uint32_t)((uint32_t)sst_value << SHS_TIMCFG1_SST_Pos );
 903:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 904:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 905:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 906:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 907:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 908:../Libraries/XMCLib/src/xmc_vadc.c **** }
 909:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 910:../Libraries/XMCLib/src/xmc_vadc.c **** 
 911:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the gain factor of the Sample and hold module*/
 912:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetGainFactor(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 913:../Libraries/XMCLib/src/xmc_vadc.c ****                                        uint8_t gain_value,
 914:../Libraries/XMCLib/src/xmc_vadc.c ****                                        XMC_VADC_GROUP_INDEX_t group_num,
 915:../Libraries/XMCLib/src/xmc_vadc.c ****                                        uint8_t ch_num)
 916:../Libraries/XMCLib/src/xmc_vadc.c **** {
 917:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ch_mask;
 918:../Libraries/XMCLib/src/xmc_vadc.c **** 
 919:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetGainFactor:Wrong SHS Pointer", (shs_ptr == (XMC_VADC_GLOBAL_SH
 920:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetGainFactor:Wrong Index number", (group_num <= XMC_VADC_GROUP_I
 921:../Libraries/XMCLib/src/xmc_vadc.c **** 
 922:../Libraries/XMCLib/src/xmc_vadc.c ****   /*Calculate location of channel bit-field*/
 923:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_mask = ((uint32_t)ch_num << (uint32_t)2);
 924:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 925:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 926:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR00 &= ~((uint32_t)SHS_GNCTR00_GAIN0_Msk << ch_mask) ;
 927:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR00 |=  ((uint32_t)gain_value << ch_mask);
 928:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 929:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 930:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 931:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 &= ~((uint32_t)SHS_GNCTR10_GAIN0_Msk << ch_mask);
 932:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 |=  ((uint32_t)gain_value << ch_mask);
 933:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 934:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 935:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 936:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 937:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 938:../Libraries/XMCLib/src/xmc_vadc.c **** }
 939:../Libraries/XMCLib/src/xmc_vadc.c **** 
 940:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 941:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the gain and offset calibration of the Sample and hold module*/
 942:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 943:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_INDEX_t group_num)
 944:../Libraries/XMCLib/src/xmc_vadc.c **** {
 945:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:Wrong SHS Pointer",
 946:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
 947:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:Wrong group selected",
 948:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num <= (uint32_t)XMC_VADC_GROUP_INDEX_1))
 949:../Libraries/XMCLib/src/xmc_vadc.c **** 
 950:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable gain and offset calibration*/
 951:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 952:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 953:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 &= ~((uint32_t)SHS_CALOC0_DISCAL_Msk);
 954:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 955:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 956:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 957:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 &= ~((uint32_t)SHS_CALOC1_DISCAL_Msk);
 958:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 959:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 960:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 961:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 962:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 963:../Libraries/XMCLib/src/xmc_vadc.c **** }
 964:../Libraries/XMCLib/src/xmc_vadc.c **** 
 965:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the gain and offset calibration of the Sample and hold module*/
 966:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 967:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_INDEX_t group_num)
 968:../Libraries/XMCLib/src/xmc_vadc.c **** {
 969:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:Wrong SHS Pointer",
 970:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
 971:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:Wrong group selected",
 972:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num <= (uint32_t)XMC_VADC_GROUP_INDEX_1))
 973:../Libraries/XMCLib/src/xmc_vadc.c **** 
 974:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 975:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 976:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 |= (uint32_t)SHS_CALOC0_DISCAL_Msk;
 977:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 978:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 979:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 980:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 |= (uint32_t)SHS_CALOC1_DISCAL_Msk;
 981:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 982:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 983:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 984:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 985:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 986:../Libraries/XMCLib/src/xmc_vadc.c **** }
 987:../Libraries/XMCLib/src/xmc_vadc.c **** 
 988:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to get the offset calibration value of the Sample and hold module*/
 989:../Libraries/XMCLib/src/xmc_vadc.c **** uint8_t XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 990:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_INDEX_t group_num,
 991:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_SHS_GAIN_LEVEL_t gain_level)
 992:../Libraries/XMCLib/src/xmc_vadc.c **** {
 993:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t calibration_value;
 994:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong SHS Pointer",
 995:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
 996:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong Group number selected",
 997:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num == XMC_VADC_GROUP_INDEX_0) || (group_num == XMC_VADC_GROUP_INDEX_1))
 998:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong gain level selected",
 999:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_0) || (gain_level == XMC_VADC_SHS_GAIN_LEVEL_1)
1000:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_2) || (gain_level == XMC_VADC_SHS_GAIN_LEVEL_3)
1001:../Libraries/XMCLib/src/xmc_vadc.c **** 
1002:../Libraries/XMCLib/src/xmc_vadc.c ****   calibration_value = 0U;
1003:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
1004:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1005:../Libraries/XMCLib/src/xmc_vadc.c ****     calibration_value = (shs_ptr->CALOC0 >> (uint32_t)gain_level) & (uint32_t)SHS_CALOC0_CALOFFVAL0
1006:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1007:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
1008:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1009:../Libraries/XMCLib/src/xmc_vadc.c ****     calibration_value = (shs_ptr->CALOC1 >> (uint32_t)gain_level) & (uint32_t)SHS_CALOC1_CALOFFVAL0
1010:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1011:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1012:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1013:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
1014:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1015:../Libraries/XMCLib/src/xmc_vadc.c ****   return ((uint8_t)calibration_value);
1016:../Libraries/XMCLib/src/xmc_vadc.c **** }
1017:../Libraries/XMCLib/src/xmc_vadc.c **** 
1018:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the offset calibration value of the Sample and hold module*/
1019:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1020:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_INDEX_t group_num,
1021:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_SHS_GAIN_LEVEL_t gain_level,
1022:../Libraries/XMCLib/src/xmc_vadc.c ****     uint8_t offset_calibration_value)
1023:../Libraries/XMCLib/src/xmc_vadc.c **** {
1024:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong SHS Pointer",
1025:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
1026:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong Group number selected",
1027:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num == XMC_VADC_GROUP_INDEX_0) || (group_num == XMC_VADC_GROUP_INDEX_1))
1028:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong gain level selected",
1029:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_0) || (gain_level == XMC_VADC_SHS_GAIN_LEVEL_1)
1030:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_2) || (gain_level == XMC_VADC_SHS_GAIN_LEVEL_3)
1031:../Libraries/XMCLib/src/xmc_vadc.c **** 
1032:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
1033:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1034:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 = (shs_ptr->CALOC0  & ~((uint32_t)SHS_CALOC0_CALOFFVAL0_Msk << (uint32_t)gain_l
1035:../Libraries/XMCLib/src/xmc_vadc.c ****                       (uint32_t)SHS_CALOC0_OFFWC_Msk;
1036:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 |=  ((uint32_t)offset_calibration_value << (uint32_t)gain_level) | (uint32_t)SH
1037:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1038:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
1039:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1040:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 = (shs_ptr->CALOC1 & ~((uint32_t)SHS_CALOC1_CALOFFVAL0_Msk << (uint32_t)gain_le
1041:../Libraries/XMCLib/src/xmc_vadc.c ****                       (uint32_t)SHS_CALOC1_OFFWC_Msk;
1042:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 |=  ((uint32_t)offset_calibration_value << (uint32_t)gain_level) | (uint32_t)SH
1043:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1044:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1045:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1046:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
1047:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1048:../Libraries/XMCLib/src/xmc_vadc.c **** }
1049:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1050:../Libraries/XMCLib/src/xmc_vadc.c **** 
1051:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the values of sigma delta loop of the Sample and hold module*/
1052:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1053:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_INDEX_t group_num,
1054:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_SHS_LOOP_CH_t loop_select,
1055:../Libraries/XMCLib/src/xmc_vadc.c ****     uint8_t ch_num)
1056:../Libraries/XMCLib/src/xmc_vadc.c **** {
1057:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong SHS Pointer",
1058:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t *)(void *)SHS0))
1059:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Group number selected",
1060:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num == XMC_VADC_GROUP_INDEX_0) || (group_num == XMC_VADC_GROUP_INDEX_1))
1061:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Delta sigma loop selected",
1062:../Libraries/XMCLib/src/xmc_vadc.c ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0) || (loop_select == XMC_VADC_SHS_LOOP_CH_1))
1063:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Channel Number",
1064:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1065:../Libraries/XMCLib/src/xmc_vadc.c **** 
1066:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->LOOP &= ~(((uint32_t)SHS_LOOP_LPCH0_Msk | (uint32_t)SHS_LOOP_LPSH0_Msk | (uint32_t)SHS_L
1067:../Libraries/XMCLib/src/xmc_vadc.c ****                      << (uint32_t)loop_select);
1068:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->LOOP |= ((uint32_t)ch_num | ((uint32_t)group_num << (uint32_t)SHS_LOOP_LPSH0_Pos)) << (u
1069:../Libraries/XMCLib/src/xmc_vadc.c **** 
1070:../Libraries/XMCLib/src/xmc_vadc.c **** }
1071:../Libraries/XMCLib/src/xmc_vadc.c **** 
1072:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1073:../Libraries/XMCLib/src/xmc_vadc.c **** 
1074:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GSCAN_AVAILABLE == 1U)
1075:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize the group scan hardware of a kernel */
1076:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_SCAN_CONFIG_t *confi
1077:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2149              	 .loc 2 1077 0
 2150              	 .cfi_startproc
 2151              	 
 2152              	 
 2153 0000 80B5     	 push {r7,lr}
 2154              	 .cfi_def_cfa_offset 8
 2155              	 .cfi_offset 7,-8
 2156              	 .cfi_offset 14,-4
 2157 0002 84B0     	 sub sp,sp,#16
 2158              	 .cfi_def_cfa_offset 24
 2159 0004 00AF     	 add r7,sp,#0
 2160              	 .cfi_def_cfa_register 7
 2161 0006 7860     	 str r0,[r7,#4]
 2162 0008 3960     	 str r1,[r7]
1078:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t      reg;
1079:../Libraries/XMCLib/src/xmc_vadc.c **** 
1080:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1081:../Libraries/XMCLib/src/xmc_vadc.c **** 
1082:../Libraries/XMCLib/src/xmc_vadc.c ****   /* All configurations have to be performed with the arbitration slot disabled */
1083:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
 2163              	 .loc 2 1083 0
 2164 000a 7868     	 ldr r0,[r7,#4]
 2165 000c FFF7FEFF 	 bl XMC_VADC_GROUP_ScanDisableArbitrationSlot
1084:../Libraries/XMCLib/src/xmc_vadc.c **** 
1085:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Read in the existing contents of arbitration priority register */
1086:../Libraries/XMCLib/src/xmc_vadc.c ****   reg = group_ptr->ARBPR;
 2166              	 .loc 2 1086 0
 2167 0010 7B68     	 ldr r3,[r7,#4]
 2168 0012 D3F88430 	 ldr r3,[r3,#132]
 2169 0016 FB60     	 str r3,[r7,#12]
1087:../Libraries/XMCLib/src/xmc_vadc.c **** 
1088:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the priority of the request source */
1089:../Libraries/XMCLib/src/xmc_vadc.c ****   reg &= ~(uint32_t)VADC_G_ARBPR_PRIO1_Msk;
 2170              	 .loc 2 1089 0
 2171 0018 FB68     	 ldr r3,[r7,#12]
 2172 001a 23F03003 	 bic r3,r3,#48
 2173 001e FB60     	 str r3,[r7,#12]
1090:../Libraries/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t)((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO1_Pos);
 2174              	 .loc 2 1090 0
 2175 0020 3B68     	 ldr r3,[r7]
 2176 0022 1B78     	 ldrb r3,[r3]
 2177 0024 C3F38103 	 ubfx r3,r3,#2,#2
 2178 0028 DBB2     	 uxtb r3,r3
 2179 002a 1B01     	 lsls r3,r3,#4
 2180 002c FA68     	 ldr r2,[r7,#12]
 2181 002e 1343     	 orrs r3,r3,r2
 2182 0030 FB60     	 str r3,[r7,#12]
1091:../Libraries/XMCLib/src/xmc_vadc.c **** 
1092:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the start mode */
1093:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (XMC_VADC_STARTMODE_t)(config->conv_start_mode))
 2183              	 .loc 2 1093 0
 2184 0032 3B68     	 ldr r3,[r7]
 2185 0034 1B78     	 ldrb r3,[r3]
 2186 0036 03F00303 	 and r3,r3,#3
 2187 003a DBB2     	 uxtb r3,r3
 2188 003c 002B     	 cmp r3,#0
 2189 003e 03D0     	 beq .L83
1094:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1095:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)(VADC_G_ARBPR_CSM1_Msk);
 2190              	 .loc 2 1095 0
 2191 0040 FB68     	 ldr r3,[r7,#12]
 2192 0042 43F08003 	 orr r3,r3,#128
 2193 0046 FB60     	 str r3,[r7,#12]
 2194              	.L83:
1096:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1097:../Libraries/XMCLib/src/xmc_vadc.c **** 
1098:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR = reg;
 2195              	 .loc 2 1098 0
 2196 0048 7B68     	 ldr r3,[r7,#4]
 2197 004a FA68     	 ldr r2,[r7,#12]
 2198 004c C3F88420 	 str r2,[r3,#132]
1099:../Libraries/XMCLib/src/xmc_vadc.c **** 
1100:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL = (uint32_t)(config->asctrl | (VADC_G_ASCTRL_XTWC_Msk) | (VADC_G_ASCTRL_GTWC_Ms
 2199              	 .loc 2 1100 0
 2200 0050 3B68     	 ldr r3,[r7]
 2201 0052 5B68     	 ldr r3,[r3,#4]
 2202 0054 43F08023 	 orr r3,r3,#-2147450880
 2203 0058 43F40003 	 orr r3,r3,#8388608
 2204 005c 7A68     	 ldr r2,[r7,#4]
 2205 005e C2F82031 	 str r3,[r2,#288]
1101:../Libraries/XMCLib/src/xmc_vadc.c ****                                  (VADC_G_ASCTRL_TMWC_Msk));
1102:../Libraries/XMCLib/src/xmc_vadc.c **** 
1103:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR  = (uint32_t)((config->asmr) | (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << V
 2206              	 .loc 2 1103 0
 2207 0062 3B68     	 ldr r3,[r7]
 2208 0064 9B68     	 ldr r3,[r3,#8]
 2209 0066 43F00102 	 orr r2,r3,#1
 2210 006a 7B68     	 ldr r3,[r7,#4]
 2211 006c C3F82421 	 str r2,[r3,#292]
1104:../Libraries/XMCLib/src/xmc_vadc.c **** 
1105:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (XMC_VADC_STARTMODE_t)(config->conv_start_mode))
 2212              	 .loc 2 1105 0
 2213 0070 3B68     	 ldr r3,[r7]
 2214 0072 1B78     	 ldrb r3,[r3]
 2215 0074 03F00303 	 and r3,r3,#3
 2216 0078 DBB2     	 uxtb r3,r3
 2217 007a 022B     	 cmp r3,#2
 2218 007c 07D1     	 bne .L84
1106:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1107:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_RPTDIS_Msk;
 2219              	 .loc 2 1107 0
 2220 007e 7B68     	 ldr r3,[r7,#4]
 2221 0080 D3F82431 	 ldr r3,[r3,#292]
 2222 0084 43F48032 	 orr r2,r3,#65536
 2223 0088 7B68     	 ldr r3,[r7,#4]
 2224 008a C3F82421 	 str r2,[r3,#292]
 2225              	.L84:
1108:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1109:../Libraries/XMCLib/src/xmc_vadc.c **** 
1110:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable arbitration slot now */
1111:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanEnableArbitrationSlot(group_ptr);
 2226              	 .loc 2 1111 0
 2227 008e 7868     	 ldr r0,[r7,#4]
 2228 0090 FFF7FEFF 	 bl XMC_VADC_GROUP_ScanEnableArbitrationSlot
1112:../Libraries/XMCLib/src/xmc_vadc.c **** 
1113:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2229              	 .loc 2 1113 0
 2230 0094 1037     	 adds r7,r7,#16
 2231              	 .cfi_def_cfa_offset 8
 2232 0096 BD46     	 mov sp,r7
 2233              	 .cfi_def_cfa_register 13
 2234              	 
 2235 0098 80BD     	 pop {r7,pc}
 2236              	 .cfi_endproc
 2237              	.LFE283:
 2239 009a 00BF     	 .section .text.XMC_VADC_GROUP_ScanSelectTrigger,"ax",%progbits
 2240              	 .align 2
 2241              	 .global XMC_VADC_GROUP_ScanSelectTrigger
 2242              	 .thumb
 2243              	 .thumb_func
 2245              	XMC_VADC_GROUP_ScanSelectTrigger:
 2246              	.LFB284:
1114:../Libraries/XMCLib/src/xmc_vadc.c **** 
1115:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger input for Group Scan request source */
1116:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_TRIGGER_INPUT_SEL
1117:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2247              	 .loc 2 1117 0
 2248              	 .cfi_startproc
 2249              	 
 2250              	 
 2251              	 
 2252 0000 80B4     	 push {r7}
 2253              	 .cfi_def_cfa_offset 4
 2254              	 .cfi_offset 7,-4
 2255 0002 85B0     	 sub sp,sp,#20
 2256              	 .cfi_def_cfa_offset 24
 2257 0004 00AF     	 add r7,sp,#0
 2258              	 .cfi_def_cfa_register 7
 2259 0006 7860     	 str r0,[r7,#4]
 2260 0008 0B46     	 mov r3,r1
 2261 000a FB70     	 strb r3,[r7,#3]
1118:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1119:../Libraries/XMCLib/src/xmc_vadc.c **** 
1120:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1121:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTrigger:Wrong Trigger Port", ((trigger_input) < XMC_VADC_NUM
1122:../Libraries/XMCLib/src/xmc_vadc.c **** 
1123:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2262              	 .loc 2 1123 0
 2263 000c 7B68     	 ldr r3,[r7,#4]
 2264 000e D3F82031 	 ldr r3,[r3,#288]
 2265 0012 FB60     	 str r3,[r7,#12]
1124:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_G_ASCTRL_XTWC_Msk;
 2266              	 .loc 2 1124 0
 2267 0014 FB68     	 ldr r3,[r7,#12]
 2268 0016 43F40043 	 orr r3,r3,#32768
 2269 001a FB60     	 str r3,[r7,#12]
1125:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_XTSEL_Msk);
 2270              	 .loc 2 1125 0
 2271 001c FB68     	 ldr r3,[r7,#12]
 2272 001e 23F47063 	 bic r3,r3,#3840
 2273 0022 FB60     	 str r3,[r7,#12]
1126:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_input << VADC_G_ASCTRL_XTSEL_Pos);
 2274              	 .loc 2 1126 0
 2275 0024 FB78     	 ldrb r3,[r7,#3]
 2276 0026 1B02     	 lsls r3,r3,#8
 2277 0028 FA68     	 ldr r2,[r7,#12]
 2278 002a 1343     	 orrs r3,r3,r2
 2279 002c FB60     	 str r3,[r7,#12]
1127:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2280              	 .loc 2 1127 0
 2281 002e 7B68     	 ldr r3,[r7,#4]
 2282 0030 FA68     	 ldr r2,[r7,#12]
 2283 0032 C3F82021 	 str r2,[r3,#288]
1128:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2284              	 .loc 2 1128 0
 2285 0036 1437     	 adds r7,r7,#20
 2286              	 .cfi_def_cfa_offset 4
 2287 0038 BD46     	 mov sp,r7
 2288              	 .cfi_def_cfa_register 13
 2289              	 
 2290 003a 5DF8047B 	 ldr r7,[sp],#4
 2291              	 .cfi_restore 7
 2292              	 .cfi_def_cfa_offset 0
 2293 003e 7047     	 bx lr
 2294              	 .cfi_endproc
 2295              	.LFE284:
 2297              	 .section .text.XMC_VADC_GROUP_ScanSelectTriggerEdge,"ax",%progbits
 2298              	 .align 2
 2299              	 .global XMC_VADC_GROUP_ScanSelectTriggerEdge
 2300              	 .thumb
 2301              	 .thumb_func
 2303              	XMC_VADC_GROUP_ScanSelectTriggerEdge:
 2304              	.LFB285:
1129:../Libraries/XMCLib/src/xmc_vadc.c **** 
1130:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1131:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGER
1132:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2305              	 .loc 2 1132 0
 2306              	 .cfi_startproc
 2307              	 
 2308              	 
 2309              	 
 2310 0000 80B4     	 push {r7}
 2311              	 .cfi_def_cfa_offset 4
 2312              	 .cfi_offset 7,-4
 2313 0002 85B0     	 sub sp,sp,#20
 2314              	 .cfi_def_cfa_offset 24
 2315 0004 00AF     	 add r7,sp,#0
 2316              	 .cfi_def_cfa_register 7
 2317 0006 7860     	 str r0,[r7,#4]
 2318 0008 0B46     	 mov r3,r1
 2319 000a FB70     	 strb r3,[r7,#3]
1133:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1134:../Libraries/XMCLib/src/xmc_vadc.c **** 
1135:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTriggerEdge:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
1136:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTriggerEdge:Wrong Trigger Port", ((trigger_edge) <= XMC_VADC
1137:../Libraries/XMCLib/src/xmc_vadc.c **** 
1138:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2320              	 .loc 2 1138 0
 2321 000c 7B68     	 ldr r3,[r7,#4]
 2322 000e D3F82031 	 ldr r3,[r3,#288]
 2323 0012 FB60     	 str r3,[r7,#12]
1139:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_G_ASCTRL_XTWC_Msk;
 2324              	 .loc 2 1139 0
 2325 0014 FB68     	 ldr r3,[r7,#12]
 2326 0016 43F40043 	 orr r3,r3,#32768
 2327 001a FB60     	 str r3,[r7,#12]
1140:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_XTMODE_Msk);
 2328              	 .loc 2 1140 0
 2329 001c FB68     	 ldr r3,[r7,#12]
 2330 001e 23F4C043 	 bic r3,r3,#24576
 2331 0022 FB60     	 str r3,[r7,#12]
1141:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_edge << VADC_G_ASCTRL_XTMODE_Pos);
 2332              	 .loc 2 1141 0
 2333 0024 FB78     	 ldrb r3,[r7,#3]
 2334 0026 5B03     	 lsls r3,r3,#13
 2335 0028 FA68     	 ldr r2,[r7,#12]
 2336 002a 1343     	 orrs r3,r3,r2
 2337 002c FB60     	 str r3,[r7,#12]
1142:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2338              	 .loc 2 1142 0
 2339 002e 7B68     	 ldr r3,[r7,#4]
 2340 0030 FA68     	 ldr r2,[r7,#12]
 2341 0032 C3F82021 	 str r2,[r3,#288]
1143:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2342              	 .loc 2 1143 0
 2343 0036 1437     	 adds r7,r7,#20
 2344              	 .cfi_def_cfa_offset 4
 2345 0038 BD46     	 mov sp,r7
 2346              	 .cfi_def_cfa_register 13
 2347              	 
 2348 003a 5DF8047B 	 ldr r7,[sp],#4
 2349              	 .cfi_restore 7
 2350              	 .cfi_def_cfa_offset 0
 2351 003e 7047     	 bx lr
 2352              	 .cfi_endproc
 2353              	.LFE285:
 2355              	 .section .text.XMC_VADC_GROUP_ScanSelectGating,"ax",%progbits
 2356              	 .align 2
 2357              	 .global XMC_VADC_GROUP_ScanSelectGating
 2358              	 .thumb
 2359              	 .thumb_func
 2361              	XMC_VADC_GROUP_ScanSelectGating:
 2362              	.LFB286:
1144:../Libraries/XMCLib/src/xmc_vadc.c **** 
1145:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger gating input for Group Scan request source */
1146:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectGating(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_GATE_INPUT_SELECT_
1147:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2363              	 .loc 2 1147 0
 2364              	 .cfi_startproc
 2365              	 
 2366              	 
 2367              	 
 2368 0000 80B4     	 push {r7}
 2369              	 .cfi_def_cfa_offset 4
 2370              	 .cfi_offset 7,-4
 2371 0002 85B0     	 sub sp,sp,#20
 2372              	 .cfi_def_cfa_offset 24
 2373 0004 00AF     	 add r7,sp,#0
 2374              	 .cfi_def_cfa_register 7
 2375 0006 7860     	 str r0,[r7,#4]
 2376 0008 0B46     	 mov r3,r1
 2377 000a FB70     	 strb r3,[r7,#3]
1148:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1149:../Libraries/XMCLib/src/xmc_vadc.c **** 
1150:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectGating:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
1151:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectGating:Wrong Gating Port", ((gating_input) < XMC_VADC_NUM_PO
1152:../Libraries/XMCLib/src/xmc_vadc.c **** 
1153:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2378              	 .loc 2 1153 0
 2379 000c 7B68     	 ldr r3,[r7,#4]
 2380 000e D3F82031 	 ldr r3,[r3,#288]
 2381 0012 FB60     	 str r3,[r7,#12]
1154:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)VADC_G_ASCTRL_GTWC_Msk;
 2382              	 .loc 2 1154 0
 2383 0014 FB68     	 ldr r3,[r7,#12]
 2384 0016 43F40003 	 orr r3,r3,#8388608
 2385 001a FB60     	 str r3,[r7,#12]
1155:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_GTSEL_Msk);
 2386              	 .loc 2 1155 0
 2387 001c FB68     	 ldr r3,[r7,#12]
 2388 001e 23F47023 	 bic r3,r3,#983040
 2389 0022 FB60     	 str r3,[r7,#12]
1156:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)gating_input << VADC_G_ASCTRL_GTSEL_Pos);
 2390              	 .loc 2 1156 0
 2391 0024 FB78     	 ldrb r3,[r7,#3]
 2392 0026 1B04     	 lsls r3,r3,#16
 2393 0028 FA68     	 ldr r2,[r7,#12]
 2394 002a 1343     	 orrs r3,r3,r2
 2395 002c FB60     	 str r3,[r7,#12]
1157:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2396              	 .loc 2 1157 0
 2397 002e 7B68     	 ldr r3,[r7,#4]
 2398 0030 FA68     	 ldr r2,[r7,#12]
 2399 0032 C3F82021 	 str r2,[r3,#288]
1158:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2400              	 .loc 2 1158 0
 2401 0036 1437     	 adds r7,r7,#20
 2402              	 .cfi_def_cfa_offset 4
 2403 0038 BD46     	 mov sp,r7
 2404              	 .cfi_def_cfa_register 13
 2405              	 
 2406 003a 5DF8047B 	 ldr r7,[sp],#4
 2407              	 .cfi_restore 7
 2408              	 .cfi_def_cfa_offset 0
 2409 003e 7047     	 bx lr
 2410              	 .cfi_endproc
 2411              	.LFE286:
 2413              	 .section .text.XMC_VADC_GROUP_ScanSequenceAbort,"ax",%progbits
 2414              	 .align 2
 2415              	 .global XMC_VADC_GROUP_ScanSequenceAbort
 2416              	 .thumb
 2417              	 .thumb_func
 2419              	XMC_VADC_GROUP_ScanSequenceAbort:
 2420              	.LFB287:
1159:../Libraries/XMCLib/src/xmc_vadc.c **** 
1160:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to stop an ongoing conversion of a sequence */
1161:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSequenceAbort(XMC_VADC_GROUP_t *const group_ptr)
1162:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2421              	 .loc 2 1162 0
 2422              	 .cfi_startproc
 2423              	 
 2424              	 
 2425 0000 80B5     	 push {r7,lr}
 2426              	 .cfi_def_cfa_offset 8
 2427              	 .cfi_offset 7,-8
 2428              	 .cfi_offset 14,-4
 2429 0002 84B0     	 sub sp,sp,#16
 2430              	 .cfi_def_cfa_offset 24
 2431 0004 00AF     	 add r7,sp,#0
 2432              	 .cfi_def_cfa_register 7
 2433 0006 7860     	 str r0,[r7,#4]
1163:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t asctrl;
1164:../Libraries/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1165:../Libraries/XMCLib/src/xmc_vadc.c **** 
1166:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSequenceAbort:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1167:../Libraries/XMCLib/src/xmc_vadc.c **** 
1168:../Libraries/XMCLib/src/xmc_vadc.c ****   /* To disable trigger and gating before abort*/
1169:../Libraries/XMCLib/src/xmc_vadc.c ****   asctrl = group_ptr->ASCTRL;
 2434              	 .loc 2 1169 0
 2435 0008 7B68     	 ldr r3,[r7,#4]
 2436 000a D3F82031 	 ldr r3,[r3,#288]
 2437 000e FB60     	 str r3,[r7,#12]
1170:../Libraries/XMCLib/src/xmc_vadc.c **** 
1171:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL = (0U | (uint32_t)VADC_G_ASCTRL_XTWC_Msk |
 2438              	 .loc 2 1171 0
 2439 0010 7B68     	 ldr r3,[r7,#4]
 2440 0012 1A4A     	 ldr r2,.L89
 2441 0014 C3F82021 	 str r2,[r3,#288]
1172:../Libraries/XMCLib/src/xmc_vadc.c ****                        (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_Msk );
1173:../Libraries/XMCLib/src/xmc_vadc.c **** 
1174:../Libraries/XMCLib/src/xmc_vadc.c ****   /* To disable Arbitration before abort*/
1175:../Libraries/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN1_Pos) & 1U);
 2442              	 .loc 2 1175 0
 2443 0018 7B68     	 ldr r3,[r7,#4]
 2444 001a D3F88430 	 ldr r3,[r3,#132]
 2445 001e 5B0E     	 lsrs r3,r3,#25
 2446 0020 03F00103 	 and r3,r3,#1
 2447 0024 002B     	 cmp r3,#0
 2448 0026 14BF     	 ite ne
 2449 0028 0123     	 movne r3,#1
 2450 002a 0023     	 moveq r3,#0
 2451 002c FB72     	 strb r3,[r7,#11]
1176:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
 2452              	 .loc 2 1176 0
 2453 002e 7868     	 ldr r0,[r7,#4]
 2454 0030 FFF7FEFF 	 bl XMC_VADC_GROUP_ScanDisableArbitrationSlot
1177:../Libraries/XMCLib/src/xmc_vadc.c **** 
1178:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENGT_Msk);
 2455              	 .loc 2 1178 0
 2456 0034 7B68     	 ldr r3,[r7,#4]
 2457 0036 D3F82431 	 ldr r3,[r3,#292]
 2458 003a 23F00302 	 bic r2,r3,#3
 2459 003e 7B68     	 ldr r3,[r7,#4]
 2460 0040 C3F82421 	 str r2,[r3,#292]
1179:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_CLRPND_Msk;
 2461              	 .loc 2 1179 0
 2462 0044 7B68     	 ldr r3,[r7,#4]
 2463 0046 D3F82431 	 ldr r3,[r3,#292]
 2464 004a 43F48072 	 orr r2,r3,#256
 2465 004e 7B68     	 ldr r3,[r7,#4]
 2466 0050 C3F82421 	 str r2,[r3,#292]
1180:../Libraries/XMCLib/src/xmc_vadc.c **** 
1181:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the arbitration slot 1*/
1182:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN1_Pos);
 2467              	 .loc 2 1182 0
 2468 0054 7B68     	 ldr r3,[r7,#4]
 2469 0056 D3F88420 	 ldr r2,[r3,#132]
 2470 005a FB7A     	 ldrb r3,[r7,#11]
 2471 005c 5B06     	 lsls r3,r3,#25
 2472 005e 1A43     	 orrs r2,r2,r3
 2473 0060 7B68     	 ldr r3,[r7,#4]
 2474 0062 C3F88420 	 str r2,[r3,#132]
1183:../Libraries/XMCLib/src/xmc_vadc.c **** 
1184:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1185:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL = (asctrl | (uint32_t)VADC_G_ASCTRL_XTWC_Msk |
1186:../Libraries/XMCLib/src/xmc_vadc.c ****                        (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_Msk );
 2475              	 .loc 2 1186 0
 2476 0066 FB68     	 ldr r3,[r7,#12]
 2477 0068 43F08023 	 orr r3,r3,#-2147450880
 2478 006c 43F40003 	 orr r3,r3,#8388608
1185:../Libraries/XMCLib/src/xmc_vadc.c ****                        (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_Msk );
 2479              	 .loc 2 1185 0
 2480 0070 7A68     	 ldr r2,[r7,#4]
 2481 0072 C2F82031 	 str r3,[r2,#288]
1187:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2482              	 .loc 2 1187 0
 2483 0076 1037     	 adds r7,r7,#16
 2484              	 .cfi_def_cfa_offset 8
 2485 0078 BD46     	 mov sp,r7
 2486              	 .cfi_def_cfa_register 13
 2487              	 
 2488 007a 80BD     	 pop {r7,pc}
 2489              	.L90:
 2490              	 .align 2
 2491              	.L89:
 2492 007c 00808080 	 .word -2139062272
 2493              	 .cfi_endproc
 2494              	.LFE287:
 2496              	 .section .text.XMC_VADC_GROUP_ScanGetNumChannelsPending,"ax",%progbits
 2497              	 .align 2
 2498              	 .global XMC_VADC_GROUP_ScanGetNumChannelsPending
 2499              	 .thumb
 2500              	 .thumb_func
 2502              	XMC_VADC_GROUP_ScanGetNumChannelsPending:
 2503              	.LFB288:
1188:../Libraries/XMCLib/src/xmc_vadc.c **** 
1189:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to find out number of channels awaiting conversion */
1190:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_ScanGetNumChannelsPending(XMC_VADC_GROUP_t *const group_ptr)
1191:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2504              	 .loc 2 1191 0
 2505              	 .cfi_startproc
 2506              	 
 2507              	 
 2508              	 
 2509 0000 80B4     	 push {r7}
 2510              	 .cfi_def_cfa_offset 4
 2511              	 .cfi_offset 7,-4
 2512 0002 87B0     	 sub sp,sp,#28
 2513              	 .cfi_def_cfa_offset 32
 2514 0004 00AF     	 add r7,sp,#0
 2515              	 .cfi_def_cfa_register 7
 2516 0006 7860     	 str r0,[r7,#4]
1192:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1193:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1194:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t count;
1195:../Libraries/XMCLib/src/xmc_vadc.c **** 
1196:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanGetNumChannelsPending:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1197:../Libraries/XMCLib/src/xmc_vadc.c **** 
1198:../Libraries/XMCLib/src/xmc_vadc.c **** 
1199:../Libraries/XMCLib/src/xmc_vadc.c ****   count = 0U;
 2517              	 .loc 2 1199 0
 2518 0008 0023     	 movs r3,#0
 2519 000a FB60     	 str r3,[r7,#12]
1200:../Libraries/XMCLib/src/xmc_vadc.c **** 
1201:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_ptr->ASPND)
 2520              	 .loc 2 1201 0
 2521 000c 7B68     	 ldr r3,[r7,#4]
 2522 000e D3F82C31 	 ldr r3,[r3,#300]
 2523 0012 002B     	 cmp r3,#0
 2524 0014 17D0     	 beq .L92
1202:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1203:../Libraries/XMCLib/src/xmc_vadc.c ****     reg = group_ptr->ASPND;
 2525              	 .loc 2 1203 0
 2526 0016 7B68     	 ldr r3,[r7,#4]
 2527 0018 D3F82C31 	 ldr r3,[r3,#300]
 2528 001c 7B61     	 str r3,[r7,#20]
1204:../Libraries/XMCLib/src/xmc_vadc.c **** 
1205:../Libraries/XMCLib/src/xmc_vadc.c ****     for (i = 0U; i < XMC_VADC_NUM_CHANNELS_PER_GROUP; i++)
 2529              	 .loc 2 1205 0
 2530 001e 0023     	 movs r3,#0
 2531 0020 3B61     	 str r3,[r7,#16]
 2532 0022 0DE0     	 b .L93
 2533              	.L95:
1206:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1207:../Libraries/XMCLib/src/xmc_vadc.c ****       if (reg & 1U)
 2534              	 .loc 2 1207 0
 2535 0024 7B69     	 ldr r3,[r7,#20]
 2536 0026 03F00103 	 and r3,r3,#1
 2537 002a 002B     	 cmp r3,#0
 2538 002c 02D0     	 beq .L94
1208:../Libraries/XMCLib/src/xmc_vadc.c ****       {
1209:../Libraries/XMCLib/src/xmc_vadc.c ****         count++;
 2539              	 .loc 2 1209 0
 2540 002e FB68     	 ldr r3,[r7,#12]
 2541 0030 0133     	 adds r3,r3,#1
 2542 0032 FB60     	 str r3,[r7,#12]
 2543              	.L94:
1210:../Libraries/XMCLib/src/xmc_vadc.c ****       }
1211:../Libraries/XMCLib/src/xmc_vadc.c ****       reg = (uint32_t)(reg >> (uint32_t)1);
 2544              	 .loc 2 1211 0 discriminator 2
 2545 0034 7B69     	 ldr r3,[r7,#20]
 2546 0036 5B08     	 lsrs r3,r3,#1
 2547 0038 7B61     	 str r3,[r7,#20]
1205:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 2548              	 .loc 2 1205 0 discriminator 2
 2549 003a 3B69     	 ldr r3,[r7,#16]
 2550 003c 0133     	 adds r3,r3,#1
 2551 003e 3B61     	 str r3,[r7,#16]
 2552              	.L93:
1205:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 2553              	 .loc 2 1205 0 is_stmt 0 discriminator 1
 2554 0040 3B69     	 ldr r3,[r7,#16]
 2555 0042 072B     	 cmp r3,#7
 2556 0044 EED9     	 bls .L95
 2557              	.L92:
1212:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1213:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1214:../Libraries/XMCLib/src/xmc_vadc.c **** 
1215:../Libraries/XMCLib/src/xmc_vadc.c ****   return count;
 2558              	 .loc 2 1215 0 is_stmt 1
 2559 0046 FB68     	 ldr r3,[r7,#12]
1216:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2560              	 .loc 2 1216 0
 2561 0048 1846     	 mov r0,r3
 2562 004a 1C37     	 adds r7,r7,#28
 2563              	 .cfi_def_cfa_offset 4
 2564 004c BD46     	 mov sp,r7
 2565              	 .cfi_def_cfa_register 13
 2566              	 
 2567 004e 5DF8047B 	 ldr r7,[sp],#4
 2568              	 .cfi_restore 7
 2569              	 .cfi_def_cfa_offset 0
 2570 0052 7047     	 bx lr
 2571              	 .cfi_endproc
 2572              	.LFE288:
 2574              	 .section .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode,"ax",%progbits
 2575              	 .align 2
 2576              	 .global XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode
 2577              	 .thumb
 2578              	 .thumb_func
 2580              	XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:
 2581              	.LFB289:
1217:../Libraries/XMCLib/src/xmc_vadc.c **** 
1218:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select a service request line (NVIC Node) for request source event */
1219:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VA
1220:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2582              	 .loc 2 1220 0
 2583              	 .cfi_startproc
 2584              	 
 2585              	 
 2586              	 
 2587 0000 80B4     	 push {r7}
 2588              	 .cfi_def_cfa_offset 4
 2589              	 .cfi_offset 7,-4
 2590 0002 85B0     	 sub sp,sp,#20
 2591              	 .cfi_def_cfa_offset 24
 2592 0004 00AF     	 add r7,sp,#0
 2593              	 .cfi_def_cfa_register 7
 2594 0006 7860     	 str r0,[r7,#4]
 2595 0008 0B46     	 mov r3,r1
 2596 000a FB70     	 strb r3,[r7,#3]
1221:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sevnp;
1222:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp = group_ptr->SEVNP;
 2597              	 .loc 2 1222 0
 2598 000c 7B68     	 ldr r3,[r7,#4]
 2599 000e D3F8C031 	 ldr r3,[r3,#448]
 2600 0012 FB60     	 str r3,[r7,#12]
1223:../Libraries/XMCLib/src/xmc_vadc.c **** 
1224:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_G
1225:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:Wrong Service Request", ((sr)  <= XMC_
1226:../Libraries/XMCLib/src/xmc_vadc.c **** 
1227:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp &= ~((uint32_t)VADC_G_SEVNP_SEV1NP_Msk);
 2601              	 .loc 2 1227 0
 2602 0014 FB68     	 ldr r3,[r7,#12]
 2603 0016 23F0F003 	 bic r3,r3,#240
 2604 001a FB60     	 str r3,[r7,#12]
1228:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV1NP_Pos);
 2605              	 .loc 2 1228 0
 2606 001c FB78     	 ldrb r3,[r7,#3]
 2607 001e 1B01     	 lsls r3,r3,#4
 2608 0020 FA68     	 ldr r2,[r7,#12]
 2609 0022 1343     	 orrs r3,r3,r2
 2610 0024 FB60     	 str r3,[r7,#12]
1229:../Libraries/XMCLib/src/xmc_vadc.c **** 
1230:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SEVNP = sevnp;
 2611              	 .loc 2 1230 0
 2612 0026 7B68     	 ldr r3,[r7,#4]
 2613 0028 FA68     	 ldr r2,[r7,#12]
 2614 002a C3F8C021 	 str r2,[r3,#448]
1231:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2615              	 .loc 2 1231 0
 2616 002e 1437     	 adds r7,r7,#20
 2617              	 .cfi_def_cfa_offset 4
 2618 0030 BD46     	 mov sp,r7
 2619              	 .cfi_def_cfa_register 13
 2620              	 
 2621 0032 5DF8047B 	 ldr r7,[sp],#4
 2622              	 .cfi_restore 7
 2623              	 .cfi_def_cfa_offset 0
 2624 0036 7047     	 bx lr
 2625              	 .cfi_endproc
 2626              	.LFE289:
 2628              	 .section .text.XMC_VADC_GROUP_ScanRemoveChannel,"ax",%progbits
 2629              	 .align 2
 2630              	 .global XMC_VADC_GROUP_ScanRemoveChannel
 2631              	 .thumb
 2632              	 .thumb_func
 2634              	XMC_VADC_GROUP_ScanRemoveChannel:
 2635              	.LFB290:
1232:../Libraries/XMCLib/src/xmc_vadc.c **** 
1233:../Libraries/XMCLib/src/xmc_vadc.c **** /* Removes the selected channel from conversion*/
1234:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanRemoveChannel(XMC_VADC_GROUP_t *const group_ptr, const uint32_t channel_num
1235:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2636              	 .loc 2 1235 0
 2637              	 .cfi_startproc
 2638              	 
 2639              	 
 2640              	 
 2641 0000 80B4     	 push {r7}
 2642              	 .cfi_def_cfa_offset 4
 2643              	 .cfi_offset 7,-4
 2644 0002 85B0     	 sub sp,sp,#20
 2645              	 .cfi_def_cfa_offset 24
 2646 0004 00AF     	 add r7,sp,#0
 2647              	 .cfi_def_cfa_register 7
 2648 0006 7860     	 str r0,[r7,#4]
 2649 0008 3960     	 str r1,[r7]
1236:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t assel;
1237:../Libraries/XMCLib/src/xmc_vadc.c **** 
1238:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanRemoveChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1239:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanRemoveChannel:Wrong channel number", ((channel_num) < XMC_VADC_NUM
1240:../Libraries/XMCLib/src/xmc_vadc.c **** 
1241:../Libraries/XMCLib/src/xmc_vadc.c ****   assel = group_ptr->ASSEL;
 2650              	 .loc 2 1241 0
 2651 000a 7B68     	 ldr r3,[r7,#4]
 2652 000c D3F82831 	 ldr r3,[r3,#296]
 2653 0010 FB60     	 str r3,[r7,#12]
1242:../Libraries/XMCLib/src/xmc_vadc.c ****   assel &= (~( 1 << channel_num));
 2654              	 .loc 2 1242 0
 2655 0012 3B68     	 ldr r3,[r7]
 2656 0014 0122     	 movs r2,#1
 2657 0016 02FA03F3 	 lsl r3,r2,r3
 2658 001a DB43     	 mvns r3,r3
 2659 001c 1A46     	 mov r2,r3
 2660 001e FB68     	 ldr r3,[r7,#12]
 2661 0020 1340     	 ands r3,r3,r2
 2662 0022 FB60     	 str r3,[r7,#12]
1243:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASSEL  = assel;
 2663              	 .loc 2 1243 0
 2664 0024 7B68     	 ldr r3,[r7,#4]
 2665 0026 FA68     	 ldr r2,[r7,#12]
 2666 0028 C3F82821 	 str r2,[r3,#296]
1244:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2667              	 .loc 2 1244 0
 2668 002c 1437     	 adds r7,r7,#20
 2669              	 .cfi_def_cfa_offset 4
 2670 002e BD46     	 mov sp,r7
 2671              	 .cfi_def_cfa_register 13
 2672              	 
 2673 0030 5DF8047B 	 ldr r7,[sp],#4
 2674              	 .cfi_restore 7
 2675              	 .cfi_def_cfa_offset 0
 2676 0034 7047     	 bx lr
 2677              	 .cfi_endproc
 2678              	.LFE290:
 2680 0036 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundInit,"ax",%progbits
 2681              	 .align 2
 2682              	 .global XMC_VADC_GLOBAL_BackgroundInit
 2683              	 .thumb
 2684              	 .thumb_func
 2686              	XMC_VADC_GLOBAL_BackgroundInit:
 2687              	.LFB291:
1245:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1246:../Libraries/XMCLib/src/xmc_vadc.c **** 
1247:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize background scan request source hardware */
1248:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_
1249:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2688              	 .loc 2 1249 0
 2689              	 .cfi_startproc
 2690              	 
 2691              	 
 2692 0000 80B5     	 push {r7,lr}
 2693              	 .cfi_def_cfa_offset 8
 2694              	 .cfi_offset 7,-8
 2695              	 .cfi_offset 14,-4
 2696 0002 86B0     	 sub sp,sp,#24
 2697              	 .cfi_def_cfa_offset 32
 2698 0004 00AF     	 add r7,sp,#0
 2699              	 .cfi_def_cfa_register 7
 2700 0006 7860     	 str r0,[r7,#4]
 2701 0008 3960     	 str r1,[r7]
1250:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1251:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t i;
1252:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1253:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t conv_start_mask;
1254:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1255:../Libraries/XMCLib/src/xmc_vadc.c **** 
1256:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundInit:Wrong Module Pointer", (global_ptr == VADC))
1257:../Libraries/XMCLib/src/xmc_vadc.c **** 
1258:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1259:../Libraries/XMCLib/src/xmc_vadc.c ****   for (i = (uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 2702              	 .loc 2 1259 0
 2703 000a 0023     	 movs r3,#0
 2704 000c FB75     	 strb r3,[r7,#23]
 2705 000e 09E0     	 b .L100
 2706              	.L101:
1260:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1261:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundDisableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
 2707              	 .loc 2 1261 0 discriminator 3
 2708 0010 FB7D     	 ldrb r3,[r7,#23]
 2709 0012 394A     	 ldr r2,.L108
 2710 0014 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2711 0018 1846     	 mov r0,r3
 2712 001a FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundDisableArbitrationSlot
1259:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2713              	 .loc 2 1259 0 discriminator 3
 2714 001e FB7D     	 ldrb r3,[r7,#23]
 2715 0020 0133     	 adds r3,r3,#1
 2716 0022 FB75     	 strb r3,[r7,#23]
 2717              	.L100:
1259:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2718              	 .loc 2 1259 0 is_stmt 0 discriminator 1
 2719 0024 FB7D     	 ldrb r3,[r7,#23]
 2720 0026 032B     	 cmp r3,#3
 2721 0028 F2D9     	 bls .L101
1262:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1263:../Libraries/XMCLib/src/xmc_vadc.c **** 
1264:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_start_mask = (uint32_t) 0;
 2722              	 .loc 2 1264 0 is_stmt 1
 2723 002a 0023     	 movs r3,#0
 2724 002c 3B61     	 str r3,[r7,#16]
1265:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (XMC_VADC_STARTMODE_t)config->conv_start_mode)
 2725              	 .loc 2 1265 0
 2726 002e 3B68     	 ldr r3,[r7]
 2727 0030 1B78     	 ldrb r3,[r3]
 2728 0032 03F00303 	 and r3,r3,#3
 2729 0036 DBB2     	 uxtb r3,r3
 2730 0038 002B     	 cmp r3,#0
 2731 003a 02D0     	 beq .L102
1266:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1267:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_start_mask = (uint32_t)VADC_G_ARBPR_CSM2_Msk;
 2732              	 .loc 2 1267 0
 2733 003c 4FF40063 	 mov r3,#2048
 2734 0040 3B61     	 str r3,[r7,#16]
 2735              	.L102:
1268:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1269:../Libraries/XMCLib/src/xmc_vadc.c **** 
1270:../Libraries/XMCLib/src/xmc_vadc.c ****   for (i = 0U; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 2736              	 .loc 2 1270 0
 2737 0042 0023     	 movs r3,#0
 2738 0044 FB75     	 strb r3,[r7,#23]
 2739 0046 21E0     	 b .L103
 2740              	.L104:
1271:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1272:../Libraries/XMCLib/src/xmc_vadc.c ****     reg = g_xmc_vadc_group_array[i]->ARBPR;
 2741              	 .loc 2 1272 0 discriminator 3
 2742 0048 FB7D     	 ldrb r3,[r7,#23]
 2743 004a 2B4A     	 ldr r2,.L108
 2744 004c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2745 0050 D3F88430 	 ldr r3,[r3,#132]
 2746 0054 FB60     	 str r3,[r7,#12]
1273:../Libraries/XMCLib/src/xmc_vadc.c **** 
1274:../Libraries/XMCLib/src/xmc_vadc.c ****     reg &= ~(uint32_t)(VADC_G_ARBPR_PRIO2_Msk);
 2747              	 .loc 2 1274 0 discriminator 3
 2748 0056 FB68     	 ldr r3,[r7,#12]
 2749 0058 23F44073 	 bic r3,r3,#768
 2750 005c FB60     	 str r3,[r7,#12]
1275:../Libraries/XMCLib/src/xmc_vadc.c **** 
1276:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Program the priority of the request source */
1277:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO2_Pos);
 2751              	 .loc 2 1277 0 discriminator 3
 2752 005e 3B68     	 ldr r3,[r7]
 2753 0060 1B78     	 ldrb r3,[r3]
 2754 0062 C3F38103 	 ubfx r3,r3,#2,#2
 2755 0066 DBB2     	 uxtb r3,r3
 2756 0068 1B02     	 lsls r3,r3,#8
 2757 006a FA68     	 ldr r2,[r7,#12]
 2758 006c 1343     	 orrs r3,r3,r2
 2759 006e FB60     	 str r3,[r7,#12]
1278:../Libraries/XMCLib/src/xmc_vadc.c **** 
1279:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Program the start mode */
1280:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= conv_start_mask;
 2760              	 .loc 2 1280 0 discriminator 3
 2761 0070 FA68     	 ldr r2,[r7,#12]
 2762 0072 3B69     	 ldr r3,[r7,#16]
 2763 0074 1343     	 orrs r3,r3,r2
 2764 0076 FB60     	 str r3,[r7,#12]
1281:../Libraries/XMCLib/src/xmc_vadc.c **** 
1282:../Libraries/XMCLib/src/xmc_vadc.c ****     g_xmc_vadc_group_array[i]->ARBPR = reg;
 2765              	 .loc 2 1282 0 discriminator 3
 2766 0078 FB7D     	 ldrb r3,[r7,#23]
 2767 007a 1F4A     	 ldr r2,.L108
 2768 007c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2769 0080 FA68     	 ldr r2,[r7,#12]
 2770 0082 C3F88420 	 str r2,[r3,#132]
1270:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2771              	 .loc 2 1270 0 discriminator 3
 2772 0086 FB7D     	 ldrb r3,[r7,#23]
 2773 0088 0133     	 adds r3,r3,#1
 2774 008a FB75     	 strb r3,[r7,#23]
 2775              	.L103:
1270:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2776              	 .loc 2 1270 0 is_stmt 0 discriminator 1
 2777 008c FB7D     	 ldrb r3,[r7,#23]
 2778 008e 032B     	 cmp r3,#3
 2779 0090 DAD9     	 bls .L104
1283:../Libraries/XMCLib/src/xmc_vadc.c **** 
1284:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1285:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1286:../Libraries/XMCLib/src/xmc_vadc.c **** 
1287:../Libraries/XMCLib/src/xmc_vadc.c ****   /* program BRSCTRL register */
1288:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL = (uint32_t)(config->asctrl | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VAD
 2780              	 .loc 2 1288 0 is_stmt 1
 2781 0092 3B68     	 ldr r3,[r7]
 2782 0094 5B68     	 ldr r3,[r3,#4]
 2783 0096 43F40003 	 orr r3,r3,#8388608
 2784 009a 43F40043 	 orr r3,r3,#32768
 2785 009e 7A68     	 ldr r2,[r7,#4]
 2786 00a0 C2F80032 	 str r3,[r2,#512]
1289:../Libraries/XMCLib/src/xmc_vadc.c **** 
1290:../Libraries/XMCLib/src/xmc_vadc.c ****   /* program BRSMR register */
1291:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSMR = (uint32_t)((config->asmr) | (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << 
 2787              	 .loc 2 1291 0
 2788 00a4 3B68     	 ldr r3,[r7]
 2789 00a6 9B68     	 ldr r3,[r3,#8]
 2790 00a8 43F00102 	 orr r2,r3,#1
 2791 00ac 7B68     	 ldr r3,[r7,#4]
 2792 00ae C3F80422 	 str r2,[r3,#516]
1292:../Libraries/XMCLib/src/xmc_vadc.c **** 
1293:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1294:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (XMC_VADC_STARTMODE_t)(config->conv_start_mode))
 2793              	 .loc 2 1294 0
 2794 00b2 3B68     	 ldr r3,[r7]
 2795 00b4 1B78     	 ldrb r3,[r3]
 2796 00b6 03F00303 	 and r3,r3,#3
 2797 00ba DBB2     	 uxtb r3,r3
 2798 00bc 022B     	 cmp r3,#2
 2799 00be 07D1     	 bne .L105
1295:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1296:../Libraries/XMCLib/src/xmc_vadc.c ****     global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_RPTDIS_Msk;
 2800              	 .loc 2 1296 0
 2801 00c0 7B68     	 ldr r3,[r7,#4]
 2802 00c2 D3F80432 	 ldr r3,[r3,#516]
 2803 00c6 43F48032 	 orr r2,r3,#65536
 2804 00ca 7B68     	 ldr r3,[r7,#4]
 2805 00cc C3F80422 	 str r2,[r3,#516]
 2806              	.L105:
1297:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1298:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1299:../Libraries/XMCLib/src/xmc_vadc.c **** 
1300:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1301:../Libraries/XMCLib/src/xmc_vadc.c ****   for (i = (uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 2807              	 .loc 2 1301 0
 2808 00d0 0023     	 movs r3,#0
 2809 00d2 FB75     	 strb r3,[r7,#23]
 2810 00d4 09E0     	 b .L106
 2811              	.L107:
1302:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1303:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundEnableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
 2812              	 .loc 2 1303 0 discriminator 3
 2813 00d6 FB7D     	 ldrb r3,[r7,#23]
 2814 00d8 074A     	 ldr r2,.L108
 2815 00da 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2816 00de 1846     	 mov r0,r3
 2817 00e0 FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundEnableArbitrationSlot
1301:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2818              	 .loc 2 1301 0 discriminator 3
 2819 00e4 FB7D     	 ldrb r3,[r7,#23]
 2820 00e6 0133     	 adds r3,r3,#1
 2821 00e8 FB75     	 strb r3,[r7,#23]
 2822              	.L106:
1301:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2823              	 .loc 2 1301 0 is_stmt 0 discriminator 1
 2824 00ea FB7D     	 ldrb r3,[r7,#23]
 2825 00ec 032B     	 cmp r3,#3
 2826 00ee F2D9     	 bls .L107
1304:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1305:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1306:../Libraries/XMCLib/src/xmc_vadc.c **** 
1307:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2827              	 .loc 2 1307 0 is_stmt 1
 2828 00f0 1837     	 adds r7,r7,#24
 2829              	 .cfi_def_cfa_offset 8
 2830 00f2 BD46     	 mov sp,r7
 2831              	 .cfi_def_cfa_register 13
 2832              	 
 2833 00f4 80BD     	 pop {r7,pc}
 2834              	.L109:
 2835 00f6 00BF     	 .align 2
 2836              	.L108:
 2837 00f8 00000000 	 .word g_xmc_vadc_group_array
 2838              	 .cfi_endproc
 2839              	.LFE291:
 2841              	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger,"ax",%progbits
 2842              	 .align 2
 2843              	 .global XMC_VADC_GLOBAL_BackgroundSelectTrigger
 2844              	 .thumb
 2845              	 .thumb_func
 2847              	XMC_VADC_GLOBAL_BackgroundSelectTrigger:
 2848              	.LFB292:
1308:../Libraries/XMCLib/src/xmc_vadc.c **** 
1309:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger for background scan request source */
1310:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectTrigger(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t in
1311:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2849              	 .loc 2 1311 0
 2850              	 .cfi_startproc
 2851              	 
 2852              	 
 2853              	 
 2854 0000 80B4     	 push {r7}
 2855              	 .cfi_def_cfa_offset 4
 2856              	 .cfi_offset 7,-4
 2857 0002 85B0     	 sub sp,sp,#20
 2858              	 .cfi_def_cfa_offset 24
 2859 0004 00AF     	 add r7,sp,#0
 2860              	 .cfi_def_cfa_register 7
 2861 0006 7860     	 str r0,[r7,#4]
 2862 0008 3960     	 str r1,[r7]
1312:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1313:../Libraries/XMCLib/src/xmc_vadc.c **** 
1314:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("VADC_BCKGND_SelectTriggerInput:Wrong Module Pointer", (global_ptr == VADC))
1315:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTrigger:Wrong Trigger Port", ((input_num) < XMC_VADC_
1316:../Libraries/XMCLib/src/xmc_vadc.c **** 
1317:../Libraries/XMCLib/src/xmc_vadc.c **** 
1318:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl       = global_ptr->BRSCTRL;
 2863              	 .loc 2 1318 0
 2864 000a 7B68     	 ldr r3,[r7,#4]
 2865 000c D3F80032 	 ldr r3,[r3,#512]
 2866 0010 FB60     	 str r3,[r7,#12]
1319:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)VADC_BRSCTRL_XTWC_Msk;
 2867              	 .loc 2 1319 0
 2868 0012 FB68     	 ldr r3,[r7,#12]
 2869 0014 43F40043 	 orr r3,r3,#32768
 2870 0018 FB60     	 str r3,[r7,#12]
1320:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      &= ~((uint32_t)VADC_BRSCTRL_XTSEL_Msk);
 2871              	 .loc 2 1320 0
 2872 001a FB68     	 ldr r3,[r7,#12]
 2873 001c 23F47063 	 bic r3,r3,#3840
 2874 0020 FB60     	 str r3,[r7,#12]
1321:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)(input_num << VADC_BRSCTRL_XTSEL_Pos);
 2875              	 .loc 2 1321 0
 2876 0022 3B68     	 ldr r3,[r7]
 2877 0024 1B02     	 lsls r3,r3,#8
 2878 0026 FA68     	 ldr r2,[r7,#12]
 2879 0028 1343     	 orrs r3,r3,r2
 2880 002a FB60     	 str r3,[r7,#12]
1322:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 2881              	 .loc 2 1322 0
 2882 002c 7B68     	 ldr r3,[r7,#4]
 2883 002e FA68     	 ldr r2,[r7,#12]
 2884 0030 C3F80022 	 str r2,[r3,#512]
1323:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2885              	 .loc 2 1323 0
 2886 0034 1437     	 adds r7,r7,#20
 2887              	 .cfi_def_cfa_offset 4
 2888 0036 BD46     	 mov sp,r7
 2889              	 .cfi_def_cfa_register 13
 2890              	 
 2891 0038 5DF8047B 	 ldr r7,[sp],#4
 2892              	 .cfi_restore 7
 2893              	 .cfi_def_cfa_offset 0
 2894 003c 7047     	 bx lr
 2895              	 .cfi_endproc
 2896              	.LFE292:
 2898 003e 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge,"ax",%progbits
 2899              	 .align 2
 2900              	 .global XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge
 2901              	 .thumb
 2902              	 .thumb_func
 2904              	XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:
 2905              	.LFB293:
1324:../Libraries/XMCLib/src/xmc_vadc.c **** 
1325:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1326:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge(XMC_VADC_GLOBAL_t *const global_ptr,
1327:../Libraries/XMCLib/src/xmc_vadc.c ****     const XMC_VADC_TRIGGER_EDGE_t trigger_edge)
1328:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2906              	 .loc 2 1328 0
 2907              	 .cfi_startproc
 2908              	 
 2909              	 
 2910              	 
 2911 0000 80B4     	 push {r7}
 2912              	 .cfi_def_cfa_offset 4
 2913              	 .cfi_offset 7,-4
 2914 0002 85B0     	 sub sp,sp,#20
 2915              	 .cfi_def_cfa_offset 24
 2916 0004 00AF     	 add r7,sp,#0
 2917              	 .cfi_def_cfa_register 7
 2918 0006 7860     	 str r0,[r7,#4]
 2919 0008 0B46     	 mov r3,r1
 2920 000a FB70     	 strb r3,[r7,#3]
1329:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1330:../Libraries/XMCLib/src/xmc_vadc.c **** 
1331:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:Wrong Global Pointer", (global_ptr == VAD
1332:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:Wrong Trigger Port",
1333:../Libraries/XMCLib/src/xmc_vadc.c ****              ((trigger_edge) <= XMC_VADC_TRIGGER_EDGE_ANY))
1334:../Libraries/XMCLib/src/xmc_vadc.c **** 
1335:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = global_ptr->BRSCTRL;
 2921              	 .loc 2 1335 0
 2922 000c 7B68     	 ldr r3,[r7,#4]
 2923 000e D3F80032 	 ldr r3,[r3,#512]
 2924 0012 FB60     	 str r3,[r7,#12]
1336:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_BRSCTRL_XTWC_Msk;
 2925              	 .loc 2 1336 0
 2926 0014 FB68     	 ldr r3,[r7,#12]
 2927 0016 43F40043 	 orr r3,r3,#32768
 2928 001a FB60     	 str r3,[r7,#12]
1337:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_BRSCTRL_XTMODE_Msk);
 2929              	 .loc 2 1337 0
 2930 001c FB68     	 ldr r3,[r7,#12]
 2931 001e 23F4C043 	 bic r3,r3,#24576
 2932 0022 FB60     	 str r3,[r7,#12]
1338:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_edge << VADC_BRSCTRL_XTMODE_Pos);
 2933              	 .loc 2 1338 0
 2934 0024 FB78     	 ldrb r3,[r7,#3]
 2935 0026 5B03     	 lsls r3,r3,#13
 2936 0028 FA68     	 ldr r2,[r7,#12]
 2937 002a 1343     	 orrs r3,r3,r2
 2938 002c FB60     	 str r3,[r7,#12]
1339:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 2939              	 .loc 2 1339 0
 2940 002e 7B68     	 ldr r3,[r7,#4]
 2941 0030 FA68     	 ldr r2,[r7,#12]
 2942 0032 C3F80022 	 str r2,[r3,#512]
1340:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2943              	 .loc 2 1340 0
 2944 0036 1437     	 adds r7,r7,#20
 2945              	 .cfi_def_cfa_offset 4
 2946 0038 BD46     	 mov sp,r7
 2947              	 .cfi_def_cfa_register 13
 2948              	 
 2949 003a 5DF8047B 	 ldr r7,[sp],#4
 2950              	 .cfi_restore 7
 2951              	 .cfi_def_cfa_offset 0
 2952 003e 7047     	 bx lr
 2953              	 .cfi_endproc
 2954              	.LFE293:
 2956              	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectGating,"ax",%progbits
 2957              	 .align 2
 2958              	 .global XMC_VADC_GLOBAL_BackgroundSelectGating
 2959              	 .thumb
 2960              	 .thumb_func
 2962              	XMC_VADC_GLOBAL_BackgroundSelectGating:
 2963              	.LFB294:
1341:../Libraries/XMCLib/src/xmc_vadc.c **** 
1342:../Libraries/XMCLib/src/xmc_vadc.c **** 
1343:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger gate for background scan request source */
1344:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectGating(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t inp
1345:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2964              	 .loc 2 1345 0
 2965              	 .cfi_startproc
 2966              	 
 2967              	 
 2968              	 
 2969 0000 80B4     	 push {r7}
 2970              	 .cfi_def_cfa_offset 4
 2971              	 .cfi_offset 7,-4
 2972 0002 85B0     	 sub sp,sp,#20
 2973              	 .cfi_def_cfa_offset 24
 2974 0004 00AF     	 add r7,sp,#0
 2975              	 .cfi_def_cfa_register 7
 2976 0006 7860     	 str r0,[r7,#4]
 2977 0008 3960     	 str r1,[r7]
1346:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1347:../Libraries/XMCLib/src/xmc_vadc.c **** 
1348:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectGating:Wrong Module Pointer", (global_ptr == VADC))
1349:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectGating:Wrong Gating Port", ((input_num) < XMC_VADC_NU
1350:../Libraries/XMCLib/src/xmc_vadc.c **** 
1351:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl       = global_ptr->BRSCTRL;
 2978              	 .loc 2 1351 0
 2979 000a 7B68     	 ldr r3,[r7,#4]
 2980 000c D3F80032 	 ldr r3,[r3,#512]
 2981 0010 FB60     	 str r3,[r7,#12]
1352:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)VADC_BRSCTRL_GTWC_Msk;
 2982              	 .loc 2 1352 0
 2983 0012 FB68     	 ldr r3,[r7,#12]
 2984 0014 43F40003 	 orr r3,r3,#8388608
 2985 0018 FB60     	 str r3,[r7,#12]
1353:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      &= ~((uint32_t)VADC_BRSCTRL_GTSEL_Msk);
 2986              	 .loc 2 1353 0
 2987 001a FB68     	 ldr r3,[r7,#12]
 2988 001c 23F47023 	 bic r3,r3,#983040
 2989 0020 FB60     	 str r3,[r7,#12]
1354:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)(input_num << VADC_BRSCTRL_GTSEL_Pos);
 2990              	 .loc 2 1354 0
 2991 0022 3B68     	 ldr r3,[r7]
 2992 0024 1B04     	 lsls r3,r3,#16
 2993 0026 FA68     	 ldr r2,[r7,#12]
 2994 0028 1343     	 orrs r3,r3,r2
 2995 002a FB60     	 str r3,[r7,#12]
1355:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 2996              	 .loc 2 1355 0
 2997 002c 7B68     	 ldr r3,[r7,#4]
 2998 002e FA68     	 ldr r2,[r7,#12]
 2999 0030 C3F80022 	 str r2,[r3,#512]
1356:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3000              	 .loc 2 1356 0
 3001 0034 1437     	 adds r7,r7,#20
 3002              	 .cfi_def_cfa_offset 4
 3003 0036 BD46     	 mov sp,r7
 3004              	 .cfi_def_cfa_register 13
 3005              	 
 3006 0038 5DF8047B 	 ldr r7,[sp],#4
 3007              	 .cfi_restore 7
 3008              	 .cfi_def_cfa_offset 0
 3009 003c 7047     	 bx lr
 3010              	 .cfi_endproc
 3011              	.LFE294:
 3013 003e 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundAbortSequence,"ax",%progbits
 3014              	 .align 2
 3015              	 .global XMC_VADC_GLOBAL_BackgroundAbortSequence
 3016              	 .thumb
 3017              	 .thumb_func
 3019              	XMC_VADC_GLOBAL_BackgroundAbortSequence:
 3020              	.LFB295:
1357:../Libraries/XMCLib/src/xmc_vadc.c **** 
1358:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to abort ongoing conversion of a sequence */
1359:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundAbortSequence(XMC_VADC_GLOBAL_t *const global_ptr)
1360:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3021              	 .loc 2 1360 0
 3022              	 .cfi_startproc
 3023              	 
 3024              	 
 3025 0000 80B5     	 push {r7,lr}
 3026              	 .cfi_def_cfa_offset 8
 3027              	 .cfi_offset 7,-8
 3028              	 .cfi_offset 14,-4
 3029 0002 86B0     	 sub sp,sp,#24
 3030              	 .cfi_def_cfa_offset 32
 3031 0004 00AF     	 add r7,sp,#0
 3032              	 .cfi_def_cfa_register 7
 3033 0006 7860     	 str r0,[r7,#4]
1361:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t brsctrl;
1362:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1363:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1364:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t grp_asen2_flag[XMC_VADC_MAXIMUM_NUM_GROUPS];
1365:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1366:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAbortSequence:Wrong Module Pointer", (global_ptr == VADC))
1367:../Libraries/XMCLib/src/xmc_vadc.c **** 
1368:../Libraries/XMCLib/src/xmc_vadc.c ****   /* To disable trigger and gating before abort*/
1369:../Libraries/XMCLib/src/xmc_vadc.c ****   brsctrl = global_ptr->BRSCTRL;
 3034              	 .loc 2 1369 0
 3035 0008 7B68     	 ldr r3,[r7,#4]
 3036 000a D3F80032 	 ldr r3,[r3,#512]
 3037 000e 3B61     	 str r3,[r7,#16]
1370:../Libraries/XMCLib/src/xmc_vadc.c **** 
1371:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL = (0U | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VADC_BRSCTRL_GTWC_Msk);
 3038              	 .loc 2 1371 0
 3039 0010 7B68     	 ldr r3,[r7,#4]
 3040 0012 254A     	 ldr r2,.L119
 3041 0014 C3F80022 	 str r2,[r3,#512]
1372:../Libraries/XMCLib/src/xmc_vadc.c **** 
1373:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable Background Request source */
1374:../Libraries/XMCLib/src/xmc_vadc.c **** 
1375:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1376:../Libraries/XMCLib/src/xmc_vadc.c ****   for (i = (uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 3042              	 .loc 2 1376 0
 3043 0018 0023     	 movs r3,#0
 3044 001a 7B61     	 str r3,[r7,#20]
 3045 001c 17E0     	 b .L114
 3046              	.L115:
1377:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1378:../Libraries/XMCLib/src/xmc_vadc.c ****     grp_asen2_flag[i] = (uint8_t)(g_xmc_vadc_group_array[i]->ARBPR >> VADC_G_ARBPR_ASEN2_Pos);
 3047              	 .loc 2 1378 0 discriminator 3
 3048 001e 234A     	 ldr r2,.L119+4
 3049 0020 7B69     	 ldr r3,[r7,#20]
 3050 0022 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3051 0026 D3F88430 	 ldr r3,[r3,#132]
 3052 002a 9B0E     	 lsrs r3,r3,#26
 3053 002c D9B2     	 uxtb r1,r3
 3054 002e 07F10C02 	 add r2,r7,#12
 3055 0032 7B69     	 ldr r3,[r7,#20]
 3056 0034 1344     	 add r3,r3,r2
 3057 0036 0A46     	 mov r2,r1
 3058 0038 1A70     	 strb r2,[r3]
1379:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundDisableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
 3059              	 .loc 2 1379 0 discriminator 3
 3060 003a 1C4A     	 ldr r2,.L119+4
 3061 003c 7B69     	 ldr r3,[r7,#20]
 3062 003e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3063 0042 1846     	 mov r0,r3
 3064 0044 FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundDisableArbitrationSlot
1376:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3065              	 .loc 2 1376 0 discriminator 3
 3066 0048 7B69     	 ldr r3,[r7,#20]
 3067 004a 0133     	 adds r3,r3,#1
 3068 004c 7B61     	 str r3,[r7,#20]
 3069              	.L114:
1376:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3070              	 .loc 2 1376 0 is_stmt 0 discriminator 1
 3071 004e 7B69     	 ldr r3,[r7,#20]
 3072 0050 032B     	 cmp r3,#3
 3073 0052 E4D9     	 bls .L115
1380:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1381:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1382:../Libraries/XMCLib/src/xmc_vadc.c **** 
1383:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Abort the ongoing sequence */
1384:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_CLRPND_Msk;
 3074              	 .loc 2 1384 0 is_stmt 1
 3075 0054 7B68     	 ldr r3,[r7,#4]
 3076 0056 D3F80432 	 ldr r3,[r3,#516]
 3077 005a 43F48072 	 orr r2,r3,#256
 3078 005e 7B68     	 ldr r3,[r7,#4]
 3079 0060 C3F80422 	 str r2,[r3,#516]
1385:../Libraries/XMCLib/src/xmc_vadc.c **** 
1386:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1387:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable Background Request source */
1388:../Libraries/XMCLib/src/xmc_vadc.c ****   for (i = (uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 3080              	 .loc 2 1388 0
 3081 0064 0023     	 movs r3,#0
 3082 0066 7B61     	 str r3,[r7,#20]
 3083 0068 10E0     	 b .L116
 3084              	.L118:
1389:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1390:../Libraries/XMCLib/src/xmc_vadc.c ****     if ((uint8_t)1 == grp_asen2_flag[i])
 3085              	 .loc 2 1390 0
 3086 006a 07F10C02 	 add r2,r7,#12
 3087 006e 7B69     	 ldr r3,[r7,#20]
 3088 0070 1344     	 add r3,r3,r2
 3089 0072 1B78     	 ldrb r3,[r3]
 3090 0074 012B     	 cmp r3,#1
 3091 0076 06D1     	 bne .L117
1391:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1392:../Libraries/XMCLib/src/xmc_vadc.c ****       XMC_VADC_GROUP_BackgroundEnableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i])
 3092              	 .loc 2 1392 0
 3093 0078 0C4A     	 ldr r2,.L119+4
 3094 007a 7B69     	 ldr r3,[r7,#20]
 3095 007c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3096 0080 1846     	 mov r0,r3
 3097 0082 FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundEnableArbitrationSlot
 3098              	.L117:
1388:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3099              	 .loc 2 1388 0 discriminator 2
 3100 0086 7B69     	 ldr r3,[r7,#20]
 3101 0088 0133     	 adds r3,r3,#1
 3102 008a 7B61     	 str r3,[r7,#20]
 3103              	.L116:
1388:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3104              	 .loc 2 1388 0 is_stmt 0 discriminator 1
 3105 008c 7B69     	 ldr r3,[r7,#20]
 3106 008e 032B     	 cmp r3,#3
 3107 0090 EBD9     	 bls .L118
1393:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1394:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1395:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1396:../Libraries/XMCLib/src/xmc_vadc.c **** 
1397:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Re-enable any disabled trigger and gating*/
1398:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL = (brsctrl | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VADC_BRSCTRL_GTWC_Ms
 3108              	 .loc 2 1398 0 is_stmt 1
 3109 0092 3B69     	 ldr r3,[r7,#16]
 3110 0094 43F40003 	 orr r3,r3,#8388608
 3111 0098 43F40043 	 orr r3,r3,#32768
 3112 009c 7A68     	 ldr r2,[r7,#4]
 3113 009e C2F80032 	 str r3,[r2,#512]
1399:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3114              	 .loc 2 1399 0
 3115 00a2 1837     	 adds r7,r7,#24
 3116              	 .cfi_def_cfa_offset 8
 3117 00a4 BD46     	 mov sp,r7
 3118              	 .cfi_def_cfa_register 13
 3119              	 
 3120 00a6 80BD     	 pop {r7,pc}
 3121              	.L120:
 3122              	 .align 2
 3123              	.L119:
 3124 00a8 00808000 	 .word 8421376
 3125 00ac 00000000 	 .word g_xmc_vadc_group_array
 3126              	 .cfi_endproc
 3127              	.LFE295:
 3129              	 .section .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending,"ax",%progbits
 3130              	 .align 2
 3131              	 .global XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending
 3132              	 .thumb
 3133              	 .thumb_func
 3135              	XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:
 3136              	.LFB296:
1400:../Libraries/XMCLib/src/xmc_vadc.c **** 
1401:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine how many channels are awaiting conversion */
1402:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending(XMC_VADC_GLOBAL_t *const global_ptr)
1403:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3137              	 .loc 2 1403 0
 3138              	 .cfi_startproc
 3139              	 
 3140              	 
 3141              	 
 3142 0000 80B4     	 push {r7}
 3143              	 .cfi_def_cfa_offset 4
 3144              	 .cfi_offset 7,-4
 3145 0002 87B0     	 sub sp,sp,#28
 3146              	 .cfi_def_cfa_offset 32
 3147 0004 00AF     	 add r7,sp,#0
 3148              	 .cfi_def_cfa_register 7
 3149 0006 7860     	 str r0,[r7,#4]
1404:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1405:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1406:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t j;
1407:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t count;
1408:../Libraries/XMCLib/src/xmc_vadc.c **** 
1409:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:Wrong Module Pointer", (global_ptr ==
1410:../Libraries/XMCLib/src/xmc_vadc.c **** 
1411:../Libraries/XMCLib/src/xmc_vadc.c ****   count = 0U;
 3150              	 .loc 2 1411 0
 3151 0008 0023     	 movs r3,#0
 3152 000a BB60     	 str r3,[r7,#8]
1412:../Libraries/XMCLib/src/xmc_vadc.c **** 
1413:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop through all groups and find out who is awaiting conversion */
1414:../Libraries/XMCLib/src/xmc_vadc.c ****   for (i = 0U; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 3153              	 .loc 2 1414 0
 3154 000c 0023     	 movs r3,#0
 3155 000e 3B61     	 str r3,[r7,#16]
 3156 0010 23E0     	 b .L122
 3157              	.L127:
1415:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1416:../Libraries/XMCLib/src/xmc_vadc.c ****     if (global_ptr->BRSSEL[i])
 3158              	 .loc 2 1416 0
 3159 0012 7B68     	 ldr r3,[r7,#4]
 3160 0014 3A69     	 ldr r2,[r7,#16]
 3161 0016 6032     	 adds r2,r2,#96
 3162 0018 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3163 001c 002B     	 cmp r3,#0
 3164 001e 19D0     	 beq .L123
1417:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1418:../Libraries/XMCLib/src/xmc_vadc.c ****       reg = global_ptr->BRSPND[i];
 3165              	 .loc 2 1418 0
 3166 0020 7B68     	 ldr r3,[r7,#4]
 3167 0022 3A69     	 ldr r2,[r7,#16]
 3168 0024 7032     	 adds r2,r2,#112
 3169 0026 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3170 002a 7B61     	 str r3,[r7,#20]
1419:../Libraries/XMCLib/src/xmc_vadc.c **** 
1420:../Libraries/XMCLib/src/xmc_vadc.c ****       for (j = 0U; j < XMC_VADC_NUM_CHANNELS_PER_GROUP; j++)
 3171              	 .loc 2 1420 0
 3172 002c 0023     	 movs r3,#0
 3173 002e FB60     	 str r3,[r7,#12]
 3174 0030 0DE0     	 b .L124
 3175              	.L126:
1421:../Libraries/XMCLib/src/xmc_vadc.c ****       {
1422:../Libraries/XMCLib/src/xmc_vadc.c ****         if (reg & 1U)
 3176              	 .loc 2 1422 0
 3177 0032 7B69     	 ldr r3,[r7,#20]
 3178 0034 03F00103 	 and r3,r3,#1
 3179 0038 002B     	 cmp r3,#0
 3180 003a 02D0     	 beq .L125
1423:../Libraries/XMCLib/src/xmc_vadc.c ****         {
1424:../Libraries/XMCLib/src/xmc_vadc.c ****           count++;
 3181              	 .loc 2 1424 0
 3182 003c BB68     	 ldr r3,[r7,#8]
 3183 003e 0133     	 adds r3,r3,#1
 3184 0040 BB60     	 str r3,[r7,#8]
 3185              	.L125:
1425:../Libraries/XMCLib/src/xmc_vadc.c ****         }
1426:../Libraries/XMCLib/src/xmc_vadc.c **** 
1427:../Libraries/XMCLib/src/xmc_vadc.c ****         reg = reg >> 1U;
 3186              	 .loc 2 1427 0 discriminator 2
 3187 0042 7B69     	 ldr r3,[r7,#20]
 3188 0044 5B08     	 lsrs r3,r3,#1
 3189 0046 7B61     	 str r3,[r7,#20]
1420:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 3190              	 .loc 2 1420 0 discriminator 2
 3191 0048 FB68     	 ldr r3,[r7,#12]
 3192 004a 0133     	 adds r3,r3,#1
 3193 004c FB60     	 str r3,[r7,#12]
 3194              	.L124:
1420:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 3195              	 .loc 2 1420 0 is_stmt 0 discriminator 1
 3196 004e FB68     	 ldr r3,[r7,#12]
 3197 0050 072B     	 cmp r3,#7
 3198 0052 EED9     	 bls .L126
 3199              	.L123:
1414:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3200              	 .loc 2 1414 0 is_stmt 1 discriminator 2
 3201 0054 3B69     	 ldr r3,[r7,#16]
 3202 0056 0133     	 adds r3,r3,#1
 3203 0058 3B61     	 str r3,[r7,#16]
 3204              	.L122:
1414:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3205              	 .loc 2 1414 0 is_stmt 0 discriminator 1
 3206 005a 3B69     	 ldr r3,[r7,#16]
 3207 005c 032B     	 cmp r3,#3
 3208 005e D8D9     	 bls .L127
1428:../Libraries/XMCLib/src/xmc_vadc.c ****       }
1429:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1430:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1431:../Libraries/XMCLib/src/xmc_vadc.c **** 
1432:../Libraries/XMCLib/src/xmc_vadc.c ****   return count;
 3209              	 .loc 2 1432 0 is_stmt 1
 3210 0060 BB68     	 ldr r3,[r7,#8]
1433:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3211              	 .loc 2 1433 0
 3212 0062 1846     	 mov r0,r3
 3213 0064 1C37     	 adds r7,r7,#28
 3214              	 .cfi_def_cfa_offset 4
 3215 0066 BD46     	 mov sp,r7
 3216              	 .cfi_def_cfa_register 13
 3217              	 
 3218 0068 5DF8047B 	 ldr r7,[sp],#4
 3219              	 .cfi_restore 7
 3220              	 .cfi_def_cfa_offset 0
 3221 006c 7047     	 bx lr
 3222              	 .cfi_endproc
 3223              	.LFE296:
 3225 006e 00BF     	 .section .text.XMC_VADC_GROUP_QueueInit,"ax",%progbits
 3226              	 .align 2
 3227              	 .global XMC_VADC_GROUP_QueueInit
 3228              	 .thumb
 3229              	 .thumb_func
 3231              	XMC_VADC_GROUP_QueueInit:
 3232              	.LFB297:
1434:../Libraries/XMCLib/src/xmc_vadc.c **** 
1435:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_QUEUE_AVAILABLE == 1U)
1436:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize queue request source */
1437:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_QUEUE_CONFIG_t *con
1438:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3233              	 .loc 2 1438 0
 3234              	 .cfi_startproc
 3235              	 
 3236              	 
 3237 0000 80B5     	 push {r7,lr}
 3238              	 .cfi_def_cfa_offset 8
 3239              	 .cfi_offset 7,-8
 3240              	 .cfi_offset 14,-4
 3241 0002 84B0     	 sub sp,sp,#16
 3242              	 .cfi_def_cfa_offset 24
 3243 0004 00AF     	 add r7,sp,#0
 3244              	 .cfi_def_cfa_register 7
 3245 0006 7860     	 str r0,[r7,#4]
 3246 0008 3960     	 str r1,[r7]
1439:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t          reg;
1440:../Libraries/XMCLib/src/xmc_vadc.c **** 
1441:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1442:../Libraries/XMCLib/src/xmc_vadc.c **** 
1443:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable arbitration slot of the queue request source */
1444:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
 3247              	 .loc 2 1444 0
 3248 000a 7868     	 ldr r0,[r7,#4]
 3249 000c FFF7FEFF 	 bl XMC_VADC_GROUP_QueueDisableArbitrationSlot
1445:../Libraries/XMCLib/src/xmc_vadc.c **** 
1446:../Libraries/XMCLib/src/xmc_vadc.c ****   reg = group_ptr->ARBPR;
 3250              	 .loc 2 1446 0
 3251 0010 7B68     	 ldr r3,[r7,#4]
 3252 0012 D3F88430 	 ldr r3,[r3,#132]
 3253 0016 FB60     	 str r3,[r7,#12]
1447:../Libraries/XMCLib/src/xmc_vadc.c **** 
1448:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Request Source priority */
1449:../Libraries/XMCLib/src/xmc_vadc.c ****   reg &= ~((uint32_t)VADC_G_ARBPR_PRIO0_Msk);
 3254              	 .loc 2 1449 0
 3255 0018 FB68     	 ldr r3,[r7,#12]
 3256 001a 23F00303 	 bic r3,r3,#3
 3257 001e FB60     	 str r3,[r7,#12]
1450:../Libraries/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t) ((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO0_Pos);
 3258              	 .loc 2 1450 0
 3259 0020 3B68     	 ldr r3,[r7]
 3260 0022 1B78     	 ldrb r3,[r3]
 3261 0024 C3F38103 	 ubfx r3,r3,#2,#2
 3262 0028 DBB2     	 uxtb r3,r3
 3263 002a 1A46     	 mov r2,r3
 3264 002c FB68     	 ldr r3,[r7,#12]
 3265 002e 1343     	 orrs r3,r3,r2
 3266 0030 FB60     	 str r3,[r7,#12]
1451:../Libraries/XMCLib/src/xmc_vadc.c **** 
1452:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Conversion Start mode */
1453:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (XMC_VADC_STARTMODE_t)config->conv_start_mode)
 3267              	 .loc 2 1453 0
 3268 0032 3B68     	 ldr r3,[r7]
 3269 0034 1B78     	 ldrb r3,[r3]
 3270 0036 03F00303 	 and r3,r3,#3
 3271 003a DBB2     	 uxtb r3,r3
 3272 003c 002B     	 cmp r3,#0
 3273 003e 03D0     	 beq .L130
1454:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1455:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)(VADC_G_ARBPR_CSM0_Msk);
 3274              	 .loc 2 1455 0
 3275 0040 FB68     	 ldr r3,[r7,#12]
 3276 0042 43F00803 	 orr r3,r3,#8
 3277 0046 FB60     	 str r3,[r7,#12]
 3278              	.L130:
1456:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1457:../Libraries/XMCLib/src/xmc_vadc.c **** 
1458:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR = reg;
 3279              	 .loc 2 1458 0
 3280 0048 7B68     	 ldr r3,[r7,#4]
 3281 004a FA68     	 ldr r2,[r7,#12]
 3282 004c C3F88420 	 str r2,[r3,#132]
1459:../Libraries/XMCLib/src/xmc_vadc.c **** 
1460:../Libraries/XMCLib/src/xmc_vadc.c **** 
1461:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (uint32_t)((config->qctrl0) | (uint32_t)(VADC_G_QCTRL0_XTWC_Msk) |
 3283              	 .loc 2 1461 0
 3284 0050 3B68     	 ldr r3,[r7]
 3285 0052 5B68     	 ldr r3,[r3,#4]
 3286 0054 43F08023 	 orr r3,r3,#-2147450880
 3287 0058 43F40003 	 orr r3,r3,#8388608
 3288 005c 7A68     	 ldr r2,[r7,#4]
 3289 005e C2F80031 	 str r3,[r2,#256]
1462:../Libraries/XMCLib/src/xmc_vadc.c ****                                  (uint32_t)(VADC_G_QCTRL0_TMWC_Msk) |
1463:../Libraries/XMCLib/src/xmc_vadc.c ****                                  (uint32_t)(VADC_G_QCTRL0_GTWC_Msk));
1464:../Libraries/XMCLib/src/xmc_vadc.c **** 
1465:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Gating mode */
1466:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QMR0 = ((uint32_t)(config->qmr0) | (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << VA
 3290              	 .loc 2 1466 0
 3291 0062 3B68     	 ldr r3,[r7]
 3292 0064 9B68     	 ldr r3,[r3,#8]
 3293 0066 43F00102 	 orr r2,r3,#1
 3294 006a 7B68     	 ldr r3,[r7,#4]
 3295 006c C3F80421 	 str r2,[r3,#260]
1467:../Libraries/XMCLib/src/xmc_vadc.c **** 
1468:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (XMC_VADC_STARTMODE_t)(config->conv_start_mode) )
 3296              	 .loc 2 1468 0
 3297 0070 3B68     	 ldr r3,[r7]
 3298 0072 1B78     	 ldrb r3,[r3]
 3299 0074 03F00303 	 and r3,r3,#3
 3300 0078 DBB2     	 uxtb r3,r3
 3301 007a 022B     	 cmp r3,#2
 3302 007c 07D1     	 bne .L131
1469:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1470:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->QMR0 |= (uint32_t)((uint32_t)1 << VADC_G_QMR0_RPTDIS_Pos);
 3303              	 .loc 2 1470 0
 3304 007e 7B68     	 ldr r3,[r7,#4]
 3305 0080 D3F80431 	 ldr r3,[r3,#260]
 3306 0084 43F48032 	 orr r2,r3,#65536
 3307 0088 7B68     	 ldr r3,[r7,#4]
 3308 008a C3F80421 	 str r2,[r3,#260]
 3309              	.L131:
1471:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1472:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable arbitration slot for the queue request source */
1473:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueEnableArbitrationSlot(group_ptr);
 3310              	 .loc 2 1473 0
 3311 008e 7868     	 ldr r0,[r7,#4]
 3312 0090 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueEnableArbitrationSlot
1474:../Libraries/XMCLib/src/xmc_vadc.c **** 
1475:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3313              	 .loc 2 1475 0
 3314 0094 1037     	 adds r7,r7,#16
 3315              	 .cfi_def_cfa_offset 8
 3316 0096 BD46     	 mov sp,r7
 3317              	 .cfi_def_cfa_register 13
 3318              	 
 3319 0098 80BD     	 pop {r7,pc}
 3320              	 .cfi_endproc
 3321              	.LFE297:
 3323 009a 00BF     	 .section .text.XMC_VADC_GROUP_QueueSelectTrigger,"ax",%progbits
 3324              	 .align 2
 3325              	 .global XMC_VADC_GROUP_QueueSelectTrigger
 3326              	 .thumb
 3327              	 .thumb_func
 3329              	XMC_VADC_GROUP_QueueSelectTrigger:
 3330              	.LFB298:
1476:../Libraries/XMCLib/src/xmc_vadc.c **** 
1477:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 possible triggers as a conversion trigger for queue request source *
1478:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectTrigger(XMC_VADC_GROUP_t *const group_ptr,
1479:../Libraries/XMCLib/src/xmc_vadc.c ****                                        const XMC_VADC_TRIGGER_INPUT_SELECT_t input_num)
1480:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3331              	 .loc 2 1480 0
 3332              	 .cfi_startproc
 3333              	 
 3334              	 
 3335              	 
 3336 0000 80B4     	 push {r7}
 3337              	 .cfi_def_cfa_offset 4
 3338              	 .cfi_offset 7,-4
 3339 0002 85B0     	 sub sp,sp,#20
 3340              	 .cfi_def_cfa_offset 24
 3341 0004 00AF     	 add r7,sp,#0
 3342              	 .cfi_def_cfa_register 7
 3343 0006 7860     	 str r0,[r7,#4]
 3344 0008 0B46     	 mov r3,r1
 3345 000a FB70     	 strb r3,[r7,#3]
1481:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    qctrl;
1482:../Libraries/XMCLib/src/xmc_vadc.c **** 
1483:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1484:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTrigger:Wrong Trigger Port", ((input_num) < XMC_VADC_NUM_PO
1485:../Libraries/XMCLib/src/xmc_vadc.c **** 
1486:../Libraries/XMCLib/src/xmc_vadc.c **** 
1487:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Now select the conversion trigger */
1488:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3346              	 .loc 2 1488 0
 3347 000c 7B68     	 ldr r3,[r7,#4]
 3348 000e D3F80031 	 ldr r3,[r3,#256]
 3349 0012 FB60     	 str r3,[r7,#12]
1489:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  |= (uint32_t)VADC_G_QCTRL0_XTWC_Msk;
 3350              	 .loc 2 1489 0
 3351 0014 FB68     	 ldr r3,[r7,#12]
 3352 0016 43F40043 	 orr r3,r3,#32768
 3353 001a FB60     	 str r3,[r7,#12]
1490:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_XTSEL_Msk);
 3354              	 .loc 2 1490 0
 3355 001c FB68     	 ldr r3,[r7,#12]
 3356 001e 23F47063 	 bic r3,r3,#3840
 3357 0022 FB60     	 str r3,[r7,#12]
1491:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)input_num << VADC_G_QCTRL0_XTSEL_Pos);
 3358              	 .loc 2 1491 0
 3359 0024 FB78     	 ldrb r3,[r7,#3]
 3360 0026 1B02     	 lsls r3,r3,#8
 3361 0028 FA68     	 ldr r2,[r7,#12]
 3362 002a 1343     	 orrs r3,r3,r2
 3363 002c FB60     	 str r3,[r7,#12]
1492:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3364              	 .loc 2 1492 0
 3365 002e 7B68     	 ldr r3,[r7,#4]
 3366 0030 FA68     	 ldr r2,[r7,#12]
 3367 0032 C3F80021 	 str r2,[r3,#256]
1493:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3368              	 .loc 2 1493 0
 3369 0036 1437     	 adds r7,r7,#20
 3370              	 .cfi_def_cfa_offset 4
 3371 0038 BD46     	 mov sp,r7
 3372              	 .cfi_def_cfa_register 13
 3373              	 
 3374 003a 5DF8047B 	 ldr r7,[sp],#4
 3375              	 .cfi_restore 7
 3376              	 .cfi_def_cfa_offset 0
 3377 003e 7047     	 bx lr
 3378              	 .cfi_endproc
 3379              	.LFE298:
 3381              	 .section .text.XMC_VADC_GROUP_QueueSelectTriggerEdge,"ax",%progbits
 3382              	 .align 2
 3383              	 .global XMC_VADC_GROUP_QueueSelectTriggerEdge
 3384              	 .thumb
 3385              	 .thumb_func
 3387              	XMC_VADC_GROUP_QueueSelectTriggerEdge:
 3388              	.LFB299:
1494:../Libraries/XMCLib/src/xmc_vadc.c **** 
1495:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1496:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGE
1497:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3389              	 .loc 2 1497 0
 3390              	 .cfi_startproc
 3391              	 
 3392              	 
 3393              	 
 3394 0000 80B4     	 push {r7}
 3395              	 .cfi_def_cfa_offset 4
 3396              	 .cfi_offset 7,-4
 3397 0002 85B0     	 sub sp,sp,#20
 3398              	 .cfi_def_cfa_offset 24
 3399 0004 00AF     	 add r7,sp,#0
 3400              	 .cfi_def_cfa_register 7
 3401 0006 7860     	 str r0,[r7,#4]
 3402 0008 0B46     	 mov r3,r1
 3403 000a FB70     	 strb r3,[r7,#3]
1498:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl;
1499:../Libraries/XMCLib/src/xmc_vadc.c **** 
1500:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTriggerEdge:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
1501:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTriggerEdge:Wrong Gating Port", ((trigger_edge) <= XMC_VADC
1502:../Libraries/XMCLib/src/xmc_vadc.c **** 
1503:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Now select the gating input */
1504:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3404              	 .loc 2 1504 0
 3405 000c 7B68     	 ldr r3,[r7,#4]
 3406 000e D3F80031 	 ldr r3,[r3,#256]
 3407 0012 FB60     	 str r3,[r7,#12]
1505:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)VADC_G_QCTRL0_XTWC_Msk;
 3408              	 .loc 2 1505 0
 3409 0014 FB68     	 ldr r3,[r7,#12]
 3410 0016 43F40043 	 orr r3,r3,#32768
 3411 001a FB60     	 str r3,[r7,#12]
1506:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_XTMODE_Msk);
 3412              	 .loc 2 1506 0
 3413 001c FB68     	 ldr r3,[r7,#12]
 3414 001e 23F4C043 	 bic r3,r3,#24576
 3415 0022 FB60     	 str r3,[r7,#12]
1507:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)trigger_edge << VADC_G_QCTRL0_XTMODE_Pos);
 3416              	 .loc 2 1507 0
 3417 0024 FB78     	 ldrb r3,[r7,#3]
 3418 0026 5B03     	 lsls r3,r3,#13
 3419 0028 FA68     	 ldr r2,[r7,#12]
 3420 002a 1343     	 orrs r3,r3,r2
 3421 002c FB60     	 str r3,[r7,#12]
1508:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3422              	 .loc 2 1508 0
 3423 002e 7B68     	 ldr r3,[r7,#4]
 3424 0030 FA68     	 ldr r2,[r7,#12]
 3425 0032 C3F80021 	 str r2,[r3,#256]
1509:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3426              	 .loc 2 1509 0
 3427 0036 1437     	 adds r7,r7,#20
 3428              	 .cfi_def_cfa_offset 4
 3429 0038 BD46     	 mov sp,r7
 3430              	 .cfi_def_cfa_register 13
 3431              	 
 3432 003a 5DF8047B 	 ldr r7,[sp],#4
 3433              	 .cfi_restore 7
 3434              	 .cfi_def_cfa_offset 0
 3435 003e 7047     	 bx lr
 3436              	 .cfi_endproc
 3437              	.LFE299:
 3439              	 .section .text.XMC_VADC_GROUP_QueueSelectGating,"ax",%progbits
 3440              	 .align 2
 3441              	 .global XMC_VADC_GROUP_QueueSelectGating
 3442              	 .thumb
 3443              	 .thumb_func
 3445              	XMC_VADC_GROUP_QueueSelectGating:
 3446              	.LFB300:
1510:../Libraries/XMCLib/src/xmc_vadc.c **** 
1511:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 possible trigger gates as a trigger gating signal for queue request 
1512:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectGating(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GATE_INPUT_
1513:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3447              	 .loc 2 1513 0
 3448              	 .cfi_startproc
 3449              	 
 3450              	 
 3451              	 
 3452 0000 80B4     	 push {r7}
 3453              	 .cfi_def_cfa_offset 4
 3454              	 .cfi_offset 7,-4
 3455 0002 85B0     	 sub sp,sp,#20
 3456              	 .cfi_def_cfa_offset 24
 3457 0004 00AF     	 add r7,sp,#0
 3458              	 .cfi_def_cfa_register 7
 3459 0006 7860     	 str r0,[r7,#4]
 3460 0008 0B46     	 mov r3,r1
 3461 000a FB70     	 strb r3,[r7,#3]
1514:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl;
1515:../Libraries/XMCLib/src/xmc_vadc.c **** 
1516:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectGating:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1517:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectGating:Wrong Gating Port", ((input_num) < XMC_VADC_NUM_PORT
1518:../Libraries/XMCLib/src/xmc_vadc.c **** 
1519:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Now select the gating input */
1520:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3462              	 .loc 2 1520 0
 3463 000c 7B68     	 ldr r3,[r7,#4]
 3464 000e D3F80031 	 ldr r3,[r3,#256]
 3465 0012 FB60     	 str r3,[r7,#12]
1521:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)VADC_G_QCTRL0_GTWC_Msk;
 3466              	 .loc 2 1521 0
 3467 0014 FB68     	 ldr r3,[r7,#12]
 3468 0016 43F40003 	 orr r3,r3,#8388608
 3469 001a FB60     	 str r3,[r7,#12]
1522:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_GTSEL_Msk);
 3470              	 .loc 2 1522 0
 3471 001c FB68     	 ldr r3,[r7,#12]
 3472 001e 23F47023 	 bic r3,r3,#983040
 3473 0022 FB60     	 str r3,[r7,#12]
1523:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)input_num << VADC_G_QCTRL0_GTSEL_Pos);
 3474              	 .loc 2 1523 0
 3475 0024 FB78     	 ldrb r3,[r7,#3]
 3476 0026 1B04     	 lsls r3,r3,#16
 3477 0028 FA68     	 ldr r2,[r7,#12]
 3478 002a 1343     	 orrs r3,r3,r2
 3479 002c FB60     	 str r3,[r7,#12]
1524:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3480              	 .loc 2 1524 0
 3481 002e 7B68     	 ldr r3,[r7,#4]
 3482 0030 FA68     	 ldr r2,[r7,#12]
 3483 0032 C3F80021 	 str r2,[r3,#256]
1525:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3484              	 .loc 2 1525 0
 3485 0036 1437     	 adds r7,r7,#20
 3486              	 .cfi_def_cfa_offset 4
 3487 0038 BD46     	 mov sp,r7
 3488              	 .cfi_def_cfa_register 13
 3489              	 
 3490 003a 5DF8047B 	 ldr r7,[sp],#4
 3491              	 .cfi_restore 7
 3492              	 .cfi_def_cfa_offset 0
 3493 003e 7047     	 bx lr
 3494              	 .cfi_endproc
 3495              	.LFE300:
 3497              	 .section .text.XMC_VADC_GROUP_QueueGetLength,"ax",%progbits
 3498              	 .align 2
 3499              	 .global XMC_VADC_GROUP_QueueGetLength
 3500              	 .thumb
 3501              	 .thumb_func
 3503              	XMC_VADC_GROUP_QueueGetLength:
 3504              	.LFB301:
1526:../Libraries/XMCLib/src/xmc_vadc.c **** 
1527:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine the number of channels in the queue (length includes the valid channel in the B
1528:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_QueueGetLength(XMC_VADC_GROUP_t *const group_ptr)
1529:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3505              	 .loc 2 1529 0
 3506              	 .cfi_startproc
 3507              	 
 3508              	 
 3509              	 
 3510 0000 80B4     	 push {r7}
 3511              	 .cfi_def_cfa_offset 4
 3512              	 .cfi_offset 7,-4
 3513 0002 87B0     	 sub sp,sp,#28
 3514              	 .cfi_def_cfa_offset 32
 3515 0004 00AF     	 add r7,sp,#0
 3516              	 .cfi_def_cfa_register 7
 3517 0006 7860     	 str r0,[r7,#4]
1530:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        qsr;
1531:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        qbur0;
1532:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        length;
1533:../Libraries/XMCLib/src/xmc_vadc.c **** 
1534:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetLength:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_pt
1535:../Libraries/XMCLib/src/xmc_vadc.c **** 
1536:../Libraries/XMCLib/src/xmc_vadc.c ****   qsr = group_ptr->QSR0;
 3518              	 .loc 2 1536 0
 3519 0008 7B68     	 ldr r3,[r7,#4]
 3520 000a D3F80831 	 ldr r3,[r3,#264]
 3521 000e 3B61     	 str r3,[r7,#16]
1537:../Libraries/XMCLib/src/xmc_vadc.c ****   qbur0 = group_ptr->QBUR0;
 3522              	 .loc 2 1537 0
 3523 0010 7B68     	 ldr r3,[r7,#4]
 3524 0012 D3F81031 	 ldr r3,[r3,#272]
 3525 0016 FB60     	 str r3,[r7,#12]
1538:../Libraries/XMCLib/src/xmc_vadc.c **** 
1539:../Libraries/XMCLib/src/xmc_vadc.c ****   if (qsr & (uint32_t)VADC_G_QSR0_EMPTY_Msk)
 3526              	 .loc 2 1539 0
 3527 0018 3B69     	 ldr r3,[r7,#16]
 3528 001a 03F02003 	 and r3,r3,#32
 3529 001e 002B     	 cmp r3,#0
 3530 0020 02D0     	 beq .L136
1540:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1541:../Libraries/XMCLib/src/xmc_vadc.c ****     length = 0U;
 3531              	 .loc 2 1541 0
 3532 0022 0023     	 movs r3,#0
 3533 0024 7B61     	 str r3,[r7,#20]
 3534 0026 04E0     	 b .L137
 3535              	.L136:
1542:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1543:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1544:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1545:../Libraries/XMCLib/src/xmc_vadc.c ****     length = (qsr & (uint32_t)VADC_G_QSR0_FILL_Msk) + 1U;
 3536              	 .loc 2 1545 0
 3537 0028 3B69     	 ldr r3,[r7,#16]
 3538 002a 03F00F03 	 and r3,r3,#15
 3539 002e 0133     	 adds r3,r3,#1
 3540 0030 7B61     	 str r3,[r7,#20]
 3541              	.L137:
1546:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1547:../Libraries/XMCLib/src/xmc_vadc.c **** 
1548:../Libraries/XMCLib/src/xmc_vadc.c ****   if (qbur0 & (uint32_t)VADC_G_QBUR0_V_Msk )
 3542              	 .loc 2 1548 0
 3543 0032 FB68     	 ldr r3,[r7,#12]
 3544 0034 03F48073 	 and r3,r3,#256
 3545 0038 002B     	 cmp r3,#0
 3546 003a 02D0     	 beq .L138
1549:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1550:../Libraries/XMCLib/src/xmc_vadc.c ****     length++;
 3547              	 .loc 2 1550 0
 3548 003c 7B69     	 ldr r3,[r7,#20]
 3549 003e 0133     	 adds r3,r3,#1
 3550 0040 7B61     	 str r3,[r7,#20]
 3551              	.L138:
1551:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1552:../Libraries/XMCLib/src/xmc_vadc.c **** 
1553:../Libraries/XMCLib/src/xmc_vadc.c ****   return length;
 3552              	 .loc 2 1553 0
 3553 0042 7B69     	 ldr r3,[r7,#20]
1554:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3554              	 .loc 2 1554 0
 3555 0044 1846     	 mov r0,r3
 3556 0046 1C37     	 adds r7,r7,#28
 3557              	 .cfi_def_cfa_offset 4
 3558 0048 BD46     	 mov sp,r7
 3559              	 .cfi_def_cfa_register 13
 3560              	 
 3561 004a 5DF8047B 	 ldr r7,[sp],#4
 3562              	 .cfi_restore 7
 3563              	 .cfi_def_cfa_offset 0
 3564 004e 7047     	 bx lr
 3565              	 .cfi_endproc
 3566              	.LFE301:
 3568              	 .section .text.XMC_VADC_GROUP_QueueAbortSequence,"ax",%progbits
 3569              	 .align 2
 3570              	 .global XMC_VADC_GROUP_QueueAbortSequence
 3571              	 .thumb
 3572              	 .thumb_func
 3574              	XMC_VADC_GROUP_QueueAbortSequence:
 3575              	.LFB302:
1555:../Libraries/XMCLib/src/xmc_vadc.c **** 
1556:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to abort ongoing conversion of a channel sequence */
1557:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueAbortSequence(XMC_VADC_GROUP_t *const group_ptr)
1558:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3576              	 .loc 2 1558 0
 3577              	 .cfi_startproc
 3578              	 
 3579              	 
 3580 0000 80B5     	 push {r7,lr}
 3581              	 .cfi_def_cfa_offset 8
 3582              	 .cfi_offset 7,-8
 3583              	 .cfi_offset 14,-4
 3584 0002 84B0     	 sub sp,sp,#16
 3585              	 .cfi_def_cfa_offset 24
 3586 0004 00AF     	 add r7,sp,#0
 3587              	 .cfi_def_cfa_register 7
 3588 0006 7860     	 str r0,[r7,#4]
1559:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl0;
1560:../Libraries/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1561:../Libraries/XMCLib/src/xmc_vadc.c **** 
1562:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueAbortSequence:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1563:../Libraries/XMCLib/src/xmc_vadc.c **** 
1564:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable any gating if present*/
1565:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl0 = group_ptr->QCTRL0;
 3589              	 .loc 2 1565 0
 3590 0008 7B68     	 ldr r3,[r7,#4]
 3591 000a D3F80031 	 ldr r3,[r3,#256]
 3592 000e FB60     	 str r3,[r7,#12]
1566:../Libraries/XMCLib/src/xmc_vadc.c **** 
1567:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (0U | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
 3593              	 .loc 2 1567 0
 3594 0010 7B68     	 ldr r3,[r7,#4]
 3595 0012 144A     	 ldr r2,.L141
 3596 0014 C3F80021 	 str r2,[r3,#256]
1568:../Libraries/XMCLib/src/xmc_vadc.c ****                        (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_Msk );
1569:../Libraries/XMCLib/src/xmc_vadc.c **** 
1570:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable the Arbitration 0 in the group before abort*/
1571:../Libraries/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN0_Pos) & 1U);
 3597              	 .loc 2 1571 0
 3598 0018 7B68     	 ldr r3,[r7,#4]
 3599 001a D3F88430 	 ldr r3,[r3,#132]
 3600 001e 1B0E     	 lsrs r3,r3,#24
 3601 0020 03F00103 	 and r3,r3,#1
 3602 0024 002B     	 cmp r3,#0
 3603 0026 14BF     	 ite ne
 3604 0028 0123     	 movne r3,#1
 3605 002a 0023     	 moveq r3,#0
 3606 002c FB72     	 strb r3,[r7,#11]
1572:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
 3607              	 .loc 2 1572 0
 3608 002e 7868     	 ldr r0,[r7,#4]
 3609 0030 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueDisableArbitrationSlot
1573:../Libraries/XMCLib/src/xmc_vadc.c **** 
1574:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Flush the Entries from queue*/
1575:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueFlushEntries(group_ptr);
 3610              	 .loc 2 1575 0
 3611 0034 7868     	 ldr r0,[r7,#4]
 3612 0036 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueFlushEntries
1576:../Libraries/XMCLib/src/xmc_vadc.c **** 
1577:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the arbitration slot 0*/
1578:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN0_Pos);
 3613              	 .loc 2 1578 0
 3614 003a 7B68     	 ldr r3,[r7,#4]
 3615 003c D3F88420 	 ldr r2,[r3,#132]
 3616 0040 FB7A     	 ldrb r3,[r7,#11]
 3617 0042 1B06     	 lsls r3,r3,#24
 3618 0044 1A43     	 orrs r2,r2,r3
 3619 0046 7B68     	 ldr r3,[r7,#4]
 3620 0048 C3F88420 	 str r2,[r3,#132]
1579:../Libraries/XMCLib/src/xmc_vadc.c **** 
1580:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1581:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (qctrl0 | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
1582:../Libraries/XMCLib/src/xmc_vadc.c ****                        (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_Msk );
 3621              	 .loc 2 1582 0
 3622 004c FB68     	 ldr r3,[r7,#12]
 3623 004e 43F08023 	 orr r3,r3,#-2147450880
 3624 0052 43F40003 	 orr r3,r3,#8388608
1581:../Libraries/XMCLib/src/xmc_vadc.c ****                        (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_Msk );
 3625              	 .loc 2 1581 0
 3626 0056 7A68     	 ldr r2,[r7,#4]
 3627 0058 C2F80031 	 str r3,[r2,#256]
1583:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3628              	 .loc 2 1583 0
 3629 005c 1037     	 adds r7,r7,#16
 3630              	 .cfi_def_cfa_offset 8
 3631 005e BD46     	 mov sp,r7
 3632              	 .cfi_def_cfa_register 13
 3633              	 
 3634 0060 80BD     	 pop {r7,pc}
 3635              	.L142:
 3636 0062 00BF     	 .align 2
 3637              	.L141:
 3638 0064 00808080 	 .word -2139062272
 3639              	 .cfi_endproc
 3640              	.LFE302:
 3642              	 .section .text.XMC_VADC_GROUP_QueueRemoveChannel,"ax",%progbits
 3643              	 .align 2
 3644              	 .global XMC_VADC_GROUP_QueueRemoveChannel
 3645              	 .thumb
 3646              	 .thumb_func
 3648              	XMC_VADC_GROUP_QueueRemoveChannel:
 3649              	.LFB303:
1584:../Libraries/XMCLib/src/xmc_vadc.c **** 
1585:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to abort conversion of the channel queued up next */
1586:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueRemoveChannel(XMC_VADC_GROUP_t *const group_ptr)
1587:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3650              	 .loc 2 1587 0
 3651              	 .cfi_startproc
 3652              	 
 3653              	 
 3654 0000 80B5     	 push {r7,lr}
 3655              	 .cfi_def_cfa_offset 8
 3656              	 .cfi_offset 7,-8
 3657              	 .cfi_offset 14,-4
 3658 0002 86B0     	 sub sp,sp,#24
 3659              	 .cfi_def_cfa_offset 32
 3660 0004 00AF     	 add r7,sp,#0
 3661              	 .cfi_def_cfa_register 7
 3662 0006 7860     	 str r0,[r7,#4]
1588:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t length_before_abort;
1589:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t length_after_abort;
1590:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl0;
1591:../Libraries/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1592:../Libraries/XMCLib/src/xmc_vadc.c **** 
1593:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueRemoveChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1594:../Libraries/XMCLib/src/xmc_vadc.c **** 
1595:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable any gating if present*/
1596:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl0 = group_ptr->QCTRL0;
 3663              	 .loc 2 1596 0
 3664 0008 7B68     	 ldr r3,[r7,#4]
 3665 000a D3F80031 	 ldr r3,[r3,#256]
 3666 000e 3B61     	 str r3,[r7,#16]
1597:../Libraries/XMCLib/src/xmc_vadc.c **** 
1598:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (0U | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
 3667              	 .loc 2 1598 0
 3668 0010 7B68     	 ldr r3,[r7,#4]
 3669 0012 204A     	 ldr r2,.L147
 3670 0014 C3F80021 	 str r2,[r3,#256]
1599:../Libraries/XMCLib/src/xmc_vadc.c ****                        (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_Msk );
1600:../Libraries/XMCLib/src/xmc_vadc.c **** 
1601:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable the Arbitration 0 in the group before abort*/
1602:../Libraries/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN0_Pos) & 1U);
 3671              	 .loc 2 1602 0
 3672 0018 7B68     	 ldr r3,[r7,#4]
 3673 001a D3F88430 	 ldr r3,[r3,#132]
 3674 001e 1B0E     	 lsrs r3,r3,#24
 3675 0020 03F00103 	 and r3,r3,#1
 3676 0024 002B     	 cmp r3,#0
 3677 0026 14BF     	 ite ne
 3678 0028 0123     	 movne r3,#1
 3679 002a 0023     	 moveq r3,#0
 3680 002c FB73     	 strb r3,[r7,#15]
1603:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
 3681              	 .loc 2 1603 0
 3682 002e 7868     	 ldr r0,[r7,#4]
 3683 0030 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueDisableArbitrationSlot
1604:../Libraries/XMCLib/src/xmc_vadc.c **** 
1605:../Libraries/XMCLib/src/xmc_vadc.c ****   length_before_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
 3684              	 .loc 2 1605 0
 3685 0034 7868     	 ldr r0,[r7,#4]
 3686 0036 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueGetLength
 3687 003a B860     	 str r0,[r7,#8]
1606:../Libraries/XMCLib/src/xmc_vadc.c **** 
1607:../Libraries/XMCLib/src/xmc_vadc.c ****   if (length_before_abort)
 3688              	 .loc 2 1607 0
 3689 003c BB68     	 ldr r3,[r7,#8]
 3690 003e 002B     	 cmp r3,#0
 3691 0040 14D0     	 beq .L144
1608:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1609:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Remove the first entry of the queue */
1610:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_CLRV_Msk;
 3692              	 .loc 2 1610 0
 3693 0042 7B68     	 ldr r3,[r7,#4]
 3694 0044 D3F80431 	 ldr r3,[r3,#260]
 3695 0048 43F48072 	 orr r2,r3,#256
 3696 004c 7B68     	 ldr r3,[r7,#4]
 3697 004e C3F80421 	 str r2,[r3,#260]
1611:../Libraries/XMCLib/src/xmc_vadc.c **** 
1612:../Libraries/XMCLib/src/xmc_vadc.c ****     length_after_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
 3698              	 .loc 2 1612 0
 3699 0052 7868     	 ldr r0,[r7,#4]
 3700 0054 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueGetLength
 3701 0058 7861     	 str r0,[r7,#20]
1613:../Libraries/XMCLib/src/xmc_vadc.c **** 
1614:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Loop until a reduction in queue length is assessed */
1615:../Libraries/XMCLib/src/xmc_vadc.c ****     while (length_after_abort == length_before_abort)
 3702              	 .loc 2 1615 0
 3703 005a 03E0     	 b .L145
 3704              	.L146:
1616:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1617:../Libraries/XMCLib/src/xmc_vadc.c ****       length_after_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
 3705              	 .loc 2 1617 0
 3706 005c 7868     	 ldr r0,[r7,#4]
 3707 005e FFF7FEFF 	 bl XMC_VADC_GROUP_QueueGetLength
 3708 0062 7861     	 str r0,[r7,#20]
 3709              	.L145:
1615:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 3710              	 .loc 2 1615 0
 3711 0064 7A69     	 ldr r2,[r7,#20]
 3712 0066 BB68     	 ldr r3,[r7,#8]
 3713 0068 9A42     	 cmp r2,r3
 3714 006a F7D0     	 beq .L146
 3715              	.L144:
1618:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1619:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1620:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the arbitration slot 0*/
1621:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN0_Pos);
 3716              	 .loc 2 1621 0
 3717 006c 7B68     	 ldr r3,[r7,#4]
 3718 006e D3F88420 	 ldr r2,[r3,#132]
 3719 0072 FB7B     	 ldrb r3,[r7,#15]
 3720 0074 1B06     	 lsls r3,r3,#24
 3721 0076 1A43     	 orrs r2,r2,r3
 3722 0078 7B68     	 ldr r3,[r7,#4]
 3723 007a C3F88420 	 str r2,[r3,#132]
1622:../Libraries/XMCLib/src/xmc_vadc.c **** 
1623:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1624:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (qctrl0 | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
1625:../Libraries/XMCLib/src/xmc_vadc.c ****                        (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_Msk );
 3724              	 .loc 2 1625 0
 3725 007e 3B69     	 ldr r3,[r7,#16]
 3726 0080 43F08023 	 orr r3,r3,#-2147450880
 3727 0084 43F40003 	 orr r3,r3,#8388608
1624:../Libraries/XMCLib/src/xmc_vadc.c ****                        (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_Msk );
 3728              	 .loc 2 1624 0
 3729 0088 7A68     	 ldr r2,[r7,#4]
 3730 008a C2F80031 	 str r3,[r2,#256]
1626:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3731              	 .loc 2 1626 0
 3732 008e 1837     	 adds r7,r7,#24
 3733              	 .cfi_def_cfa_offset 8
 3734 0090 BD46     	 mov sp,r7
 3735              	 .cfi_def_cfa_register 13
 3736              	 
 3737 0092 80BD     	 pop {r7,pc}
 3738              	.L148:
 3739              	 .align 2
 3740              	.L147:
 3741 0094 00808080 	 .word -2139062272
 3742              	 .cfi_endproc
 3743              	.LFE303:
 3745              	 .section .text.XMC_VADC_GROUP_QueueGetNextChannel,"ax",%progbits
 3746              	 .align 2
 3747              	 .global XMC_VADC_GROUP_QueueGetNextChannel
 3748              	 .thumb
 3749              	 .thumb_func
 3751              	XMC_VADC_GROUP_QueueGetNextChannel:
 3752              	.LFB304:
1627:../Libraries/XMCLib/src/xmc_vadc.c **** 
1628:../Libraries/XMCLib/src/xmc_vadc.c **** /* Get details of channel meant to be converted right after the ongoing conversion */
1629:../Libraries/XMCLib/src/xmc_vadc.c **** int32_t XMC_VADC_GROUP_QueueGetNextChannel(XMC_VADC_GROUP_t *const group_ptr)
1630:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3753              	 .loc 2 1630 0
 3754              	 .cfi_startproc
 3755              	 
 3756              	 
 3757              	 
 3758 0000 80B4     	 push {r7}
 3759              	 .cfi_def_cfa_offset 4
 3760              	 .cfi_offset 7,-4
 3761 0002 85B0     	 sub sp,sp,#20
 3762              	 .cfi_def_cfa_offset 24
 3763 0004 00AF     	 add r7,sp,#0
 3764              	 .cfi_def_cfa_register 7
 3765 0006 7860     	 str r0,[r7,#4]
1631:../Libraries/XMCLib/src/xmc_vadc.c ****   int32_t ch_num;
1632:../Libraries/XMCLib/src/xmc_vadc.c **** 
1633:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetNextChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
1634:../Libraries/XMCLib/src/xmc_vadc.c **** 
1635:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
1636:../Libraries/XMCLib/src/xmc_vadc.c ****    * Check if there is something in the backup stage. If not, read queue-0
1637:../Libraries/XMCLib/src/xmc_vadc.c ****    * entry.
1638:../Libraries/XMCLib/src/xmc_vadc.c ****    */
1639:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( (group_ptr->QBUR0) & (uint32_t)VADC_G_QBUR0_V_Msk)
 3766              	 .loc 2 1639 0
 3767 0008 7B68     	 ldr r3,[r7,#4]
 3768 000a D3F81031 	 ldr r3,[r3,#272]
 3769 000e 03F48073 	 and r3,r3,#256
 3770 0012 002B     	 cmp r3,#0
 3771 0014 06D0     	 beq .L150
1640:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1641:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->QBUR0 & (uint32_t)VADC_G_QBUR0_REQCHNR_Msk);
 3772              	 .loc 2 1641 0
 3773 0016 7B68     	 ldr r3,[r7,#4]
 3774 0018 D3F81031 	 ldr r3,[r3,#272]
 3775 001c 03F01F03 	 and r3,r3,#31
 3776 0020 FB60     	 str r3,[r7,#12]
 3777 0022 10E0     	 b .L151
 3778              	.L150:
1642:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1643:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( (group_ptr->Q0R0) & (uint32_t)VADC_G_Q0R0_V_Msk)
 3779              	 .loc 2 1643 0
 3780 0024 7B68     	 ldr r3,[r7,#4]
 3781 0026 D3F80C31 	 ldr r3,[r3,#268]
 3782 002a 03F48073 	 and r3,r3,#256
 3783 002e 002B     	 cmp r3,#0
 3784 0030 06D0     	 beq .L152
1644:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1645:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->Q0R0 & (uint32_t)VADC_G_Q0R0_REQCHNR_Msk);
 3785              	 .loc 2 1645 0
 3786 0032 7B68     	 ldr r3,[r7,#4]
 3787 0034 D3F80C31 	 ldr r3,[r3,#268]
 3788 0038 03F01F03 	 and r3,r3,#31
 3789 003c FB60     	 str r3,[r7,#12]
 3790 003e 02E0     	 b .L151
 3791              	.L152:
1646:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1647:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1648:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1649:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Nothing is pending */
1650:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = -1;
 3792              	 .loc 2 1650 0
 3793 0040 4FF0FF33 	 mov r3,#-1
 3794 0044 FB60     	 str r3,[r7,#12]
 3795              	.L151:
1651:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1652:../Libraries/XMCLib/src/xmc_vadc.c **** 
1653:../Libraries/XMCLib/src/xmc_vadc.c ****   return ch_num;
 3796              	 .loc 2 1653 0
 3797 0046 FB68     	 ldr r3,[r7,#12]
1654:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3798              	 .loc 2 1654 0
 3799 0048 1846     	 mov r0,r3
 3800 004a 1437     	 adds r7,r7,#20
 3801              	 .cfi_def_cfa_offset 4
 3802 004c BD46     	 mov sp,r7
 3803              	 .cfi_def_cfa_register 13
 3804              	 
 3805 004e 5DF8047B 	 ldr r7,[sp],#4
 3806              	 .cfi_restore 7
 3807              	 .cfi_def_cfa_offset 0
 3808 0052 7047     	 bx lr
 3809              	 .cfi_endproc
 3810              	.LFE304:
 3812              	 .section .text.XMC_VADC_GROUP_QueueGetInterruptedChannel,"ax",%progbits
 3813              	 .align 2
 3814              	 .global XMC_VADC_GROUP_QueueGetInterruptedChannel
 3815              	 .thumb
 3816              	 .thumb_func
 3818              	XMC_VADC_GROUP_QueueGetInterruptedChannel:
 3819              	.LFB305:
1655:../Libraries/XMCLib/src/xmc_vadc.c **** 
1656:../Libraries/XMCLib/src/xmc_vadc.c **** /* Get the channel number of the channel whose conversion had been interrupted */
1657:../Libraries/XMCLib/src/xmc_vadc.c **** int32_t XMC_VADC_GROUP_QueueGetInterruptedChannel(XMC_VADC_GROUP_t *const group_ptr)
1658:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3820              	 .loc 2 1658 0
 3821              	 .cfi_startproc
 3822              	 
 3823              	 
 3824              	 
 3825 0000 80B4     	 push {r7}
 3826              	 .cfi_def_cfa_offset 4
 3827              	 .cfi_offset 7,-4
 3828 0002 85B0     	 sub sp,sp,#20
 3829              	 .cfi_def_cfa_offset 24
 3830 0004 00AF     	 add r7,sp,#0
 3831              	 .cfi_def_cfa_register 7
 3832 0006 7860     	 str r0,[r7,#4]
1659:../Libraries/XMCLib/src/xmc_vadc.c ****   int32_t ch_num;
1660:../Libraries/XMCLib/src/xmc_vadc.c **** 
1661:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetInterruptedChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
1662:../Libraries/XMCLib/src/xmc_vadc.c **** 
1663:../Libraries/XMCLib/src/xmc_vadc.c ****   if ((group_ptr->QBUR0) & (uint32_t)VADC_G_QBUR0_V_Msk)
 3833              	 .loc 2 1663 0
 3834 0008 7B68     	 ldr r3,[r7,#4]
 3835 000a D3F81031 	 ldr r3,[r3,#272]
 3836 000e 03F48073 	 and r3,r3,#256
 3837 0012 002B     	 cmp r3,#0
 3838 0014 06D0     	 beq .L155
1664:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1665:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->QBUR0 & (uint32_t)VADC_G_QBUR0_REQCHNR_Msk);
 3839              	 .loc 2 1665 0
 3840 0016 7B68     	 ldr r3,[r7,#4]
 3841 0018 D3F81031 	 ldr r3,[r3,#272]
 3842 001c 03F01F03 	 and r3,r3,#31
 3843 0020 FB60     	 str r3,[r7,#12]
 3844 0022 02E0     	 b .L156
 3845              	.L155:
1666:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1667:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1668:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1669:../Libraries/XMCLib/src/xmc_vadc.c ****     /* No such channel */
1670:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = -1;
 3846              	 .loc 2 1670 0
 3847 0024 4FF0FF33 	 mov r3,#-1
 3848 0028 FB60     	 str r3,[r7,#12]
 3849              	.L156:
1671:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1672:../Libraries/XMCLib/src/xmc_vadc.c **** 
1673:../Libraries/XMCLib/src/xmc_vadc.c ****   return ch_num;
 3850              	 .loc 2 1673 0
 3851 002a FB68     	 ldr r3,[r7,#12]
1674:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3852              	 .loc 2 1674 0
 3853 002c 1846     	 mov r0,r3
 3854 002e 1437     	 adds r7,r7,#20
 3855              	 .cfi_def_cfa_offset 4
 3856 0030 BD46     	 mov sp,r7
 3857              	 .cfi_def_cfa_register 13
 3858              	 
 3859 0032 5DF8047B 	 ldr r7,[sp],#4
 3860              	 .cfi_restore 7
 3861              	 .cfi_def_cfa_offset 0
 3862 0036 7047     	 bx lr
 3863              	 .cfi_endproc
 3864              	.LFE305:
 3866              	 .section .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode,"ax",%progbits
 3867              	 .align 2
 3868              	 .global XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
 3869              	 .thumb
 3870              	 .thumb_func
 3872              	XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:
 3873              	.LFB306:
1675:../Libraries/XMCLib/src/xmc_vadc.c **** 
1676:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a Service Request line for the request source event */
1677:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_V
1678:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3874              	 .loc 2 1678 0
 3875              	 .cfi_startproc
 3876              	 
 3877              	 
 3878              	 
 3879 0000 80B4     	 push {r7}
 3880              	 .cfi_def_cfa_offset 4
 3881              	 .cfi_offset 7,-4
 3882 0002 85B0     	 sub sp,sp,#20
 3883              	 .cfi_def_cfa_offset 24
 3884 0004 00AF     	 add r7,sp,#0
 3885              	 .cfi_def_cfa_register 7
 3886 0006 7860     	 str r0,[r7,#4]
 3887 0008 0B46     	 mov r3,r1
 3888 000a FB70     	 strb r3,[r7,#3]
1679:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sevnp;
1680:../Libraries/XMCLib/src/xmc_vadc.c **** 
1681:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_
1682:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:Wrong Service Request", ((sr)  <= XMC
1683:../Libraries/XMCLib/src/xmc_vadc.c **** 
1684:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp = group_ptr->SEVNP;
 3889              	 .loc 2 1684 0
 3890 000c 7B68     	 ldr r3,[r7,#4]
 3891 000e D3F8C031 	 ldr r3,[r3,#448]
 3892 0012 FB60     	 str r3,[r7,#12]
1685:../Libraries/XMCLib/src/xmc_vadc.c **** 
1686:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp &= ~((uint32_t)VADC_G_SEVNP_SEV0NP_Msk);
 3893              	 .loc 2 1686 0
 3894 0014 FB68     	 ldr r3,[r7,#12]
 3895 0016 23F00F03 	 bic r3,r3,#15
 3896 001a FB60     	 str r3,[r7,#12]
1687:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV0NP_Pos);
 3897              	 .loc 2 1687 0
 3898 001c FB78     	 ldrb r3,[r7,#3]
 3899 001e FA68     	 ldr r2,[r7,#12]
 3900 0020 1343     	 orrs r3,r3,r2
 3901 0022 FB60     	 str r3,[r7,#12]
1688:../Libraries/XMCLib/src/xmc_vadc.c **** 
1689:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SEVNP = sevnp;
 3902              	 .loc 2 1689 0
 3903 0024 7B68     	 ldr r3,[r7,#4]
 3904 0026 FA68     	 ldr r2,[r7,#12]
 3905 0028 C3F8C021 	 str r2,[r3,#448]
1690:../Libraries/XMCLib/src/xmc_vadc.c **** 
1691:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3906              	 .loc 2 1691 0
 3907 002c 1437     	 adds r7,r7,#20
 3908              	 .cfi_def_cfa_offset 4
 3909 002e BD46     	 mov sp,r7
 3910              	 .cfi_def_cfa_register 13
 3911              	 
 3912 0030 5DF8047B 	 ldr r7,[sp],#4
 3913              	 .cfi_restore 7
 3914              	 .cfi_def_cfa_offset 0
 3915 0034 7047     	 bx lr
 3916              	 .cfi_endproc
 3917              	.LFE306:
 3919 0036 00BF     	 .section .text.XMC_VADC_GROUP_ChannelInit,"ax",%progbits
 3920              	 .align 2
 3921              	 .global XMC_VADC_GROUP_ChannelInit
 3922              	 .thumb
 3923              	 .thumb_func
 3925              	XMC_VADC_GROUP_ChannelInit:
 3926              	.LFB307:
1692:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1693:../Libraries/XMCLib/src/xmc_vadc.c **** 
1694:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1695:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize a channel unit */
1696:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelInit(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num,
1697:../Libraries/XMCLib/src/xmc_vadc.c ****                                 const XMC_VADC_CHANNEL_CONFIG_t *config)
1698:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3927              	 .loc 2 1698 0
 3928              	 .cfi_startproc
 3929              	 
 3930              	 
 3931              	 
 3932 0000 80B4     	 push {r7}
 3933              	 .cfi_def_cfa_offset 4
 3934              	 .cfi_offset 7,-4
 3935 0002 89B0     	 sub sp,sp,#36
 3936              	 .cfi_def_cfa_offset 40
 3937 0004 00AF     	 add r7,sp,#0
 3938              	 .cfi_def_cfa_register 7
 3939 0006 F860     	 str r0,[r7,#12]
 3940 0008 B960     	 str r1,[r7,#8]
 3941 000a 7A60     	 str r2,[r7,#4]
1699:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t prio;
1700:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ch_assign;
1701:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
1702:../Libraries/XMCLib/src/xmc_vadc.c **** 
1703:../Libraries/XMCLib/src/xmc_vadc.c **** 
1704:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1705:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelInit:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_CHANNELS_P
1706:../Libraries/XMCLib/src/xmc_vadc.c **** 
1707:../Libraries/XMCLib/src/xmc_vadc.c ****   prio  = (uint32_t)config->channel_priority;
 3942              	 .loc 2 1707 0
 3943 000c 7B68     	 ldr r3,[r7,#4]
 3944 000e 1B7B     	 ldrb r3,[r3,#12]
 3945 0010 BB61     	 str r3,[r7,#24]
1708:../Libraries/XMCLib/src/xmc_vadc.c **** 
1709:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Priority channel */
1710:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign  = group_ptr->CHASS;
 3946              	 .loc 2 1710 0
 3947 0012 FB68     	 ldr r3,[r7,#12]
 3948 0014 D3F88830 	 ldr r3,[r3,#136]
 3949 0018 7B61     	 str r3,[r7,#20]
1711:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign &= ~((uint32_t)((uint32_t)1 << ch_num));
 3950              	 .loc 2 1711 0
 3951 001a BB68     	 ldr r3,[r7,#8]
 3952 001c 0122     	 movs r2,#1
 3953 001e 02FA03F3 	 lsl r3,r2,r3
 3954 0022 DB43     	 mvns r3,r3
 3955 0024 7A69     	 ldr r2,[r7,#20]
 3956 0026 1340     	 ands r3,r3,r2
 3957 0028 7B61     	 str r3,[r7,#20]
1712:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign |= (uint32_t)(prio << ch_num);
 3958              	 .loc 2 1712 0
 3959 002a BB68     	 ldr r3,[r7,#8]
 3960 002c BA69     	 ldr r2,[r7,#24]
 3961 002e 02FA03F3 	 lsl r3,r2,r3
 3962 0032 7A69     	 ldr r2,[r7,#20]
 3963 0034 1343     	 orrs r3,r3,r2
 3964 0036 7B61     	 str r3,[r7,#20]
1713:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHASS = ch_assign;
 3965              	 .loc 2 1713 0
 3966 0038 FB68     	 ldr r3,[r7,#12]
 3967 003a 7A69     	 ldr r2,[r7,#20]
 3968 003c C3F88820 	 str r2,[r3,#136]
1714:../Libraries/XMCLib/src/xmc_vadc.c **** 
1715:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Alias channel */
1716:../Libraries/XMCLib/src/xmc_vadc.c ****   if (config->alias_channel >= (int32_t)0)
 3969              	 .loc 2 1716 0
 3970 0040 7B68     	 ldr r3,[r7,#4]
 3971 0042 5B7B     	 ldrb r3,[r3,#13]
 3972 0044 5BB2     	 sxtb r3,r3
 3973 0046 002B     	 cmp r3,#0
 3974 0048 29DB     	 blt .L160
1717:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1718:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)0;
 3975              	 .loc 2 1718 0
 3976 004a 0023     	 movs r3,#0
 3977 004c FB61     	 str r3,[r7,#28]
1719:../Libraries/XMCLib/src/xmc_vadc.c ****     if ((uint32_t)1 == ch_num)
 3978              	 .loc 2 1719 0
 3979 004e BB68     	 ldr r3,[r7,#8]
 3980 0050 012B     	 cmp r3,#1
 3981 0052 0AD1     	 bne .L161
1720:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1721:../Libraries/XMCLib/src/xmc_vadc.c ****       mask = VADC_G_ALIAS_ALIAS1_Pos;
 3982              	 .loc 2 1721 0
 3983 0054 0823     	 movs r3,#8
 3984 0056 FB61     	 str r3,[r7,#28]
1722:../Libraries/XMCLib/src/xmc_vadc.c ****       group_ptr->ALIAS &= ~(uint32_t)(VADC_G_ALIAS_ALIAS1_Msk);
 3985              	 .loc 2 1722 0
 3986 0058 FB68     	 ldr r3,[r7,#12]
 3987 005a D3F8B030 	 ldr r3,[r3,#176]
 3988 005e 23F4F852 	 bic r2,r3,#7936
 3989 0062 FB68     	 ldr r3,[r7,#12]
 3990 0064 C3F8B020 	 str r2,[r3,#176]
 3991 0068 0CE0     	 b .L162
 3992              	.L161:
1723:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1724:../Libraries/XMCLib/src/xmc_vadc.c ****     else if ((uint32_t)0 == ch_num)
 3993              	 .loc 2 1724 0
 3994 006a BB68     	 ldr r3,[r7,#8]
 3995 006c 002B     	 cmp r3,#0
 3996 006e 09D1     	 bne .L162
1725:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1726:../Libraries/XMCLib/src/xmc_vadc.c ****       mask = VADC_G_ALIAS_ALIAS0_Pos;
 3997              	 .loc 2 1726 0
 3998 0070 0023     	 movs r3,#0
 3999 0072 FB61     	 str r3,[r7,#28]
1727:../Libraries/XMCLib/src/xmc_vadc.c ****       group_ptr->ALIAS &= ~(uint32_t)(VADC_G_ALIAS_ALIAS0_Msk);
 4000              	 .loc 2 1727 0
 4001 0074 FB68     	 ldr r3,[r7,#12]
 4002 0076 D3F8B030 	 ldr r3,[r3,#176]
 4003 007a 23F01F02 	 bic r2,r3,#31
 4004 007e FB68     	 ldr r3,[r7,#12]
 4005 0080 C3F8B020 	 str r2,[r3,#176]
 4006              	.L162:
1728:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1729:../Libraries/XMCLib/src/xmc_vadc.c **** 
1730:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->ALIAS |= (uint32_t)(config->alias_channel << mask);
 4007              	 .loc 2 1730 0
 4008 0084 FB68     	 ldr r3,[r7,#12]
 4009 0086 D3F8B030 	 ldr r3,[r3,#176]
 4010 008a 7A68     	 ldr r2,[r7,#4]
 4011 008c 527B     	 ldrb r2,[r2,#13]
 4012 008e 51B2     	 sxtb r1,r2
 4013 0090 FA69     	 ldr r2,[r7,#28]
 4014 0092 01FA02F2 	 lsl r2,r1,r2
 4015 0096 1A43     	 orrs r2,r2,r3
 4016 0098 FB68     	 ldr r3,[r7,#12]
 4017 009a C3F8B020 	 str r2,[r3,#176]
 4018              	.L160:
1731:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1732:../Libraries/XMCLib/src/xmc_vadc.c **** 
1733:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFL |= config->bfl;
 4019              	 .loc 2 1733 0
 4020 009e FB68     	 ldr r3,[r7,#12]
 4021 00a0 D3F8C820 	 ldr r2,[r3,#200]
 4022 00a4 7B68     	 ldr r3,[r7,#4]
 4023 00a6 5B68     	 ldr r3,[r3,#4]
 4024 00a8 1A43     	 orrs r2,r2,r3
 4025 00aa FB68     	 ldr r3,[r7,#12]
 4026 00ac C3F8C820 	 str r2,[r3,#200]
1734:../Libraries/XMCLib/src/xmc_vadc.c **** 
1735:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
1736:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLC |= config->bflc;
 4027              	 .loc 2 1736 0
 4028 00b0 FB68     	 ldr r3,[r7,#12]
 4029 00b2 D3F8D020 	 ldr r2,[r3,#208]
 4030 00b6 7B68     	 ldr r3,[r7,#4]
 4031 00b8 9B68     	 ldr r3,[r3,#8]
 4032 00ba 1A43     	 orrs r2,r2,r3
 4033 00bc FB68     	 ldr r3,[r7,#12]
 4034 00be C3F8D020 	 str r2,[r3,#208]
1737:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1738:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the CHCTR register */
1739:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = config->chctr;
 4035              	 .loc 2 1739 0
 4036 00c2 7B68     	 ldr r3,[r7,#4]
 4037 00c4 1968     	 ldr r1,[r3]
 4038 00c6 FB68     	 ldr r3,[r7,#12]
 4039 00c8 BA68     	 ldr r2,[r7,#8]
 4040 00ca 8032     	 adds r2,r2,#128
 4041 00cc 43F82210 	 str r1,[r3,r2,lsl#2]
1740:../Libraries/XMCLib/src/xmc_vadc.c **** 
1741:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4042              	 .loc 2 1741 0
 4043 00d0 2437     	 adds r7,r7,#36
 4044              	 .cfi_def_cfa_offset 4
 4045 00d2 BD46     	 mov sp,r7
 4046              	 .cfi_def_cfa_register 13
 4047              	 
 4048 00d4 5DF8047B 	 ldr r7,[sp],#4
 4049              	 .cfi_restore 7
 4050              	 .cfi_def_cfa_offset 0
 4051 00d8 7047     	 bx lr
 4052              	 .cfi_endproc
 4053              	.LFE307:
 4055 00da 00BF     	 .section .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds,"ax",%progbits
 4056              	 .align 2
 4057              	 .global XMC_VADC_GROUP_ChannelIsResultOutOfBounds
 4058              	 .thumb
 4059              	 .thumb_func
 4061              	XMC_VADC_GROUP_ChannelIsResultOutOfBounds:
 4062              	.LFB308:
1742:../Libraries/XMCLib/src/xmc_vadc.c **** 
1743:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine whether input to a channel has violated boundary conditions */
1744:../Libraries/XMCLib/src/xmc_vadc.c **** bool XMC_VADC_GROUP_ChannelIsResultOutOfBounds(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch
1745:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4063              	 .loc 2 1745 0
 4064              	 .cfi_startproc
 4065              	 
 4066              	 
 4067              	 
 4068 0000 80B4     	 push {r7}
 4069              	 .cfi_def_cfa_offset 4
 4070              	 .cfi_offset 7,-4
 4071 0002 87B0     	 sub sp,sp,#28
 4072              	 .cfi_def_cfa_offset 32
 4073 0004 00AF     	 add r7,sp,#0
 4074              	 .cfi_def_cfa_register 7
 4075 0006 7860     	 str r0,[r7,#4]
 4076 0008 3960     	 str r1,[r7]
1746:../Libraries/XMCLib/src/xmc_vadc.c ****   bool retval;
1747:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    chctr;
1748:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    ceflag;
1749:../Libraries/XMCLib/src/xmc_vadc.c **** 
1750:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelIsResultOutOfBounds:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
1751:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelIsResultOutOfBounds:Wrong Channel Number",
1752:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1753:../Libraries/XMCLib/src/xmc_vadc.c **** 
1754:../Libraries/XMCLib/src/xmc_vadc.c ****   retval = (bool)false;
 4077              	 .loc 2 1754 0
 4078 000a 0023     	 movs r3,#0
 4079 000c FB75     	 strb r3,[r7,#23]
1755:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
1756:../Libraries/XMCLib/src/xmc_vadc.c ****     Check if the Channel event is configured to be generated in the event of
1757:../Libraries/XMCLib/src/xmc_vadc.c ****     boundary violation and if affirmative, check if the channel event is set.
1758:../Libraries/XMCLib/src/xmc_vadc.c ****   */
1759:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Extract CHEVMODE for requested channel */
1760:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = group_ptr->CHCTR[ch_num];
 4080              	 .loc 2 1760 0
 4081 000e 7B68     	 ldr r3,[r7,#4]
 4082 0010 3A68     	 ldr r2,[r7]
 4083 0012 8032     	 adds r2,r2,#128
 4084 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4085 0018 3B61     	 str r3,[r7,#16]
1761:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = (uint32_t)(chctr >> (uint32_t)VADC_G_CHCTR_CHEVMODE_Pos) & (uint32_t)0x3;
 4086              	 .loc 2 1761 0
 4087 001a 3B69     	 ldr r3,[r7,#16]
 4088 001c 1B0A     	 lsrs r3,r3,#8
 4089 001e 03F00303 	 and r3,r3,#3
 4090 0022 3B61     	 str r3,[r7,#16]
1762:../Libraries/XMCLib/src/xmc_vadc.c **** 
1763:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Extract CEFLAG for the requested channel */
1764:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag = group_ptr->CEFLAG;
 4091              	 .loc 2 1764 0
 4092 0024 7B68     	 ldr r3,[r7,#4]
 4093 0026 D3F88031 	 ldr r3,[r3,#384]
 4094 002a FB60     	 str r3,[r7,#12]
1765:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag = ceflag & ((uint32_t)((uint32_t)1 << ch_num) );
 4095              	 .loc 2 1765 0
 4096 002c 3B68     	 ldr r3,[r7]
 4097 002e 0122     	 movs r2,#1
 4098 0030 02FA03F3 	 lsl r3,r2,r3
 4099 0034 FA68     	 ldr r2,[r7,#12]
 4100 0036 1340     	 ands r3,r3,r2
 4101 0038 FB60     	 str r3,[r7,#12]
1766:../Libraries/XMCLib/src/xmc_vadc.c **** 
1767:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Check what was the channel event generation criteria */
1768:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( (( (uint32_t)XMC_VADC_CHANNEL_EVGEN_INBOUND == chctr) \
 4102              	 .loc 2 1768 0
 4103 003a 3B69     	 ldr r3,[r7,#16]
 4104 003c 012B     	 cmp r3,#1
 4105 003e 02D0     	 beq .L164
1769:../Libraries/XMCLib/src/xmc_vadc.c ****         || ((uint32_t) XMC_VADC_CHANNEL_EVGEN_OUTBOUND == chctr)) && (ceflag) )
 4106              	 .loc 2 1769 0
 4107 0040 3B69     	 ldr r3,[r7,#16]
 4108 0042 022B     	 cmp r3,#2
 4109 0044 04D1     	 bne .L165
 4110              	.L164:
 4111              	 .loc 2 1769 0 is_stmt 0 discriminator 1
 4112 0046 FB68     	 ldr r3,[r7,#12]
 4113 0048 002B     	 cmp r3,#0
 4114 004a 01D0     	 beq .L165
1770:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1771:../Libraries/XMCLib/src/xmc_vadc.c ****     retval = (bool)true;
 4115              	 .loc 2 1771 0 is_stmt 1
 4116 004c 0123     	 movs r3,#1
 4117 004e FB75     	 strb r3,[r7,#23]
 4118              	.L165:
1772:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1773:../Libraries/XMCLib/src/xmc_vadc.c **** 
1774:../Libraries/XMCLib/src/xmc_vadc.c ****   return retval;
 4119              	 .loc 2 1774 0
 4120 0050 FB7D     	 ldrb r3,[r7,#23]
1775:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4121              	 .loc 2 1775 0
 4122 0052 1846     	 mov r0,r3
 4123 0054 1C37     	 adds r7,r7,#28
 4124              	 .cfi_def_cfa_offset 4
 4125 0056 BD46     	 mov sp,r7
 4126              	 .cfi_def_cfa_register 13
 4127              	 
 4128 0058 5DF8047B 	 ldr r7,[sp],#4
 4129              	 .cfi_restore 7
 4130              	 .cfi_def_cfa_offset 0
 4131 005c 7047     	 bx lr
 4132              	 .cfi_endproc
 4133              	.LFE308:
 4135 005e 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetInputReference,"ax",%progbits
 4136              	 .align 2
 4137              	 .global XMC_VADC_GROUP_ChannelSetInputReference
 4138              	 .thumb
 4139              	 .thumb_func
 4141              	XMC_VADC_GROUP_ChannelSetInputReference:
 4142              	.LFB309:
1776:../Libraries/XMCLib/src/xmc_vadc.c **** 
1777:../Libraries/XMCLib/src/xmc_vadc.c **** /* Set a reference voltage for conversion */
1778:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetInputReference(XMC_VADC_GROUP_t *const group_ptr,
1779:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint32_t ch_num,
1780:../Libraries/XMCLib/src/xmc_vadc.c ****     const XMC_VADC_CHANNEL_REF_t ref)
1781:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4143              	 .loc 2 1781 0
 4144              	 .cfi_startproc
 4145              	 
 4146              	 
 4147              	 
 4148 0000 80B4     	 push {r7}
 4149              	 .cfi_def_cfa_offset 4
 4150              	 .cfi_offset 7,-4
 4151 0002 87B0     	 sub sp,sp,#28
 4152              	 .cfi_def_cfa_offset 32
 4153 0004 00AF     	 add r7,sp,#0
 4154              	 .cfi_def_cfa_register 7
 4155 0006 F860     	 str r0,[r7,#12]
 4156 0008 B960     	 str r1,[r7,#8]
 4157 000a 1346     	 mov r3,r2
 4158 000c FB71     	 strb r3,[r7,#7]
1782:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1783:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1784:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Channel Number", ((ch_num) < XMC_VADC_N
1785:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Voltage Reference", ((ref) <= XMC_VADC_
1786:../Libraries/XMCLib/src/xmc_vadc.c **** 
1787:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4159              	 .loc 2 1787 0
 4160 000e FB68     	 ldr r3,[r7,#12]
 4161 0010 BA68     	 ldr r2,[r7,#8]
 4162 0012 8032     	 adds r2,r2,#128
 4163 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4164 0018 7B61     	 str r3,[r7,#20]
1788:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_REFSEL_Msk);
 4165              	 .loc 2 1788 0
 4166 001a 7B69     	 ldr r3,[r7,#20]
 4167 001c 23F40063 	 bic r3,r3,#2048
 4168 0020 7B61     	 str r3,[r7,#20]
1789:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)ref <<  VADC_G_CHCTR_REFSEL_Pos);
 4169              	 .loc 2 1789 0
 4170 0022 FB79     	 ldrb r3,[r7,#7]
 4171 0024 DB02     	 lsls r3,r3,#11
 4172 0026 7A69     	 ldr r2,[r7,#20]
 4173 0028 1343     	 orrs r3,r3,r2
 4174 002a 7B61     	 str r3,[r7,#20]
1790:../Libraries/XMCLib/src/xmc_vadc.c **** 
1791:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4175              	 .loc 2 1791 0
 4176 002c FB68     	 ldr r3,[r7,#12]
 4177 002e BA68     	 ldr r2,[r7,#8]
 4178 0030 8032     	 adds r2,r2,#128
 4179 0032 7969     	 ldr r1,[r7,#20]
 4180 0034 43F82210 	 str r1,[r3,r2,lsl#2]
1792:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4181              	 .loc 2 1792 0
 4182 0038 1C37     	 adds r7,r7,#28
 4183              	 .cfi_def_cfa_offset 4
 4184 003a BD46     	 mov sp,r7
 4185              	 .cfi_def_cfa_register 13
 4186              	 
 4187 003c 5DF8047B 	 ldr r7,[sp],#4
 4188              	 .cfi_restore 7
 4189              	 .cfi_def_cfa_offset 0
 4190 0040 7047     	 bx lr
 4191              	 .cfi_endproc
 4192              	.LFE309:
 4194 0042 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetResultRegister,"ax",%progbits
 4195              	 .align 2
 4196              	 .global XMC_VADC_GROUP_ChannelSetResultRegister
 4197              	 .thumb
 4198              	 .thumb_func
 4200              	XMC_VADC_GROUP_ChannelSetResultRegister:
 4201              	.LFB310:
1793:../Libraries/XMCLib/src/xmc_vadc.c **** 
1794:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the available 16 registers for storing the channel result */
1795:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetResultRegister(XMC_VADC_GROUP_t *const group_ptr,
1796:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint32_t ch_num,
1797:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint32_t result_reg_num)
1798:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4202              	 .loc 2 1798 0
 4203              	 .cfi_startproc
 4204              	 
 4205              	 
 4206              	 
 4207 0000 80B4     	 push {r7}
 4208              	 .cfi_def_cfa_offset 4
 4209              	 .cfi_offset 7,-4
 4210 0002 87B0     	 sub sp,sp,#28
 4211              	 .cfi_def_cfa_offset 32
 4212 0004 00AF     	 add r7,sp,#0
 4213              	 .cfi_def_cfa_register 7
 4214 0006 F860     	 str r0,[r7,#12]
 4215 0008 B960     	 str r1,[r7,#8]
 4216 000a 7A60     	 str r2,[r7,#4]
1799:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1800:../Libraries/XMCLib/src/xmc_vadc.c **** 
1801:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1802:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Channel Number",
1803:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1804:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Result Register",
1805:../Libraries/XMCLib/src/xmc_vadc.c ****              ((result_reg_num) < XMC_VADC_NUM_RESULT_REGISTERS))
1806:../Libraries/XMCLib/src/xmc_vadc.c **** 
1807:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4217              	 .loc 2 1807 0
 4218 000c FB68     	 ldr r3,[r7,#12]
 4219 000e BA68     	 ldr r2,[r7,#8]
 4220 0010 8032     	 adds r2,r2,#128
 4221 0012 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4222 0016 7B61     	 str r3,[r7,#20]
1808:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_RESREG_Msk);
 4223              	 .loc 2 1808 0
 4224 0018 7B69     	 ldr r3,[r7,#20]
 4225 001a 23F47023 	 bic r3,r3,#983040
 4226 001e 7B61     	 str r3,[r7,#20]
1809:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)(result_reg_num <<  VADC_G_CHCTR_RESREG_Pos);
 4227              	 .loc 2 1809 0
 4228 0020 7B68     	 ldr r3,[r7,#4]
 4229 0022 1B04     	 lsls r3,r3,#16
 4230 0024 7A69     	 ldr r2,[r7,#20]
 4231 0026 1343     	 orrs r3,r3,r2
 4232 0028 7B61     	 str r3,[r7,#20]
1810:../Libraries/XMCLib/src/xmc_vadc.c **** 
1811:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4233              	 .loc 2 1811 0
 4234 002a FB68     	 ldr r3,[r7,#12]
 4235 002c BA68     	 ldr r2,[r7,#8]
 4236 002e 8032     	 adds r2,r2,#128
 4237 0030 7969     	 ldr r1,[r7,#20]
 4238 0032 43F82210 	 str r1,[r3,r2,lsl#2]
1812:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4239              	 .loc 2 1812 0
 4240 0036 1C37     	 adds r7,r7,#28
 4241              	 .cfi_def_cfa_offset 4
 4242 0038 BD46     	 mov sp,r7
 4243              	 .cfi_def_cfa_register 13
 4244              	 
 4245 003a 5DF8047B 	 ldr r7,[sp],#4
 4246              	 .cfi_restore 7
 4247              	 .cfi_def_cfa_offset 0
 4248 003e 7047     	 bx lr
 4249              	 .cfi_endproc
 4250              	.LFE310:
 4252              	 .section .text.XMC_VADC_GROUP_ChannelSetIclass,"ax",%progbits
 4253              	 .align 2
 4254              	 .global XMC_VADC_GROUP_ChannelSetIclass
 4255              	 .thumb
 4256              	 .thumb_func
 4258              	XMC_VADC_GROUP_ChannelSetIclass:
 4259              	.LFB311:
1813:../Libraries/XMCLib/src/xmc_vadc.c **** 
1814:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the available 4 class conversion */
1815:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetIclass(XMC_VADC_GROUP_t *const group_ptr,
1816:../Libraries/XMCLib/src/xmc_vadc.c ****                                      const uint32_t ch_num,
1817:../Libraries/XMCLib/src/xmc_vadc.c ****                                      const XMC_VADC_CHANNEL_CONV_t conversion_class)
1818:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4260              	 .loc 2 1818 0
 4261              	 .cfi_startproc
 4262              	 
 4263              	 
 4264              	 
 4265 0000 80B4     	 push {r7}
 4266              	 .cfi_def_cfa_offset 4
 4267              	 .cfi_offset 7,-4
 4268 0002 87B0     	 sub sp,sp,#28
 4269              	 .cfi_def_cfa_offset 32
 4270 0004 00AF     	 add r7,sp,#0
 4271              	 .cfi_def_cfa_register 7
 4272 0006 F860     	 str r0,[r7,#12]
 4273 0008 B960     	 str r1,[r7,#8]
 4274 000a 1346     	 mov r3,r2
 4275 000c FB71     	 strb r3,[r7,#7]
1819:../Libraries/XMCLib/src/xmc_vadc.c **** 
1820:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1821:../Libraries/XMCLib/src/xmc_vadc.c **** 
1822:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetIclass:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
1823:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetIclass:Wrong Channel Number",
1824:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1825:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetIclass:Wrong input class ",
1826:../Libraries/XMCLib/src/xmc_vadc.c ****              (XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1 >= conversion_class))
1827:../Libraries/XMCLib/src/xmc_vadc.c **** 
1828:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4276              	 .loc 2 1828 0
 4277 000e FB68     	 ldr r3,[r7,#12]
 4278 0010 BA68     	 ldr r2,[r7,#8]
 4279 0012 8032     	 adds r2,r2,#128
 4280 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4281 0018 7B61     	 str r3,[r7,#20]
1829:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_ICLSEL_Msk);
 4282              	 .loc 2 1829 0
 4283 001a 7B69     	 ldr r3,[r7,#20]
 4284 001c 23F00303 	 bic r3,r3,#3
 4285 0020 7B61     	 str r3,[r7,#20]
1830:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)conversion_class <<  (uint32_t)VADC_G_CHCTR_ICLSEL_Pos);
 4286              	 .loc 2 1830 0
 4287 0022 FB79     	 ldrb r3,[r7,#7]
 4288 0024 7A69     	 ldr r2,[r7,#20]
 4289 0026 1343     	 orrs r3,r3,r2
 4290 0028 7B61     	 str r3,[r7,#20]
1831:../Libraries/XMCLib/src/xmc_vadc.c **** 
1832:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4291              	 .loc 2 1832 0
 4292 002a FB68     	 ldr r3,[r7,#12]
 4293 002c BA68     	 ldr r2,[r7,#8]
 4294 002e 8032     	 adds r2,r2,#128
 4295 0030 7969     	 ldr r1,[r7,#20]
 4296 0032 43F82210 	 str r1,[r3,r2,lsl#2]
1833:../Libraries/XMCLib/src/xmc_vadc.c **** 
1834:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4297              	 .loc 2 1834 0
 4298 0036 1C37     	 adds r7,r7,#28
 4299              	 .cfi_def_cfa_offset 4
 4300 0038 BD46     	 mov sp,r7
 4301              	 .cfi_def_cfa_register 13
 4302              	 
 4303 003a 5DF8047B 	 ldr r7,[sp],#4
 4304              	 .cfi_restore 7
 4305              	 .cfi_def_cfa_offset 0
 4306 003e 7047     	 bx lr
 4307              	 .cfi_endproc
 4308              	.LFE311:
 4310              	 .section .text.XMC_VADC_GROUP_ChannelGetResultRegister,"ax",%progbits
 4311              	 .align 2
 4312              	 .global XMC_VADC_GROUP_ChannelGetResultRegister
 4313              	 .thumb
 4314              	 .thumb_func
 4316              	XMC_VADC_GROUP_ChannelGetResultRegister:
 4317              	.LFB312:
1835:../Libraries/XMCLib/src/xmc_vadc.c **** 
1836:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result register bound with specified channel */
1837:../Libraries/XMCLib/src/xmc_vadc.c **** uint8_t XMC_VADC_GROUP_ChannelGetResultRegister(XMC_VADC_GROUP_t *const group_ptr, const uint32_t c
1838:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4318              	 .loc 2 1838 0
 4319              	 .cfi_startproc
 4320              	 
 4321              	 
 4322              	 
 4323 0000 80B4     	 push {r7}
 4324              	 .cfi_def_cfa_offset 4
 4325              	 .cfi_offset 7,-4
 4326 0002 85B0     	 sub sp,sp,#20
 4327              	 .cfi_def_cfa_offset 24
 4328 0004 00AF     	 add r7,sp,#0
 4329              	 .cfi_def_cfa_register 7
 4330 0006 7860     	 str r0,[r7,#4]
 4331 0008 3960     	 str r1,[r7]
1839:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t resreg;
1840:../Libraries/XMCLib/src/xmc_vadc.c **** 
1841:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetResultRegister:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1842:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetResultRegister:Wrong Channel Number",
1843:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1844:../Libraries/XMCLib/src/xmc_vadc.c **** 
1845:../Libraries/XMCLib/src/xmc_vadc.c ****   resreg = (uint8_t)((group_ptr->CHCTR[ch_num] & (uint32_t)VADC_G_CHCTR_RESREG_Msk) >> VADC_G_CHCTR
 4332              	 .loc 2 1845 0
 4333 000a 7B68     	 ldr r3,[r7,#4]
 4334 000c 3A68     	 ldr r2,[r7]
 4335 000e 8032     	 adds r2,r2,#128
 4336 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4337 0014 03F47023 	 and r3,r3,#983040
 4338 0018 1B0C     	 lsrs r3,r3,#16
 4339 001a FB73     	 strb r3,[r7,#15]
1846:../Libraries/XMCLib/src/xmc_vadc.c **** 
1847:../Libraries/XMCLib/src/xmc_vadc.c ****   return resreg;
 4340              	 .loc 2 1847 0
 4341 001c FB7B     	 ldrb r3,[r7,#15]
1848:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4342              	 .loc 2 1848 0
 4343 001e 1846     	 mov r0,r3
 4344 0020 1437     	 adds r7,r7,#20
 4345              	 .cfi_def_cfa_offset 4
 4346 0022 BD46     	 mov sp,r7
 4347              	 .cfi_def_cfa_register 13
 4348              	 
 4349 0024 5DF8047B 	 ldr r7,[sp],#4
 4350              	 .cfi_restore 7
 4351              	 .cfi_def_cfa_offset 0
 4352 0028 7047     	 bx lr
 4353              	 .cfi_endproc
 4354              	.LFE312:
 4356 002a 00BF     	 .section .text.XMC_VADC_GROUP_ChannelTriggerEvent,"ax",%progbits
 4357              	 .align 2
 4358              	 .global XMC_VADC_GROUP_ChannelTriggerEvent
 4359              	 .thumb
 4360              	 .thumb_func
 4362              	XMC_VADC_GROUP_ChannelTriggerEvent:
 4363              	.LFB313:
1849:../Libraries/XMCLib/src/xmc_vadc.c **** 
1850:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to manually assert channel event */
1851:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelTriggerEvent(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num)
1852:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4364              	 .loc 2 1852 0
 4365              	 .cfi_startproc
 4366              	 
 4367              	 
 4368              	 
 4369 0000 80B4     	 push {r7}
 4370              	 .cfi_def_cfa_offset 4
 4371              	 .cfi_offset 7,-4
 4372 0002 85B0     	 sub sp,sp,#20
 4373              	 .cfi_def_cfa_offset 24
 4374 0004 00AF     	 add r7,sp,#0
 4375              	 .cfi_def_cfa_register 7
 4376 0006 7860     	 str r0,[r7,#4]
 4377 0008 3960     	 str r1,[r7]
1853:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ceflag;
1854:../Libraries/XMCLib/src/xmc_vadc.c **** 
1855:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
1856:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEvent:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_CH
1857:../Libraries/XMCLib/src/xmc_vadc.c **** 
1858:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag  = group_ptr->CEFLAG;
 4378              	 .loc 2 1858 0
 4379 000a 7B68     	 ldr r3,[r7,#4]
 4380 000c D3F88031 	 ldr r3,[r3,#384]
 4381 0010 FB60     	 str r3,[r7,#12]
1859:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag |= (uint32_t)((uint32_t)1 << ch_num);
 4382              	 .loc 2 1859 0
 4383 0012 3B68     	 ldr r3,[r7]
 4384 0014 0122     	 movs r2,#1
 4385 0016 02FA03F3 	 lsl r3,r2,r3
 4386 001a FA68     	 ldr r2,[r7,#12]
 4387 001c 1343     	 orrs r3,r3,r2
 4388 001e FB60     	 str r3,[r7,#12]
1860:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CEFLAG = ceflag;
 4389              	 .loc 2 1860 0
 4390 0020 7B68     	 ldr r3,[r7,#4]
 4391 0022 FA68     	 ldr r2,[r7,#12]
 4392 0024 C3F88021 	 str r2,[r3,#384]
1861:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4393              	 .loc 2 1861 0
 4394 0028 1437     	 adds r7,r7,#20
 4395              	 .cfi_def_cfa_offset 4
 4396 002a BD46     	 mov sp,r7
 4397              	 .cfi_def_cfa_register 13
 4398              	 
 4399 002c 5DF8047B 	 ldr r7,[sp],#4
 4400              	 .cfi_restore 7
 4401              	 .cfi_def_cfa_offset 0
 4402 0030 7047     	 bx lr
 4403              	 .cfi_endproc
 4404              	.LFE313:
 4406 0032 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode,"ax",%progbits
 4407              	 .align 2
 4408              	 .global XMC_VADC_GROUP_ChannelSetEventInterruptNode
 4409              	 .thumb
 4410              	 .thumb_func
 4412              	XMC_VADC_GROUP_ChannelSetEventInterruptNode:
 4413              	.LFB314:
1862:../Libraries/XMCLib/src/xmc_vadc.c **** 
1863:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to bind channel event with a service request (NVIC Node) */
1864:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
1865:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint32_t ch_num,
1866:../Libraries/XMCLib/src/xmc_vadc.c ****     const XMC_VADC_SR_t sr)
1867:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4414              	 .loc 2 1867 0
 4415              	 .cfi_startproc
 4416              	 
 4417              	 
 4418              	 
 4419 0000 80B4     	 push {r7}
 4420              	 .cfi_def_cfa_offset 4
 4421              	 .cfi_offset 7,-4
 4422 0002 87B0     	 sub sp,sp,#28
 4423              	 .cfi_def_cfa_offset 32
 4424 0004 00AF     	 add r7,sp,#0
 4425              	 .cfi_def_cfa_register 7
 4426 0006 F860     	 str r0,[r7,#12]
 4427 0008 B960     	 str r1,[r7,#8]
 4428 000a 1346     	 mov r3,r2
 4429 000c FB71     	 strb r3,[r7,#7]
1868:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t route_mask;
1869:../Libraries/XMCLib/src/xmc_vadc.c **** 
1870:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GROU
1871:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Channel Number",
1872:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1873:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Service Request", ((sr)  <= XMC_VAD
1874:../Libraries/XMCLib/src/xmc_vadc.c **** 
1875:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask  = group_ptr->CEVNP0;
 4430              	 .loc 2 1875 0
 4431 000e FB68     	 ldr r3,[r7,#12]
 4432 0010 D3F8A031 	 ldr r3,[r3,#416]
 4433 0014 7B61     	 str r3,[r7,#20]
1876:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask &= ~((uint32_t)15 << (ch_num * (uint32_t)4));
 4434              	 .loc 2 1876 0
 4435 0016 BB68     	 ldr r3,[r7,#8]
 4436 0018 9B00     	 lsls r3,r3,#2
 4437 001a 1A46     	 mov r2,r3
 4438 001c 0F23     	 movs r3,#15
 4439 001e 9340     	 lsls r3,r3,r2
 4440 0020 DB43     	 mvns r3,r3
 4441 0022 7A69     	 ldr r2,[r7,#20]
 4442 0024 1340     	 ands r3,r3,r2
 4443 0026 7B61     	 str r3,[r7,#20]
1877:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask |= (uint32_t)( (uint32_t)sr << (ch_num * (uint32_t)4));
 4444              	 .loc 2 1877 0
 4445 0028 FB79     	 ldrb r3,[r7,#7]
 4446 002a BA68     	 ldr r2,[r7,#8]
 4447 002c 9200     	 lsls r2,r2,#2
 4448 002e 9340     	 lsls r3,r3,r2
 4449 0030 7A69     	 ldr r2,[r7,#20]
 4450 0032 1343     	 orrs r3,r3,r2
 4451 0034 7B61     	 str r3,[r7,#20]
1878:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CEVNP0 = route_mask;
 4452              	 .loc 2 1878 0
 4453 0036 FB68     	 ldr r3,[r7,#12]
 4454 0038 7A69     	 ldr r2,[r7,#20]
 4455 003a C3F8A021 	 str r2,[r3,#416]
1879:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4456              	 .loc 2 1879 0
 4457 003e 1C37     	 adds r7,r7,#28
 4458              	 .cfi_def_cfa_offset 4
 4459 0040 BD46     	 mov sp,r7
 4460              	 .cfi_def_cfa_register 13
 4461              	 
 4462 0042 5DF8047B 	 ldr r7,[sp],#4
 4463              	 .cfi_restore 7
 4464              	 .cfi_def_cfa_offset 0
 4465 0046 7047     	 bx lr
 4466              	 .cfi_endproc
 4467              	.LFE314:
 4469              	 .section .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria,"ax",%progbits
 4470              	 .align 2
 4471              	 .global XMC_VADC_GROUP_ChannelTriggerEventGenCriteria
 4472              	 .thumb
 4473              	 .thumb_func
 4475              	XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:
 4476              	.LFB315:
1880:../Libraries/XMCLib/src/xmc_vadc.c **** 
1881:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to configure conditions for generation of channel event */
1882:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelTriggerEventGenCriteria( XMC_VADC_GROUP_t *const group_ptr,
1883:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint32_t ch_num,
1884:../Libraries/XMCLib/src/xmc_vadc.c ****     const XMC_VADC_CHANNEL_EVGEN_t criteria)
1885:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4477              	 .loc 2 1885 0
 4478              	 .cfi_startproc
 4479              	 
 4480              	 
 4481              	 
 4482 0000 80B4     	 push {r7}
 4483              	 .cfi_def_cfa_offset 4
 4484              	 .cfi_offset 7,-4
 4485 0002 87B0     	 sub sp,sp,#28
 4486              	 .cfi_def_cfa_offset 32
 4487 0004 00AF     	 add r7,sp,#0
 4488              	 .cfi_def_cfa_register 7
 4489 0006 F860     	 str r0,[r7,#12]
 4490 0008 B960     	 str r1,[r7,#8]
 4491 000a 1346     	 mov r3,r2
 4492 000c FB71     	 strb r3,[r7,#7]
1886:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1887:../Libraries/XMCLib/src/xmc_vadc.c **** 
1888:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Group Pointer", XMC_VADC_CHECK_GR
1889:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Channel Number",
1890:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1891:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Event Generation Criteria",
1892:../Libraries/XMCLib/src/xmc_vadc.c ****              ((criteria) <= XMC_VADC_CHANNEL_EVGEN_ALWAYS))
1893:../Libraries/XMCLib/src/xmc_vadc.c **** 
1894:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = group_ptr->CHCTR[ch_num];
 4493              	 .loc 2 1894 0
 4494 000e FB68     	 ldr r3,[r7,#12]
 4495 0010 BA68     	 ldr r2,[r7,#8]
 4496 0012 8032     	 adds r2,r2,#128
 4497 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4498 0018 7B61     	 str r3,[r7,#20]
1895:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_CHEVMODE_Msk);
 4499              	 .loc 2 1895 0
 4500 001a 7B69     	 ldr r3,[r7,#20]
 4501 001c 23F44073 	 bic r3,r3,#768
 4502 0020 7B61     	 str r3,[r7,#20]
1896:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)criteria << VADC_G_CHCTR_CHEVMODE_Pos);
 4503              	 .loc 2 1896 0
 4504 0022 FB79     	 ldrb r3,[r7,#7]
 4505 0024 1B02     	 lsls r3,r3,#8
 4506 0026 7A69     	 ldr r2,[r7,#20]
 4507 0028 1343     	 orrs r3,r3,r2
 4508 002a 7B61     	 str r3,[r7,#20]
1897:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4509              	 .loc 2 1897 0
 4510 002c FB68     	 ldr r3,[r7,#12]
 4511 002e BA68     	 ldr r2,[r7,#8]
 4512 0030 8032     	 adds r2,r2,#128
 4513 0032 7969     	 ldr r1,[r7,#20]
 4514 0034 43F82210 	 str r1,[r3,r2,lsl#2]
1898:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4515              	 .loc 2 1898 0
 4516 0038 1C37     	 adds r7,r7,#28
 4517              	 .cfi_def_cfa_offset 4
 4518 003a BD46     	 mov sp,r7
 4519              	 .cfi_def_cfa_register 13
 4520              	 
 4521 003c 5DF8047B 	 ldr r7,[sp],#4
 4522              	 .cfi_restore 7
 4523              	 .cfi_def_cfa_offset 0
 4524 0040 7047     	 bx lr
 4525              	 .cfi_endproc
 4526              	.LFE315:
 4528 0042 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetBoundarySelection,"ax",%progbits
 4529              	 .align 2
 4530              	 .global XMC_VADC_GROUP_ChannelSetBoundarySelection
 4531              	 .thumb
 4532              	 .thumb_func
 4534              	XMC_VADC_GROUP_ChannelSetBoundarySelection:
 4535              	.LFB316:
1899:../Libraries/XMCLib/src/xmc_vadc.c **** 
1900:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to configure the boundary selection */
1901:../Libraries/XMCLib/src/xmc_vadc.c **** void  XMC_VADC_GROUP_ChannelSetBoundarySelection(XMC_VADC_GROUP_t *const group_ptr,
1902:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint32_t ch_num,
1903:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_BOUNDARY_SELECT_t boundary_sel,
1904:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_CHANNEL_BOUNDARY_t selection)
1905:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4536              	 .loc 2 1905 0
 4537              	 .cfi_startproc
 4538              	 
 4539              	 
 4540              	 
 4541 0000 80B4     	 push {r7}
 4542              	 .cfi_def_cfa_offset 4
 4543              	 .cfi_offset 7,-4
 4544 0002 85B0     	 sub sp,sp,#20
 4545              	 .cfi_def_cfa_offset 24
 4546 0004 00AF     	 add r7,sp,#0
 4547              	 .cfi_def_cfa_register 7
 4548 0006 F860     	 str r0,[r7,#12]
 4549 0008 B960     	 str r1,[r7,#8]
 4550 000a 1146     	 mov r1,r2
 4551 000c 1A46     	 mov r2,r3
 4552 000e 0B46     	 mov r3,r1
 4553 0010 FB71     	 strb r3,[r7,#7]
 4554 0012 1346     	 mov r3,r2
 4555 0014 BB71     	 strb r3,[r7,#6]
1906:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetBoundarySelection:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
1907:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetBoundarySelection:Wrong Channel Number",
1908:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1909:../Libraries/XMCLib/src/xmc_vadc.c **** 
1910:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] &= ~((uint32_t)VADC_G_CHCTR_BNDSELL_Msk << boundary_sel);
 4556              	 .loc 2 1910 0
 4557 0016 FB68     	 ldr r3,[r7,#12]
 4558 0018 BA68     	 ldr r2,[r7,#8]
 4559 001a 8032     	 adds r2,r2,#128
 4560 001c 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4561 0020 FB79     	 ldrb r3,[r7,#7]
 4562 0022 3021     	 movs r1,#48
 4563 0024 01FA03F3 	 lsl r3,r1,r3
 4564 0028 DB43     	 mvns r3,r3
 4565 002a 02EA0301 	 and r1,r2,r3
 4566 002e FB68     	 ldr r3,[r7,#12]
 4567 0030 BA68     	 ldr r2,[r7,#8]
 4568 0032 8032     	 adds r2,r2,#128
 4569 0034 43F82210 	 str r1,[r3,r2,lsl#2]
1911:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] |= (selection << ((uint32_t)VADC_G_CHCTR_BNDSELL_Pos + (uint32_t)boundar
 4570              	 .loc 2 1911 0
 4571 0038 FB68     	 ldr r3,[r7,#12]
 4572 003a BA68     	 ldr r2,[r7,#8]
 4573 003c 8032     	 adds r2,r2,#128
 4574 003e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4575 0042 BA79     	 ldrb r2,[r7,#6]
 4576 0044 F979     	 ldrb r1,[r7,#7]
 4577 0046 0431     	 adds r1,r1,#4
 4578 0048 8A40     	 lsls r2,r2,r1
 4579 004a 43EA0201 	 orr r1,r3,r2
 4580 004e FB68     	 ldr r3,[r7,#12]
 4581 0050 BA68     	 ldr r2,[r7,#8]
 4582 0052 8032     	 adds r2,r2,#128
 4583 0054 43F82210 	 str r1,[r3,r2,lsl#2]
1912:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4584              	 .loc 2 1912 0
 4585 0058 1437     	 adds r7,r7,#20
 4586              	 .cfi_def_cfa_offset 4
 4587 005a BD46     	 mov sp,r7
 4588              	 .cfi_def_cfa_register 13
 4589              	 
 4590 005c 5DF8047B 	 ldr r7,[sp],#4
 4591              	 .cfi_restore 7
 4592              	 .cfi_def_cfa_offset 0
 4593 0060 7047     	 bx lr
 4594              	 .cfi_endproc
 4595              	.LFE316:
 4597 0062 00BF     	 .section .text.XMC_VADC_GROUP_AddResultToFifo,"ax",%progbits
 4598              	 .align 2
 4599              	 .global XMC_VADC_GROUP_AddResultToFifo
 4600              	 .thumb
 4601              	 .thumb_func
 4603              	XMC_VADC_GROUP_AddResultToFifo:
 4604              	.LFB317:
1913:../Libraries/XMCLib/src/xmc_vadc.c **** 
1914:../Libraries/XMCLib/src/xmc_vadc.c **** /* Make the specified result register part of Result FIFO */
1915:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_AddResultToFifo(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_reg)
1916:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4605              	 .loc 2 1916 0
 4606              	 .cfi_startproc
 4607              	 
 4608              	 
 4609              	 
 4610 0000 80B4     	 push {r7}
 4611              	 .cfi_def_cfa_offset 4
 4612              	 .cfi_offset 7,-4
 4613 0002 85B0     	 sub sp,sp,#20
 4614              	 .cfi_def_cfa_offset 24
 4615 0004 00AF     	 add r7,sp,#0
 4616              	 .cfi_def_cfa_register 7
 4617 0006 7860     	 str r0,[r7,#4]
 4618 0008 3960     	 str r1,[r7]
1917:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t fen;
1918:../Libraries/XMCLib/src/xmc_vadc.c **** 
1919:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_AddResultToFifo:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
1920:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_AddResultToFifo:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RESU
1921:../Libraries/XMCLib/src/xmc_vadc.c **** 
1922:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Extract and clear the FIFO enable field */
1923:../Libraries/XMCLib/src/xmc_vadc.c ****   fen = group_ptr->RCR[res_reg];
 4619              	 .loc 2 1923 0
 4620 000a 7B68     	 ldr r3,[r7,#4]
 4621 000c 3A68     	 ldr r2,[r7]
 4622 000e A032     	 adds r2,r2,#160
 4623 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4624 0014 FB60     	 str r3,[r7,#12]
1924:../Libraries/XMCLib/src/xmc_vadc.c ****   fen &= ~((uint32_t)VADC_G_RCR_FEN_Msk);
 4625              	 .loc 2 1924 0
 4626 0016 FB68     	 ldr r3,[r7,#12]
 4627 0018 23F0C063 	 bic r3,r3,#100663296
 4628 001c FB60     	 str r3,[r7,#12]
1925:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set this register up as a FIFO member */
1926:../Libraries/XMCLib/src/xmc_vadc.c ****   fen |= (uint32_t)((uint32_t)1 << VADC_G_RCR_FEN_Pos);
 4629              	 .loc 2 1926 0
 4630 001e FB68     	 ldr r3,[r7,#12]
 4631 0020 43F00073 	 orr r3,r3,#33554432
 4632 0024 FB60     	 str r3,[r7,#12]
1927:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RCR[res_reg] = fen;
 4633              	 .loc 2 1927 0
 4634 0026 7B68     	 ldr r3,[r7,#4]
 4635 0028 3A68     	 ldr r2,[r7]
 4636 002a A032     	 adds r2,r2,#160
 4637 002c F968     	 ldr r1,[r7,#12]
 4638 002e 43F82210 	 str r1,[r3,r2,lsl#2]
1928:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4639              	 .loc 2 1928 0
 4640 0032 1437     	 adds r7,r7,#20
 4641              	 .cfi_def_cfa_offset 4
 4642 0034 BD46     	 mov sp,r7
 4643              	 .cfi_def_cfa_register 13
 4644              	 
 4645 0036 5DF8047B 	 ldr r7,[sp],#4
 4646              	 .cfi_restore 7
 4647              	 .cfi_def_cfa_offset 0
 4648 003a 7047     	 bx lr
 4649              	 .cfi_endproc
 4650              	.LFE317:
 4652              	 .section .text.XMC_VADC_GROUP_SetResultFastCompareValue,"ax",%progbits
 4653              	 .align 2
 4654              	 .global XMC_VADC_GROUP_SetResultFastCompareValue
 4655              	 .thumb
 4656              	 .thumb_func
 4658              	XMC_VADC_GROUP_SetResultFastCompareValue:
 4659              	.LFB318:
1929:../Libraries/XMCLib/src/xmc_vadc.c **** 
1930:../Libraries/XMCLib/src/xmc_vadc.c **** 
1931:../Libraries/XMCLib/src/xmc_vadc.c **** /* Applicable to fast compare mode, this API sets up the value which is to be compared against conv
1932:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultFastCompareValue(XMC_VADC_GROUP_t *const group_ptr,
1933:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint32_t res_reg,
1934:../Libraries/XMCLib/src/xmc_vadc.c ****     const XMC_VADC_RESULT_SIZE_t compare_val)
1935:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4660              	 .loc 2 1935 0
 4661              	 .cfi_startproc
 4662              	 
 4663              	 
 4664              	 
 4665 0000 80B4     	 push {r7}
 4666              	 .cfi_def_cfa_offset 4
 4667              	 .cfi_offset 7,-4
 4668 0002 87B0     	 sub sp,sp,#28
 4669              	 .cfi_def_cfa_offset 32
 4670 0004 00AF     	 add r7,sp,#0
 4671              	 .cfi_def_cfa_register 7
 4672 0006 F860     	 str r0,[r7,#12]
 4673 0008 B960     	 str r1,[r7,#8]
 4674 000a 1346     	 mov r3,r2
 4675 000c FB80     	 strh r3,[r7,#6]
1936:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res = group_ptr->RES[res_reg];
 4676              	 .loc 2 1936 0
 4677 000e FB68     	 ldr r3,[r7,#12]
 4678 0010 BA68     	 ldr r2,[r7,#8]
 4679 0012 C032     	 adds r2,r2,#192
 4680 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4681 0018 7B61     	 str r3,[r7,#20]
1937:../Libraries/XMCLib/src/xmc_vadc.c **** 
1938:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultFastCompareValue:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1939:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultFastCompareValue:Wrong Result Register",
1940:../Libraries/XMCLib/src/xmc_vadc.c ****              ((res_reg) < XMC_VADC_NUM_RESULT_REGISTERS))
1941:../Libraries/XMCLib/src/xmc_vadc.c **** 
1942:../Libraries/XMCLib/src/xmc_vadc.c ****   res &= ~((uint32_t)VADC_G_RES_RESULT_Msk);
 4682              	 .loc 2 1942 0
 4683 001a 7B69     	 ldr r3,[r7,#20]
 4684 001c 1B0C     	 lsrs r3,r3,#16
 4685 001e 1B04     	 lsls r3,r3,#16
 4686 0020 7B61     	 str r3,[r7,#20]
1943:../Libraries/XMCLib/src/xmc_vadc.c ****   res |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 4687              	 .loc 2 1943 0
 4688 0022 FB88     	 ldrh r3,[r7,#6]
 4689 0024 9B00     	 lsls r3,r3,#2
 4690 0026 7A69     	 ldr r2,[r7,#20]
 4691 0028 1343     	 orrs r3,r3,r2
 4692 002a 7B61     	 str r3,[r7,#20]
1944:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RES[res_reg] = res;
 4693              	 .loc 2 1944 0
 4694 002c FB68     	 ldr r3,[r7,#12]
 4695 002e BA68     	 ldr r2,[r7,#8]
 4696 0030 C032     	 adds r2,r2,#192
 4697 0032 7969     	 ldr r1,[r7,#20]
 4698 0034 43F82210 	 str r1,[r3,r2,lsl#2]
1945:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4699              	 .loc 2 1945 0
 4700 0038 1C37     	 adds r7,r7,#28
 4701              	 .cfi_def_cfa_offset 4
 4702 003a BD46     	 mov sp,r7
 4703              	 .cfi_def_cfa_register 13
 4704              	 
 4705 003c 5DF8047B 	 ldr r7,[sp],#4
 4706              	 .cfi_restore 7
 4707              	 .cfi_def_cfa_offset 0
 4708 0040 7047     	 bx lr
 4709              	 .cfi_endproc
 4710              	.LFE318:
 4712 0042 00BF     	 .section .text.XMC_VADC_GROUP_GetFastCompareResult,"ax",%progbits
 4713              	 .align 2
 4714              	 .global XMC_VADC_GROUP_GetFastCompareResult
 4715              	 .thumb
 4716              	 .thumb_func
 4718              	XMC_VADC_GROUP_GetFastCompareResult:
 4719              	.LFB319:
1946:../Libraries/XMCLib/src/xmc_vadc.c **** 
1947:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result of fast mode comparison */
1948:../Libraries/XMCLib/src/xmc_vadc.c **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GROUP_GetFastCompareResult(XMC_VADC_GROUP_t *const group_ptr, cons
1949:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4720              	 .loc 2 1949 0
 4721              	 .cfi_startproc
 4722              	 
 4723              	 
 4724              	 
 4725 0000 80B4     	 push {r7}
 4726              	 .cfi_def_cfa_offset 4
 4727              	 .cfi_offset 7,-4
 4728 0002 85B0     	 sub sp,sp,#20
 4729              	 .cfi_def_cfa_offset 24
 4730 0004 00AF     	 add r7,sp,#0
 4731              	 .cfi_def_cfa_register 7
 4732 0006 7860     	 str r0,[r7,#4]
 4733 0008 3960     	 str r1,[r7]
1950:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_FAST_COMPARE_t result;
1951:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res;
1952:../Libraries/XMCLib/src/xmc_vadc.c **** 
1953:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetFastCompareResult:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
1954:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetFastCompareResult:Wrong Result Register", ((res_reg) < XMC_VADC_NUM
1955:../Libraries/XMCLib/src/xmc_vadc.c **** 
1956:../Libraries/XMCLib/src/xmc_vadc.c ****   res = group_ptr->RES[res_reg];
 4734              	 .loc 2 1956 0
 4735 000a 7B68     	 ldr r3,[r7,#4]
 4736 000c 3A68     	 ldr r2,[r7]
 4737 000e C032     	 adds r2,r2,#192
 4738 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4739 0014 BB60     	 str r3,[r7,#8]
1957:../Libraries/XMCLib/src/xmc_vadc.c **** 
1958:../Libraries/XMCLib/src/xmc_vadc.c ****   if (res & (uint32_t)VADC_G_RES_VF_Msk)
 4740              	 .loc 2 1958 0
 4741 0016 BB68     	 ldr r3,[r7,#8]
 4742 0018 002B     	 cmp r3,#0
 4743 001a 06DA     	 bge .L179
1959:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1960:../Libraries/XMCLib/src/xmc_vadc.c ****     result = (XMC_VADC_FAST_COMPARE_t)((uint32_t)(res >> (uint32_t)VADC_G_RES_FCR_Pos) & (uint32_t)
 4744              	 .loc 2 1960 0
 4745 001c BB68     	 ldr r3,[r7,#8]
 4746 001e 9B0F     	 lsrs r3,r3,#30
 4747 0020 DBB2     	 uxtb r3,r3
 4748 0022 03F00103 	 and r3,r3,#1
 4749 0026 FB73     	 strb r3,[r7,#15]
 4750 0028 01E0     	 b .L180
 4751              	.L179:
1961:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1962:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1963:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1964:../Libraries/XMCLib/src/xmc_vadc.c ****     result = XMC_VADC_FAST_COMPARE_UNKNOWN;
 4752              	 .loc 2 1964 0
 4753 002a 0223     	 movs r3,#2
 4754 002c FB73     	 strb r3,[r7,#15]
 4755              	.L180:
1965:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1966:../Libraries/XMCLib/src/xmc_vadc.c **** 
1967:../Libraries/XMCLib/src/xmc_vadc.c ****   return result;
 4756              	 .loc 2 1967 0
 4757 002e FB7B     	 ldrb r3,[r7,#15]
1968:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4758              	 .loc 2 1968 0
 4759 0030 1846     	 mov r0,r3
 4760 0032 1437     	 adds r7,r7,#20
 4761              	 .cfi_def_cfa_offset 4
 4762 0034 BD46     	 mov sp,r7
 4763              	 .cfi_def_cfa_register 13
 4764              	 
 4765 0036 5DF8047B 	 ldr r7,[sp],#4
 4766              	 .cfi_restore 7
 4767              	 .cfi_def_cfa_offset 0
 4768 003a 7047     	 bx lr
 4769              	 .cfi_endproc
 4770              	.LFE319:
 4772              	 .section .text.XMC_VADC_GROUP_SetResultSubtractionValue,"ax",%progbits
 4773              	 .align 2
 4774              	 .global XMC_VADC_GROUP_SetResultSubtractionValue
 4775              	 .thumb
 4776              	 .thumb_func
 4778              	XMC_VADC_GROUP_SetResultSubtractionValue:
 4779              	.LFB320:
1969:../Libraries/XMCLib/src/xmc_vadc.c **** 
1970:../Libraries/XMCLib/src/xmc_vadc.c **** /* Applicable to fast compare mode, this API sets up the value which is to be compared against conv
1971:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultSubtractionValue(XMC_VADC_GROUP_t *const group_ptr,
1972:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint16_t subtraction_val)
1973:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4780              	 .loc 2 1973 0
 4781              	 .cfi_startproc
 4782              	 
 4783              	 
 4784              	 
 4785 0000 80B4     	 push {r7}
 4786              	 .cfi_def_cfa_offset 4
 4787              	 .cfi_offset 7,-4
 4788 0002 85B0     	 sub sp,sp,#20
 4789              	 .cfi_def_cfa_offset 24
 4790 0004 00AF     	 add r7,sp,#0
 4791              	 .cfi_def_cfa_register 7
 4792 0006 7860     	 str r0,[r7,#4]
 4793 0008 0B46     	 mov r3,r1
 4794 000a 7B80     	 strh r3,[r7,#2]
1974:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res;
1975:../Libraries/XMCLib/src/xmc_vadc.c **** 
1976:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultSubtractionValue:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1977:../Libraries/XMCLib/src/xmc_vadc.c **** 
1978:../Libraries/XMCLib/src/xmc_vadc.c ****   res = group_ptr->RES[0];
 4795              	 .loc 2 1978 0
 4796 000c 7B68     	 ldr r3,[r7,#4]
 4797 000e D3F80033 	 ldr r3,[r3,#768]
 4798 0012 FB60     	 str r3,[r7,#12]
1979:../Libraries/XMCLib/src/xmc_vadc.c ****   res &= ~((uint32_t)VADC_G_RES_RESULT_Msk);
 4799              	 .loc 2 1979 0
 4800 0014 FB68     	 ldr r3,[r7,#12]
 4801 0016 1B0C     	 lsrs r3,r3,#16
 4802 0018 1B04     	 lsls r3,r3,#16
 4803 001a FB60     	 str r3,[r7,#12]
1980:../Libraries/XMCLib/src/xmc_vadc.c ****   res |= (uint32_t)subtraction_val;
 4804              	 .loc 2 1980 0
 4805 001c 7B88     	 ldrh r3,[r7,#2]
 4806 001e FA68     	 ldr r2,[r7,#12]
 4807 0020 1343     	 orrs r3,r3,r2
 4808 0022 FB60     	 str r3,[r7,#12]
1981:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RES[0] = res;
 4809              	 .loc 2 1981 0
 4810 0024 7B68     	 ldr r3,[r7,#4]
 4811 0026 FA68     	 ldr r2,[r7,#12]
 4812 0028 C3F80023 	 str r2,[r3,#768]
1982:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4813              	 .loc 2 1982 0
 4814 002c 1437     	 adds r7,r7,#20
 4815              	 .cfi_def_cfa_offset 4
 4816 002e BD46     	 mov sp,r7
 4817              	 .cfi_def_cfa_register 13
 4818              	 
 4819 0030 5DF8047B 	 ldr r7,[sp],#4
 4820              	 .cfi_restore 7
 4821              	 .cfi_def_cfa_offset 0
 4822 0034 7047     	 bx lr
 4823              	 .cfi_endproc
 4824              	.LFE320:
 4826 0036 00BF     	 .section .text.XMC_VADC_GROUP_SetResultInterruptNode,"ax",%progbits
 4827              	 .align 2
 4828              	 .global XMC_VADC_GROUP_SetResultInterruptNode
 4829              	 .thumb
 4830              	 .thumb_func
 4832              	XMC_VADC_GROUP_SetResultInterruptNode:
 4833              	.LFB321:
1983:../Libraries/XMCLib/src/xmc_vadc.c **** 
1984:../Libraries/XMCLib/src/xmc_vadc.c **** 
1985:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select a service request line (NVIC Node) for result event of specified unit of result ha
1986:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
1987:../Libraries/XMCLib/src/xmc_vadc.c ****     const uint32_t res_reg,
1988:../Libraries/XMCLib/src/xmc_vadc.c ****     const XMC_VADC_SR_t sr)
1989:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4834              	 .loc 2 1989 0
 4835              	 .cfi_startproc
 4836              	 
 4837              	 
 4838              	 
 4839 0000 80B4     	 push {r7}
 4840              	 .cfi_def_cfa_offset 4
 4841              	 .cfi_offset 7,-4
 4842 0002 87B0     	 sub sp,sp,#28
 4843              	 .cfi_def_cfa_offset 32
 4844 0004 00AF     	 add r7,sp,#0
 4845              	 .cfi_def_cfa_register 7
 4846 0006 F860     	 str r0,[r7,#12]
 4847 0008 B960     	 str r1,[r7,#8]
 4848 000a 1346     	 mov r3,r2
 4849 000c FB71     	 strb r3,[r7,#7]
1990:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t route_mask;
1991:../Libraries/XMCLib/src/xmc_vadc.c **** 
1992:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
1993:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Result Register", ((res_reg) < XMC_VADC_N
1994:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Service Request", ((sr)  <= XMC_VADC_SR_S
1995:../Libraries/XMCLib/src/xmc_vadc.c **** 
1996:../Libraries/XMCLib/src/xmc_vadc.c ****   if (res_reg <= 7U)
 4850              	 .loc 2 1996 0
 4851 000e BB68     	 ldr r3,[r7,#8]
 4852 0010 072B     	 cmp r3,#7
 4853 0012 18D8     	 bhi .L184
1997:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1998:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask  = group_ptr->REVNP0;
 4854              	 .loc 2 1998 0
 4855 0014 FB68     	 ldr r3,[r7,#12]
 4856 0016 D3F8B031 	 ldr r3,[r3,#432]
 4857 001a 7B61     	 str r3,[r7,#20]
1999:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (res_reg * (uint32_t)4) ));
 4858              	 .loc 2 1999 0
 4859 001c BB68     	 ldr r3,[r7,#8]
 4860 001e 9B00     	 lsls r3,r3,#2
 4861 0020 1A46     	 mov r2,r3
 4862 0022 0F23     	 movs r3,#15
 4863 0024 9340     	 lsls r3,r3,r2
 4864 0026 DB43     	 mvns r3,r3
 4865 0028 7A69     	 ldr r2,[r7,#20]
 4866 002a 1340     	 ands r3,r3,r2
 4867 002c 7B61     	 str r3,[r7,#20]
2000:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask |= (uint32_t)((uint32_t)sr << (res_reg * (uint32_t)4));
 4868              	 .loc 2 2000 0
 4869 002e FB79     	 ldrb r3,[r7,#7]
 4870 0030 BA68     	 ldr r2,[r7,#8]
 4871 0032 9200     	 lsls r2,r2,#2
 4872 0034 9340     	 lsls r3,r3,r2
 4873 0036 7A69     	 ldr r2,[r7,#20]
 4874 0038 1343     	 orrs r3,r3,r2
 4875 003a 7B61     	 str r3,[r7,#20]
2001:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->REVNP0 = route_mask;
 4876              	 .loc 2 2001 0
 4877 003c FB68     	 ldr r3,[r7,#12]
 4878 003e 7A69     	 ldr r2,[r7,#20]
 4879 0040 C3F8B021 	 str r2,[r3,#432]
 4880 0044 1EE0     	 b .L183
 4881              	.L184:
2002:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2003:../Libraries/XMCLib/src/xmc_vadc.c ****   else
2004:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2005:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask = group_ptr->REVNP1;
 4882              	 .loc 2 2005 0
 4883 0046 FB68     	 ldr r3,[r7,#12]
 4884 0048 D3F8B431 	 ldr r3,[r3,#436]
 4885 004c 7B61     	 str r3,[r7,#20]
2006:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (( res_reg - (uint32_t)8) * (uint32_t)4) ));
 4886              	 .loc 2 2006 0
 4887 004e BB68     	 ldr r3,[r7,#8]
 4888 0050 03F18043 	 add r3,r3,#1073741824
 4889 0054 083B     	 subs r3,r3,#8
 4890 0056 9B00     	 lsls r3,r3,#2
 4891 0058 1A46     	 mov r2,r3
 4892 005a 0F23     	 movs r3,#15
 4893 005c 9340     	 lsls r3,r3,r2
 4894 005e DB43     	 mvns r3,r3
 4895 0060 7A69     	 ldr r2,[r7,#20]
 4896 0062 1340     	 ands r3,r3,r2
 4897 0064 7B61     	 str r3,[r7,#20]
2007:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask |= (uint32_t)((uint32_t)sr << ((res_reg - (uint32_t)8) * (uint32_t)4));
 4898              	 .loc 2 2007 0
 4899 0066 FA79     	 ldrb r2,[r7,#7]
 4900 0068 BB68     	 ldr r3,[r7,#8]
 4901 006a 03F18043 	 add r3,r3,#1073741824
 4902 006e 083B     	 subs r3,r3,#8
 4903 0070 9B00     	 lsls r3,r3,#2
 4904 0072 02FA03F3 	 lsl r3,r2,r3
 4905 0076 7A69     	 ldr r2,[r7,#20]
 4906 0078 1343     	 orrs r3,r3,r2
 4907 007a 7B61     	 str r3,[r7,#20]
2008:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->REVNP1 = route_mask;
 4908              	 .loc 2 2008 0
 4909 007c FB68     	 ldr r3,[r7,#12]
 4910 007e 7A69     	 ldr r2,[r7,#20]
 4911 0080 C3F8B421 	 str r2,[r3,#436]
 4912              	.L183:
2009:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2010:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4913              	 .loc 2 2010 0
 4914 0084 1C37     	 adds r7,r7,#28
 4915              	 .cfi_def_cfa_offset 4
 4916 0086 BD46     	 mov sp,r7
 4917              	 .cfi_def_cfa_register 13
 4918              	 
 4919 0088 5DF8047B 	 ldr r7,[sp],#4
 4920              	 .cfi_restore 7
 4921              	 .cfi_def_cfa_offset 0
 4922 008c 7047     	 bx lr
 4923              	 .cfi_endproc
 4924              	.LFE321:
 4926 008e 00BF     	 .section .text.XMC_VADC_GROUP_GetResultFifoTail,"ax",%progbits
 4927              	 .align 2
 4928              	 .global XMC_VADC_GROUP_GetResultFifoTail
 4929              	 .thumb
 4930              	 .thumb_func
 4932              	XMC_VADC_GROUP_GetResultFifoTail:
 4933              	.LFB322:
2011:../Libraries/XMCLib/src/xmc_vadc.c **** 
2012:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the tail of the fifo which the specified result register is a part of */
2013:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_GetResultFifoTail(XMC_VADC_GROUP_t *const group_ptr, uint32_t res_reg)
2014:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4934              	 .loc 2 2014 0
 4935              	 .cfi_startproc
 4936              	 
 4937              	 
 4938 0000 80B5     	 push {r7,lr}
 4939              	 .cfi_def_cfa_offset 8
 4940              	 .cfi_offset 7,-8
 4941              	 .cfi_offset 14,-4
 4942 0002 86B0     	 sub sp,sp,#24
 4943              	 .cfi_def_cfa_offset 32
 4944 0004 00AF     	 add r7,sp,#0
 4945              	 .cfi_def_cfa_register 7
 4946 0006 7860     	 str r0,[r7,#4]
 4947 0008 3960     	 str r1,[r7]
2015:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t tail;
2016:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr;
2017:../Libraries/XMCLib/src/xmc_vadc.c ****   int32_t i;
2018:../Libraries/XMCLib/src/xmc_vadc.c ****   bool exit_flag;
2019:../Libraries/XMCLib/src/xmc_vadc.c **** 
2020:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoTail:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2021:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoTail:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RE
2022:../Libraries/XMCLib/src/xmc_vadc.c **** 
2023:../Libraries/XMCLib/src/xmc_vadc.c ****   tail = 0U;
 4948              	 .loc 2 2023 0
 4949 000a 0023     	 movs r3,#0
 4950 000c 7B61     	 str r3,[r7,#20]
2024:../Libraries/XMCLib/src/xmc_vadc.c ****   exit_flag = (bool)false;
 4951              	 .loc 2 2024 0
 4952 000e 0023     	 movs r3,#0
 4953 0010 FB73     	 strb r3,[r7,#15]
2025:../Libraries/XMCLib/src/xmc_vadc.c **** 
2026:../Libraries/XMCLib/src/xmc_vadc.c ****   if ((bool)true == XMC_VADC_GROUP_IsResultRegisterFifoHead(group_ptr, res_reg))
 4954              	 .loc 2 2026 0
 4955 0012 7868     	 ldr r0,[r7,#4]
 4956 0014 3968     	 ldr r1,[r7]
 4957 0016 FFF7FEFF 	 bl XMC_VADC_GROUP_IsResultRegisterFifoHead
 4958 001a 0346     	 mov r3,r0
 4959 001c 002B     	 cmp r3,#0
 4960 001e 02D0     	 beq .L187
2027:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2028:../Libraries/XMCLib/src/xmc_vadc.c ****     res_reg = res_reg - 1U;
 4961              	 .loc 2 2028 0
 4962 0020 3B68     	 ldr r3,[r7]
 4963 0022 013B     	 subs r3,r3,#1
 4964 0024 3B60     	 str r3,[r7]
 4965              	.L187:
2029:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2030:../Libraries/XMCLib/src/xmc_vadc.c **** 
2031:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Border condition */
2032:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == res_reg)
 4966              	 .loc 2 2032 0
 4967 0026 3B68     	 ldr r3,[r7]
 4968 0028 002B     	 cmp r3,#0
 4969 002a 02D1     	 bne .L188
2033:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2034:../Libraries/XMCLib/src/xmc_vadc.c ****     tail = 0U;
 4970              	 .loc 2 2034 0
 4971 002c 0023     	 movs r3,#0
 4972 002e 7B61     	 str r3,[r7,#20]
 4973 0030 26E0     	 b .L189
 4974              	.L188:
2035:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2036:../Libraries/XMCLib/src/xmc_vadc.c ****   else
2037:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2038:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Stop either at a node that does not have FEN set or at Node-0 */
2039:../Libraries/XMCLib/src/xmc_vadc.c ****     for (i = (int32_t)res_reg; i >= (int32_t)0; i--)
 4975              	 .loc 2 2039 0
 4976 0032 3B68     	 ldr r3,[r7]
 4977 0034 3B61     	 str r3,[r7,#16]
 4978 0036 20E0     	 b .L190
 4979              	.L195:
2040:../Libraries/XMCLib/src/xmc_vadc.c ****     {
2041:../Libraries/XMCLib/src/xmc_vadc.c ****       rcr = group_ptr->RCR[i];
 4980              	 .loc 2 2041 0
 4981 0038 7B68     	 ldr r3,[r7,#4]
 4982 003a 3A69     	 ldr r2,[r7,#16]
 4983 003c A032     	 adds r2,r2,#160
 4984 003e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4985 0042 BB60     	 str r3,[r7,#8]
2042:../Libraries/XMCLib/src/xmc_vadc.c ****       rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4986              	 .loc 2 2042 0
 4987 0044 BB68     	 ldr r3,[r7,#8]
 4988 0046 03F0C063 	 and r3,r3,#100663296
 4989 004a BB60     	 str r3,[r7,#8]
2043:../Libraries/XMCLib/src/xmc_vadc.c **** 
2044:../Libraries/XMCLib/src/xmc_vadc.c ****       if (rcr)
 4990              	 .loc 2 2044 0
 4991 004c BB68     	 ldr r3,[r7,#8]
 4992 004e 002B     	 cmp r3,#0
 4993 0050 07D0     	 beq .L191
2045:../Libraries/XMCLib/src/xmc_vadc.c ****       {
2046:../Libraries/XMCLib/src/xmc_vadc.c ****         if ((int32_t)0 == i)
 4994              	 .loc 2 2046 0
 4995 0052 3B69     	 ldr r3,[r7,#16]
 4996 0054 002B     	 cmp r3,#0
 4997 0056 09D1     	 bne .L193
2047:../Libraries/XMCLib/src/xmc_vadc.c ****         {
2048:../Libraries/XMCLib/src/xmc_vadc.c ****           /* No more nodes. Stop here */
2049:../Libraries/XMCLib/src/xmc_vadc.c ****           tail = (uint32_t)0;
 4998              	 .loc 2 2049 0
 4999 0058 0023     	 movs r3,#0
 5000 005a 7B61     	 str r3,[r7,#20]
2050:../Libraries/XMCLib/src/xmc_vadc.c ****           exit_flag = (bool)true;
 5001              	 .loc 2 2050 0
 5002 005c 0123     	 movs r3,#1
 5003 005e FB73     	 strb r3,[r7,#15]
 5004 0060 04E0     	 b .L193
 5005              	.L191:
2051:../Libraries/XMCLib/src/xmc_vadc.c ****         }
2052:../Libraries/XMCLib/src/xmc_vadc.c ****       }
2053:../Libraries/XMCLib/src/xmc_vadc.c ****       else
2054:../Libraries/XMCLib/src/xmc_vadc.c ****       {
2055:../Libraries/XMCLib/src/xmc_vadc.c ****         /* The preceding register forms the tail of the FIFO */
2056:../Libraries/XMCLib/src/xmc_vadc.c ****         tail = (uint32_t)i + (uint32_t)1;
 5006              	 .loc 2 2056 0
 5007 0062 3B69     	 ldr r3,[r7,#16]
 5008 0064 0133     	 adds r3,r3,#1
 5009 0066 7B61     	 str r3,[r7,#20]
2057:../Libraries/XMCLib/src/xmc_vadc.c ****         exit_flag = (bool)true;
 5010              	 .loc 2 2057 0
 5011 0068 0123     	 movs r3,#1
 5012 006a FB73     	 strb r3,[r7,#15]
 5013              	.L193:
2058:../Libraries/XMCLib/src/xmc_vadc.c ****       }
2059:../Libraries/XMCLib/src/xmc_vadc.c ****       if (exit_flag)
 5014              	 .loc 2 2059 0
 5015 006c FB7B     	 ldrb r3,[r7,#15]
 5016 006e 002B     	 cmp r3,#0
 5017 0070 00D0     	 beq .L194
2060:../Libraries/XMCLib/src/xmc_vadc.c ****       {
2061:../Libraries/XMCLib/src/xmc_vadc.c ****         break;
 5018              	 .loc 2 2061 0
 5019 0072 05E0     	 b .L189
 5020              	.L194:
2039:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 5021              	 .loc 2 2039 0 discriminator 2
 5022 0074 3B69     	 ldr r3,[r7,#16]
 5023 0076 013B     	 subs r3,r3,#1
 5024 0078 3B61     	 str r3,[r7,#16]
 5025              	.L190:
2039:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 5026              	 .loc 2 2039 0 is_stmt 0 discriminator 1
 5027 007a 3B69     	 ldr r3,[r7,#16]
 5028 007c 002B     	 cmp r3,#0
 5029 007e DBDA     	 bge .L195
 5030              	.L189:
2062:../Libraries/XMCLib/src/xmc_vadc.c ****       }
2063:../Libraries/XMCLib/src/xmc_vadc.c ****     }
2064:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2065:../Libraries/XMCLib/src/xmc_vadc.c ****   return tail;
 5031              	 .loc 2 2065 0 is_stmt 1
 5032 0080 7B69     	 ldr r3,[r7,#20]
2066:../Libraries/XMCLib/src/xmc_vadc.c **** }
 5033              	 .loc 2 2066 0
 5034 0082 1846     	 mov r0,r3
 5035 0084 1837     	 adds r7,r7,#24
 5036              	 .cfi_def_cfa_offset 8
 5037 0086 BD46     	 mov sp,r7
 5038              	 .cfi_def_cfa_register 13
 5039              	 
 5040 0088 80BD     	 pop {r7,pc}
 5041              	 .cfi_endproc
 5042              	.LFE322:
 5044 008a 00BF     	 .section .text.XMC_VADC_GROUP_GetResultFifoHead,"ax",%progbits
 5045              	 .align 2
 5046              	 .global XMC_VADC_GROUP_GetResultFifoHead
 5047              	 .thumb
 5048              	 .thumb_func
 5050              	XMC_VADC_GROUP_GetResultFifoHead:
 5051              	.LFB323:
2067:../Libraries/XMCLib/src/xmc_vadc.c **** 
2068:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the head of the fifo which the specified result register is a part of */
2069:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_GetResultFifoHead(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_reg
2070:../Libraries/XMCLib/src/xmc_vadc.c **** {
 5052              	 .loc 2 2070 0
 5053              	 .cfi_startproc
 5054              	 
 5055              	 
 5056 0000 80B5     	 push {r7,lr}
 5057              	 .cfi_def_cfa_offset 8
 5058              	 .cfi_offset 7,-8
 5059              	 .cfi_offset 14,-4
 5060 0002 86B0     	 sub sp,sp,#24
 5061              	 .cfi_def_cfa_offset 32
 5062 0004 00AF     	 add r7,sp,#0
 5063              	 .cfi_def_cfa_register 7
 5064 0006 7860     	 str r0,[r7,#4]
 5065 0008 3960     	 str r1,[r7]
2071:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t head;
2072:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr;
2073:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
2074:../Libraries/XMCLib/src/xmc_vadc.c **** 
2075:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoHead:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2076:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoHead:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RE
2077:../Libraries/XMCLib/src/xmc_vadc.c **** 
2078:../Libraries/XMCLib/src/xmc_vadc.c ****   if ((bool)true == XMC_VADC_GROUP_IsResultRegisterFifoHead(group_ptr, res_reg))
 5066              	 .loc 2 2078 0
 5067 000a 7868     	 ldr r0,[r7,#4]
 5068 000c 3968     	 ldr r1,[r7]
 5069 000e FFF7FEFF 	 bl XMC_VADC_GROUP_IsResultRegisterFifoHead
 5070 0012 0346     	 mov r3,r0
 5071 0014 002B     	 cmp r3,#0
 5072 0016 02D0     	 beq .L198
2079:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2080:../Libraries/XMCLib/src/xmc_vadc.c ****     head = res_reg;
 5073              	 .loc 2 2080 0
 5074 0018 3B68     	 ldr r3,[r7]
 5075 001a 7B61     	 str r3,[r7,#20]
 5076 001c 1AE0     	 b .L199
 5077              	.L198:
2081:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2082:../Libraries/XMCLib/src/xmc_vadc.c ****   else
2083:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2084:../Libraries/XMCLib/src/xmc_vadc.c ****     head = XMC_VADC_NUM_RESULT_REGISTERS - (uint32_t)1;
 5078              	 .loc 2 2084 0
 5079 001e 0F23     	 movs r3,#15
 5080 0020 7B61     	 str r3,[r7,#20]
2085:../Libraries/XMCLib/src/xmc_vadc.c **** 
2086:../Libraries/XMCLib/src/xmc_vadc.c ****     for (i = res_reg; i < XMC_VADC_NUM_RESULT_REGISTERS ; i++)
 5081              	 .loc 2 2086 0
 5082 0022 3B68     	 ldr r3,[r7]
 5083 0024 3B61     	 str r3,[r7,#16]
 5084 0026 12E0     	 b .L200
 5085              	.L202:
2087:../Libraries/XMCLib/src/xmc_vadc.c ****     {
2088:../Libraries/XMCLib/src/xmc_vadc.c ****       rcr = group_ptr->RCR[i];
 5086              	 .loc 2 2088 0
 5087 0028 7B68     	 ldr r3,[r7,#4]
 5088 002a 3A69     	 ldr r2,[r7,#16]
 5089 002c A032     	 adds r2,r2,#160
 5090 002e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5091 0032 FB60     	 str r3,[r7,#12]
2089:../Libraries/XMCLib/src/xmc_vadc.c ****       rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 5092              	 .loc 2 2089 0
 5093 0034 FB68     	 ldr r3,[r7,#12]
 5094 0036 03F0C063 	 and r3,r3,#100663296
 5095 003a FB60     	 str r3,[r7,#12]
2090:../Libraries/XMCLib/src/xmc_vadc.c **** 
2091:../Libraries/XMCLib/src/xmc_vadc.c ****       if (!rcr)
 5096              	 .loc 2 2091 0
 5097 003c FB68     	 ldr r3,[r7,#12]
 5098 003e 002B     	 cmp r3,#0
 5099 0040 02D1     	 bne .L201
2092:../Libraries/XMCLib/src/xmc_vadc.c ****       {
2093:../Libraries/XMCLib/src/xmc_vadc.c ****         /* This node forms the head of the FIFO */
2094:../Libraries/XMCLib/src/xmc_vadc.c ****         head = i ;
 5100              	 .loc 2 2094 0
 5101 0042 3B69     	 ldr r3,[r7,#16]
 5102 0044 7B61     	 str r3,[r7,#20]
2095:../Libraries/XMCLib/src/xmc_vadc.c ****         break;
 5103              	 .loc 2 2095 0
 5104 0046 05E0     	 b .L199
 5105              	.L201:
2086:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 5106              	 .loc 2 2086 0 discriminator 2
 5107 0048 3B69     	 ldr r3,[r7,#16]
 5108 004a 0133     	 adds r3,r3,#1
 5109 004c 3B61     	 str r3,[r7,#16]
 5110              	.L200:
2086:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 5111              	 .loc 2 2086 0 is_stmt 0 discriminator 1
 5112 004e 3B69     	 ldr r3,[r7,#16]
 5113 0050 0F2B     	 cmp r3,#15
 5114 0052 E9D9     	 bls .L202
 5115              	.L199:
2096:../Libraries/XMCLib/src/xmc_vadc.c ****       }
2097:../Libraries/XMCLib/src/xmc_vadc.c ****     }
2098:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2099:../Libraries/XMCLib/src/xmc_vadc.c ****   return head;
 5116              	 .loc 2 2099 0 is_stmt 1
 5117 0054 7B69     	 ldr r3,[r7,#20]
2100:../Libraries/XMCLib/src/xmc_vadc.c **** }
 5118              	 .loc 2 2100 0
 5119 0056 1846     	 mov r0,r3
 5120 0058 1837     	 adds r7,r7,#24
 5121              	 .cfi_def_cfa_offset 8
 5122 005a BD46     	 mov sp,r7
 5123              	 .cfi_def_cfa_register 13
 5124              	 
 5125 005c 80BD     	 pop {r7,pc}
 5126              	 .cfi_endproc
 5127              	.LFE323:
 5129 005e 00BF     	 .section .text.XMC_VADC_GROUP_IsResultRegisterFifoHead,"ax",%progbits
 5130              	 .align 2
 5131              	 .global XMC_VADC_GROUP_IsResultRegisterFifoHead
 5132              	 .thumb
 5133              	 .thumb_func
 5135              	XMC_VADC_GROUP_IsResultRegisterFifoHead:
 5136              	.LFB324:
2101:../Libraries/XMCLib/src/xmc_vadc.c **** 
2102:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine if the specified result register is the head of a result fifo */
2103:../Libraries/XMCLib/src/xmc_vadc.c **** bool XMC_VADC_GROUP_IsResultRegisterFifoHead(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_
2104:../Libraries/XMCLib/src/xmc_vadc.c **** {
 5137              	 .loc 2 2104 0
 5138              	 .cfi_startproc
 5139              	 
 5140              	 
 5141              	 
 5142 0000 80B4     	 push {r7}
 5143              	 .cfi_def_cfa_offset 4
 5144              	 .cfi_offset 7,-4
 5145 0002 87B0     	 sub sp,sp,#28
 5146              	 .cfi_def_cfa_offset 32
 5147 0004 00AF     	 add r7,sp,#0
 5148              	 .cfi_def_cfa_register 7
 5149 0006 7860     	 str r0,[r7,#4]
 5150 0008 3960     	 str r1,[r7]
2105:../Libraries/XMCLib/src/xmc_vadc.c ****   bool ret_val;
2106:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr_head;
2107:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr_next;
2108:../Libraries/XMCLib/src/xmc_vadc.c **** 
2109:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsResultRegisterFifoHead:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
2110:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsResultRegisterFifoHead:Wrong Result Register",
2111:../Libraries/XMCLib/src/xmc_vadc.c ****              ((res_reg) < XMC_VADC_NUM_RESULT_REGISTERS))
2112:../Libraries/XMCLib/src/xmc_vadc.c **** 
2113:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head = group_ptr->RCR[res_reg];
 5151              	 .loc 2 2113 0
 5152 000a 7B68     	 ldr r3,[r7,#4]
 5153 000c 3A68     	 ldr r2,[r7]
 5154 000e A032     	 adds r2,r2,#160
 5155 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5156 0014 3B61     	 str r3,[r7,#16]
2114:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head &= (uint32_t)VADC_G_RCR_FEN_Msk;
 5157              	 .loc 2 2114 0
 5158 0016 3B69     	 ldr r3,[r7,#16]
 5159 0018 03F0C063 	 and r3,r3,#100663296
 5160 001c 3B61     	 str r3,[r7,#16]
2115:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next = group_ptr->RCR[res_reg - (uint32_t)1];
 5161              	 .loc 2 2115 0
 5162 001e 3B68     	 ldr r3,[r7]
 5163 0020 5A1E     	 subs r2,r3,#1
 5164 0022 7B68     	 ldr r3,[r7,#4]
 5165 0024 A032     	 adds r2,r2,#160
 5166 0026 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5167 002a FB60     	 str r3,[r7,#12]
2116:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next &= (uint32_t)VADC_G_RCR_FEN_Msk;
 5168              	 .loc 2 2116 0
 5169 002c FB68     	 ldr r3,[r7,#12]
 5170 002e 03F0C063 	 and r3,r3,#100663296
 5171 0032 FB60     	 str r3,[r7,#12]
2117:../Libraries/XMCLib/src/xmc_vadc.c **** 
2118:../Libraries/XMCLib/src/xmc_vadc.c ****   if (rcr_head)
 5172              	 .loc 2 2118 0
 5173 0034 3B69     	 ldr r3,[r7,#16]
 5174 0036 002B     	 cmp r3,#0
 5175 0038 02D0     	 beq .L205
2119:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2120:../Libraries/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)false;
 5176              	 .loc 2 2120 0
 5177 003a 0023     	 movs r3,#0
 5178 003c FB75     	 strb r3,[r7,#23]
 5179 003e 07E0     	 b .L206
 5180              	.L205:
2121:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2122:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (rcr_next)
 5181              	 .loc 2 2122 0
 5182 0040 FB68     	 ldr r3,[r7,#12]
 5183 0042 002B     	 cmp r3,#0
 5184 0044 02D0     	 beq .L207
2123:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2124:../Libraries/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)true;
 5185              	 .loc 2 2124 0
 5186 0046 0123     	 movs r3,#1
 5187 0048 FB75     	 strb r3,[r7,#23]
 5188 004a 01E0     	 b .L206
 5189              	.L207:
2125:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2126:../Libraries/XMCLib/src/xmc_vadc.c ****   else
2127:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2128:../Libraries/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)false;
 5190              	 .loc 2 2128 0
 5191 004c 0023     	 movs r3,#0
 5192 004e FB75     	 strb r3,[r7,#23]
 5193              	.L206:
2129:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2130:../Libraries/XMCLib/src/xmc_vadc.c **** 
2131:../Libraries/XMCLib/src/xmc_vadc.c ****   return ret_val;
 5194              	 .loc 2 2131 0
 5195 0050 FB7D     	 ldrb r3,[r7,#23]
2132:../Libraries/XMCLib/src/xmc_vadc.c **** }
 5196              	 .loc 2 2132 0
 5197 0052 1846     	 mov r0,r3
 5198 0054 1C37     	 adds r7,r7,#28
 5199              	 .cfi_def_cfa_offset 4
 5200 0056 BD46     	 mov sp,r7
 5201              	 .cfi_def_cfa_register 13
 5202              	 
 5203 0058 5DF8047B 	 ldr r7,[sp],#4
 5204              	 .cfi_restore 7
 5205              	 .cfi_def_cfa_offset 0
 5206 005c 7047     	 bx lr
 5207              	 .cfi_endproc
 5208              	.LFE324:
 5210 005e 00BF     	 .text
 5211              	.Letext0:
 5212              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5213              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5214              	 .file 5 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 5215              	 .file 6 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc/xmc4_scu.h"
 5216              	 .file 7 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/cmsis_gcc.h"
 5217              	 .file 8 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/core_cm4.h"
 5218              	 .file 9 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_vadc.c
    {standard input}:20     .text.XMC_VADC_GROUP_ExternalMuxControlInit:00000000 $t
    {standard input}:24     .text.XMC_VADC_GROUP_ExternalMuxControlInit:00000000 XMC_VADC_GROUP_ExternalMuxControlInit
    {standard input}:108    .text.XMC_VADC_GROUP_ScanEnableArbitrationSlot:00000000 $t
    {standard input}:112    .text.XMC_VADC_GROUP_ScanEnableArbitrationSlot:00000000 XMC_VADC_GROUP_ScanEnableArbitrationSlot
    {standard input}:147    .text.XMC_VADC_GROUP_ScanDisableArbitrationSlot:00000000 $t
    {standard input}:151    .text.XMC_VADC_GROUP_ScanDisableArbitrationSlot:00000000 XMC_VADC_GROUP_ScanDisableArbitrationSlot
    {standard input}:186    .text.XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:00000000 $t
    {standard input}:190    .text.XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:00000000 XMC_VADC_GROUP_BackgroundEnableArbitrationSlot
    {standard input}:225    .text.XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:00000000 $t
    {standard input}:229    .text.XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:00000000 XMC_VADC_GROUP_BackgroundDisableArbitrationSlot
    {standard input}:264    .text.XMC_VADC_GROUP_QueueEnableArbitrationSlot:00000000 $t
    {standard input}:268    .text.XMC_VADC_GROUP_QueueEnableArbitrationSlot:00000000 XMC_VADC_GROUP_QueueEnableArbitrationSlot
    {standard input}:303    .text.XMC_VADC_GROUP_QueueDisableArbitrationSlot:00000000 $t
    {standard input}:307    .text.XMC_VADC_GROUP_QueueDisableArbitrationSlot:00000000 XMC_VADC_GROUP_QueueDisableArbitrationSlot
    {standard input}:342    .text.XMC_VADC_GROUP_QueueFlushEntries:00000000 $t
    {standard input}:346    .text.XMC_VADC_GROUP_QueueFlushEntries:00000000 XMC_VADC_GROUP_QueueFlushEntries
    {standard input}:390    .rodata.g_xmc_vadc_group_array:00000000 $d
    {standard input}:393    .rodata.g_xmc_vadc_group_array:00000000 g_xmc_vadc_group_array
    {standard input}:399    .text.XMC_VADC_GLOBAL_EnableModule:00000000 $t
    {standard input}:404    .text.XMC_VADC_GLOBAL_EnableModule:00000000 XMC_VADC_GLOBAL_EnableModule
    {standard input}:429    .text.XMC_VADC_GLOBAL_DisableModule:00000000 $t
    {standard input}:434    .text.XMC_VADC_GLOBAL_DisableModule:00000000 XMC_VADC_GLOBAL_DisableModule
    {standard input}:458    .text.XMC_VADC_GLOBAL_Init:00000000 $t
    {standard input}:463    .text.XMC_VADC_GLOBAL_Init:00000000 XMC_VADC_GLOBAL_Init
    {standard input}:523    .text.XMC_VADC_GLOBAL_InputClassInit:00000000 $t
    {standard input}:528    .text.XMC_VADC_GLOBAL_InputClassInit:00000000 XMC_VADC_GLOBAL_InputClassInit
    {standard input}:583    .text.XMC_VADC_GLOBAL_InputClassInit:00000044 $d
    {standard input}:588    .text.XMC_VADC_GLOBAL_StartupCalibration:00000000 $t
    {standard input}:593    .text.XMC_VADC_GLOBAL_StartupCalibration:00000000 XMC_VADC_GLOBAL_StartupCalibration
    {standard input}:668    .text.XMC_VADC_GLOBAL_StartupCalibration:00000060 $d
    {standard input}:673    .text.XMC_VADC_GLOBAL_SetBoundaries:00000000 $t
    {standard input}:678    .text.XMC_VADC_GLOBAL_SetBoundaries:00000000 XMC_VADC_GLOBAL_SetBoundaries
    {standard input}:727    .text.XMC_VADC_GLOBAL_SetIndividualBoundary:00000000 $t
    {standard input}:732    .text.XMC_VADC_GLOBAL_SetIndividualBoundary:00000000 XMC_VADC_GLOBAL_SetIndividualBoundary
    {standard input}:805    .text.XMC_VADC_GLOBAL_SetCompareValue:00000000 $t
    {standard input}:810    .text.XMC_VADC_GLOBAL_SetCompareValue:00000000 XMC_VADC_GLOBAL_SetCompareValue
    {standard input}:856    .text.XMC_VADC_GLOBAL_GetCompareResult:00000000 $t
    {standard input}:861    .text.XMC_VADC_GLOBAL_GetCompareResult:00000000 XMC_VADC_GLOBAL_GetCompareResult
    {standard input}:913    .text.XMC_VADC_GLOBAL_BindGroupToEMux:00000000 $t
    {standard input}:918    .text.XMC_VADC_GLOBAL_BindGroupToEMux:00000000 XMC_VADC_GLOBAL_BindGroupToEMux
    {standard input}:985    .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode:00000000 $t
    {standard input}:990    .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode:00000000 XMC_VADC_GLOBAL_SetResultEventInterruptNode
    {standard input}:1049   .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:1054   .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:00000000 XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode
    {standard input}:1112   .text.XMC_VADC_GROUP_Init:00000000 $t
    {standard input}:1117   .text.XMC_VADC_GROUP_Init:00000000 XMC_VADC_GROUP_Init
    {standard input}:1192   .text.XMC_VADC_GROUP_InputClassInit:00000000 XMC_VADC_GROUP_InputClassInit
    {standard input}:1187   .text.XMC_VADC_GROUP_InputClassInit:00000000 $t
    {standard input}:1314   .text.XMC_VADC_GROUP_SetPowerMode:00000000 $t
    {standard input}:1319   .text.XMC_VADC_GROUP_SetPowerMode:00000000 XMC_VADC_GROUP_SetPowerMode
    {standard input}:1367   .text.XMC_VADC_GROUP_SetSyncSlave:00000000 $t
    {standard input}:1372   .text.XMC_VADC_GROUP_SetSyncSlave:00000000 XMC_VADC_GROUP_SetSyncSlave
    {standard input}:1430   .text.XMC_VADC_GROUP_SetSyncMaster:00000000 $t
    {standard input}:1435   .text.XMC_VADC_GROUP_SetSyncMaster:00000000 XMC_VADC_GROUP_SetSyncMaster
    {standard input}:1476   .text.XMC_VADC_GROUP_CheckSlaveReadiness:00000000 $t
    {standard input}:1481   .text.XMC_VADC_GROUP_CheckSlaveReadiness:00000000 XMC_VADC_GROUP_CheckSlaveReadiness
    {standard input}:1559   .text.XMC_VADC_GROUP_CheckSlaveReadiness:00000064 $d
    {standard input}:1564   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:00000000 $t
    {standard input}:1569   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:00000000 XMC_VADC_GROUP_IgnoreSlaveReadiness
    {standard input}:1648   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:00000064 $d
    {standard input}:1653   .text.XMC_VADC_GROUP_SetSyncSlaveReadySignal:00000000 $t
    {standard input}:1658   .text.XMC_VADC_GROUP_SetSyncSlaveReadySignal:00000000 XMC_VADC_GROUP_SetSyncSlaveReadySignal
    {standard input}:1710   .text.XMC_VADC_GROUP_EnableChannelSyncRequest:00000000 $t
    {standard input}:1715   .text.XMC_VADC_GROUP_EnableChannelSyncRequest:00000000 XMC_VADC_GROUP_EnableChannelSyncRequest
    {standard input}:1765   .text.XMC_VADC_GROUP_DisableChannelSyncRequest:00000000 $t
    {standard input}:1770   .text.XMC_VADC_GROUP_DisableChannelSyncRequest:00000000 XMC_VADC_GROUP_DisableChannelSyncRequest
    {standard input}:1820   .text.XMC_VADC_GROUP_IsConverterBusy:00000000 $t
    {standard input}:1825   .text.XMC_VADC_GROUP_IsConverterBusy:00000000 XMC_VADC_GROUP_IsConverterBusy
    {standard input}:1870   .text.XMC_VADC_GROUP_SetBoundaries:00000000 $t
    {standard input}:1875   .text.XMC_VADC_GROUP_SetBoundaries:00000000 XMC_VADC_GROUP_SetBoundaries
    {standard input}:1935   .text.XMC_VADC_GROUP_SetIndividualBoundary:00000000 $t
    {standard input}:1940   .text.XMC_VADC_GROUP_SetIndividualBoundary:00000000 XMC_VADC_GROUP_SetIndividualBoundary
    {standard input}:2013   .text.XMC_VADC_GROUP_TriggerServiceRequest:00000000 $t
    {standard input}:2018   .text.XMC_VADC_GROUP_TriggerServiceRequest:00000000 XMC_VADC_GROUP_TriggerServiceRequest
    {standard input}:2081   .text.XMC_VADC_GROUP_SetBoundaryEventInterruptNode:00000000 $t
    {standard input}:2086   .text.XMC_VADC_GROUP_SetBoundaryEventInterruptNode:00000000 XMC_VADC_GROUP_SetBoundaryEventInterruptNode
    {standard input}:2142   .text.XMC_VADC_GROUP_ScanInit:00000000 $t
    {standard input}:2147   .text.XMC_VADC_GROUP_ScanInit:00000000 XMC_VADC_GROUP_ScanInit
    {standard input}:2240   .text.XMC_VADC_GROUP_ScanSelectTrigger:00000000 $t
    {standard input}:2245   .text.XMC_VADC_GROUP_ScanSelectTrigger:00000000 XMC_VADC_GROUP_ScanSelectTrigger
    {standard input}:2298   .text.XMC_VADC_GROUP_ScanSelectTriggerEdge:00000000 $t
    {standard input}:2303   .text.XMC_VADC_GROUP_ScanSelectTriggerEdge:00000000 XMC_VADC_GROUP_ScanSelectTriggerEdge
    {standard input}:2356   .text.XMC_VADC_GROUP_ScanSelectGating:00000000 $t
    {standard input}:2361   .text.XMC_VADC_GROUP_ScanSelectGating:00000000 XMC_VADC_GROUP_ScanSelectGating
    {standard input}:2414   .text.XMC_VADC_GROUP_ScanSequenceAbort:00000000 $t
    {standard input}:2419   .text.XMC_VADC_GROUP_ScanSequenceAbort:00000000 XMC_VADC_GROUP_ScanSequenceAbort
    {standard input}:2492   .text.XMC_VADC_GROUP_ScanSequenceAbort:0000007c $d
    {standard input}:2497   .text.XMC_VADC_GROUP_ScanGetNumChannelsPending:00000000 $t
    {standard input}:2502   .text.XMC_VADC_GROUP_ScanGetNumChannelsPending:00000000 XMC_VADC_GROUP_ScanGetNumChannelsPending
    {standard input}:2575   .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:2580   .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:00000000 XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode
    {standard input}:2629   .text.XMC_VADC_GROUP_ScanRemoveChannel:00000000 $t
    {standard input}:2634   .text.XMC_VADC_GROUP_ScanRemoveChannel:00000000 XMC_VADC_GROUP_ScanRemoveChannel
    {standard input}:2681   .text.XMC_VADC_GLOBAL_BackgroundInit:00000000 $t
    {standard input}:2686   .text.XMC_VADC_GLOBAL_BackgroundInit:00000000 XMC_VADC_GLOBAL_BackgroundInit
    {standard input}:2837   .text.XMC_VADC_GLOBAL_BackgroundInit:000000f8 $d
    {standard input}:2842   .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger:00000000 $t
    {standard input}:2847   .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger:00000000 XMC_VADC_GLOBAL_BackgroundSelectTrigger
    {standard input}:2899   .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:00000000 $t
    {standard input}:2904   .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:00000000 XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge
    {standard input}:2957   .text.XMC_VADC_GLOBAL_BackgroundSelectGating:00000000 $t
    {standard input}:2962   .text.XMC_VADC_GLOBAL_BackgroundSelectGating:00000000 XMC_VADC_GLOBAL_BackgroundSelectGating
    {standard input}:3014   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:00000000 $t
    {standard input}:3019   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:00000000 XMC_VADC_GLOBAL_BackgroundAbortSequence
    {standard input}:3124   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:000000a8 $d
    {standard input}:3130   .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:00000000 $t
    {standard input}:3135   .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:00000000 XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending
    {standard input}:3226   .text.XMC_VADC_GROUP_QueueInit:00000000 $t
    {standard input}:3231   .text.XMC_VADC_GROUP_QueueInit:00000000 XMC_VADC_GROUP_QueueInit
    {standard input}:3324   .text.XMC_VADC_GROUP_QueueSelectTrigger:00000000 $t
    {standard input}:3329   .text.XMC_VADC_GROUP_QueueSelectTrigger:00000000 XMC_VADC_GROUP_QueueSelectTrigger
    {standard input}:3382   .text.XMC_VADC_GROUP_QueueSelectTriggerEdge:00000000 $t
    {standard input}:3387   .text.XMC_VADC_GROUP_QueueSelectTriggerEdge:00000000 XMC_VADC_GROUP_QueueSelectTriggerEdge
    {standard input}:3440   .text.XMC_VADC_GROUP_QueueSelectGating:00000000 $t
    {standard input}:3445   .text.XMC_VADC_GROUP_QueueSelectGating:00000000 XMC_VADC_GROUP_QueueSelectGating
    {standard input}:3498   .text.XMC_VADC_GROUP_QueueGetLength:00000000 $t
    {standard input}:3503   .text.XMC_VADC_GROUP_QueueGetLength:00000000 XMC_VADC_GROUP_QueueGetLength
    {standard input}:3569   .text.XMC_VADC_GROUP_QueueAbortSequence:00000000 $t
    {standard input}:3574   .text.XMC_VADC_GROUP_QueueAbortSequence:00000000 XMC_VADC_GROUP_QueueAbortSequence
    {standard input}:3638   .text.XMC_VADC_GROUP_QueueAbortSequence:00000064 $d
    {standard input}:3643   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000000 $t
    {standard input}:3648   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000000 XMC_VADC_GROUP_QueueRemoveChannel
    {standard input}:3741   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000094 $d
    {standard input}:3746   .text.XMC_VADC_GROUP_QueueGetNextChannel:00000000 $t
    {standard input}:3751   .text.XMC_VADC_GROUP_QueueGetNextChannel:00000000 XMC_VADC_GROUP_QueueGetNextChannel
    {standard input}:3813   .text.XMC_VADC_GROUP_QueueGetInterruptedChannel:00000000 $t
    {standard input}:3818   .text.XMC_VADC_GROUP_QueueGetInterruptedChannel:00000000 XMC_VADC_GROUP_QueueGetInterruptedChannel
    {standard input}:3867   .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:3872   .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:00000000 XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
    {standard input}:3920   .text.XMC_VADC_GROUP_ChannelInit:00000000 $t
    {standard input}:3925   .text.XMC_VADC_GROUP_ChannelInit:00000000 XMC_VADC_GROUP_ChannelInit
    {standard input}:4056   .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds:00000000 $t
    {standard input}:4061   .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds:00000000 XMC_VADC_GROUP_ChannelIsResultOutOfBounds
    {standard input}:4136   .text.XMC_VADC_GROUP_ChannelSetInputReference:00000000 $t
    {standard input}:4141   .text.XMC_VADC_GROUP_ChannelSetInputReference:00000000 XMC_VADC_GROUP_ChannelSetInputReference
    {standard input}:4195   .text.XMC_VADC_GROUP_ChannelSetResultRegister:00000000 $t
    {standard input}:4200   .text.XMC_VADC_GROUP_ChannelSetResultRegister:00000000 XMC_VADC_GROUP_ChannelSetResultRegister
    {standard input}:4253   .text.XMC_VADC_GROUP_ChannelSetIclass:00000000 $t
    {standard input}:4258   .text.XMC_VADC_GROUP_ChannelSetIclass:00000000 XMC_VADC_GROUP_ChannelSetIclass
    {standard input}:4311   .text.XMC_VADC_GROUP_ChannelGetResultRegister:00000000 $t
    {standard input}:4316   .text.XMC_VADC_GROUP_ChannelGetResultRegister:00000000 XMC_VADC_GROUP_ChannelGetResultRegister
    {standard input}:4357   .text.XMC_VADC_GROUP_ChannelTriggerEvent:00000000 $t
    {standard input}:4362   .text.XMC_VADC_GROUP_ChannelTriggerEvent:00000000 XMC_VADC_GROUP_ChannelTriggerEvent
    {standard input}:4407   .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode:00000000 $t
    {standard input}:4412   .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode:00000000 XMC_VADC_GROUP_ChannelSetEventInterruptNode
    {standard input}:4470   .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:00000000 $t
    {standard input}:4475   .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:00000000 XMC_VADC_GROUP_ChannelTriggerEventGenCriteria
    {standard input}:4529   .text.XMC_VADC_GROUP_ChannelSetBoundarySelection:00000000 $t
    {standard input}:4534   .text.XMC_VADC_GROUP_ChannelSetBoundarySelection:00000000 XMC_VADC_GROUP_ChannelSetBoundarySelection
    {standard input}:4598   .text.XMC_VADC_GROUP_AddResultToFifo:00000000 $t
    {standard input}:4603   .text.XMC_VADC_GROUP_AddResultToFifo:00000000 XMC_VADC_GROUP_AddResultToFifo
    {standard input}:4653   .text.XMC_VADC_GROUP_SetResultFastCompareValue:00000000 $t
    {standard input}:4658   .text.XMC_VADC_GROUP_SetResultFastCompareValue:00000000 XMC_VADC_GROUP_SetResultFastCompareValue
    {standard input}:4713   .text.XMC_VADC_GROUP_GetFastCompareResult:00000000 $t
    {standard input}:4718   .text.XMC_VADC_GROUP_GetFastCompareResult:00000000 XMC_VADC_GROUP_GetFastCompareResult
    {standard input}:4773   .text.XMC_VADC_GROUP_SetResultSubtractionValue:00000000 $t
    {standard input}:4778   .text.XMC_VADC_GROUP_SetResultSubtractionValue:00000000 XMC_VADC_GROUP_SetResultSubtractionValue
    {standard input}:4827   .text.XMC_VADC_GROUP_SetResultInterruptNode:00000000 $t
    {standard input}:4832   .text.XMC_VADC_GROUP_SetResultInterruptNode:00000000 XMC_VADC_GROUP_SetResultInterruptNode
    {standard input}:4927   .text.XMC_VADC_GROUP_GetResultFifoTail:00000000 $t
    {standard input}:4932   .text.XMC_VADC_GROUP_GetResultFifoTail:00000000 XMC_VADC_GROUP_GetResultFifoTail
    {standard input}:5135   .text.XMC_VADC_GROUP_IsResultRegisterFifoHead:00000000 XMC_VADC_GROUP_IsResultRegisterFifoHead
    {standard input}:5045   .text.XMC_VADC_GROUP_GetResultFifoHead:00000000 $t
    {standard input}:5050   .text.XMC_VADC_GROUP_GetResultFifoHead:00000000 XMC_VADC_GROUP_GetResultFifoHead
    {standard input}:5130   .text.XMC_VADC_GROUP_IsResultRegisterFifoHead:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
