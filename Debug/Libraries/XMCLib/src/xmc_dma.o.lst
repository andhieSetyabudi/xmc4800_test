   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_dma.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_DMA_GetEventStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_DMA_GetEventStatus:
  25              	.LFB133:
  26              	 .file 1 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc/xmc_dma.h"
   1:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
   2:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @file xmc_dma.h
   3:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @date 2018-09-18
   4:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
   5:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @cond
   6:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *****************************************************************************
   7:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
   9:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * All rights reserved.
  11:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  12:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  14:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * do so, all subject to the following:
  20:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  21:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * a source language processor.
  27:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  28:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  36:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * at XMCSupport@infineon.com.
  39:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *****************************************************************************
  40:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  41:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Change History
  42:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * --------------
  43:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  44:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-02-20:
  45:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Initial <br>
  46:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  47:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-06-20:
  48:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Add the declarations for the following APIs: <br>
  49:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  50:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  51:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  52:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Documentation updates <br>
  53:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  54:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  55:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * 2016-10-28:
  56:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Fix documentation on maximum block size
  57:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  58:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * 2017-09-28:
  59:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Improved documentation and added XMC_DMA_CH_EnableFifo() and XMC_DMA_CH_DisableFifo()
  60:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  61:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * 2018-09-18:
  62:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Added XMC_DMA_CH_GetTransferredData()
  63:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  64:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @endcond
  65:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
  66:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
  67:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #ifndef XMC_DMA_H
  68:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA_H
  69:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
  70:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  71:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * HEADER FILES
  72:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
  73:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
  74:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_common.h"
  75:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
  76:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
  77:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
  78:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_dma_map.h"
  79:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
  80:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
  81:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup XMClib XMC Peripheral Library
  82:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
  83:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
  84:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
  85:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
  86:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup DMA
  87:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @brief General purpose DMA (GPDMA) driver for the XMC4000 microcontroller family
  88:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  89:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The GPDMA is a highly configurable DMA controller that allows high-speed data transfers
  90:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * between peripherals and memories. Complex data transfers can be done with minimal
  91:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * intervention of the processor, making CPU available for other operations.
  92:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  93:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA provides extensive support for XMC microcontroller peripherals like A/D, D/A
  94:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * converters and timers. Data transfers through communication interfaces (USIC) using the
  95:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA increase efficiency and parallelism for real-time applications.
  96:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
  97:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The DMA low level driver provides functions to configure and initialize the GPDMA
  98:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * hardware peripheral.
  99:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
 100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * MACROS
 104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
 107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0 ((XMC_DMA_t *)GPDMA0_CH0_BASE) /**< DMA module 0 */
 108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0_NUM_CHANNELS 8
 109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA1)
 112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1 ((XMC_DMA_t *)GPDMA1_CH0_BASE) /**< DMA module 1, only available in XMC45xx series
 113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1_NUM_CHANNELS 4
 114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * ENUMS
 118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer types
 122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_TYPE
 124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK,                                /**< Single block */
 126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD, /**< Multi-block: src addre
 127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD,     /**< Multi-block: src addre
 129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED, /**< Multi-block: src addre
 130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED,     /**< Multi-block: src addre
 131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD,     /**< Multi-block: src addre
 133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED      /**< Multi-block: src addre
 134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_TYPE_t;
 135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer flow modes
 138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_FLOW
 140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2M_DMA    = 0x0UL, /**< Memory to memory (DMA flow controller) */
 142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA    = 0x1UL, /**< Memory to peripheral (DMA flow controller) */
 143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA    = 0x2UL, /**< Peripheral to memory (DMA flow controller) */
 144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA    = 0x3UL, /**< Peripheral to peripheral (DMA flow controller) 
 145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_PER    = 0x4UL, /**< Peripheral to memory (Peripheral flow controlle
 146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_SRCPER = 0x5UL, /**< Peripheral to peripheral (Source peripheral flo
 147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_PER    = 0x6UL, /**< Memory to peripheral (Peripheral flow controlle
 148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DSTPER = 0x7UL  /**< Peripheral to peripheral (Destination periphera
 149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_FLOW_t;
 150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid burst length values
 153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_BURST_LENGTH
 155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_1 = 0x0UL, /**< Burst length: 1 word */
 157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_4 = 0x1UL, /**< Burst length: 4 words */
 158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_8 = 0x2UL  /**< Burst length: 8 words */
 159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_BURST_LENGTH_t;
 160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid transfer width values
 163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_WIDTH
 165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_8  = 0x0UL, /**< 8-bit transfer width */
 167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_16 = 0x1UL, /**< 16-bit transfer width */
 168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_32 = 0x2UL  /**< 32-bit transfer width */
 169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_WIDTH_t;
 170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA address count mode
 173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_ADDRESS_COUNT_MODE
 175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT = 0x0UL, /**< Address count mode: increment */
 177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_DECREMENT = 0x1UL, /**< Address count mode: decrement */
 178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_NO_CHANGE = 0x2UL  /**< Address count mode: no change */
 179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_ADDRESS_COUNT_MODE_t;
 180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel priorities
 183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_PRIORITY
 185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_0 = 0x0UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 0 (low) *
 187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_1 = 0x1UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 1 */
 188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_2 = 0x2UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 2 */
 189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_3 = 0x3UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 3 */
 190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_4 = 0x4UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 4 */
 191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_5 = 0x5UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 5 */
 192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_6 = 0x6UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 6 */
 193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_7 = 0x7UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos  /**< DMA channel priority 7 (high) 
 194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_PRIORITY_t;
 195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Source handshake interface
 198:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 199:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_SRC_HANDSHAKING
 200:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 201:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos, /**< Source: hardwa
 202:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos  /**< Source: softwa
 203:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_SRC_HANDSHAKING_t;
 204:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 205:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 206:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination handshake interface
 207:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 208:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_DST_HANDSHAKING
 209:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 210:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos, /**< Destination: h
 211:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos  /**< Destination: s
 212:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_DST_HANDSHAKING_t;
 213:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 214:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 215:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA hardware handshaking interface
 216:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Hardware handshaking available only if DMA is flow controller
 217:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 218:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_HARDWARE_HANDSHAKING_IF
 219:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 220:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_0 = 0x0UL, /**< Hardware handshaking interface 0 */
 221:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_1 = 0x1UL, /**< Hardware handshaking interface 1 */
 222:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_2 = 0x2UL, /**< Hardware handshaking interface 2 */
 223:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_3 = 0x3UL, /**< Hardware handshaking interface 3 */
 224:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_4 = 0x4UL, /**< Hardware handshaking interface 4 */
 225:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_5 = 0x5UL, /**< Hardware handshaking interface 5 */
 226:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_6 = 0x6UL, /**< Hardware handshaking interface 6 */
 227:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_7 = 0x7UL  /**< Hardware handshaking interface 7 */
 228:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_t;
 229:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 230:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 231:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA events
 232:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 233:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_EVENT
 234:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 235:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_TRANSFER_COMPLETE        = 0x1UL, /**< Transfer complete event */
 236:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE  = 0x2UL, /**< Block transfer complete event */
 237:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE = 0x4UL, /**< Source transaction complete event */
 238:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE = 0x8UL, /**< Destination transaction complete event */
 239:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_ERROR                    = 0x10UL /**< DMA error event */
 240:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_EVENT_t;
 241:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 242:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 243:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Transaction types
 244:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 245:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSACTION_TYPE
 246:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 247:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, /**< Single DMA transaction */
 248:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_BURST   /**< Burst transaction */
 249:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSACTION_TYPE_t;
 250:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 251:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 252:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel status values
 253:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 254:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_STATUS
 255:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 256:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_OK,    /**< DMA status OK */
 257:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_ERROR, /**< DMA status error */
 258:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_BUSY   /**< DMA is busy */
 259:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_STATUS_t;
 260:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 261:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 262:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DATA STRUCTURES
 263:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 264:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 265:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 266:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure <br>
 267:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 268:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 269:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the DMA channel. It is contained within the ::XMC_DMA_t
 270:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * structure. It's registers can be used to configure DMA transfer details
 271:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * like source address, destination address, block size, incrementation
 272:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * modes and the like.
 273:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 274:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 275:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct GPDMA_CH
 276:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 277:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SAR;
 278:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED0;
 279:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DAR;
 280:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED1;
 281:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LLP;
 282:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED2;
 283:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLL;
 284:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLH;
 285:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTAT;
 286:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED3;
 287:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTAT;
 288:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED4;
 289:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTATAR;
 290:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED5;
 291:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTATAR;
 292:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED6;
 293:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGL;
 294:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGH;
 295:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGR;
 296:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED7;
 297:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSR;
 298:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED8;
 299:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } GPDMA_CH_t;
 300:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 301:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 302:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA device structure <br>
 303:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 304:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 305:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the GPDMA peripheral on the XMC4000 series of microcontrollers.
 306:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The registers can be accessed with ::XMC_DMA0 and ::XMC_DMA1.
 307:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 308:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA
 309:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 310:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   GPDMA_CH_t CH[8];
 311:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 312:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  RAWCHEV[10];
 313:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSCHEV[10];
 314:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  MASKCHEV[10];
 315:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __O  uint32_t  CLEARCHEV[10];
 316:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSGLEV;
 317:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED20;
 318:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQSRCREG;
 319:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED21;
 320:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQDSTREG;
 321:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED22;
 322:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQSRCREG;
 323:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED23;
 324:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQDSTREG;
 325:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED24;
 326:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTSRCREG;
 327:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED25;
 328:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTDSTREG;
 329:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED26;
 330:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DMACFGREG;
 331:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED27;
 332:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CHENREG;
 333:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED28;
 334:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  ID;
 335:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED29[19];
 336:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  TYPE;
 337:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  VERSION;
 338:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_t;
 339:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 340:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard start */
 341:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 342:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #pragma push
 343:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #pragma anon_unions
 344:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 345:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #pragma warning 586
 346:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 347:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 348:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 349:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel linked list item.
 350:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Note: Needs to be word aligned
 351:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 352:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_LLI
 353:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 354:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 355:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 356:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   struct XMC_DMA_LLI *llp;                      /**< Linked list pointer of type XMC_DMA_LLI_t */
 357:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   union
 358:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   {
 359:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 360:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     {
 361:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 362:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width (:: XMC_DMA_CH_TRAN
 363:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width (:: XMC_DMA_CH_TRANSFER_
 364:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode (:: XMC_DMA_CH_
 365:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode (:: XMC_DMA_CH_ADDRE
 366:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length (:: XMC_DMA_CH_BURST_
 367:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length (:: XMC_DMA_CH_BURST_LENGT
 368:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 369:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 370:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             /**< Reserved bits */
 371:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow (:: XMC_DMA_CH_TRANSFER_FLOW
 372:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 4;                             /**< Reserved bits */
 373:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_linked_list: 1;       /**< Enable destination linked list? */
 374:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_linked_list: 1;       /**< Enable source linked list? */
 375:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 3;                             /**< Reserved bits */
 376:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     };
 377:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 378:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   };
 379:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t block_size;                          /**< Transfer block size */
 380:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_status;                          /**< Source status */
 381:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_status;                          /**< Destination status */
 382:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_LLI_t;
 383:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 384:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef XMC_DMA_LLI_t **XMC_DMA_LIST_t;         /**< Type definition for a linked list pointer */
 385:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 386:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 387:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure
 388:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 389:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_CH_CONFIG
 390:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 391:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   union
 392:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   {
 393:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 394:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 395:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     {
 396:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 397:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width (:: XMC_DMA_CH_TRAN
 398:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width (:: XMC_DMA_CH_TRANSFER_
 399:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode (:: XMC_DMA_CH_
 400:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode (:: XMC_DMA_CH_ADDRE
 401:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length (:: XMC_DMA_CH_BURST_
 402:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length (:: XMC_DMA_CH_BURST_LENGT
 403:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 404:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 405:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;
 406:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow (:: XMC_DMA_CH_TRANSFER_FLOW
 407:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 9;
 408:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     };
 409:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   };
 410:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 411:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 412:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 413:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_LLI_t *linked_list_pointer;           /**< Linked list pointer */
 414:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 415:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   union
 416:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   {
 417:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t src_gather_control;
 418:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 419:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     {
 420:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_interval: 20;         /**< Source gather interval */
 421:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_count: 12;            /**< Source gather count */
 422:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     };
 423:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   };
 424:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 425:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   union
 426:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   {
 427:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t dst_scatter_control;
 428:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 429:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     {
 430:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_interval: 20;        /**< Destination scatter interval */
 431:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_count: 12;           /**< Destination scatter count */
 432:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****     };
 433:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   };
 434:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 435:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   uint16_t block_size;                          /**< Block size for DMA controlled transfers [max. 
 436:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_t transfer_type;     /**< DMA transfer type (:: XMC_DMA_CH_TRANSFER_TYPE
 437:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_t priority;               /**< DMA channel priority (::XMC_DMA_CH_PRIORITY_t)
 438:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_t src_handshaking; /**< DMA source handshaking interface (:: XMC_DMA_C
 439:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t src_peripheral_request;               /**< Source peripheral request. See xmc_dma_map.h *
 440:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_t dst_handshaking; /**< DMA destination handshaking interface (:: XMC_
 441:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t dst_peripheral_request;               /**< Destination peripheral request. See xmc_dma_ma
 442:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_CONFIG_t;
 443:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 444:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard end */
 445:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 446:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #pragma pop
 447:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 448:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #pragma warning restore
 449:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 450:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 451:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 452:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel event handler
 453:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 454:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** typedef void (*XMC_DMA_CH_EVENT_HANDLER_t)(XMC_DMA_CH_EVENT_t event);
 455:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 456:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 457:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * API PROTOTYPES
 458:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 459:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 460:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #ifdef __cplusplus
 461:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** extern "C" {
 462:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 463:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 464:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 465:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 466:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 467:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 468:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 469:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Initialize the GPDMA peripheral <br>
 470:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 471:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 472:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The function initializes a prioritized list of DMA channels and enables the GPDMA
 473:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral.
 474:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 475:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Init(XMC_DMA_t *const dma);
 476:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 477:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 478:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 479:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 480:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 481:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 482:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Enable the GPDMA peripheral <br>
 483:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 484:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 485:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The function de-asserts the GPDMA peripheral reset. In addition, it un-gates the
 486:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA0 peripheral clock for all XMC4000 series of microcontrollers with an exception
 487:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * of the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 488:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 489:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Enable(XMC_DMA_t *const dma);
 490:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 491:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 492:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 493:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 494:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 495:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 496:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Disable the GPDMA peripheral <br>
 497:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 498:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 499:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The function asserts the GPDMA peripheral reset. In addition, it gates the GPDMA0
 500:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral clock for all XMC4000 series of microcontrollers with an exception of
 501:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 502:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 503:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Disable(XMC_DMA_t *const dma);
 504:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 505:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 506:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 507:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @return bool
 508:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 509:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 510:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Check if the GPDMA peripheral is enabled <br>
 511:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 512:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 513:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * For the XMC4500 microcontroller, the function checks if the GPDMA module is asserted
 514:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * and returns "false" if it is. In addition, it also checks if the clock is gated
 515:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * for the other XMC4000 series of microcontrollers. It returns "true" if the peripheral
 516:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * is enabled.
 517:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 518:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma);
 519:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 520:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 521:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 522:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 523:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 524:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 525:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA event status <br>
 526:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 527:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 528:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the collective (global) status of GPDMA events. The following
 529:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * lists the various DMA events and their corresponding enumeration. The return value
 530:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * of this function may then be masked with any one of the following enumerations to
 531:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * obtain the status of individual DMA events. <br>
 532:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 533:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 534:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Transfer complete -> ::XMC_DMA_CH_EVENT_TRANSFER_COMPLETE                       <br>
 535:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Block transfer complete -> ::XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE           <br>
 536:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Source transaction complete -> ::XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE      <br>
 537:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination transaction complete -> ::XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE <br>
 538:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA error event -> ::XMC_DMA_CH_EVENT_ERROR                                     <br>
 539:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 540:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetEventStatus(XMC_DMA_t *const dma)
 541:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
  27              	 .loc 1 541 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 83B0     	 sub sp,sp,#12
  36              	 .cfi_def_cfa_offset 16
  37 0004 00AF     	 add r7,sp,#0
  38              	 .cfi_def_cfa_register 7
  39 0006 7860     	 str r0,[r7,#4]
 542:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSGLEV);
  40              	 .loc 1 542 0
  41 0008 7B68     	 ldr r3,[r7,#4]
  42 000a D3F86033 	 ldr r3,[r3,#864]
 543:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** }
  43              	 .loc 1 543 0
  44 000e 1846     	 mov r0,r3
  45 0010 0C37     	 adds r7,r7,#12
  46              	 .cfi_def_cfa_offset 4
  47 0012 BD46     	 mov sp,r7
  48              	 .cfi_def_cfa_register 13
  49              	 
  50 0014 5DF8047B 	 ldr r7,[sp],#4
  51              	 .cfi_restore 7
  52              	 .cfi_def_cfa_offset 0
  53 0018 7047     	 bx lr
  54              	 .cfi_endproc
  55              	.LFE133:
  57 001a 00BF     	 .section .text.XMC_DMA_GetChannelsTransferCompleteStatus,"ax",%progbits
  58              	 .align 2
  59              	 .thumb
  60              	 .thumb_func
  62              	XMC_DMA_GetChannelsTransferCompleteStatus:
  63              	.LFB134:
 544:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 545:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 546:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 547:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA transfer complete status
 548:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 549:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 550:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Get transfer complete status <br>
 551:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 552:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 553:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA transfer complete interrupt status. <br>
 554:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 555:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsTransferCompleteStatus(XMC_DMA_t *const dma)
 556:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
  64              	 .loc 1 556 0
  65              	 .cfi_startproc
  66              	 
  67              	 
  68              	 
  69 0000 80B4     	 push {r7}
  70              	 .cfi_def_cfa_offset 4
  71              	 .cfi_offset 7,-4
  72 0002 83B0     	 sub sp,sp,#12
  73              	 .cfi_def_cfa_offset 16
  74 0004 00AF     	 add r7,sp,#0
  75              	 .cfi_def_cfa_register 7
  76 0006 7860     	 str r0,[r7,#4]
 557:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[0]);
  77              	 .loc 1 557 0
  78 0008 7B68     	 ldr r3,[r7,#4]
  79 000a D3F8E832 	 ldr r3,[r3,#744]
 558:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** }
  80              	 .loc 1 558 0
  81 000e 1846     	 mov r0,r3
  82 0010 0C37     	 adds r7,r7,#12
  83              	 .cfi_def_cfa_offset 4
  84 0012 BD46     	 mov sp,r7
  85              	 .cfi_def_cfa_register 13
  86              	 
  87 0014 5DF8047B 	 ldr r7,[sp],#4
  88              	 .cfi_restore 7
  89              	 .cfi_def_cfa_offset 0
  90 0018 7047     	 bx lr
  91              	 .cfi_endproc
  92              	.LFE134:
  94 001a 00BF     	 .section .text.XMC_DMA_GetChannelsBlockCompleteStatus,"ax",%progbits
  95              	 .align 2
  96              	 .thumb
  97              	 .thumb_func
  99              	XMC_DMA_GetChannelsBlockCompleteStatus:
 100              	.LFB135:
 559:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 560:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 561:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 562:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA block complete status
 563:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 564:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 565:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Get block transfer complete status <br>
 566:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 567:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 568:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA block transfer complete interrupt status. <br>
 569:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 570:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsBlockCompleteStatus(XMC_DMA_t *const dma)
 571:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 101              	 .loc 1 571 0
 102              	 .cfi_startproc
 103              	 
 104              	 
 105              	 
 106 0000 80B4     	 push {r7}
 107              	 .cfi_def_cfa_offset 4
 108              	 .cfi_offset 7,-4
 109 0002 83B0     	 sub sp,sp,#12
 110              	 .cfi_def_cfa_offset 16
 111 0004 00AF     	 add r7,sp,#0
 112              	 .cfi_def_cfa_register 7
 113 0006 7860     	 str r0,[r7,#4]
 572:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[2]);
 114              	 .loc 1 572 0
 115 0008 7B68     	 ldr r3,[r7,#4]
 116 000a D3F8F032 	 ldr r3,[r3,#752]
 573:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** }
 117              	 .loc 1 573 0
 118 000e 1846     	 mov r0,r3
 119 0010 0C37     	 adds r7,r7,#12
 120              	 .cfi_def_cfa_offset 4
 121 0012 BD46     	 mov sp,r7
 122              	 .cfi_def_cfa_register 13
 123              	 
 124 0014 5DF8047B 	 ldr r7,[sp],#4
 125              	 .cfi_restore 7
 126              	 .cfi_def_cfa_offset 0
 127 0018 7047     	 bx lr
 128              	 .cfi_endproc
 129              	.LFE135:
 131 001a 00BF     	 .section .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus,"ax",%progbits
 132              	 .align 2
 133              	 .thumb
 134              	 .thumb_func
 136              	XMC_DMA_GetChannelsSourceTransactionCompleteStatus:
 137              	.LFB136:
 574:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 575:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 576:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 577:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 578:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 579:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 580:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Get source transaction complete status <br>
 581:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 582:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 583:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the source transaction complete interrupt status. <br>
 584:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 585:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 586:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * If the source peripheral is memory, the source transaction complete interrupt is
 587:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * ignored.
 588:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 589:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsSourceTransactionCompleteStatus(XMC_DMA_t *const dma)
 590:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 138              	 .loc 1 590 0
 139              	 .cfi_startproc
 140              	 
 141              	 
 142              	 
 143 0000 80B4     	 push {r7}
 144              	 .cfi_def_cfa_offset 4
 145              	 .cfi_offset 7,-4
 146 0002 83B0     	 sub sp,sp,#12
 147              	 .cfi_def_cfa_offset 16
 148 0004 00AF     	 add r7,sp,#0
 149              	 .cfi_def_cfa_register 7
 150 0006 7860     	 str r0,[r7,#4]
 591:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[4]);
 151              	 .loc 1 591 0
 152 0008 7B68     	 ldr r3,[r7,#4]
 153 000a D3F8F832 	 ldr r3,[r3,#760]
 592:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** }
 154              	 .loc 1 592 0
 155 000e 1846     	 mov r0,r3
 156 0010 0C37     	 adds r7,r7,#12
 157              	 .cfi_def_cfa_offset 4
 158 0012 BD46     	 mov sp,r7
 159              	 .cfi_def_cfa_register 13
 160              	 
 161 0014 5DF8047B 	 ldr r7,[sp],#4
 162              	 .cfi_restore 7
 163              	 .cfi_def_cfa_offset 0
 164 0018 7047     	 bx lr
 165              	 .cfi_endproc
 166              	.LFE136:
 168 001a 00BF     	 .section .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus,"ax",%progbits
 169              	 .align 2
 170              	 .thumb
 171              	 .thumb_func
 173              	XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:
 174              	.LFB137:
 593:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 594:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 595:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 596:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 597:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 598:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 599:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Get destination transaction complete status <br>
 600:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 601:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 602:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the destination transaction complete interrupt status <br>
 603:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 604:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 605:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * If the destination peripheral is memory, the destination transaction complete
 606:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * interrupt is ignored.
 607:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 608:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(XMC_DMA_t *const d
 609:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 175              	 .loc 1 609 0
 176              	 .cfi_startproc
 177              	 
 178              	 
 179              	 
 180 0000 80B4     	 push {r7}
 181              	 .cfi_def_cfa_offset 4
 182              	 .cfi_offset 7,-4
 183 0002 83B0     	 sub sp,sp,#12
 184              	 .cfi_def_cfa_offset 16
 185 0004 00AF     	 add r7,sp,#0
 186              	 .cfi_def_cfa_register 7
 187 0006 7860     	 str r0,[r7,#4]
 610:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[6]);
 188              	 .loc 1 610 0
 189 0008 7B68     	 ldr r3,[r7,#4]
 190 000a D3F80033 	 ldr r3,[r3,#768]
 611:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** }
 191              	 .loc 1 611 0
 192 000e 1846     	 mov r0,r3
 193 0010 0C37     	 adds r7,r7,#12
 194              	 .cfi_def_cfa_offset 4
 195 0012 BD46     	 mov sp,r7
 196              	 .cfi_def_cfa_register 13
 197              	 
 198 0014 5DF8047B 	 ldr r7,[sp],#4
 199              	 .cfi_restore 7
 200              	 .cfi_def_cfa_offset 0
 201 0018 7047     	 bx lr
 202              	 .cfi_endproc
 203              	.LFE137:
 205 001a 00BF     	 .section .text.XMC_DMA_GetChannelsErrorStatus,"ax",%progbits
 206              	 .align 2
 207              	 .thumb
 208              	 .thumb_func
 210              	XMC_DMA_GetChannelsErrorStatus:
 211              	.LFB138:
 612:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** 
 613:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** /**
 614:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 615:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA error event status
 616:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 617:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 618:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA error event status <br>
 619:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  *
 620:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 621:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns error interrupt status. <br>
 622:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****  */
 623:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsErrorStatus(XMC_DMA_t *const dma)
 624:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** {
 212              	 .loc 1 624 0
 213              	 .cfi_startproc
 214              	 
 215              	 
 216              	 
 217 0000 80B4     	 push {r7}
 218              	 .cfi_def_cfa_offset 4
 219              	 .cfi_offset 7,-4
 220 0002 83B0     	 sub sp,sp,#12
 221              	 .cfi_def_cfa_offset 16
 222 0004 00AF     	 add r7,sp,#0
 223              	 .cfi_def_cfa_register 7
 224 0006 7860     	 str r0,[r7,#4]
 625:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[8]);
 225              	 .loc 1 625 0
 226 0008 7B68     	 ldr r3,[r7,#4]
 227 000a D3F80833 	 ldr r3,[r3,#776]
 626:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_dma.h **** }
 228              	 .loc 1 626 0
 229 000e 1846     	 mov r0,r3
 230 0010 0C37     	 adds r7,r7,#12
 231              	 .cfi_def_cfa_offset 4
 232 0012 BD46     	 mov sp,r7
 233              	 .cfi_def_cfa_register 13
 234              	 
 235 0014 5DF8047B 	 ldr r7,[sp],#4
 236              	 .cfi_restore 7
 237              	 .cfi_def_cfa_offset 0
 238 0018 7047     	 bx lr
 239              	 .cfi_endproc
 240              	.LFE138:
 242 001a 00BF     	 .section .bss.dma0_event_handlers,"aw",%nobits
 243              	 .align 2
 246              	dma0_event_handlers:
 247 0000 00000000 	 .space 32
 247      00000000 
 247      00000000 
 247      00000000 
 247      00000000 
 248              	 .section .bss.dma1_event_handlers,"aw",%nobits
 249              	 .align 2
 252              	dma1_event_handlers:
 253 0000 00000000 	 .space 16
 253      00000000 
 253      00000000 
 253      00000000 
 254              	 .section .text.XMC_DMA_Init,"ax",%progbits
 255              	 .align 2
 256              	 .global XMC_DMA_Init
 257              	 .thumb
 258              	 .thumb_func
 260              	XMC_DMA_Init:
 261              	.LFB188:
 262              	 .file 2 "../Libraries/XMCLib/src/xmc_dma.c"
   1:../Libraries/XMCLib/src/xmc_dma.c **** 
   2:../Libraries/XMCLib/src/xmc_dma.c **** /**
   3:../Libraries/XMCLib/src/xmc_dma.c ****  * @file xmc_dma.c
   4:../Libraries/XMCLib/src/xmc_dma.c ****  * @date 2019-05-07
   5:../Libraries/XMCLib/src/xmc_dma.c ****  *
   6:../Libraries/XMCLib/src/xmc_dma.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_dma.c ****  *****************************************************************************
   8:../Libraries/XMCLib/src/xmc_dma.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   9:../Libraries/XMCLib/src/xmc_dma.c ****  *
  10:../Libraries/XMCLib/src/xmc_dma.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_dma.c ****  * All rights reserved.
  12:../Libraries/XMCLib/src/xmc_dma.c ****  *
  13:../Libraries/XMCLib/src/xmc_dma.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  14:../Libraries/XMCLib/src/xmc_dma.c ****  *
  15:../Libraries/XMCLib/src/xmc_dma.c ****  * Permission is hereby granted, free of charge, to any person or organization
  16:../Libraries/XMCLib/src/xmc_dma.c ****  * obtaining a copy of the software and accompanying documentation covered by
  17:../Libraries/XMCLib/src/xmc_dma.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  18:../Libraries/XMCLib/src/xmc_dma.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  19:../Libraries/XMCLib/src/xmc_dma.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  20:../Libraries/XMCLib/src/xmc_dma.c ****  * do so, all subject to the following:
  21:../Libraries/XMCLib/src/xmc_dma.c ****  *
  22:../Libraries/XMCLib/src/xmc_dma.c ****  * The copyright notices in the Software and this entire statement, including
  23:../Libraries/XMCLib/src/xmc_dma.c ****  * the above license grant, this restriction and the following disclaimer,
  24:../Libraries/XMCLib/src/xmc_dma.c ****  * must be included in all copies of the Software, in whole or in part, and
  25:../Libraries/XMCLib/src/xmc_dma.c ****  * all derivative works of the Software, unless such copies or derivative
  26:../Libraries/XMCLib/src/xmc_dma.c ****  * works are solely in the form of machine-executable object code generated by
  27:../Libraries/XMCLib/src/xmc_dma.c ****  * a source language processor.
  28:../Libraries/XMCLib/src/xmc_dma.c ****  *
  29:../Libraries/XMCLib/src/xmc_dma.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  30:../Libraries/XMCLib/src/xmc_dma.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  31:../Libraries/XMCLib/src/xmc_dma.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  32:../Libraries/XMCLib/src/xmc_dma.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  33:../Libraries/XMCLib/src/xmc_dma.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  34:../Libraries/XMCLib/src/xmc_dma.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  35:../Libraries/XMCLib/src/xmc_dma.c ****  * DEALINGS IN THE SOFTWARE.
  36:../Libraries/XMCLib/src/xmc_dma.c ****  *
  37:../Libraries/XMCLib/src/xmc_dma.c ****  * To improve the quality of the software, users are encouraged to share
  38:../Libraries/XMCLib/src/xmc_dma.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  39:../Libraries/XMCLib/src/xmc_dma.c ****  * at XMCSupport@infineon.com.
  40:../Libraries/XMCLib/src/xmc_dma.c ****  *****************************************************************************
  41:../Libraries/XMCLib/src/xmc_dma.c ****  *
  42:../Libraries/XMCLib/src/xmc_dma.c ****  * Change History
  43:../Libraries/XMCLib/src/xmc_dma.c ****  * --------------
  44:../Libraries/XMCLib/src/xmc_dma.c ****  *
  45:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-02-20:
  46:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Initial <br>
  47:../Libraries/XMCLib/src/xmc_dma.c ****  *
  48:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-05-20:
  49:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Add the declarations for the following APIs: <br>
  50:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  51:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  52:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  53:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Remove PRIOARRAY <br>
  54:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Documentation updates <br>
  55:../Libraries/XMCLib/src/xmc_dma.c ****  *
  56:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-06-20:
  57:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Removed GetDriverVersion API <br>
  58:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Init() to support scatter/gather functionality (only
  59:../Libraries/XMCLib/src/xmc_dma.c ****  *       on advanced DMA channels) <br>
  60:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Disable() <br>
  61:../Libraries/XMCLib/src/xmc_dma.c ****  *
  62:../Libraries/XMCLib/src/xmc_dma.c ****  * 2016-03-09:
  63:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Optimize write only registers
  64:../Libraries/XMCLib/src/xmc_dma.c ****  *
  65:../Libraries/XMCLib/src/xmc_dma.c ****  * 2016-04-08:
  66:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Update XMC_DMA_CH_EnableEvent and XMC_DMA_CH_DisableEvent.
  67:../Libraries/XMCLib/src/xmc_dma.c ****  *       Write optimization of MASKCHEV
  68:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fix XMC_DMA_IRQHandler, clear channel event status before processing the event handler.
  69:../Libraries/XMCLib/src/xmc_dma.c ****  *       It corrects event losses if the DMA triggered in the event handler finished before returni
  70:../Libraries/XMCLib/src/xmc_dma.c ****  *
  71:../Libraries/XMCLib/src/xmc_dma.c ****  * 2018-02-08:
  72:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fix XMC_DMA_CH_RequestLastMultiblockTransfer() clearing CTLL_LLP_SRC_EN and CTLL_LLP_DST_E
  73:../Libraries/XMCLib/src/xmc_dma.c ****  *
  74:../Libraries/XMCLib/src/xmc_dma.c ****  * 2019-05-07:
  75:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fixed compilation warnings
  76:../Libraries/XMCLib/src/xmc_dma.c ****  *
  77:../Libraries/XMCLib/src/xmc_dma.c ****  * @endcond
  78:../Libraries/XMCLib/src/xmc_dma.c ****  */
  79:../Libraries/XMCLib/src/xmc_dma.c **** 
  80:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  81:../Libraries/XMCLib/src/xmc_dma.c ****  * HEADER FILES
  82:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  83:../Libraries/XMCLib/src/xmc_dma.c **** 
  84:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_dma.h"
  85:../Libraries/XMCLib/src/xmc_dma.c **** 
  86:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
  87:../Libraries/XMCLib/src/xmc_dma.c **** 
  88:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_scu.h"
  89:../Libraries/XMCLib/src/xmc_dma.c **** 
  90:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  91:../Libraries/XMCLib/src/xmc_dma.c ****  * MACROS
  92:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  93:../Libraries/XMCLib/src/xmc_dma.c **** 
  94:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_MSK (0xfUL)
  95:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_BITSIZE (4UL)
  96:../Libraries/XMCLib/src/xmc_dma.c **** #define DMA_EVENT_MAX (5UL)
  97:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_DEST_PER_Pos GPDMA0_CH_CFGH_DEST_PER_Pos
  98:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_SRC_PER_Pos GPDMA0_CH_CFGH_SRC_PER_Pos
  99:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA0_CH_CFGH_PER_Msk (0x7U)
 100:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA1_CH_CFGH_PER_Msk (0x3U)
 101:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_PER_BITSIZE (4U)
 102:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CTLL_INT_EN_Msk GPDMA0_CH_CTLL_INT_EN_Msk
 103:../Libraries/XMCLib/src/xmc_dma.c **** 
 104:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
 105:../Libraries/XMCLib/src/xmc_dma.c ****  * LOCAL DATA
 106:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
 107:../Libraries/XMCLib/src/xmc_dma.c **** 
 108:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
 109:../Libraries/XMCLib/src/xmc_dma.c **** static XMC_DMA_CH_EVENT_HANDLER_t dma0_event_handlers[XMC_DMA0_NUM_CHANNELS];
 110:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 111:../Libraries/XMCLib/src/xmc_dma.c **** 
 112:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA1)
 113:../Libraries/XMCLib/src/xmc_dma.c **** static XMC_DMA_CH_EVENT_HANDLER_t dma1_event_handlers[XMC_DMA1_NUM_CHANNELS];
 114:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 115:../Libraries/XMCLib/src/xmc_dma.c **** 
 116:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
 117:../Libraries/XMCLib/src/xmc_dma.c ****  * API IMPLEMENTATION
 118:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
 119:../Libraries/XMCLib/src/xmc_dma.c **** 
 120:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize GPDMA */
 121:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Init(XMC_DMA_t *const dma)
 122:../Libraries/XMCLib/src/xmc_dma.c **** {
 263              	 .loc 2 122 0
 264              	 .cfi_startproc
 265              	 
 266              	 
 267 0000 80B5     	 push {r7,lr}
 268              	 .cfi_def_cfa_offset 8
 269              	 .cfi_offset 7,-8
 270              	 .cfi_offset 14,-4
 271 0002 82B0     	 sub sp,sp,#8
 272              	 .cfi_def_cfa_offset 16
 273 0004 00AF     	 add r7,sp,#0
 274              	 .cfi_def_cfa_register 7
 275 0006 7860     	 str r0,[r7,#4]
 123:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_Enable(dma);
 276              	 .loc 2 123 0
 277 0008 7868     	 ldr r0,[r7,#4]
 278 000a FFF7FEFF 	 bl XMC_DMA_Enable
 124:../Libraries/XMCLib/src/xmc_dma.c **** }
 279              	 .loc 2 124 0
 280 000e 0837     	 adds r7,r7,#8
 281              	 .cfi_def_cfa_offset 8
 282 0010 BD46     	 mov sp,r7
 283              	 .cfi_def_cfa_register 13
 284              	 
 285 0012 80BD     	 pop {r7,pc}
 286              	 .cfi_endproc
 287              	.LFE188:
 289              	 .section .text.XMC_DMA_Enable,"ax",%progbits
 290              	 .align 2
 291              	 .global XMC_DMA_Enable
 292              	 .thumb
 293              	 .thumb_func
 295              	XMC_DMA_Enable:
 296              	.LFB189:
 125:../Libraries/XMCLib/src/xmc_dma.c **** 
 126:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA module */
 127:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Enable(XMC_DMA_t *const dma)
 128:../Libraries/XMCLib/src/xmc_dma.c **** {
 297              	 .loc 2 128 0
 298              	 .cfi_startproc
 299              	 
 300              	 
 301 0000 80B5     	 push {r7,lr}
 302              	 .cfi_def_cfa_offset 8
 303              	 .cfi_offset 7,-8
 304              	 .cfi_offset 14,-4
 305 0002 82B0     	 sub sp,sp,#8
 306              	 .cfi_def_cfa_offset 16
 307 0004 00AF     	 add r7,sp,#0
 308              	 .cfi_def_cfa_register 7
 309 0006 7860     	 str r0,[r7,#4]
 129:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 130:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 310              	 .loc 2 130 0
 311 0008 7B68     	 ldr r3,[r7,#4]
 312 000a 0B4A     	 ldr r2,.L17
 313 000c 9342     	 cmp r3,r2
 314 000e 06D1     	 bne .L15
 131:../Libraries/XMCLib/src/xmc_dma.c ****   {
 132:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 133:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 134:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 315              	 .loc 2 134 0
 316 0010 0A48     	 ldr r0,.L17+4
 317 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 135:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 136:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 318              	 .loc 2 136 0
 319 0016 0948     	 ldr r0,.L17+4
 320 0018 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 321 001c 05E0     	 b .L16
 322              	.L15:
 137:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 138:../Libraries/XMCLib/src/xmc_dma.c ****   }
 139:../Libraries/XMCLib/src/xmc_dma.c ****   else
 140:../Libraries/XMCLib/src/xmc_dma.c ****   {
 141:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 142:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 323              	 .loc 2 142 0
 324 001e 0848     	 ldr r0,.L17+8
 325 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 143:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 144:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 326              	 .loc 2 144 0
 327 0024 0648     	 ldr r0,.L17+8
 328 0026 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 329              	.L16:
 145:../Libraries/XMCLib/src/xmc_dma.c ****   }
 146:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 147:../Libraries/XMCLib/src/xmc_dma.c **** 
 148:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x1U;
 330              	 .loc 2 148 0
 331 002a 7B68     	 ldr r3,[r7,#4]
 332 002c 0122     	 movs r2,#1
 333 002e C3F89823 	 str r2,[r3,#920]
 149:../Libraries/XMCLib/src/xmc_dma.c **** }
 334              	 .loc 2 149 0
 335 0032 0837     	 adds r7,r7,#8
 336              	 .cfi_def_cfa_offset 8
 337 0034 BD46     	 mov sp,r7
 338              	 .cfi_def_cfa_register 13
 339              	 
 340 0036 80BD     	 pop {r7,pc}
 341              	.L18:
 342              	 .align 2
 343              	.L17:
 344 0038 00400150 	 .word 1342259200
 345 003c 10000020 	 .word 536870928
 346 0040 20000020 	 .word 536870944
 347              	 .cfi_endproc
 348              	.LFE189:
 350              	 .section .text.XMC_DMA_Disable,"ax",%progbits
 351              	 .align 2
 352              	 .global XMC_DMA_Disable
 353              	 .thumb
 354              	 .thumb_func
 356              	XMC_DMA_Disable:
 357              	.LFB190:
 150:../Libraries/XMCLib/src/xmc_dma.c **** 
 151:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA module */
 152:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Disable(XMC_DMA_t *const dma)
 153:../Libraries/XMCLib/src/xmc_dma.c **** {
 358              	 .loc 2 153 0
 359              	 .cfi_startproc
 360              	 
 361              	 
 362 0000 80B5     	 push {r7,lr}
 363              	 .cfi_def_cfa_offset 8
 364              	 .cfi_offset 7,-8
 365              	 .cfi_offset 14,-4
 366 0002 82B0     	 sub sp,sp,#8
 367              	 .cfi_def_cfa_offset 16
 368 0004 00AF     	 add r7,sp,#0
 369              	 .cfi_def_cfa_register 7
 370 0006 7860     	 str r0,[r7,#4]
 154:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x0U;
 371              	 .loc 2 154 0
 372 0008 7B68     	 ldr r3,[r7,#4]
 373 000a 0022     	 movs r2,#0
 374 000c C3F89823 	 str r2,[r3,#920]
 155:../Libraries/XMCLib/src/xmc_dma.c **** 
 156:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 157:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 375              	 .loc 2 157 0
 376 0010 7B68     	 ldr r3,[r7,#4]
 377 0012 094A     	 ldr r2,.L22
 378 0014 9342     	 cmp r3,r2
 379 0016 06D1     	 bne .L20
 158:../Libraries/XMCLib/src/xmc_dma.c ****   {
 159:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 160:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 380              	 .loc 2 160 0
 381 0018 0848     	 ldr r0,.L22+4
 382 001a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 161:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 162:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 383              	 .loc 2 162 0
 384 001e 0748     	 ldr r0,.L22+4
 385 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 386 0024 05E0     	 b .L19
 387              	.L20:
 163:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 164:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 165:../Libraries/XMCLib/src/xmc_dma.c ****   }
 166:../Libraries/XMCLib/src/xmc_dma.c ****   else
 167:../Libraries/XMCLib/src/xmc_dma.c ****   {
 168:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 388              	 .loc 2 168 0
 389 0026 0648     	 ldr r0,.L22+8
 390 0028 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 169:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 170:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 391              	 .loc 2 170 0
 392 002c 0448     	 ldr r0,.L22+8
 393 002e FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 394              	.L19:
 171:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 172:../Libraries/XMCLib/src/xmc_dma.c ****   }
 173:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 174:../Libraries/XMCLib/src/xmc_dma.c **** }
 395              	 .loc 2 174 0
 396 0032 0837     	 adds r7,r7,#8
 397              	 .cfi_def_cfa_offset 8
 398 0034 BD46     	 mov sp,r7
 399              	 .cfi_def_cfa_register 13
 400              	 
 401 0036 80BD     	 pop {r7,pc}
 402              	.L23:
 403              	 .align 2
 404              	.L22:
 405 0038 00400150 	 .word 1342259200
 406 003c 10000020 	 .word 536870928
 407 0040 20000020 	 .word 536870944
 408              	 .cfi_endproc
 409              	.LFE190:
 411              	 .section .text.XMC_DMA_IsEnabled,"ax",%progbits
 412              	 .align 2
 413              	 .global XMC_DMA_IsEnabled
 414              	 .thumb
 415              	 .thumb_func
 417              	XMC_DMA_IsEnabled:
 418              	.LFB191:
 175:../Libraries/XMCLib/src/xmc_dma.c **** 
 176:../Libraries/XMCLib/src/xmc_dma.c **** /* Check is the GPDMA peripheral is enabled */
 177:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma)
 178:../Libraries/XMCLib/src/xmc_dma.c **** {
 419              	 .loc 2 178 0
 420              	 .cfi_startproc
 421              	 
 422              	 
 423 0000 80B5     	 push {r7,lr}
 424              	 .cfi_def_cfa_offset 8
 425              	 .cfi_offset 7,-8
 426              	 .cfi_offset 14,-4
 427 0002 84B0     	 sub sp,sp,#16
 428              	 .cfi_def_cfa_offset 24
 429 0004 00AF     	 add r7,sp,#0
 430              	 .cfi_def_cfa_register 7
 431 0006 7860     	 str r0,[r7,#4]
 179:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 180:../Libraries/XMCLib/src/xmc_dma.c **** 
 181:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 182:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 432              	 .loc 2 182 0
 433 0008 7B68     	 ldr r3,[r7,#4]
 434 000a 334A     	 ldr r2,.L35
 435 000c 9342     	 cmp r3,r2
 436 000e 25D1     	 bne .L25
 183:../Libraries/XMCLib/src/xmc_dma.c ****   {
 184:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 185:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 437              	 .loc 2 185 0
 438 0010 3248     	 ldr r0,.L35+4
 439 0012 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 440 0016 0346     	 mov r3,r0
 441 0018 002B     	 cmp r3,#0
 442 001a 14BF     	 ite ne
 443 001c 0123     	 movne r3,#1
 444 001e 0023     	 moveq r3,#0
 445 0020 DBB2     	 uxtb r3,r3
 446 0022 83F00103 	 eor r3,r3,#1
 447 0026 DBB2     	 uxtb r3,r3
 448 0028 FB73     	 strb r3,[r7,#15]
 449 002a FB7B     	 ldrb r3,[r7,#15]
 450 002c 03F00103 	 and r3,r3,#1
 451 0030 FB73     	 strb r3,[r7,#15]
 186:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 187:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 452              	 .loc 2 187 0
 453 0032 FB7B     	 ldrb r3,[r7,#15]
 454 0034 002B     	 cmp r3,#0
 455 0036 0AD0     	 beq .L26
 456              	 .loc 2 187 0 is_stmt 0 discriminator 1
 457 0038 2848     	 ldr r0,.L35+4
 458 003a FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 459 003e 0346     	 mov r3,r0
 460 0040 83F00103 	 eor r3,r3,#1
 461 0044 DBB2     	 uxtb r3,r3
 462 0046 002B     	 cmp r3,#0
 463 0048 01D0     	 beq .L26
 464              	 .loc 2 187 0 discriminator 3
 465 004a 0123     	 movs r3,#1
 466 004c 00E0     	 b .L27
 467              	.L26:
 468              	 .loc 2 187 0 discriminator 4
 469 004e 0023     	 movs r3,#0
 470              	.L27:
 471              	 .loc 2 187 0 discriminator 6
 472 0050 FB73     	 strb r3,[r7,#15]
 473 0052 FB7B     	 ldrb r3,[r7,#15]
 474 0054 03F00103 	 and r3,r3,#1
 475 0058 FB73     	 strb r3,[r7,#15]
 476 005a 24E0     	 b .L28
 477              	.L25:
 188:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 189:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 190:../Libraries/XMCLib/src/xmc_dma.c ****   }
 191:../Libraries/XMCLib/src/xmc_dma.c ****   else
 192:../Libraries/XMCLib/src/xmc_dma.c ****   {
 193:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 478              	 .loc 2 193 0 is_stmt 1
 479 005c 2048     	 ldr r0,.L35+8
 480 005e FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 481 0062 0346     	 mov r3,r0
 482 0064 002B     	 cmp r3,#0
 483 0066 14BF     	 ite ne
 484 0068 0123     	 movne r3,#1
 485 006a 0023     	 moveq r3,#0
 486 006c DBB2     	 uxtb r3,r3
 487 006e 83F00103 	 eor r3,r3,#1
 488 0072 DBB2     	 uxtb r3,r3
 489 0074 FB73     	 strb r3,[r7,#15]
 490 0076 FB7B     	 ldrb r3,[r7,#15]
 491 0078 03F00103 	 and r3,r3,#1
 492 007c FB73     	 strb r3,[r7,#15]
 194:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 195:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 493              	 .loc 2 195 0
 494 007e FB7B     	 ldrb r3,[r7,#15]
 495 0080 002B     	 cmp r3,#0
 496 0082 0AD0     	 beq .L29
 497              	 .loc 2 195 0 is_stmt 0 discriminator 1
 498 0084 1648     	 ldr r0,.L35+8
 499 0086 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 500 008a 0346     	 mov r3,r0
 501 008c 83F00103 	 eor r3,r3,#1
 502 0090 DBB2     	 uxtb r3,r3
 503 0092 002B     	 cmp r3,#0
 504 0094 01D0     	 beq .L29
 505              	 .loc 2 195 0 discriminator 3
 506 0096 0123     	 movs r3,#1
 507 0098 00E0     	 b .L30
 508              	.L29:
 509              	 .loc 2 195 0 discriminator 4
 510 009a 0023     	 movs r3,#0
 511              	.L30:
 512              	 .loc 2 195 0 discriminator 6
 513 009c FB73     	 strb r3,[r7,#15]
 514 009e FB7B     	 ldrb r3,[r7,#15]
 515 00a0 03F00103 	 and r3,r3,#1
 516 00a4 FB73     	 strb r3,[r7,#15]
 517              	.L28:
 196:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 197:../Libraries/XMCLib/src/xmc_dma.c ****   }
 198:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 199:../Libraries/XMCLib/src/xmc_dma.c **** 
 200:../Libraries/XMCLib/src/xmc_dma.c ****   /* DMA reset is not asserted and peripheral clock is not gated */
 201:../Libraries/XMCLib/src/xmc_dma.c ****   if (status == true)
 518              	 .loc 2 201 0 is_stmt 1
 519 00a6 FB7B     	 ldrb r3,[r7,#15]
 520 00a8 002B     	 cmp r3,#0
 521 00aa 0FD0     	 beq .L31
 202:../Libraries/XMCLib/src/xmc_dma.c ****   {
 203:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && (dma->DMACFGREG != 0U);
 522              	 .loc 2 203 0
 523 00ac FB7B     	 ldrb r3,[r7,#15]
 524 00ae 002B     	 cmp r3,#0
 525 00b0 06D0     	 beq .L32
 526              	 .loc 2 203 0 is_stmt 0 discriminator 1
 527 00b2 7B68     	 ldr r3,[r7,#4]
 528 00b4 D3F89833 	 ldr r3,[r3,#920]
 529 00b8 002B     	 cmp r3,#0
 530 00ba 01D0     	 beq .L32
 531              	 .loc 2 203 0 discriminator 3
 532 00bc 0123     	 movs r3,#1
 533 00be 00E0     	 b .L33
 534              	.L32:
 535              	 .loc 2 203 0 discriminator 4
 536 00c0 0023     	 movs r3,#0
 537              	.L33:
 538              	 .loc 2 203 0 discriminator 6
 539 00c2 FB73     	 strb r3,[r7,#15]
 540 00c4 FB7B     	 ldrb r3,[r7,#15]
 541 00c6 03F00103 	 and r3,r3,#1
 542 00ca FB73     	 strb r3,[r7,#15]
 543              	.L31:
 204:../Libraries/XMCLib/src/xmc_dma.c ****   }
 205:../Libraries/XMCLib/src/xmc_dma.c **** 
 206:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 544              	 .loc 2 206 0 is_stmt 1
 545 00cc FB7B     	 ldrb r3,[r7,#15]
 207:../Libraries/XMCLib/src/xmc_dma.c **** }
 546              	 .loc 2 207 0
 547 00ce 1846     	 mov r0,r3
 548 00d0 1037     	 adds r7,r7,#16
 549              	 .cfi_def_cfa_offset 8
 550 00d2 BD46     	 mov sp,r7
 551              	 .cfi_def_cfa_register 13
 552              	 
 553 00d4 80BD     	 pop {r7,pc}
 554              	.L36:
 555 00d6 00BF     	 .align 2
 556              	.L35:
 557 00d8 00400150 	 .word 1342259200
 558 00dc 10000020 	 .word 536870928
 559 00e0 20000020 	 .word 536870944
 560              	 .cfi_endproc
 561              	.LFE191:
 563              	 .section .text.XMC_DMA_EnableRequestLine,"ax",%progbits
 564              	 .align 2
 565              	 .global XMC_DMA_EnableRequestLine
 566              	 .thumb
 567              	 .thumb_func
 569              	XMC_DMA_EnableRequestLine:
 570              	.LFB192:
 208:../Libraries/XMCLib/src/xmc_dma.c **** 
 209:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable request line */
 210:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_EnableRequestLine(XMC_DMA_t *const dma, uint8_t line, uint8_t peripheral)
 211:../Libraries/XMCLib/src/xmc_dma.c **** {
 571              	 .loc 2 211 0
 572              	 .cfi_startproc
 573              	 
 574              	 
 575              	 
 576 0000 80B4     	 push {r7}
 577              	 .cfi_def_cfa_offset 4
 578              	 .cfi_offset 7,-4
 579 0002 83B0     	 sub sp,sp,#12
 580              	 .cfi_def_cfa_offset 16
 581 0004 00AF     	 add r7,sp,#0
 582              	 .cfi_def_cfa_register 7
 583 0006 7860     	 str r0,[r7,#4]
 584 0008 0B46     	 mov r3,r1
 585 000a FB70     	 strb r3,[r7,#3]
 586 000c 1346     	 mov r3,r2
 587 000e BB70     	 strb r3,[r7,#2]
 212:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 213:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 588              	 .loc 2 213 0
 589 0010 7B68     	 ldr r3,[r7,#4]
 590 0012 1F4A     	 ldr r2,.L40
 591 0014 9342     	 cmp r3,r2
 592 0016 1BD1     	 bne .L38
 214:../Libraries/XMCLib/src/xmc_dma.c ****   {
 215:../Libraries/XMCLib/src/xmc_dma.c **** #else
 216:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 217:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 218:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL0 = ((DLR->SRSEL0 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 593              	 .loc 2 218 0
 594 0018 1E48     	 ldr r0,.L40+4
 595 001a 1E4B     	 ldr r3,.L40+4
 596 001c 9A68     	 ldr r2,[r3,#8]
 597 001e FB78     	 ldrb r3,[r7,#3]
 598 0020 9B00     	 lsls r3,r3,#2
 599 0022 1946     	 mov r1,r3
 600 0024 0F23     	 movs r3,#15
 601 0026 8B40     	 lsls r3,r3,r1
 602 0028 DB43     	 mvns r3,r3
 603 002a 1A40     	 ands r2,r2,r3
 219:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 604              	 .loc 2 219 0
 605 002c BB78     	 ldrb r3,[r7,#2]
 606 002e F978     	 ldrb r1,[r7,#3]
 607 0030 8900     	 lsls r1,r1,#2
 608 0032 8B40     	 lsls r3,r3,r1
 218:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 609              	 .loc 2 218 0
 610 0034 1343     	 orrs r3,r3,r2
 611 0036 8360     	 str r3,[r0,#8]
 220:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 612              	 .loc 2 220 0
 613 0038 1649     	 ldr r1,.L40+4
 614 003a 164B     	 ldr r3,.L40+4
 615 003c 1A69     	 ldr r2,[r3,#16]
 616 003e FB78     	 ldrb r3,[r7,#3]
 617 0040 03F00703 	 and r3,r3,#7
 618 0044 0120     	 movs r0,#1
 619 0046 00FA03F3 	 lsl r3,r0,r3
 620 004a 1343     	 orrs r3,r3,r2
 621 004c 0B61     	 str r3,[r1,#16]
 622 004e 19E0     	 b .L37
 623              	.L38:
 221:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 222:../Libraries/XMCLib/src/xmc_dma.c ****   }
 223:../Libraries/XMCLib/src/xmc_dma.c ****   else
 224:../Libraries/XMCLib/src/xmc_dma.c ****   {
 225:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL1 = ((DLR->SRSEL1 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 624              	 .loc 2 225 0
 625 0050 1048     	 ldr r0,.L40+4
 626 0052 104B     	 ldr r3,.L40+4
 627 0054 DA68     	 ldr r2,[r3,#12]
 628 0056 FB78     	 ldrb r3,[r7,#3]
 629 0058 9B00     	 lsls r3,r3,#2
 630 005a 1946     	 mov r1,r3
 631 005c 0F23     	 movs r3,#15
 632 005e 8B40     	 lsls r3,r3,r1
 633 0060 DB43     	 mvns r3,r3
 634 0062 1A40     	 ands r2,r2,r3
 226:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 635              	 .loc 2 226 0
 636 0064 BB78     	 ldrb r3,[r7,#2]
 637 0066 F978     	 ldrb r1,[r7,#3]
 638 0068 8900     	 lsls r1,r1,#2
 639 006a 8B40     	 lsls r3,r3,r1
 225:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 640              	 .loc 2 225 0
 641 006c 1343     	 orrs r3,r3,r2
 642 006e C360     	 str r3,[r0,#12]
 227:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 643              	 .loc 2 227 0
 644 0070 0849     	 ldr r1,.L40+4
 645 0072 084B     	 ldr r3,.L40+4
 646 0074 1A69     	 ldr r2,[r3,#16]
 647 0076 FB78     	 ldrb r3,[r7,#3]
 648 0078 4FF48070 	 mov r0,#256
 649 007c 00FA03F3 	 lsl r3,r0,r3
 650 0080 1343     	 orrs r3,r3,r2
 651 0082 0B61     	 str r3,[r1,#16]
 652              	.L37:
 228:../Libraries/XMCLib/src/xmc_dma.c ****   }
 229:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 230:../Libraries/XMCLib/src/xmc_dma.c **** }
 653              	 .loc 2 230 0
 654 0084 0C37     	 adds r7,r7,#12
 655              	 .cfi_def_cfa_offset 4
 656 0086 BD46     	 mov sp,r7
 657              	 .cfi_def_cfa_register 13
 658              	 
 659 0088 5DF8047B 	 ldr r7,[sp],#4
 660              	 .cfi_restore 7
 661              	 .cfi_def_cfa_offset 0
 662 008c 7047     	 bx lr
 663              	.L41:
 664 008e 00BF     	 .align 2
 665              	.L40:
 666 0090 00400150 	 .word 1342259200
 667 0094 00490050 	 .word 1342195968
 668              	 .cfi_endproc
 669              	.LFE192:
 671              	 .section .text.XMC_DMA_DisableRequestLine,"ax",%progbits
 672              	 .align 2
 673              	 .global XMC_DMA_DisableRequestLine
 674              	 .thumb
 675              	 .thumb_func
 677              	XMC_DMA_DisableRequestLine:
 678              	.LFB193:
 231:../Libraries/XMCLib/src/xmc_dma.c **** 
 232:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_DisableRequestLine(XMC_DMA_t *const dma, uint8_t line)
 233:../Libraries/XMCLib/src/xmc_dma.c **** {
 679              	 .loc 2 233 0
 680              	 .cfi_startproc
 681              	 
 682              	 
 683              	 
 684 0000 80B4     	 push {r7}
 685              	 .cfi_def_cfa_offset 4
 686              	 .cfi_offset 7,-4
 687 0002 83B0     	 sub sp,sp,#12
 688              	 .cfi_def_cfa_offset 16
 689 0004 00AF     	 add r7,sp,#0
 690              	 .cfi_def_cfa_register 7
 691 0006 7860     	 str r0,[r7,#4]
 692 0008 0B46     	 mov r3,r1
 693 000a FB70     	 strb r3,[r7,#3]
 234:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 235:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 694              	 .loc 2 235 0
 695 000c 7B68     	 ldr r3,[r7,#4]
 696 000e 0F4A     	 ldr r2,.L45
 697 0010 9342     	 cmp r3,r2
 698 0012 0AD1     	 bne .L43
 236:../Libraries/XMCLib/src/xmc_dma.c ****   {
 237:../Libraries/XMCLib/src/xmc_dma.c **** #else
 238:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 239:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 240:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 699              	 .loc 2 240 0
 700 0014 0E49     	 ldr r1,.L45+4
 701 0016 0E4B     	 ldr r3,.L45+4
 702 0018 1A69     	 ldr r2,[r3,#16]
 703 001a FB78     	 ldrb r3,[r7,#3]
 704 001c 0120     	 movs r0,#1
 705 001e 00FA03F3 	 lsl r3,r0,r3
 706 0022 DB43     	 mvns r3,r3
 707 0024 1340     	 ands r3,r3,r2
 708 0026 0B61     	 str r3,[r1,#16]
 709 0028 0AE0     	 b .L42
 710              	.L43:
 241:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 242:../Libraries/XMCLib/src/xmc_dma.c ****   }
 243:../Libraries/XMCLib/src/xmc_dma.c ****   else
 244:../Libraries/XMCLib/src/xmc_dma.c ****   {
 245:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 711              	 .loc 2 245 0
 712 002a 0949     	 ldr r1,.L45+4
 713 002c 084B     	 ldr r3,.L45+4
 714 002e 1A69     	 ldr r2,[r3,#16]
 715 0030 FB78     	 ldrb r3,[r7,#3]
 716 0032 4FF48070 	 mov r0,#256
 717 0036 00FA03F3 	 lsl r3,r0,r3
 718 003a DB43     	 mvns r3,r3
 719 003c 1340     	 ands r3,r3,r2
 720 003e 0B61     	 str r3,[r1,#16]
 721              	.L42:
 246:../Libraries/XMCLib/src/xmc_dma.c ****   }
 247:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 248:../Libraries/XMCLib/src/xmc_dma.c **** }
 722              	 .loc 2 248 0
 723 0040 0C37     	 adds r7,r7,#12
 724              	 .cfi_def_cfa_offset 4
 725 0042 BD46     	 mov sp,r7
 726              	 .cfi_def_cfa_register 13
 727              	 
 728 0044 5DF8047B 	 ldr r7,[sp],#4
 729              	 .cfi_restore 7
 730              	 .cfi_def_cfa_offset 0
 731 0048 7047     	 bx lr
 732              	.L46:
 733 004a 00BF     	 .align 2
 734              	.L45:
 735 004c 00400150 	 .word 1342259200
 736 0050 00490050 	 .word 1342195968
 737              	 .cfi_endproc
 738              	.LFE193:
 740              	 .section .text.XMC_DMA_ClearRequestLine,"ax",%progbits
 741              	 .align 2
 742              	 .global XMC_DMA_ClearRequestLine
 743              	 .thumb
 744              	 .thumb_func
 746              	XMC_DMA_ClearRequestLine:
 747              	.LFB194:
 249:../Libraries/XMCLib/src/xmc_dma.c **** 
 250:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearRequestLine(XMC_DMA_t *const dma, uint8_t line)
 251:../Libraries/XMCLib/src/xmc_dma.c **** {
 748              	 .loc 2 251 0
 749              	 .cfi_startproc
 750              	 
 751              	 
 752              	 
 753 0000 80B4     	 push {r7}
 754              	 .cfi_def_cfa_offset 4
 755              	 .cfi_offset 7,-4
 756 0002 83B0     	 sub sp,sp,#12
 757              	 .cfi_def_cfa_offset 16
 758 0004 00AF     	 add r7,sp,#0
 759              	 .cfi_def_cfa_register 7
 760 0006 7860     	 str r0,[r7,#4]
 761 0008 0B46     	 mov r3,r1
 762 000a FB70     	 strb r3,[r7,#3]
 252:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 253:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 763              	 .loc 2 253 0
 764 000c 7B68     	 ldr r3,[r7,#4]
 765 000e 184A     	 ldr r2,.L50
 766 0010 9342     	 cmp r3,r2
 767 0012 13D1     	 bne .L48
 254:../Libraries/XMCLib/src/xmc_dma.c ****   {
 255:../Libraries/XMCLib/src/xmc_dma.c **** #else
 256:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 257:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 258:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 768              	 .loc 2 258 0
 769 0014 1749     	 ldr r1,.L50+4
 770 0016 174B     	 ldr r3,.L50+4
 771 0018 1A69     	 ldr r2,[r3,#16]
 772 001a FB78     	 ldrb r3,[r7,#3]
 773 001c 0120     	 movs r0,#1
 774 001e 00FA03F3 	 lsl r3,r0,r3
 775 0022 DB43     	 mvns r3,r3
 776 0024 1340     	 ands r3,r3,r2
 777 0026 0B61     	 str r3,[r1,#16]
 259:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= 0x1UL << line;
 778              	 .loc 2 259 0
 779 0028 1249     	 ldr r1,.L50+4
 780 002a 124B     	 ldr r3,.L50+4
 781 002c 1A69     	 ldr r2,[r3,#16]
 782 002e FB78     	 ldrb r3,[r7,#3]
 783 0030 0120     	 movs r0,#1
 784 0032 00FA03F3 	 lsl r3,r0,r3
 785 0036 1343     	 orrs r3,r3,r2
 786 0038 0B61     	 str r3,[r1,#16]
 787 003a 14E0     	 b .L47
 788              	.L48:
 260:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 261:../Libraries/XMCLib/src/xmc_dma.c ****   }
 262:../Libraries/XMCLib/src/xmc_dma.c ****   else
 263:../Libraries/XMCLib/src/xmc_dma.c ****   {
 264:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 789              	 .loc 2 264 0
 790 003c 0D49     	 ldr r1,.L50+4
 791 003e 0D4B     	 ldr r3,.L50+4
 792 0040 1A69     	 ldr r2,[r3,#16]
 793 0042 FB78     	 ldrb r3,[r7,#3]
 794 0044 4FF48070 	 mov r0,#256
 795 0048 00FA03F3 	 lsl r3,r0,r3
 796 004c DB43     	 mvns r3,r3
 797 004e 1340     	 ands r3,r3,r2
 798 0050 0B61     	 str r3,[r1,#16]
 265:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= 0x100UL << line;
 799              	 .loc 2 265 0
 800 0052 0849     	 ldr r1,.L50+4
 801 0054 074B     	 ldr r3,.L50+4
 802 0056 1A69     	 ldr r2,[r3,#16]
 803 0058 FB78     	 ldrb r3,[r7,#3]
 804 005a 4FF48070 	 mov r0,#256
 805 005e 00FA03F3 	 lsl r3,r0,r3
 806 0062 1343     	 orrs r3,r3,r2
 807 0064 0B61     	 str r3,[r1,#16]
 808              	.L47:
 266:../Libraries/XMCLib/src/xmc_dma.c ****   }
 267:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 268:../Libraries/XMCLib/src/xmc_dma.c **** }
 809              	 .loc 2 268 0
 810 0066 0C37     	 adds r7,r7,#12
 811              	 .cfi_def_cfa_offset 4
 812 0068 BD46     	 mov sp,r7
 813              	 .cfi_def_cfa_register 13
 814              	 
 815 006a 5DF8047B 	 ldr r7,[sp],#4
 816              	 .cfi_restore 7
 817              	 .cfi_def_cfa_offset 0
 818 006e 7047     	 bx lr
 819              	.L51:
 820              	 .align 2
 821              	.L50:
 822 0070 00400150 	 .word 1342259200
 823 0074 00490050 	 .word 1342195968
 824              	 .cfi_endproc
 825              	.LFE194:
 827              	 .section .text.XMC_DMA_GetOverrunStatus,"ax",%progbits
 828              	 .align 2
 829              	 .global XMC_DMA_GetOverrunStatus
 830              	 .thumb
 831              	 .thumb_func
 833              	XMC_DMA_GetOverrunStatus:
 834              	.LFB195:
 269:../Libraries/XMCLib/src/xmc_dma.c **** 
 270:../Libraries/XMCLib/src/xmc_dma.c **** /* Get DMA DLR overrun status */
 271:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_GetOverrunStatus(XMC_DMA_t *const dma, uint8_t line)
 272:../Libraries/XMCLib/src/xmc_dma.c **** {
 835              	 .loc 2 272 0
 836              	 .cfi_startproc
 837              	 
 838              	 
 839              	 
 840 0000 80B4     	 push {r7}
 841              	 .cfi_def_cfa_offset 4
 842              	 .cfi_offset 7,-4
 843 0002 85B0     	 sub sp,sp,#20
 844              	 .cfi_def_cfa_offset 24
 845 0004 00AF     	 add r7,sp,#0
 846              	 .cfi_def_cfa_register 7
 847 0006 7860     	 str r0,[r7,#4]
 848 0008 0B46     	 mov r3,r1
 849 000a FB70     	 strb r3,[r7,#3]
 273:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 274:../Libraries/XMCLib/src/xmc_dma.c **** 
 275:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 276:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 850              	 .loc 2 276 0
 851 000c 7B68     	 ldr r3,[r7,#4]
 852 000e 124A     	 ldr r2,.L56
 853 0010 9342     	 cmp r3,r2
 854 0012 0CD1     	 bne .L53
 277:../Libraries/XMCLib/src/xmc_dma.c ****   {
 278:../Libraries/XMCLib/src/xmc_dma.c **** #else
 279:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 280:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 281:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x1UL << line));
 855              	 .loc 2 281 0
 856 0014 114B     	 ldr r3,.L56+4
 857 0016 1A68     	 ldr r2,[r3]
 858 0018 FB78     	 ldrb r3,[r7,#3]
 859 001a 22FA03F3 	 lsr r3,r2,r3
 860 001e 03F00103 	 and r3,r3,#1
 861 0022 002B     	 cmp r3,#0
 862 0024 14BF     	 ite ne
 863 0026 0123     	 movne r3,#1
 864 0028 0023     	 moveq r3,#0
 865 002a FB73     	 strb r3,[r7,#15]
 866 002c 0CE0     	 b .L54
 867              	.L53:
 282:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 283:../Libraries/XMCLib/src/xmc_dma.c ****   }
 284:../Libraries/XMCLib/src/xmc_dma.c ****   else
 285:../Libraries/XMCLib/src/xmc_dma.c ****   {
 286:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x100UL << line));
 868              	 .loc 2 286 0
 869 002e 0B4B     	 ldr r3,.L56+4
 870 0030 1A68     	 ldr r2,[r3]
 871 0032 FB78     	 ldrb r3,[r7,#3]
 872 0034 4FF48071 	 mov r1,#256
 873 0038 01FA03F3 	 lsl r3,r1,r3
 874 003c 1340     	 ands r3,r3,r2
 875 003e 002B     	 cmp r3,#0
 876 0040 14BF     	 ite ne
 877 0042 0123     	 movne r3,#1
 878 0044 0023     	 moveq r3,#0
 879 0046 FB73     	 strb r3,[r7,#15]
 880              	.L54:
 287:../Libraries/XMCLib/src/xmc_dma.c ****   }
 288:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 289:../Libraries/XMCLib/src/xmc_dma.c **** 
 290:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 881              	 .loc 2 290 0
 882 0048 FB7B     	 ldrb r3,[r7,#15]
 291:../Libraries/XMCLib/src/xmc_dma.c **** }
 883              	 .loc 2 291 0
 884 004a 1846     	 mov r0,r3
 885 004c 1437     	 adds r7,r7,#20
 886              	 .cfi_def_cfa_offset 4
 887 004e BD46     	 mov sp,r7
 888              	 .cfi_def_cfa_register 13
 889              	 
 890 0050 5DF8047B 	 ldr r7,[sp],#4
 891              	 .cfi_restore 7
 892              	 .cfi_def_cfa_offset 0
 893 0054 7047     	 bx lr
 894              	.L57:
 895 0056 00BF     	 .align 2
 896              	.L56:
 897 0058 00400150 	 .word 1342259200
 898 005c 00490050 	 .word 1342195968
 899              	 .cfi_endproc
 900              	.LFE195:
 902              	 .section .text.XMC_DMA_ClearOverrunStatus,"ax",%progbits
 903              	 .align 2
 904              	 .global XMC_DMA_ClearOverrunStatus
 905              	 .thumb
 906              	 .thumb_func
 908              	XMC_DMA_ClearOverrunStatus:
 909              	.LFB196:
 292:../Libraries/XMCLib/src/xmc_dma.c **** 
 293:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear DMA DLR overrun status */
 294:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearOverrunStatus(XMC_DMA_t *const dma, const uint8_t line)
 295:../Libraries/XMCLib/src/xmc_dma.c **** {
 910              	 .loc 2 295 0
 911              	 .cfi_startproc
 912              	 
 913              	 
 914              	 
 915 0000 80B4     	 push {r7}
 916              	 .cfi_def_cfa_offset 4
 917              	 .cfi_offset 7,-4
 918 0002 83B0     	 sub sp,sp,#12
 919              	 .cfi_def_cfa_offset 16
 920 0004 00AF     	 add r7,sp,#0
 921              	 .cfi_def_cfa_register 7
 922 0006 7860     	 str r0,[r7,#4]
 923 0008 0B46     	 mov r3,r1
 924 000a FB70     	 strb r3,[r7,#3]
 296:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 297:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 925              	 .loc 2 297 0
 926 000c 7B68     	 ldr r3,[r7,#4]
 927 000e 0B4A     	 ldr r2,.L61
 928 0010 9342     	 cmp r3,r2
 929 0012 06D1     	 bne .L59
 298:../Libraries/XMCLib/src/xmc_dma.c ****   {
 299:../Libraries/XMCLib/src/xmc_dma.c **** #else
 300:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 301:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 302:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR = (uint32_t)(0x1UL << line);
 930              	 .loc 2 302 0
 931 0014 0A4A     	 ldr r2,.L61+4
 932 0016 FB78     	 ldrb r3,[r7,#3]
 933 0018 0121     	 movs r1,#1
 934 001a 01FA03F3 	 lsl r3,r1,r3
 935 001e 5360     	 str r3,[r2,#4]
 936 0020 06E0     	 b .L58
 937              	.L59:
 303:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 304:../Libraries/XMCLib/src/xmc_dma.c ****   }
 305:../Libraries/XMCLib/src/xmc_dma.c ****   else
 306:../Libraries/XMCLib/src/xmc_dma.c ****   {
 307:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR = (uint32_t)(0x100UL << line);
 938              	 .loc 2 307 0
 939 0022 074A     	 ldr r2,.L61+4
 940 0024 FB78     	 ldrb r3,[r7,#3]
 941 0026 4FF48071 	 mov r1,#256
 942 002a 01FA03F3 	 lsl r3,r1,r3
 943 002e 5360     	 str r3,[r2,#4]
 944              	.L58:
 308:../Libraries/XMCLib/src/xmc_dma.c ****   }
 309:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 310:../Libraries/XMCLib/src/xmc_dma.c **** }
 945              	 .loc 2 310 0
 946 0030 0C37     	 adds r7,r7,#12
 947              	 .cfi_def_cfa_offset 4
 948 0032 BD46     	 mov sp,r7
 949              	 .cfi_def_cfa_register 13
 950              	 
 951 0034 5DF8047B 	 ldr r7,[sp],#4
 952              	 .cfi_restore 7
 953              	 .cfi_def_cfa_offset 0
 954 0038 7047     	 bx lr
 955              	.L62:
 956 003a 00BF     	 .align 2
 957              	.L61:
 958 003c 00400150 	 .word 1342259200
 959 0040 00490050 	 .word 1342195968
 960              	 .cfi_endproc
 961              	.LFE196:
 963              	 .section .text.XMC_DMA_CH_Disable,"ax",%progbits
 964              	 .align 2
 965              	 .global XMC_DMA_CH_Disable
 966              	 .thumb
 967              	 .thumb_func
 969              	XMC_DMA_CH_Disable:
 970              	.LFB197:
 311:../Libraries/XMCLib/src/xmc_dma.c **** 
 312:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable DMA channel */
 313:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Disable(XMC_DMA_t *const dma, const uint8_t channel)
 314:../Libraries/XMCLib/src/xmc_dma.c **** {
 971              	 .loc 2 314 0
 972              	 .cfi_startproc
 973              	 
 974              	 
 975              	 
 976 0000 80B4     	 push {r7}
 977              	 .cfi_def_cfa_offset 4
 978              	 .cfi_offset 7,-4
 979 0002 83B0     	 sub sp,sp,#12
 980              	 .cfi_def_cfa_offset 16
 981 0004 00AF     	 add r7,sp,#0
 982              	 .cfi_def_cfa_register 7
 983 0006 7860     	 str r0,[r7,#4]
 984 0008 0B46     	 mov r3,r1
 985 000a FB70     	 strb r3,[r7,#3]
 315:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CHENREG = (uint32_t)(0x100UL << channel);
 986              	 .loc 2 315 0
 987 000c FB78     	 ldrb r3,[r7,#3]
 988 000e 4FF48072 	 mov r2,#256
 989 0012 9A40     	 lsls r2,r2,r3
 990 0014 7B68     	 ldr r3,[r7,#4]
 991 0016 C3F8A023 	 str r2,[r3,#928]
 316:../Libraries/XMCLib/src/xmc_dma.c ****   while ((dma->CHENREG & (uint32_t)(0x1UL << channel)) != 0U)
 992              	 .loc 2 316 0
 993 001a 00BF     	 nop
 994              	.L64:
 995              	 .loc 2 316 0 is_stmt 0 discriminator 1
 996 001c 7B68     	 ldr r3,[r7,#4]
 997 001e D3F8A023 	 ldr r2,[r3,#928]
 998 0022 FB78     	 ldrb r3,[r7,#3]
 999 0024 22FA03F3 	 lsr r3,r2,r3
 1000 0028 03F00103 	 and r3,r3,#1
 1001 002c 002B     	 cmp r3,#0
 1002 002e F5D1     	 bne .L64
 317:../Libraries/XMCLib/src/xmc_dma.c ****   {
 318:../Libraries/XMCLib/src/xmc_dma.c ****     /* wait until channel is disabled */
 319:../Libraries/XMCLib/src/xmc_dma.c ****   }
 320:../Libraries/XMCLib/src/xmc_dma.c **** }
 1003              	 .loc 2 320 0 is_stmt 1
 1004 0030 0C37     	 adds r7,r7,#12
 1005              	 .cfi_def_cfa_offset 4
 1006 0032 BD46     	 mov sp,r7
 1007              	 .cfi_def_cfa_register 13
 1008              	 
 1009 0034 5DF8047B 	 ldr r7,[sp],#4
 1010              	 .cfi_restore 7
 1011              	 .cfi_def_cfa_offset 0
 1012 0038 7047     	 bx lr
 1013              	 .cfi_endproc
 1014              	.LFE197:
 1016 003a 00BF     	 .section .text.XMC_DMA_CH_IsEnabled,"ax",%progbits
 1017              	 .align 2
 1018              	 .global XMC_DMA_CH_IsEnabled
 1019              	 .thumb
 1020              	 .thumb_func
 1022              	XMC_DMA_CH_IsEnabled:
 1023              	.LFB198:
 321:../Libraries/XMCLib/src/xmc_dma.c **** 
 322:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is enabled */
 323:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsEnabled(XMC_DMA_t *const dma, const uint8_t channel)
 324:../Libraries/XMCLib/src/xmc_dma.c **** {
 1024              	 .loc 2 324 0
 1025              	 .cfi_startproc
 1026              	 
 1027              	 
 1028              	 
 1029 0000 80B4     	 push {r7}
 1030              	 .cfi_def_cfa_offset 4
 1031              	 .cfi_offset 7,-4
 1032 0002 83B0     	 sub sp,sp,#12
 1033              	 .cfi_def_cfa_offset 16
 1034 0004 00AF     	 add r7,sp,#0
 1035              	 .cfi_def_cfa_register 7
 1036 0006 7860     	 str r0,[r7,#4]
 1037 0008 0B46     	 mov r3,r1
 1038 000a FB70     	 strb r3,[r7,#3]
 325:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CHENREG & ((uint32_t)1U << channel));
 1039              	 .loc 2 325 0
 1040 000c 7B68     	 ldr r3,[r7,#4]
 1041 000e D3F8A023 	 ldr r2,[r3,#928]
 1042 0012 FB78     	 ldrb r3,[r7,#3]
 1043 0014 22FA03F3 	 lsr r3,r2,r3
 1044 0018 03F00103 	 and r3,r3,#1
 1045 001c 002B     	 cmp r3,#0
 1046 001e 14BF     	 ite ne
 1047 0020 0123     	 movne r3,#1
 1048 0022 0023     	 moveq r3,#0
 1049 0024 DBB2     	 uxtb r3,r3
 326:../Libraries/XMCLib/src/xmc_dma.c **** }
 1050              	 .loc 2 326 0
 1051 0026 1846     	 mov r0,r3
 1052 0028 0C37     	 adds r7,r7,#12
 1053              	 .cfi_def_cfa_offset 4
 1054 002a BD46     	 mov sp,r7
 1055              	 .cfi_def_cfa_register 13
 1056              	 
 1057 002c 5DF8047B 	 ldr r7,[sp],#4
 1058              	 .cfi_restore 7
 1059              	 .cfi_def_cfa_offset 0
 1060 0030 7047     	 bx lr
 1061              	 .cfi_endproc
 1062              	.LFE198:
 1064 0032 00BF     	 .section .text.XMC_DMA_CH_Init,"ax",%progbits
 1065              	 .align 2
 1066              	 .global XMC_DMA_CH_Init
 1067              	 .thumb
 1068              	 .thumb_func
 1070              	XMC_DMA_CH_Init:
 1071              	.LFB199:
 327:../Libraries/XMCLib/src/xmc_dma.c **** 
 328:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize DMA channel */
 329:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_STATUS_t XMC_DMA_CH_Init(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_C
 330:../Libraries/XMCLib/src/xmc_dma.c **** {
 1072              	 .loc 2 330 0
 1073              	 .cfi_startproc
 1074              	 
 1075              	 
 1076 0000 80B5     	 push {r7,lr}
 1077              	 .cfi_def_cfa_offset 8
 1078              	 .cfi_offset 7,-8
 1079              	 .cfi_offset 14,-4
 1080 0002 86B0     	 sub sp,sp,#24
 1081              	 .cfi_def_cfa_offset 32
 1082 0004 00AF     	 add r7,sp,#0
 1083              	 .cfi_def_cfa_register 7
 1084 0006 F860     	 str r0,[r7,#12]
 1085 0008 0B46     	 mov r3,r1
 1086 000a 7A60     	 str r2,[r7,#4]
 1087 000c FB72     	 strb r3,[r7,#11]
 331:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_STATUS_t status;
 332:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t line;
 333:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t peripheral;
 334:../Libraries/XMCLib/src/xmc_dma.c **** 
 335:../Libraries/XMCLib/src/xmc_dma.c ****   if (XMC_DMA_IsEnabled(dma) == true)
 1088              	 .loc 2 335 0
 1089 000e F868     	 ldr r0,[r7,#12]
 1090 0010 FFF7FEFF 	 bl XMC_DMA_IsEnabled
 1091 0014 0346     	 mov r3,r0
 1092 0016 002B     	 cmp r3,#0
 1093 0018 00F0F181 	 beq .L68
 336:../Libraries/XMCLib/src/xmc_dma.c ****   {
 337:../Libraries/XMCLib/src/xmc_dma.c ****     if (XMC_DMA_CH_IsEnabled(dma, channel) == false)
 1094              	 .loc 2 337 0
 1095 001c FB7A     	 ldrb r3,[r7,#11]
 1096 001e F868     	 ldr r0,[r7,#12]
 1097 0020 1946     	 mov r1,r3
 1098 0022 FFF7FEFF 	 bl XMC_DMA_CH_IsEnabled
 1099 0026 0346     	 mov r3,r0
 1100 0028 83F00103 	 eor r3,r3,#1
 1101 002c DBB2     	 uxtb r3,r3
 1102 002e 002B     	 cmp r3,#0
 1103 0030 00F0E281 	 beq .L69
 338:../Libraries/XMCLib/src/xmc_dma.c ****     {
 339:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].SAR = config->src_addr;
 1104              	 .loc 2 339 0
 1105 0034 FB7A     	 ldrb r3,[r7,#11]
 1106 0036 7A68     	 ldr r2,[r7,#4]
 1107 0038 5268     	 ldr r2,[r2,#4]
 1108 003a F968     	 ldr r1,[r7,#12]
 1109 003c 5820     	 movs r0,#88
 1110 003e 00FB03F3 	 mul r3,r0,r3
 1111 0042 0B44     	 add r3,r3,r1
 1112 0044 1A60     	 str r2,[r3]
 340:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].DAR = config->dst_addr;
 1113              	 .loc 2 340 0
 1114 0046 FB7A     	 ldrb r3,[r7,#11]
 1115 0048 7A68     	 ldr r2,[r7,#4]
 1116 004a 9268     	 ldr r2,[r2,#8]
 1117 004c F968     	 ldr r1,[r7,#12]
 1118 004e 5820     	 movs r0,#88
 1119 0050 00FB03F3 	 mul r3,r0,r3
 1120 0054 0B44     	 add r3,r3,r1
 1121 0056 0833     	 adds r3,r3,#8
 1122 0058 1A60     	 str r2,[r3]
 341:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].LLP = (uint32_t)config->linked_list_pointer;
 1123              	 .loc 2 341 0
 1124 005a FB7A     	 ldrb r3,[r7,#11]
 1125 005c 7A68     	 ldr r2,[r7,#4]
 1126 005e D268     	 ldr r2,[r2,#12]
 1127 0060 1046     	 mov r0,r2
 1128 0062 FA68     	 ldr r2,[r7,#12]
 1129 0064 5821     	 movs r1,#88
 1130 0066 01FB03F3 	 mul r3,r1,r3
 1131 006a 1344     	 add r3,r3,r2
 1132 006c 1033     	 adds r3,r3,#16
 1133 006e 1860     	 str r0,[r3]
 342:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLH = (uint32_t)config->block_size;
 1134              	 .loc 2 342 0
 1135 0070 FB7A     	 ldrb r3,[r7,#11]
 1136 0072 7A68     	 ldr r2,[r7,#4]
 1137 0074 128B     	 ldrh r2,[r2,#24]
 1138 0076 1046     	 mov r0,r2
 1139 0078 FA68     	 ldr r2,[r7,#12]
 1140 007a 5821     	 movs r1,#88
 1141 007c 01FB03F3 	 mul r3,r1,r3
 1142 0080 1344     	 add r3,r3,r2
 1143 0082 1833     	 adds r3,r3,#24
 1144 0084 5860     	 str r0,[r3,#4]
 343:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLL = config->control;
 1145              	 .loc 2 343 0
 1146 0086 FB7A     	 ldrb r3,[r7,#11]
 1147 0088 7A68     	 ldr r2,[r7,#4]
 1148 008a 1268     	 ldr r2,[r2]
 1149 008c F968     	 ldr r1,[r7,#12]
 1150 008e 5820     	 movs r0,#88
 1151 0090 00FB03F3 	 mul r3,r0,r3
 1152 0094 0B44     	 add r3,r3,r1
 1153 0096 1833     	 adds r3,r3,#24
 1154 0098 1A60     	 str r2,[r3]
 344:../Libraries/XMCLib/src/xmc_dma.c **** 
 345:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CFGL = (uint32_t)((uint32_t)config->priority |
 1155              	 .loc 2 345 0
 1156 009a FB7A     	 ldrb r3,[r7,#11]
 1157 009c 7A68     	 ldr r2,[r7,#4]
 1158 009e D27E     	 ldrb r2,[r2,#27]
 1159 00a0 42F44062 	 orr r2,r2,#3072
 1160 00a4 F968     	 ldr r1,[r7,#12]
 1161 00a6 5820     	 movs r0,#88
 1162 00a8 00FB03F3 	 mul r3,r0,r3
 1163 00ac 0B44     	 add r3,r3,r1
 1164 00ae 4033     	 adds r3,r3,#64
 1165 00b0 1A60     	 str r2,[r3]
 346:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_SRC_Msk |
 347:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_DST_Msk);
 348:../Libraries/XMCLib/src/xmc_dma.c **** 
 349:../Libraries/XMCLib/src/xmc_dma.c ****       if ((dma == XMC_DMA0) && (channel < (uint8_t)2))
 1166              	 .loc 2 349 0
 1167 00b2 FB68     	 ldr r3,[r7,#12]
 1168 00b4 B14A     	 ldr r2,.L95
 1169 00b6 9342     	 cmp r3,r2
 1170 00b8 16D1     	 bne .L70
 1171              	 .loc 2 349 0 is_stmt 0 discriminator 1
 1172 00ba FB7A     	 ldrb r3,[r7,#11]
 1173 00bc 012B     	 cmp r3,#1
 1174 00be 13D8     	 bhi .L70
 350:../Libraries/XMCLib/src/xmc_dma.c ****       {
 351:../Libraries/XMCLib/src/xmc_dma.c ****         /* Configure scatter and gather */
 352:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].SGR = config->src_gather_control;
 1175              	 .loc 2 352 0 is_stmt 1
 1176 00c0 FB7A     	 ldrb r3,[r7,#11]
 1177 00c2 7A68     	 ldr r2,[r7,#4]
 1178 00c4 1269     	 ldr r2,[r2,#16]
 1179 00c6 F968     	 ldr r1,[r7,#12]
 1180 00c8 5820     	 movs r0,#88
 1181 00ca 00FB03F3 	 mul r3,r0,r3
 1182 00ce 0B44     	 add r3,r3,r1
 1183 00d0 4833     	 adds r3,r3,#72
 1184 00d2 1A60     	 str r2,[r3]
 353:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].DSR = config->dst_scatter_control;
 1185              	 .loc 2 353 0
 1186 00d4 FB7A     	 ldrb r3,[r7,#11]
 1187 00d6 7A68     	 ldr r2,[r7,#4]
 1188 00d8 5269     	 ldr r2,[r2,#20]
 1189 00da F968     	 ldr r1,[r7,#12]
 1190 00dc 5820     	 movs r0,#88
 1191 00de 00FB03F3 	 mul r3,r0,r3
 1192 00e2 0B44     	 add r3,r3,r1
 1193 00e4 5033     	 adds r3,r3,#80
 1194 00e6 1A60     	 str r2,[r3]
 1195              	.L70:
 354:../Libraries/XMCLib/src/xmc_dma.c ****       }
 355:../Libraries/XMCLib/src/xmc_dma.c **** 
 356:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->dst_handshaking == XMC_DMA_CH_DST_HANDSHAKING_HARDWARE)
 1196              	 .loc 2 356 0
 1197 00e8 7B68     	 ldr r3,[r7,#4]
 1198 00ea 1B8C     	 ldrh r3,[r3,#32]
 1199 00ec 002B     	 cmp r3,#0
 1200 00ee 4FD1     	 bne .L71
 357:../Libraries/XMCLib/src/xmc_dma.c ****       {
 358:../Libraries/XMCLib/src/xmc_dma.c ****         /* Hardware handshaking interface configuration */
 359:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA) ||
 1201              	 .loc 2 359 0
 1202 00f0 7B68     	 ldr r3,[r7,#4]
 1203 00f2 9B78     	 ldrb r3,[r3,#2]
 1204 00f4 03F07003 	 and r3,r3,#112
 1205 00f8 DBB2     	 uxtb r3,r3
 1206 00fa 102B     	 cmp r3,#16
 1207 00fc 06D0     	 beq .L72
 360:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1208              	 .loc 2 360 0 discriminator 1
 1209 00fe 7B68     	 ldr r3,[r7,#4]
 1210 0100 9B78     	 ldrb r3,[r3,#2]
 1211 0102 03F07003 	 and r3,r3,#112
 1212 0106 DBB2     	 uxtb r3,r3
 359:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1213              	 .loc 2 359 0 discriminator 1
 1214 0108 302B     	 cmp r3,#48
 1215 010a 41D1     	 bne .L71
 1216              	.L72:
 361:../Libraries/XMCLib/src/xmc_dma.c ****         {
 362:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 363:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 1217              	 .loc 2 363 0
 1218 010c FB68     	 ldr r3,[r7,#12]
 1219 010e 9B4A     	 ldr r2,.L95
 1220 0110 9342     	 cmp r3,r2
 1221 0112 06D1     	 bne .L73
 364:../Libraries/XMCLib/src/xmc_dma.c ****           {
 365:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 366:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1222              	 .loc 2 366 0
 1223 0114 7B68     	 ldr r3,[r7,#4]
 1224 0116 93F82230 	 ldrb r3,[r3,#34]
 1225 011a 03F00703 	 and r3,r3,#7
 1226 011e BB75     	 strb r3,[r7,#22]
 1227 0120 05E0     	 b .L74
 1228              	.L73:
 367:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 368:../Libraries/XMCLib/src/xmc_dma.c ****           }
 369:../Libraries/XMCLib/src/xmc_dma.c ****           else
 370:../Libraries/XMCLib/src/xmc_dma.c ****           {
 371:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 1229              	 .loc 2 371 0
 1230 0122 7B68     	 ldr r3,[r7,#4]
 1231 0124 93F82230 	 ldrb r3,[r3,#34]
 1232 0128 03F00303 	 and r3,r3,#3
 1233 012c BB75     	 strb r3,[r7,#22]
 1234              	.L74:
 372:../Libraries/XMCLib/src/xmc_dma.c ****           }
 373:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 374:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->dst_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1235              	 .loc 2 374 0
 1236 012e 7B68     	 ldr r3,[r7,#4]
 1237 0130 93F82230 	 ldrb r3,[r3,#34]
 1238 0134 1B09     	 lsrs r3,r3,#4
 1239 0136 7B75     	 strb r3,[r7,#21]
 375:../Libraries/XMCLib/src/xmc_dma.c **** 
 376:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_DEST_PER_Pos);
 1240              	 .loc 2 376 0
 1241 0138 FB7A     	 ldrb r3,[r7,#11]
 1242 013a FA7A     	 ldrb r2,[r7,#11]
 1243 013c F968     	 ldr r1,[r7,#12]
 1244 013e 5820     	 movs r0,#88
 1245 0140 00FB02F2 	 mul r2,r0,r2
 1246 0144 0A44     	 add r2,r2,r1
 1247 0146 4032     	 adds r2,r2,#64
 1248 0148 5168     	 ldr r1,[r2,#4]
 1249 014a BA7D     	 ldrb r2,[r7,#22]
 1250 014c D202     	 lsls r2,r2,#11
 1251 014e 0A43     	 orrs r2,r2,r1
 1252 0150 F968     	 ldr r1,[r7,#12]
 1253 0152 5820     	 movs r0,#88
 1254 0154 00FB03F3 	 mul r3,r0,r3
 1255 0158 0B44     	 add r3,r3,r1
 1256 015a 4033     	 adds r3,r3,#64
 1257 015c 5A60     	 str r2,[r3,#4]
 377:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1258              	 .loc 2 377 0
 1259 015e BA7D     	 ldrb r2,[r7,#22]
 1260 0160 7B7D     	 ldrb r3,[r7,#21]
 1261 0162 F868     	 ldr r0,[r7,#12]
 1262 0164 1146     	 mov r1,r2
 1263 0166 1A46     	 mov r2,r3
 1264 0168 FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 378:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_DST_Msk;
 1265              	 .loc 2 378 0
 1266 016c FB7A     	 ldrb r3,[r7,#11]
 1267 016e FA7A     	 ldrb r2,[r7,#11]
 1268 0170 F968     	 ldr r1,[r7,#12]
 1269 0172 5820     	 movs r0,#88
 1270 0174 00FB02F2 	 mul r2,r0,r2
 1271 0178 0A44     	 add r2,r2,r1
 1272 017a 4032     	 adds r2,r2,#64
 1273 017c 1268     	 ldr r2,[r2]
 1274 017e 22F48062 	 bic r2,r2,#1024
 1275 0182 F968     	 ldr r1,[r7,#12]
 1276 0184 5820     	 movs r0,#88
 1277 0186 00FB03F3 	 mul r3,r0,r3
 1278 018a 0B44     	 add r3,r3,r1
 1279 018c 4033     	 adds r3,r3,#64
 1280 018e 1A60     	 str r2,[r3]
 1281              	.L71:
 379:../Libraries/XMCLib/src/xmc_dma.c ****         }
 380:../Libraries/XMCLib/src/xmc_dma.c ****       }
 381:../Libraries/XMCLib/src/xmc_dma.c **** 
 382:../Libraries/XMCLib/src/xmc_dma.c **** 
 383:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->src_handshaking == XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE)
 1282              	 .loc 2 383 0
 1283 0190 7B68     	 ldr r3,[r7,#4]
 1284 0192 9B8B     	 ldrh r3,[r3,#28]
 1285 0194 002B     	 cmp r3,#0
 1286 0196 4CD1     	 bne .L75
 384:../Libraries/XMCLib/src/xmc_dma.c ****       {
 385:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA) ||
 1287              	 .loc 2 385 0
 1288 0198 7B68     	 ldr r3,[r7,#4]
 1289 019a 9B78     	 ldrb r3,[r3,#2]
 1290 019c 03F07003 	 and r3,r3,#112
 1291 01a0 DBB2     	 uxtb r3,r3
 1292 01a2 202B     	 cmp r3,#32
 1293 01a4 06D0     	 beq .L76
 386:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1294              	 .loc 2 386 0 discriminator 1
 1295 01a6 7B68     	 ldr r3,[r7,#4]
 1296 01a8 9B78     	 ldrb r3,[r3,#2]
 1297 01aa 03F07003 	 and r3,r3,#112
 1298 01ae DBB2     	 uxtb r3,r3
 385:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1299              	 .loc 2 385 0 discriminator 1
 1300 01b0 302B     	 cmp r3,#48
 1301 01b2 3ED1     	 bne .L75
 1302              	.L76:
 387:../Libraries/XMCLib/src/xmc_dma.c ****         {
 388:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 389:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 1303              	 .loc 2 389 0
 1304 01b4 FB68     	 ldr r3,[r7,#12]
 1305 01b6 714A     	 ldr r2,.L95
 1306 01b8 9342     	 cmp r3,r2
 1307 01ba 05D1     	 bne .L77
 390:../Libraries/XMCLib/src/xmc_dma.c ****           {
 391:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 392:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1308              	 .loc 2 392 0
 1309 01bc 7B68     	 ldr r3,[r7,#4]
 1310 01be 9B7F     	 ldrb r3,[r3,#30]
 1311 01c0 03F00703 	 and r3,r3,#7
 1312 01c4 BB75     	 strb r3,[r7,#22]
 1313 01c6 04E0     	 b .L78
 1314              	.L77:
 393:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 394:../Libraries/XMCLib/src/xmc_dma.c ****           }
 395:../Libraries/XMCLib/src/xmc_dma.c ****           else
 396:../Libraries/XMCLib/src/xmc_dma.c ****           {
 397:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 1315              	 .loc 2 397 0
 1316 01c8 7B68     	 ldr r3,[r7,#4]
 1317 01ca 9B7F     	 ldrb r3,[r3,#30]
 1318 01cc 03F00303 	 and r3,r3,#3
 1319 01d0 BB75     	 strb r3,[r7,#22]
 1320              	.L78:
 398:../Libraries/XMCLib/src/xmc_dma.c ****           }
 399:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 400:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->src_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1321              	 .loc 2 400 0
 1322 01d2 7B68     	 ldr r3,[r7,#4]
 1323 01d4 9B7F     	 ldrb r3,[r3,#30]
 1324 01d6 1B09     	 lsrs r3,r3,#4
 1325 01d8 7B75     	 strb r3,[r7,#21]
 401:../Libraries/XMCLib/src/xmc_dma.c **** 
 402:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_SRC_PER_Pos);
 1326              	 .loc 2 402 0
 1327 01da FB7A     	 ldrb r3,[r7,#11]
 1328 01dc FA7A     	 ldrb r2,[r7,#11]
 1329 01de F968     	 ldr r1,[r7,#12]
 1330 01e0 5820     	 movs r0,#88
 1331 01e2 00FB02F2 	 mul r2,r0,r2
 1332 01e6 0A44     	 add r2,r2,r1
 1333 01e8 4032     	 adds r2,r2,#64
 1334 01ea 5168     	 ldr r1,[r2,#4]
 1335 01ec BA7D     	 ldrb r2,[r7,#22]
 1336 01ee D201     	 lsls r2,r2,#7
 1337 01f0 0A43     	 orrs r2,r2,r1
 1338 01f2 F968     	 ldr r1,[r7,#12]
 1339 01f4 5820     	 movs r0,#88
 1340 01f6 00FB03F3 	 mul r3,r0,r3
 1341 01fa 0B44     	 add r3,r3,r1
 1342 01fc 4033     	 adds r3,r3,#64
 1343 01fe 5A60     	 str r2,[r3,#4]
 403:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1344              	 .loc 2 403 0
 1345 0200 BA7D     	 ldrb r2,[r7,#22]
 1346 0202 7B7D     	 ldrb r3,[r7,#21]
 1347 0204 F868     	 ldr r0,[r7,#12]
 1348 0206 1146     	 mov r1,r2
 1349 0208 1A46     	 mov r2,r3
 1350 020a FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 404:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_SRC_Msk;
 1351              	 .loc 2 404 0
 1352 020e FB7A     	 ldrb r3,[r7,#11]
 1353 0210 FA7A     	 ldrb r2,[r7,#11]
 1354 0212 F968     	 ldr r1,[r7,#12]
 1355 0214 5820     	 movs r0,#88
 1356 0216 00FB02F2 	 mul r2,r0,r2
 1357 021a 0A44     	 add r2,r2,r1
 1358 021c 4032     	 adds r2,r2,#64
 1359 021e 1268     	 ldr r2,[r2]
 1360 0220 22F40062 	 bic r2,r2,#2048
 1361 0224 F968     	 ldr r1,[r7,#12]
 1362 0226 5820     	 movs r0,#88
 1363 0228 00FB03F3 	 mul r3,r0,r3
 1364 022c 0B44     	 add r3,r3,r1
 1365 022e 4033     	 adds r3,r3,#64
 1366 0230 1A60     	 str r2,[r3]
 1367              	.L75:
 405:../Libraries/XMCLib/src/xmc_dma.c ****         }
 406:../Libraries/XMCLib/src/xmc_dma.c ****       }
 407:../Libraries/XMCLib/src/xmc_dma.c **** 
 408:../Libraries/XMCLib/src/xmc_dma.c ****       XMC_DMA_CH_ClearEventStatus(dma, channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMP
 1368              	 .loc 2 408 0
 1369 0232 FB7A     	 ldrb r3,[r7,#11]
 1370 0234 F868     	 ldr r0,[r7,#12]
 1371 0236 1946     	 mov r1,r3
 1372 0238 1F22     	 movs r2,#31
 1373 023a FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 409:../Libraries/XMCLib/src/xmc_dma.c ****                                   (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE |
 410:../Libraries/XMCLib/src/xmc_dma.c ****                                   (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE |
 411:../Libraries/XMCLib/src/xmc_dma.c ****                                   (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE |
 412:../Libraries/XMCLib/src/xmc_dma.c ****                                   (uint32_t)XMC_DMA_CH_EVENT_ERROR));
 413:../Libraries/XMCLib/src/xmc_dma.c **** 
 414:../Libraries/XMCLib/src/xmc_dma.c ****       switch (config->transfer_type)
 1374              	 .loc 2 414 0
 1375 023e 7B68     	 ldr r3,[r7,#4]
 1376 0240 9B7E     	 ldrb r3,[r3,#26]
 1377 0242 082B     	 cmp r3,#8
 1378 0244 00F2D480 	 bhi .L94
 1379 0248 01A2     	 adr r2,.L81
 1380 024a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1381 024e 00BF     	 .p2align 2
 1382              	.L81:
 1383 0250 F1030000 	 .word .L94+1
 1384 0254 75020000 	 .word .L82+1
 1385 0258 9B020000 	 .word .L83+1
 1386 025c C1020000 	 .word .L84+1
 1387 0260 E7020000 	 .word .L85+1
 1388 0264 0D030000 	 .word .L86+1
 1389 0268 57030000 	 .word .L87+1
 1390 026c 81030000 	 .word .L88+1
 1391 0270 CB030000 	 .word .L89+1
 1392              	 .p2align 1
 1393              	.L82:
 415:../Libraries/XMCLib/src/xmc_dma.c ****       {
 416:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK:
 417:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 418:../Libraries/XMCLib/src/xmc_dma.c **** 
 419:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD:
 420:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1394              	 .loc 2 420 0
 1395 0274 FB7A     	 ldrb r3,[r7,#11]
 1396 0276 FA7A     	 ldrb r2,[r7,#11]
 1397 0278 F968     	 ldr r1,[r7,#12]
 1398 027a 5820     	 movs r0,#88
 1399 027c 00FB02F2 	 mul r2,r0,r2
 1400 0280 0A44     	 add r2,r2,r1
 1401 0282 4032     	 adds r2,r2,#64
 1402 0284 1268     	 ldr r2,[r2]
 1403 0286 42F00042 	 orr r2,r2,#-2147483648
 1404 028a F968     	 ldr r1,[r7,#12]
 1405 028c 5820     	 movs r0,#88
 1406 028e 00FB03F3 	 mul r3,r0,r3
 1407 0292 0B44     	 add r3,r3,r1
 1408 0294 4033     	 adds r3,r3,#64
 1409 0296 1A60     	 str r2,[r3]
 421:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1410              	 .loc 2 421 0
 1411 0298 ABE0     	 b .L90
 1412              	.L83:
 422:../Libraries/XMCLib/src/xmc_dma.c **** 
 423:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS:
 424:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1413              	 .loc 2 424 0
 1414 029a FB7A     	 ldrb r3,[r7,#11]
 1415 029c FA7A     	 ldrb r2,[r7,#11]
 1416 029e F968     	 ldr r1,[r7,#12]
 1417 02a0 5820     	 movs r0,#88
 1418 02a2 00FB02F2 	 mul r2,r0,r2
 1419 02a6 0A44     	 add r2,r2,r1
 1420 02a8 4032     	 adds r2,r2,#64
 1421 02aa 1268     	 ldr r2,[r2]
 1422 02ac 42F08042 	 orr r2,r2,#1073741824
 1423 02b0 F968     	 ldr r1,[r7,#12]
 1424 02b2 5820     	 movs r0,#88
 1425 02b4 00FB03F3 	 mul r3,r0,r3
 1426 02b8 0B44     	 add r3,r3,r1
 1427 02ba 4033     	 adds r3,r3,#64
 1428 02bc 1A60     	 str r2,[r3]
 425:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1429              	 .loc 2 425 0
 1430 02be 98E0     	 b .L90
 1431              	.L84:
 426:../Libraries/XMCLib/src/xmc_dma.c **** 
 427:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD:
 428:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)((uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk |
 1432              	 .loc 2 428 0
 1433 02c0 FB7A     	 ldrb r3,[r7,#11]
 1434 02c2 FA7A     	 ldrb r2,[r7,#11]
 1435 02c4 F968     	 ldr r1,[r7,#12]
 1436 02c6 5820     	 movs r0,#88
 1437 02c8 00FB02F2 	 mul r2,r0,r2
 1438 02cc 0A44     	 add r2,r2,r1
 1439 02ce 4032     	 adds r2,r2,#64
 1440 02d0 1268     	 ldr r2,[r2]
 1441 02d2 42F04042 	 orr r2,r2,#-1073741824
 1442 02d6 F968     	 ldr r1,[r7,#12]
 1443 02d8 5820     	 movs r0,#88
 1444 02da 00FB03F3 	 mul r3,r0,r3
 1445 02de 0B44     	 add r3,r3,r1
 1446 02e0 4033     	 adds r3,r3,#64
 1447 02e2 1A60     	 str r2,[r3]
 429:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk);
 430:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1448              	 .loc 2 430 0
 1449 02e4 85E0     	 b .L90
 1450              	.L85:
 431:../Libraries/XMCLib/src/xmc_dma.c **** 
 432:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED:
 433:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1451              	 .loc 2 433 0
 1452 02e6 FB7A     	 ldrb r3,[r7,#11]
 1453 02e8 FA7A     	 ldrb r2,[r7,#11]
 1454 02ea F968     	 ldr r1,[r7,#12]
 1455 02ec 5820     	 movs r0,#88
 1456 02ee 00FB02F2 	 mul r2,r0,r2
 1457 02f2 0A44     	 add r2,r2,r1
 1458 02f4 1832     	 adds r2,r2,#24
 1459 02f6 1268     	 ldr r2,[r2]
 1460 02f8 42F00062 	 orr r2,r2,#134217728
 1461 02fc F968     	 ldr r1,[r7,#12]
 1462 02fe 5820     	 movs r0,#88
 1463 0300 00FB03F3 	 mul r3,r0,r3
 1464 0304 0B44     	 add r3,r3,r1
 1465 0306 1833     	 adds r3,r3,#24
 1466 0308 1A60     	 str r2,[r3]
 434:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1467              	 .loc 2 434 0
 1468 030a 72E0     	 b .L90
 1469              	.L86:
 435:../Libraries/XMCLib/src/xmc_dma.c **** 
 436:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED:
 437:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1470              	 .loc 2 437 0
 1471 030c FB7A     	 ldrb r3,[r7,#11]
 1472 030e FA7A     	 ldrb r2,[r7,#11]
 1473 0310 F968     	 ldr r1,[r7,#12]
 1474 0312 5820     	 movs r0,#88
 1475 0314 00FB02F2 	 mul r2,r0,r2
 1476 0318 0A44     	 add r2,r2,r1
 1477 031a 4032     	 adds r2,r2,#64
 1478 031c 1268     	 ldr r2,[r2]
 1479 031e 42F08042 	 orr r2,r2,#1073741824
 1480 0322 F968     	 ldr r1,[r7,#12]
 1481 0324 5820     	 movs r0,#88
 1482 0326 00FB03F3 	 mul r3,r0,r3
 1483 032a 0B44     	 add r3,r3,r1
 1484 032c 4033     	 adds r3,r3,#64
 1485 032e 1A60     	 str r2,[r3]
 438:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1486              	 .loc 2 438 0
 1487 0330 FB7A     	 ldrb r3,[r7,#11]
 1488 0332 FA7A     	 ldrb r2,[r7,#11]
 1489 0334 F968     	 ldr r1,[r7,#12]
 1490 0336 5820     	 movs r0,#88
 1491 0338 00FB02F2 	 mul r2,r0,r2
 1492 033c 0A44     	 add r2,r2,r1
 1493 033e 1832     	 adds r2,r2,#24
 1494 0340 1268     	 ldr r2,[r2]
 1495 0342 42F00062 	 orr r2,r2,#134217728
 1496 0346 F968     	 ldr r1,[r7,#12]
 1497 0348 5820     	 movs r0,#88
 1498 034a 00FB03F3 	 mul r3,r0,r3
 1499 034e 0B44     	 add r3,r3,r1
 1500 0350 1833     	 adds r3,r3,#24
 1501 0352 1A60     	 str r2,[r3]
 439:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1502              	 .loc 2 439 0
 1503 0354 4DE0     	 b .L90
 1504              	.L87:
 440:../Libraries/XMCLib/src/xmc_dma.c **** 
 441:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS:
 442:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1505              	 .loc 2 442 0
 1506 0356 FB7A     	 ldrb r3,[r7,#11]
 1507 0358 FA7A     	 ldrb r2,[r7,#11]
 1508 035a F968     	 ldr r1,[r7,#12]
 1509 035c 5820     	 movs r0,#88
 1510 035e 00FB02F2 	 mul r2,r0,r2
 1511 0362 0A44     	 add r2,r2,r1
 1512 0364 1832     	 adds r2,r2,#24
 1513 0366 1268     	 ldr r2,[r2]
 1514 0368 42F08052 	 orr r2,r2,#268435456
 1515 036c F968     	 ldr r1,[r7,#12]
 1516 036e 5820     	 movs r0,#88
 1517 0370 00FB03F3 	 mul r3,r0,r3
 1518 0374 0B44     	 add r3,r3,r1
 1519 0376 1833     	 adds r3,r3,#24
 1520 0378 1A60     	 str r2,[r3]
 443:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1521              	 .loc 2 443 0
 1522 037a 3AE0     	 b .L90
 1523              	.L96:
 1524              	 .align 2
 1525              	.L95:
 1526 037c 00400150 	 .word 1342259200
 1527              	.L88:
 444:../Libraries/XMCLib/src/xmc_dma.c **** 
 445:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD:
 446:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1528              	 .loc 2 446 0
 1529 0380 FB7A     	 ldrb r3,[r7,#11]
 1530 0382 FA7A     	 ldrb r2,[r7,#11]
 1531 0384 F968     	 ldr r1,[r7,#12]
 1532 0386 5820     	 movs r0,#88
 1533 0388 00FB02F2 	 mul r2,r0,r2
 1534 038c 0A44     	 add r2,r2,r1
 1535 038e 4032     	 adds r2,r2,#64
 1536 0390 1268     	 ldr r2,[r2]
 1537 0392 42F00042 	 orr r2,r2,#-2147483648
 1538 0396 F968     	 ldr r1,[r7,#12]
 1539 0398 5820     	 movs r0,#88
 1540 039a 00FB03F3 	 mul r3,r0,r3
 1541 039e 0B44     	 add r3,r3,r1
 1542 03a0 4033     	 adds r3,r3,#64
 1543 03a2 1A60     	 str r2,[r3]
 447:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1544              	 .loc 2 447 0
 1545 03a4 FB7A     	 ldrb r3,[r7,#11]
 1546 03a6 FA7A     	 ldrb r2,[r7,#11]
 1547 03a8 F968     	 ldr r1,[r7,#12]
 1548 03aa 5820     	 movs r0,#88
 1549 03ac 00FB02F2 	 mul r2,r0,r2
 1550 03b0 0A44     	 add r2,r2,r1
 1551 03b2 1832     	 adds r2,r2,#24
 1552 03b4 1268     	 ldr r2,[r2]
 1553 03b6 42F08052 	 orr r2,r2,#268435456
 1554 03ba F968     	 ldr r1,[r7,#12]
 1555 03bc 5820     	 movs r0,#88
 1556 03be 00FB03F3 	 mul r3,r0,r3
 1557 03c2 0B44     	 add r3,r3,r1
 1558 03c4 1833     	 adds r3,r3,#24
 1559 03c6 1A60     	 str r2,[r3]
 448:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1560              	 .loc 2 448 0
 1561 03c8 13E0     	 b .L90
 1562              	.L89:
 449:../Libraries/XMCLib/src/xmc_dma.c **** 
 450:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED:
 451:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)((uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk |
 1563              	 .loc 2 451 0
 1564 03ca FB7A     	 ldrb r3,[r7,#11]
 1565 03cc FA7A     	 ldrb r2,[r7,#11]
 1566 03ce F968     	 ldr r1,[r7,#12]
 1567 03d0 5820     	 movs r0,#88
 1568 03d2 00FB02F2 	 mul r2,r0,r2
 1569 03d6 0A44     	 add r2,r2,r1
 1570 03d8 1832     	 adds r2,r2,#24
 1571 03da 1268     	 ldr r2,[r2]
 1572 03dc 42F0C052 	 orr r2,r2,#402653184
 1573 03e0 F968     	 ldr r1,[r7,#12]
 1574 03e2 5820     	 movs r0,#88
 1575 03e4 00FB03F3 	 mul r3,r0,r3
 1576 03e8 0B44     	 add r3,r3,r1
 1577 03ea 1833     	 adds r3,r3,#24
 1578 03ec 1A60     	 str r2,[r3]
 452:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk);
 453:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1579              	 .loc 2 453 0
 1580 03ee 00E0     	 b .L90
 1581              	.L94:
 454:../Libraries/XMCLib/src/xmc_dma.c **** 
 455:../Libraries/XMCLib/src/xmc_dma.c ****         default:
 456:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1582              	 .loc 2 456 0
 1583 03f0 00BF     	 nop
 1584              	.L90:
 457:../Libraries/XMCLib/src/xmc_dma.c ****       }
 458:../Libraries/XMCLib/src/xmc_dma.c **** 
 459:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_OK;
 1585              	 .loc 2 459 0
 1586 03f2 0023     	 movs r3,#0
 1587 03f4 FB75     	 strb r3,[r7,#23]
 1588 03f6 04E0     	 b .L92
 1589              	.L69:
 460:../Libraries/XMCLib/src/xmc_dma.c **** 
 461:../Libraries/XMCLib/src/xmc_dma.c ****     }
 462:../Libraries/XMCLib/src/xmc_dma.c ****     else
 463:../Libraries/XMCLib/src/xmc_dma.c ****     {
 464:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_BUSY;
 1590              	 .loc 2 464 0
 1591 03f8 0223     	 movs r3,#2
 1592 03fa FB75     	 strb r3,[r7,#23]
 1593 03fc 01E0     	 b .L92
 1594              	.L68:
 465:../Libraries/XMCLib/src/xmc_dma.c ****     }
 466:../Libraries/XMCLib/src/xmc_dma.c ****   }
 467:../Libraries/XMCLib/src/xmc_dma.c ****   else
 468:../Libraries/XMCLib/src/xmc_dma.c ****   {
 469:../Libraries/XMCLib/src/xmc_dma.c ****     status = XMC_DMA_CH_STATUS_ERROR;
 1595              	 .loc 2 469 0
 1596 03fe 0123     	 movs r3,#1
 1597 0400 FB75     	 strb r3,[r7,#23]
 1598              	.L92:
 470:../Libraries/XMCLib/src/xmc_dma.c ****   }
 471:../Libraries/XMCLib/src/xmc_dma.c **** 
 472:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 1599              	 .loc 2 472 0
 1600 0402 FB7D     	 ldrb r3,[r7,#23]
 473:../Libraries/XMCLib/src/xmc_dma.c **** }
 1601              	 .loc 2 473 0
 1602 0404 1846     	 mov r0,r3
 1603 0406 1837     	 adds r7,r7,#24
 1604              	 .cfi_def_cfa_offset 8
 1605 0408 BD46     	 mov sp,r7
 1606              	 .cfi_def_cfa_register 13
 1607              	 
 1608 040a 80BD     	 pop {r7,pc}
 1609              	 .cfi_endproc
 1610              	.LFE199:
 1612              	 .section .text.XMC_DMA_CH_Suspend,"ax",%progbits
 1613              	 .align 2
 1614              	 .global XMC_DMA_CH_Suspend
 1615              	 .thumb
 1616              	 .thumb_func
 1618              	XMC_DMA_CH_Suspend:
 1619              	.LFB200:
 474:../Libraries/XMCLib/src/xmc_dma.c **** 
 475:../Libraries/XMCLib/src/xmc_dma.c **** /* Suspend DMA channel transfer */
 476:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Suspend(XMC_DMA_t *const dma, const uint8_t channel)
 477:../Libraries/XMCLib/src/xmc_dma.c **** {
 1620              	 .loc 2 477 0
 1621              	 .cfi_startproc
 1622              	 
 1623              	 
 1624              	 
 1625 0000 80B4     	 push {r7}
 1626              	 .cfi_def_cfa_offset 4
 1627              	 .cfi_offset 7,-4
 1628 0002 83B0     	 sub sp,sp,#12
 1629              	 .cfi_def_cfa_offset 16
 1630 0004 00AF     	 add r7,sp,#0
 1631              	 .cfi_def_cfa_register 7
 1632 0006 7860     	 str r0,[r7,#4]
 1633 0008 0B46     	 mov r3,r1
 1634 000a FB70     	 strb r3,[r7,#3]
 478:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1635              	 .loc 2 478 0
 1636 000c FB78     	 ldrb r3,[r7,#3]
 1637 000e FA78     	 ldrb r2,[r7,#3]
 1638 0010 7968     	 ldr r1,[r7,#4]
 1639 0012 5820     	 movs r0,#88
 1640 0014 00FB02F2 	 mul r2,r0,r2
 1641 0018 0A44     	 add r2,r2,r1
 1642 001a 4032     	 adds r2,r2,#64
 1643 001c 1268     	 ldr r2,[r2]
 1644 001e 42F48072 	 orr r2,r2,#256
 1645 0022 7968     	 ldr r1,[r7,#4]
 1646 0024 5820     	 movs r0,#88
 1647 0026 00FB03F3 	 mul r3,r0,r3
 1648 002a 0B44     	 add r3,r3,r1
 1649 002c 4033     	 adds r3,r3,#64
 1650 002e 1A60     	 str r2,[r3]
 479:../Libraries/XMCLib/src/xmc_dma.c **** }
 1651              	 .loc 2 479 0
 1652 0030 0C37     	 adds r7,r7,#12
 1653              	 .cfi_def_cfa_offset 4
 1654 0032 BD46     	 mov sp,r7
 1655              	 .cfi_def_cfa_register 13
 1656              	 
 1657 0034 5DF8047B 	 ldr r7,[sp],#4
 1658              	 .cfi_restore 7
 1659              	 .cfi_def_cfa_offset 0
 1660 0038 7047     	 bx lr
 1661              	 .cfi_endproc
 1662              	.LFE200:
 1664 003a 00BF     	 .section .text.XMC_DMA_CH_Resume,"ax",%progbits
 1665              	 .align 2
 1666              	 .global XMC_DMA_CH_Resume
 1667              	 .thumb
 1668              	 .thumb_func
 1670              	XMC_DMA_CH_Resume:
 1671              	.LFB201:
 480:../Libraries/XMCLib/src/xmc_dma.c **** 
 481:../Libraries/XMCLib/src/xmc_dma.c **** /* Resume DMA channel transfer */
 482:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Resume(XMC_DMA_t *const dma, const uint8_t channel)
 483:../Libraries/XMCLib/src/xmc_dma.c **** {
 1672              	 .loc 2 483 0
 1673              	 .cfi_startproc
 1674              	 
 1675              	 
 1676              	 
 1677 0000 80B4     	 push {r7}
 1678              	 .cfi_def_cfa_offset 4
 1679              	 .cfi_offset 7,-4
 1680 0002 83B0     	 sub sp,sp,#12
 1681              	 .cfi_def_cfa_offset 16
 1682 0004 00AF     	 add r7,sp,#0
 1683              	 .cfi_def_cfa_register 7
 1684 0006 7860     	 str r0,[r7,#4]
 1685 0008 0B46     	 mov r3,r1
 1686 000a FB70     	 strb r3,[r7,#3]
 484:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1687              	 .loc 2 484 0
 1688 000c FB78     	 ldrb r3,[r7,#3]
 1689 000e FA78     	 ldrb r2,[r7,#3]
 1690 0010 7968     	 ldr r1,[r7,#4]
 1691 0012 5820     	 movs r0,#88
 1692 0014 00FB02F2 	 mul r2,r0,r2
 1693 0018 0A44     	 add r2,r2,r1
 1694 001a 4032     	 adds r2,r2,#64
 1695 001c 1268     	 ldr r2,[r2]
 1696 001e 22F48072 	 bic r2,r2,#256
 1697 0022 7968     	 ldr r1,[r7,#4]
 1698 0024 5820     	 movs r0,#88
 1699 0026 00FB03F3 	 mul r3,r0,r3
 1700 002a 0B44     	 add r3,r3,r1
 1701 002c 4033     	 adds r3,r3,#64
 1702 002e 1A60     	 str r2,[r3]
 485:../Libraries/XMCLib/src/xmc_dma.c **** }
 1703              	 .loc 2 485 0
 1704 0030 0C37     	 adds r7,r7,#12
 1705              	 .cfi_def_cfa_offset 4
 1706 0032 BD46     	 mov sp,r7
 1707              	 .cfi_def_cfa_register 13
 1708              	 
 1709 0034 5DF8047B 	 ldr r7,[sp],#4
 1710              	 .cfi_restore 7
 1711              	 .cfi_def_cfa_offset 0
 1712 0038 7047     	 bx lr
 1713              	 .cfi_endproc
 1714              	.LFE201:
 1716 003a 00BF     	 .section .text.XMC_DMA_CH_IsSuspended,"ax",%progbits
 1717              	 .align 2
 1718              	 .global XMC_DMA_CH_IsSuspended
 1719              	 .thumb
 1720              	 .thumb_func
 1722              	XMC_DMA_CH_IsSuspended:
 1723              	.LFB202:
 486:../Libraries/XMCLib/src/xmc_dma.c **** 
 487:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is suspended */
 488:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsSuspended(XMC_DMA_t *const dma, const uint8_t channel)
 489:../Libraries/XMCLib/src/xmc_dma.c **** {
 1724              	 .loc 2 489 0
 1725              	 .cfi_startproc
 1726              	 
 1727              	 
 1728              	 
 1729 0000 80B4     	 push {r7}
 1730              	 .cfi_def_cfa_offset 4
 1731              	 .cfi_offset 7,-4
 1732 0002 83B0     	 sub sp,sp,#12
 1733              	 .cfi_def_cfa_offset 16
 1734 0004 00AF     	 add r7,sp,#0
 1735              	 .cfi_def_cfa_register 7
 1736 0006 7860     	 str r0,[r7,#4]
 1737 0008 0B46     	 mov r3,r1
 1738 000a FB70     	 strb r3,[r7,#3]
 490:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CH[channel].CFGL & (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk);
 1739              	 .loc 2 490 0
 1740 000c FB78     	 ldrb r3,[r7,#3]
 1741 000e 7A68     	 ldr r2,[r7,#4]
 1742 0010 5821     	 movs r1,#88
 1743 0012 01FB03F3 	 mul r3,r1,r3
 1744 0016 1344     	 add r3,r3,r2
 1745 0018 4033     	 adds r3,r3,#64
 1746 001a 1B68     	 ldr r3,[r3]
 1747 001c 03F48073 	 and r3,r3,#256
 1748 0020 002B     	 cmp r3,#0
 1749 0022 14BF     	 ite ne
 1750 0024 0123     	 movne r3,#1
 1751 0026 0023     	 moveq r3,#0
 1752 0028 DBB2     	 uxtb r3,r3
 491:../Libraries/XMCLib/src/xmc_dma.c **** }
 1753              	 .loc 2 491 0
 1754 002a 1846     	 mov r0,r3
 1755 002c 0C37     	 adds r7,r7,#12
 1756              	 .cfi_def_cfa_offset 4
 1757 002e BD46     	 mov sp,r7
 1758              	 .cfi_def_cfa_register 13
 1759              	 
 1760 0030 5DF8047B 	 ldr r7,[sp],#4
 1761              	 .cfi_restore 7
 1762              	 .cfi_def_cfa_offset 0
 1763 0034 7047     	 bx lr
 1764              	 .cfi_endproc
 1765              	.LFE202:
 1767 0036 00BF     	 .section .text.XMC_DMA_CH_EnableEvent,"ax",%progbits
 1768              	 .align 2
 1769              	 .global XMC_DMA_CH_EnableEvent
 1770              	 .thumb
 1771              	 .thumb_func
 1773              	XMC_DMA_CH_EnableEvent:
 1774              	.LFB203:
 492:../Libraries/XMCLib/src/xmc_dma.c **** 
 493:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA event */
 494:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 495:../Libraries/XMCLib/src/xmc_dma.c **** {
 1775              	 .loc 2 495 0
 1776              	 .cfi_startproc
 1777              	 
 1778              	 
 1779              	 
 1780 0000 80B4     	 push {r7}
 1781              	 .cfi_def_cfa_offset 4
 1782              	 .cfi_offset 7,-4
 1783 0002 87B0     	 sub sp,sp,#28
 1784              	 .cfi_def_cfa_offset 32
 1785 0004 00AF     	 add r7,sp,#0
 1786              	 .cfi_def_cfa_register 7
 1787 0006 F860     	 str r0,[r7,#12]
 1788 0008 0B46     	 mov r3,r1
 1789 000a 7A60     	 str r2,[r7,#4]
 1790 000c FB72     	 strb r3,[r7,#11]
 496:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 497:../Libraries/XMCLib/src/xmc_dma.c **** 
 498:../Libraries/XMCLib/src/xmc_dma.c ****   for (event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1791              	 .loc 2 498 0
 1792 000e 0023     	 movs r3,#0
 1793 0010 7B61     	 str r3,[r7,#20]
 1794 0012 14E0     	 b .L102
 1795              	.L104:
 499:../Libraries/XMCLib/src/xmc_dma.c ****   {
 500:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 1796              	 .loc 2 500 0
 1797 0014 7B69     	 ldr r3,[r7,#20]
 1798 0016 7A68     	 ldr r2,[r7,#4]
 1799 0018 22FA03F3 	 lsr r3,r2,r3
 1800 001c 03F00103 	 and r3,r3,#1
 1801 0020 002B     	 cmp r3,#0
 1802 0022 09D0     	 beq .L103
 501:../Libraries/XMCLib/src/xmc_dma.c ****     {
 502:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] = ((uint32_t)0x101UL << channel);
 1803              	 .loc 2 502 0
 1804 0024 7B69     	 ldr r3,[r7,#20]
 1805 0026 5A00     	 lsls r2,r3,#1
 1806 0028 FB7A     	 ldrb r3,[r7,#11]
 1807 002a 40F20111 	 movw r1,#257
 1808 002e 9940     	 lsls r1,r1,r3
 1809 0030 FB68     	 ldr r3,[r7,#12]
 1810 0032 C432     	 adds r2,r2,#196
 1811 0034 43F82210 	 str r1,[r3,r2,lsl#2]
 1812              	.L103:
 498:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1813              	 .loc 2 498 0 discriminator 2
 1814 0038 7B69     	 ldr r3,[r7,#20]
 1815 003a 0133     	 adds r3,r3,#1
 1816 003c 7B61     	 str r3,[r7,#20]
 1817              	.L102:
 498:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1818              	 .loc 2 498 0 is_stmt 0 discriminator 1
 1819 003e 7B69     	 ldr r3,[r7,#20]
 1820 0040 042B     	 cmp r3,#4
 1821 0042 E7D9     	 bls .L104
 503:../Libraries/XMCLib/src/xmc_dma.c ****     }
 504:../Libraries/XMCLib/src/xmc_dma.c ****   }
 505:../Libraries/XMCLib/src/xmc_dma.c **** }
 1822              	 .loc 2 505 0 is_stmt 1
 1823 0044 1C37     	 adds r7,r7,#28
 1824              	 .cfi_def_cfa_offset 4
 1825 0046 BD46     	 mov sp,r7
 1826              	 .cfi_def_cfa_register 13
 1827              	 
 1828 0048 5DF8047B 	 ldr r7,[sp],#4
 1829              	 .cfi_restore 7
 1830              	 .cfi_def_cfa_offset 0
 1831 004c 7047     	 bx lr
 1832              	 .cfi_endproc
 1833              	.LFE203:
 1835              	 .section .text.XMC_DMA_CH_DisableEvent,"ax",%progbits
 1836              	 .align 2
 1837              	 .global XMC_DMA_CH_DisableEvent
 1838              	 .thumb
 1839              	 .thumb_func
 1841              	XMC_DMA_CH_DisableEvent:
 1842              	.LFB204:
 506:../Libraries/XMCLib/src/xmc_dma.c **** 
 507:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA event */
 508:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 509:../Libraries/XMCLib/src/xmc_dma.c **** {
 1843              	 .loc 2 509 0
 1844              	 .cfi_startproc
 1845              	 
 1846              	 
 1847              	 
 1848 0000 80B4     	 push {r7}
 1849              	 .cfi_def_cfa_offset 4
 1850              	 .cfi_offset 7,-4
 1851 0002 87B0     	 sub sp,sp,#28
 1852              	 .cfi_def_cfa_offset 32
 1853 0004 00AF     	 add r7,sp,#0
 1854              	 .cfi_def_cfa_register 7
 1855 0006 F860     	 str r0,[r7,#12]
 1856 0008 0B46     	 mov r3,r1
 1857 000a 7A60     	 str r2,[r7,#4]
 1858 000c FB72     	 strb r3,[r7,#11]
 510:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 511:../Libraries/XMCLib/src/xmc_dma.c **** 
 512:../Libraries/XMCLib/src/xmc_dma.c ****   for (event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1859              	 .loc 2 512 0
 1860 000e 0023     	 movs r3,#0
 1861 0010 7B61     	 str r3,[r7,#20]
 1862 0012 14E0     	 b .L106
 1863              	.L108:
 513:../Libraries/XMCLib/src/xmc_dma.c ****   {
 514:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 1864              	 .loc 2 514 0
 1865 0014 7B69     	 ldr r3,[r7,#20]
 1866 0016 7A68     	 ldr r2,[r7,#4]
 1867 0018 22FA03F3 	 lsr r3,r2,r3
 1868 001c 03F00103 	 and r3,r3,#1
 1869 0020 002B     	 cmp r3,#0
 1870 0022 09D0     	 beq .L107
 515:../Libraries/XMCLib/src/xmc_dma.c ****     {
 516:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] = ((uint32_t)0x100UL << channel);
 1871              	 .loc 2 516 0
 1872 0024 7B69     	 ldr r3,[r7,#20]
 1873 0026 5A00     	 lsls r2,r3,#1
 1874 0028 FB7A     	 ldrb r3,[r7,#11]
 1875 002a 4FF48071 	 mov r1,#256
 1876 002e 9940     	 lsls r1,r1,r3
 1877 0030 FB68     	 ldr r3,[r7,#12]
 1878 0032 C432     	 adds r2,r2,#196
 1879 0034 43F82210 	 str r1,[r3,r2,lsl#2]
 1880              	.L107:
 512:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1881              	 .loc 2 512 0 discriminator 2
 1882 0038 7B69     	 ldr r3,[r7,#20]
 1883 003a 0133     	 adds r3,r3,#1
 1884 003c 7B61     	 str r3,[r7,#20]
 1885              	.L106:
 512:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1886              	 .loc 2 512 0 is_stmt 0 discriminator 1
 1887 003e 7B69     	 ldr r3,[r7,#20]
 1888 0040 042B     	 cmp r3,#4
 1889 0042 E7D9     	 bls .L108
 517:../Libraries/XMCLib/src/xmc_dma.c ****     }
 518:../Libraries/XMCLib/src/xmc_dma.c ****   }
 519:../Libraries/XMCLib/src/xmc_dma.c **** }
 1890              	 .loc 2 519 0 is_stmt 1
 1891 0044 1C37     	 adds r7,r7,#28
 1892              	 .cfi_def_cfa_offset 4
 1893 0046 BD46     	 mov sp,r7
 1894              	 .cfi_def_cfa_register 13
 1895              	 
 1896 0048 5DF8047B 	 ldr r7,[sp],#4
 1897              	 .cfi_restore 7
 1898              	 .cfi_def_cfa_offset 0
 1899 004c 7047     	 bx lr
 1900              	 .cfi_endproc
 1901              	.LFE204:
 1903              	 .section .text.XMC_DMA_CH_ClearEventStatus,"ax",%progbits
 1904              	 .align 2
 1905              	 .global XMC_DMA_CH_ClearEventStatus
 1906              	 .thumb
 1907              	 .thumb_func
 1909              	XMC_DMA_CH_ClearEventStatus:
 1910              	.LFB205:
 520:../Libraries/XMCLib/src/xmc_dma.c **** 
 521:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear GPDMA event */
 522:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearEventStatus(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 523:../Libraries/XMCLib/src/xmc_dma.c **** {
 1911              	 .loc 2 523 0
 1912              	 .cfi_startproc
 1913              	 
 1914              	 
 1915              	 
 1916 0000 80B4     	 push {r7}
 1917              	 .cfi_def_cfa_offset 4
 1918              	 .cfi_offset 7,-4
 1919 0002 87B0     	 sub sp,sp,#28
 1920              	 .cfi_def_cfa_offset 32
 1921 0004 00AF     	 add r7,sp,#0
 1922              	 .cfi_def_cfa_register 7
 1923 0006 F860     	 str r0,[r7,#12]
 1924 0008 0B46     	 mov r3,r1
 1925 000a 7A60     	 str r2,[r7,#4]
 1926 000c FB72     	 strb r3,[r7,#11]
 524:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 525:../Libraries/XMCLib/src/xmc_dma.c **** 
 526:../Libraries/XMCLib/src/xmc_dma.c ****   for (event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1927              	 .loc 2 526 0
 1928 000e 0023     	 movs r3,#0
 1929 0010 7B61     	 str r3,[r7,#20]
 1930 0012 13E0     	 b .L110
 1931              	.L112:
 527:../Libraries/XMCLib/src/xmc_dma.c ****   {
 528:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & (uint32_t)((uint32_t)0x1UL << event_idx))
 1932              	 .loc 2 528 0
 1933 0014 7B69     	 ldr r3,[r7,#20]
 1934 0016 7A68     	 ldr r2,[r7,#4]
 1935 0018 22FA03F3 	 lsr r3,r2,r3
 1936 001c 03F00103 	 and r3,r3,#1
 1937 0020 002B     	 cmp r3,#0
 1938 0022 08D0     	 beq .L111
 529:../Libraries/XMCLib/src/xmc_dma.c ****     {
 530:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CLEARCHEV[event_idx * 2UL] = ((uint32_t)0x1UL << channel);
 1939              	 .loc 2 530 0
 1940 0024 7B69     	 ldr r3,[r7,#20]
 1941 0026 5A00     	 lsls r2,r3,#1
 1942 0028 FB7A     	 ldrb r3,[r7,#11]
 1943 002a 0121     	 movs r1,#1
 1944 002c 9940     	 lsls r1,r1,r3
 1945 002e FB68     	 ldr r3,[r7,#12]
 1946 0030 CE32     	 adds r2,r2,#206
 1947 0032 43F82210 	 str r1,[r3,r2,lsl#2]
 1948              	.L111:
 526:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1949              	 .loc 2 526 0 discriminator 2
 1950 0036 7B69     	 ldr r3,[r7,#20]
 1951 0038 0133     	 adds r3,r3,#1
 1952 003a 7B61     	 str r3,[r7,#20]
 1953              	.L110:
 526:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1954              	 .loc 2 526 0 is_stmt 0 discriminator 1
 1955 003c 7B69     	 ldr r3,[r7,#20]
 1956 003e 042B     	 cmp r3,#4
 1957 0040 E8D9     	 bls .L112
 531:../Libraries/XMCLib/src/xmc_dma.c ****     }
 532:../Libraries/XMCLib/src/xmc_dma.c ****   }
 533:../Libraries/XMCLib/src/xmc_dma.c **** 
 534:../Libraries/XMCLib/src/xmc_dma.c **** }
 1958              	 .loc 2 534 0 is_stmt 1
 1959 0042 1C37     	 adds r7,r7,#28
 1960              	 .cfi_def_cfa_offset 4
 1961 0044 BD46     	 mov sp,r7
 1962              	 .cfi_def_cfa_register 13
 1963              	 
 1964 0046 5DF8047B 	 ldr r7,[sp],#4
 1965              	 .cfi_restore 7
 1966              	 .cfi_def_cfa_offset 0
 1967 004a 7047     	 bx lr
 1968              	 .cfi_endproc
 1969              	.LFE205:
 1971              	 .section .text.XMC_DMA_CH_GetEventStatus,"ax",%progbits
 1972              	 .align 2
 1973              	 .global XMC_DMA_CH_GetEventStatus
 1974              	 .thumb
 1975              	 .thumb_func
 1977              	XMC_DMA_CH_GetEventStatus:
 1978              	.LFB206:
 535:../Libraries/XMCLib/src/xmc_dma.c **** 
 536:../Libraries/XMCLib/src/xmc_dma.c **** /* Get GPDMA event status */
 537:../Libraries/XMCLib/src/xmc_dma.c **** uint32_t XMC_DMA_CH_GetEventStatus(XMC_DMA_t *const dma, const uint8_t channel)
 538:../Libraries/XMCLib/src/xmc_dma.c **** {
 1979              	 .loc 2 538 0
 1980              	 .cfi_startproc
 1981              	 
 1982              	 
 1983              	 
 1984 0000 80B4     	 push {r7}
 1985              	 .cfi_def_cfa_offset 4
 1986              	 .cfi_offset 7,-4
 1987 0002 85B0     	 sub sp,sp,#20
 1988              	 .cfi_def_cfa_offset 24
 1989 0004 00AF     	 add r7,sp,#0
 1990              	 .cfi_def_cfa_register 7
 1991 0006 7860     	 str r0,[r7,#4]
 1992 0008 0B46     	 mov r3,r1
 1993 000a FB70     	 strb r3,[r7,#3]
 539:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 540:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t status = 0UL;
 1994              	 .loc 2 540 0
 1995 000c 0023     	 movs r3,#0
 1996 000e BB60     	 str r3,[r7,#8]
 541:../Libraries/XMCLib/src/xmc_dma.c **** 
 542:../Libraries/XMCLib/src/xmc_dma.c ****   for (event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1997              	 .loc 2 542 0
 1998 0010 0023     	 movs r3,#0
 1999 0012 FB60     	 str r3,[r7,#12]
 2000 0014 18E0     	 b .L114
 2001              	.L117:
 543:../Libraries/XMCLib/src/xmc_dma.c ****   {
 544:../Libraries/XMCLib/src/xmc_dma.c ****     status |= (uint32_t)((dma->STATUSCHEV[event_idx * 2UL] & (uint32_t)((uint32_t)0x1UL << (uint32_
 2002              	 .loc 2 544 0
 2003 0016 FB68     	 ldr r3,[r7,#12]
 2004 0018 5A00     	 lsls r2,r3,#1
 2005 001a 7B68     	 ldr r3,[r7,#4]
 2006 001c BA32     	 adds r2,r2,#186
 2007 001e 53F82220 	 ldr r2,[r3,r2,lsl#2]
 2008 0022 FB78     	 ldrb r3,[r7,#3]
 2009 0024 22FA03F3 	 lsr r3,r2,r3
 2010 0028 03F00103 	 and r3,r3,#1
 2011 002c 002B     	 cmp r3,#0
 2012 002e 04D0     	 beq .L115
 2013              	 .loc 2 544 0 is_stmt 0 discriminator 1
 2014 0030 FB68     	 ldr r3,[r7,#12]
 2015 0032 0122     	 movs r2,#1
 2016 0034 02FA03F3 	 lsl r3,r2,r3
 2017 0038 00E0     	 b .L116
 2018              	.L115:
 2019              	 .loc 2 544 0 discriminator 2
 2020 003a 0023     	 movs r3,#0
 2021              	.L116:
 2022              	 .loc 2 544 0 discriminator 4
 2023 003c BA68     	 ldr r2,[r7,#8]
 2024 003e 1343     	 orrs r3,r3,r2
 2025 0040 BB60     	 str r3,[r7,#8]
 542:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2026              	 .loc 2 542 0 is_stmt 1 discriminator 4
 2027 0042 FB68     	 ldr r3,[r7,#12]
 2028 0044 0133     	 adds r3,r3,#1
 2029 0046 FB60     	 str r3,[r7,#12]
 2030              	.L114:
 542:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2031              	 .loc 2 542 0 is_stmt 0 discriminator 2
 2032 0048 FB68     	 ldr r3,[r7,#12]
 2033 004a 042B     	 cmp r3,#4
 2034 004c E3D9     	 bls .L117
 545:../Libraries/XMCLib/src/xmc_dma.c ****                          ((uint32_t)0x1UL << event_idx) : (uint32_t)0UL);
 546:../Libraries/XMCLib/src/xmc_dma.c ****   }
 547:../Libraries/XMCLib/src/xmc_dma.c **** 
 548:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 2035              	 .loc 2 548 0 is_stmt 1
 2036 004e BB68     	 ldr r3,[r7,#8]
 549:../Libraries/XMCLib/src/xmc_dma.c **** }
 2037              	 .loc 2 549 0
 2038 0050 1846     	 mov r0,r3
 2039 0052 1437     	 adds r7,r7,#20
 2040              	 .cfi_def_cfa_offset 4
 2041 0054 BD46     	 mov sp,r7
 2042              	 .cfi_def_cfa_register 13
 2043              	 
 2044 0056 5DF8047B 	 ldr r7,[sp],#4
 2045              	 .cfi_restore 7
 2046              	 .cfi_def_cfa_offset 0
 2047 005a 7047     	 bx lr
 2048              	 .cfi_endproc
 2049              	.LFE206:
 2051              	 .section .text.XMC_DMA_CH_EnableSourceGather,"ax",%progbits
 2052              	 .align 2
 2053              	 .global XMC_DMA_CH_EnableSourceGather
 2054              	 .thumb
 2055              	 .thumb_func
 2057              	XMC_DMA_CH_EnableSourceGather:
 2058              	.LFB207:
 550:../Libraries/XMCLib/src/xmc_dma.c **** 
 551:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source gather */
 552:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceGather(XMC_DMA_t *const dma, const uint8_t channel, uint32_t interval, 
 553:../Libraries/XMCLib/src/xmc_dma.c **** {
 2059              	 .loc 2 553 0
 2060              	 .cfi_startproc
 2061              	 
 2062              	 
 2063              	 
 2064 0000 80B4     	 push {r7}
 2065              	 .cfi_def_cfa_offset 4
 2066              	 .cfi_offset 7,-4
 2067 0002 85B0     	 sub sp,sp,#20
 2068              	 .cfi_def_cfa_offset 24
 2069 0004 00AF     	 add r7,sp,#0
 2070              	 .cfi_def_cfa_register 7
 2071 0006 F860     	 str r0,[r7,#12]
 2072 0008 7A60     	 str r2,[r7,#4]
 2073 000a 1A46     	 mov r2,r3
 2074 000c 0B46     	 mov r3,r1
 2075 000e FB72     	 strb r3,[r7,#11]
 2076 0010 1346     	 mov r3,r2
 2077 0012 3B81     	 strh r3,[r7,#8]
 554:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2078              	 .loc 2 554 0
 2079 0014 FB7A     	 ldrb r3,[r7,#11]
 2080 0016 FA7A     	 ldrb r2,[r7,#11]
 2081 0018 F968     	 ldr r1,[r7,#12]
 2082 001a 5820     	 movs r0,#88
 2083 001c 00FB02F2 	 mul r2,r0,r2
 2084 0020 0A44     	 add r2,r2,r1
 2085 0022 1832     	 adds r2,r2,#24
 2086 0024 1268     	 ldr r2,[r2]
 2087 0026 42F40032 	 orr r2,r2,#131072
 2088 002a F968     	 ldr r1,[r7,#12]
 2089 002c 5820     	 movs r0,#88
 2090 002e 00FB03F3 	 mul r3,r0,r3
 2091 0032 0B44     	 add r3,r3,r1
 2092 0034 1833     	 adds r3,r3,#24
 2093 0036 1A60     	 str r2,[r3]
 555:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].SGR = ((uint32_t)interval << GPDMA0_CH_SGR_SGI_Pos) | ((uint32_t)count << GPDMA0
 2094              	 .loc 2 555 0
 2095 0038 FB7A     	 ldrb r3,[r7,#11]
 2096 003a 3A89     	 ldrh r2,[r7,#8]
 2097 003c 1105     	 lsls r1,r2,#20
 2098 003e 7A68     	 ldr r2,[r7,#4]
 2099 0040 0A43     	 orrs r2,r2,r1
 2100 0042 F968     	 ldr r1,[r7,#12]
 2101 0044 5820     	 movs r0,#88
 2102 0046 00FB03F3 	 mul r3,r0,r3
 2103 004a 0B44     	 add r3,r3,r1
 2104 004c 4833     	 adds r3,r3,#72
 2105 004e 1A60     	 str r2,[r3]
 556:../Libraries/XMCLib/src/xmc_dma.c **** }
 2106              	 .loc 2 556 0
 2107 0050 1437     	 adds r7,r7,#20
 2108              	 .cfi_def_cfa_offset 4
 2109 0052 BD46     	 mov sp,r7
 2110              	 .cfi_def_cfa_register 13
 2111              	 
 2112 0054 5DF8047B 	 ldr r7,[sp],#4
 2113              	 .cfi_restore 7
 2114              	 .cfi_def_cfa_offset 0
 2115 0058 7047     	 bx lr
 2116              	 .cfi_endproc
 2117              	.LFE207:
 2119 005a 00BF     	 .section .text.XMC_DMA_CH_DisableSourceGather,"ax",%progbits
 2120              	 .align 2
 2121              	 .global XMC_DMA_CH_DisableSourceGather
 2122              	 .thumb
 2123              	 .thumb_func
 2125              	XMC_DMA_CH_DisableSourceGather:
 2126              	.LFB208:
 557:../Libraries/XMCLib/src/xmc_dma.c **** 
 558:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source gather */
 559:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceGather(XMC_DMA_t *const dma, const uint8_t channel)
 560:../Libraries/XMCLib/src/xmc_dma.c **** {
 2127              	 .loc 2 560 0
 2128              	 .cfi_startproc
 2129              	 
 2130              	 
 2131              	 
 2132 0000 80B4     	 push {r7}
 2133              	 .cfi_def_cfa_offset 4
 2134              	 .cfi_offset 7,-4
 2135 0002 83B0     	 sub sp,sp,#12
 2136              	 .cfi_def_cfa_offset 16
 2137 0004 00AF     	 add r7,sp,#0
 2138              	 .cfi_def_cfa_register 7
 2139 0006 7860     	 str r0,[r7,#4]
 2140 0008 0B46     	 mov r3,r1
 2141 000a FB70     	 strb r3,[r7,#3]
 561:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2142              	 .loc 2 561 0
 2143 000c FB78     	 ldrb r3,[r7,#3]
 2144 000e FA78     	 ldrb r2,[r7,#3]
 2145 0010 7968     	 ldr r1,[r7,#4]
 2146 0012 5820     	 movs r0,#88
 2147 0014 00FB02F2 	 mul r2,r0,r2
 2148 0018 0A44     	 add r2,r2,r1
 2149 001a 1832     	 adds r2,r2,#24
 2150 001c 1268     	 ldr r2,[r2]
 2151 001e 22F40032 	 bic r2,r2,#131072
 2152 0022 7968     	 ldr r1,[r7,#4]
 2153 0024 5820     	 movs r0,#88
 2154 0026 00FB03F3 	 mul r3,r0,r3
 2155 002a 0B44     	 add r3,r3,r1
 2156 002c 1833     	 adds r3,r3,#24
 2157 002e 1A60     	 str r2,[r3]
 562:../Libraries/XMCLib/src/xmc_dma.c **** }
 2158              	 .loc 2 562 0
 2159 0030 0C37     	 adds r7,r7,#12
 2160              	 .cfi_def_cfa_offset 4
 2161 0032 BD46     	 mov sp,r7
 2162              	 .cfi_def_cfa_register 13
 2163              	 
 2164 0034 5DF8047B 	 ldr r7,[sp],#4
 2165              	 .cfi_restore 7
 2166              	 .cfi_def_cfa_offset 0
 2167 0038 7047     	 bx lr
 2168              	 .cfi_endproc
 2169              	.LFE208:
 2171 003a 00BF     	 .section .text.XMC_DMA_CH_EnableDestinationScatter,"ax",%progbits
 2172              	 .align 2
 2173              	 .global XMC_DMA_CH_EnableDestinationScatter
 2174              	 .thumb
 2175              	 .thumb_func
 2177              	XMC_DMA_CH_EnableDestinationScatter:
 2178              	.LFB209:
 563:../Libraries/XMCLib/src/xmc_dma.c **** 
 564:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination scatter */
 565:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel, uint32_t inte
 566:../Libraries/XMCLib/src/xmc_dma.c **** {
 2179              	 .loc 2 566 0
 2180              	 .cfi_startproc
 2181              	 
 2182              	 
 2183              	 
 2184 0000 80B4     	 push {r7}
 2185              	 .cfi_def_cfa_offset 4
 2186              	 .cfi_offset 7,-4
 2187 0002 85B0     	 sub sp,sp,#20
 2188              	 .cfi_def_cfa_offset 24
 2189 0004 00AF     	 add r7,sp,#0
 2190              	 .cfi_def_cfa_register 7
 2191 0006 F860     	 str r0,[r7,#12]
 2192 0008 7A60     	 str r2,[r7,#4]
 2193 000a 1A46     	 mov r2,r3
 2194 000c 0B46     	 mov r3,r1
 2195 000e FB72     	 strb r3,[r7,#11]
 2196 0010 1346     	 mov r3,r2
 2197 0012 3B81     	 strh r3,[r7,#8]
 567:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2198              	 .loc 2 567 0
 2199 0014 FB7A     	 ldrb r3,[r7,#11]
 2200 0016 FA7A     	 ldrb r2,[r7,#11]
 2201 0018 F968     	 ldr r1,[r7,#12]
 2202 001a 5820     	 movs r0,#88
 2203 001c 00FB02F2 	 mul r2,r0,r2
 2204 0020 0A44     	 add r2,r2,r1
 2205 0022 1832     	 adds r2,r2,#24
 2206 0024 1268     	 ldr r2,[r2]
 2207 0026 42F48022 	 orr r2,r2,#262144
 2208 002a F968     	 ldr r1,[r7,#12]
 2209 002c 5820     	 movs r0,#88
 2210 002e 00FB03F3 	 mul r3,r0,r3
 2211 0032 0B44     	 add r3,r3,r1
 2212 0034 1833     	 adds r3,r3,#24
 2213 0036 1A60     	 str r2,[r3]
 568:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].DSR = ((uint32_t)interval << GPDMA0_CH_DSR_DSI_Pos) | ((uint32_t)count << GPDMA0
 2214              	 .loc 2 568 0
 2215 0038 FB7A     	 ldrb r3,[r7,#11]
 2216 003a 3A89     	 ldrh r2,[r7,#8]
 2217 003c 1105     	 lsls r1,r2,#20
 2218 003e 7A68     	 ldr r2,[r7,#4]
 2219 0040 0A43     	 orrs r2,r2,r1
 2220 0042 F968     	 ldr r1,[r7,#12]
 2221 0044 5820     	 movs r0,#88
 2222 0046 00FB03F3 	 mul r3,r0,r3
 2223 004a 0B44     	 add r3,r3,r1
 2224 004c 5033     	 adds r3,r3,#80
 2225 004e 1A60     	 str r2,[r3]
 569:../Libraries/XMCLib/src/xmc_dma.c **** }
 2226              	 .loc 2 569 0
 2227 0050 1437     	 adds r7,r7,#20
 2228              	 .cfi_def_cfa_offset 4
 2229 0052 BD46     	 mov sp,r7
 2230              	 .cfi_def_cfa_register 13
 2231              	 
 2232 0054 5DF8047B 	 ldr r7,[sp],#4
 2233              	 .cfi_restore 7
 2234              	 .cfi_def_cfa_offset 0
 2235 0058 7047     	 bx lr
 2236              	 .cfi_endproc
 2237              	.LFE209:
 2239 005a 00BF     	 .section .text.XMC_DMA_CH_DisableDestinationScatter,"ax",%progbits
 2240              	 .align 2
 2241              	 .global XMC_DMA_CH_DisableDestinationScatter
 2242              	 .thumb
 2243              	 .thumb_func
 2245              	XMC_DMA_CH_DisableDestinationScatter:
 2246              	.LFB210:
 570:../Libraries/XMCLib/src/xmc_dma.c **** 
 571:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination scatter */
 572:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel)
 573:../Libraries/XMCLib/src/xmc_dma.c **** {
 2247              	 .loc 2 573 0
 2248              	 .cfi_startproc
 2249              	 
 2250              	 
 2251              	 
 2252 0000 80B4     	 push {r7}
 2253              	 .cfi_def_cfa_offset 4
 2254              	 .cfi_offset 7,-4
 2255 0002 83B0     	 sub sp,sp,#12
 2256              	 .cfi_def_cfa_offset 16
 2257 0004 00AF     	 add r7,sp,#0
 2258              	 .cfi_def_cfa_register 7
 2259 0006 7860     	 str r0,[r7,#4]
 2260 0008 0B46     	 mov r3,r1
 2261 000a FB70     	 strb r3,[r7,#3]
 574:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2262              	 .loc 2 574 0
 2263 000c FB78     	 ldrb r3,[r7,#3]
 2264 000e FA78     	 ldrb r2,[r7,#3]
 2265 0010 7968     	 ldr r1,[r7,#4]
 2266 0012 5820     	 movs r0,#88
 2267 0014 00FB02F2 	 mul r2,r0,r2
 2268 0018 0A44     	 add r2,r2,r1
 2269 001a 1832     	 adds r2,r2,#24
 2270 001c 1268     	 ldr r2,[r2]
 2271 001e 22F48022 	 bic r2,r2,#262144
 2272 0022 7968     	 ldr r1,[r7,#4]
 2273 0024 5820     	 movs r0,#88
 2274 0026 00FB03F3 	 mul r3,r0,r3
 2275 002a 0B44     	 add r3,r3,r1
 2276 002c 1833     	 adds r3,r3,#24
 2277 002e 1A60     	 str r2,[r3]
 575:../Libraries/XMCLib/src/xmc_dma.c **** }
 2278              	 .loc 2 575 0
 2279 0030 0C37     	 adds r7,r7,#12
 2280              	 .cfi_def_cfa_offset 4
 2281 0032 BD46     	 mov sp,r7
 2282              	 .cfi_def_cfa_register 13
 2283              	 
 2284 0034 5DF8047B 	 ldr r7,[sp],#4
 2285              	 .cfi_restore 7
 2286              	 .cfi_def_cfa_offset 0
 2287 0038 7047     	 bx lr
 2288              	 .cfi_endproc
 2289              	.LFE210:
 2291 003a 00BF     	 .section .text.XMC_DMA_CH_TriggerSourceRequest,"ax",%progbits
 2292              	 .align 2
 2293              	 .global XMC_DMA_CH_TriggerSourceRequest
 2294              	 .thumb
 2295              	 .thumb_func
 2297              	XMC_DMA_CH_TriggerSourceRequest:
 2298              	.LFB211:
 576:../Libraries/XMCLib/src/xmc_dma.c **** 
 577:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger source request */
 578:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerSourceRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_
 579:../Libraries/XMCLib/src/xmc_dma.c **** {
 2299              	 .loc 2 579 0
 2300              	 .cfi_startproc
 2301              	 
 2302              	 
 2303              	 
 2304 0000 80B4     	 push {r7}
 2305              	 .cfi_def_cfa_offset 4
 2306              	 .cfi_offset 7,-4
 2307 0002 83B0     	 sub sp,sp,#12
 2308              	 .cfi_def_cfa_offset 16
 2309 0004 00AF     	 add r7,sp,#0
 2310              	 .cfi_def_cfa_register 7
 2311 0006 7860     	 str r0,[r7,#4]
 2312 0008 0846     	 mov r0,r1
 2313 000a 1146     	 mov r1,r2
 2314 000c 1A46     	 mov r2,r3
 2315 000e 0346     	 mov r3,r0
 2316 0010 FB70     	 strb r3,[r7,#3]
 2317 0012 0B46     	 mov r3,r1
 2318 0014 BB70     	 strb r3,[r7,#2]
 2319 0016 1346     	 mov r3,r2
 2320 0018 7B70     	 strb r3,[r7,#1]
 580:../Libraries/XMCLib/src/xmc_dma.c ****   if ((uint32_t)type == (uint32_t)XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2321              	 .loc 2 580 0
 2322 001a BB78     	 ldrb r3,[r7,#2]
 2323 001c 002B     	 cmp r3,#0
 2324 001e 06D1     	 bne .L124
 581:../Libraries/XMCLib/src/xmc_dma.c ****   {
 582:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQSRCREG = ((uint32_t)0x101UL << channel);
 2325              	 .loc 2 582 0
 2326 0020 FB78     	 ldrb r3,[r7,#3]
 2327 0022 40F20112 	 movw r2,#257
 2328 0026 9A40     	 lsls r2,r2,r3
 2329 0028 7B68     	 ldr r3,[r7,#4]
 2330 002a C3F87823 	 str r2,[r3,#888]
 2331              	.L124:
 583:../Libraries/XMCLib/src/xmc_dma.c ****   }
 584:../Libraries/XMCLib/src/xmc_dma.c **** 
 585:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2332              	 .loc 2 585 0
 2333 002e 7B78     	 ldrb r3,[r7,#1]
 2334 0030 002B     	 cmp r3,#0
 2335 0032 06D0     	 beq .L125
 586:../Libraries/XMCLib/src/xmc_dma.c ****   {
 587:../Libraries/XMCLib/src/xmc_dma.c ****     dma->LSTSRCREG = (uint32_t)0x101UL << channel;
 2336              	 .loc 2 587 0
 2337 0034 FB78     	 ldrb r3,[r7,#3]
 2338 0036 40F20112 	 movw r2,#257
 2339 003a 9A40     	 lsls r2,r2,r3
 2340 003c 7B68     	 ldr r3,[r7,#4]
 2341 003e C3F88823 	 str r2,[r3,#904]
 2342              	.L125:
 588:../Libraries/XMCLib/src/xmc_dma.c ****   }
 589:../Libraries/XMCLib/src/xmc_dma.c **** 
 590:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQSRCREG = (uint32_t)0x101UL << channel;
 2343              	 .loc 2 590 0
 2344 0042 FB78     	 ldrb r3,[r7,#3]
 2345 0044 40F20112 	 movw r2,#257
 2346 0048 9A40     	 lsls r2,r2,r3
 2347 004a 7B68     	 ldr r3,[r7,#4]
 2348 004c C3F86823 	 str r2,[r3,#872]
 591:../Libraries/XMCLib/src/xmc_dma.c **** }
 2349              	 .loc 2 591 0
 2350 0050 0C37     	 adds r7,r7,#12
 2351              	 .cfi_def_cfa_offset 4
 2352 0052 BD46     	 mov sp,r7
 2353              	 .cfi_def_cfa_register 13
 2354              	 
 2355 0054 5DF8047B 	 ldr r7,[sp],#4
 2356              	 .cfi_restore 7
 2357              	 .cfi_def_cfa_offset 0
 2358 0058 7047     	 bx lr
 2359              	 .cfi_endproc
 2360              	.LFE211:
 2362 005a 00BF     	 .section .text.XMC_DMA_CH_TriggerDestinationRequest,"ax",%progbits
 2363              	 .align 2
 2364              	 .global XMC_DMA_CH_TriggerDestinationRequest
 2365              	 .thumb
 2366              	 .thumb_func
 2368              	XMC_DMA_CH_TriggerDestinationRequest:
 2369              	.LFB212:
 592:../Libraries/XMCLib/src/xmc_dma.c **** 
 593:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger destination request */
 594:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerDestinationRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DM
 595:../Libraries/XMCLib/src/xmc_dma.c **** {
 2370              	 .loc 2 595 0
 2371              	 .cfi_startproc
 2372              	 
 2373              	 
 2374              	 
 2375 0000 80B4     	 push {r7}
 2376              	 .cfi_def_cfa_offset 4
 2377              	 .cfi_offset 7,-4
 2378 0002 83B0     	 sub sp,sp,#12
 2379              	 .cfi_def_cfa_offset 16
 2380 0004 00AF     	 add r7,sp,#0
 2381              	 .cfi_def_cfa_register 7
 2382 0006 7860     	 str r0,[r7,#4]
 2383 0008 0846     	 mov r0,r1
 2384 000a 1146     	 mov r1,r2
 2385 000c 1A46     	 mov r2,r3
 2386 000e 0346     	 mov r3,r0
 2387 0010 FB70     	 strb r3,[r7,#3]
 2388 0012 0B46     	 mov r3,r1
 2389 0014 BB70     	 strb r3,[r7,#2]
 2390 0016 1346     	 mov r3,r2
 2391 0018 7B70     	 strb r3,[r7,#1]
 596:../Libraries/XMCLib/src/xmc_dma.c ****   if (type == XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2392              	 .loc 2 596 0
 2393 001a BB78     	 ldrb r3,[r7,#2]
 2394 001c 002B     	 cmp r3,#0
 2395 001e 06D1     	 bne .L127
 597:../Libraries/XMCLib/src/xmc_dma.c ****   {
 598:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQDSTREG = (uint32_t)0x101UL << channel;
 2396              	 .loc 2 598 0
 2397 0020 FB78     	 ldrb r3,[r7,#3]
 2398 0022 40F20112 	 movw r2,#257
 2399 0026 9A40     	 lsls r2,r2,r3
 2400 0028 7B68     	 ldr r3,[r7,#4]
 2401 002a C3F88023 	 str r2,[r3,#896]
 2402              	.L127:
 599:../Libraries/XMCLib/src/xmc_dma.c ****   }
 600:../Libraries/XMCLib/src/xmc_dma.c **** 
 601:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2403              	 .loc 2 601 0
 2404 002e 7B78     	 ldrb r3,[r7,#1]
 2405 0030 002B     	 cmp r3,#0
 2406 0032 06D0     	 beq .L128
 602:../Libraries/XMCLib/src/xmc_dma.c ****   {
 603:../Libraries/XMCLib/src/xmc_dma.c ****     dma->LSTDSTREG = (uint32_t)0x101UL << channel;
 2407              	 .loc 2 603 0
 2408 0034 FB78     	 ldrb r3,[r7,#3]
 2409 0036 40F20112 	 movw r2,#257
 2410 003a 9A40     	 lsls r2,r2,r3
 2411 003c 7B68     	 ldr r3,[r7,#4]
 2412 003e C3F89023 	 str r2,[r3,#912]
 2413              	.L128:
 604:../Libraries/XMCLib/src/xmc_dma.c ****   }
 605:../Libraries/XMCLib/src/xmc_dma.c **** 
 606:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQDSTREG = (uint32_t)0x101UL << channel;
 2414              	 .loc 2 606 0
 2415 0042 FB78     	 ldrb r3,[r7,#3]
 2416 0044 40F20112 	 movw r2,#257
 2417 0048 9A40     	 lsls r2,r2,r3
 2418 004a 7B68     	 ldr r3,[r7,#4]
 2419 004c C3F87023 	 str r2,[r3,#880]
 607:../Libraries/XMCLib/src/xmc_dma.c **** }
 2420              	 .loc 2 607 0
 2421 0050 0C37     	 adds r7,r7,#12
 2422              	 .cfi_def_cfa_offset 4
 2423 0052 BD46     	 mov sp,r7
 2424              	 .cfi_def_cfa_register 13
 2425              	 
 2426 0054 5DF8047B 	 ldr r7,[sp],#4
 2427              	 .cfi_restore 7
 2428              	 .cfi_def_cfa_offset 0
 2429 0058 7047     	 bx lr
 2430              	 .cfi_endproc
 2431              	.LFE212:
 2433 005a 00BF     	 .section .text.XMC_DMA_CH_EnableSourceAddressReload,"ax",%progbits
 2434              	 .align 2
 2435              	 .global XMC_DMA_CH_EnableSourceAddressReload
 2436              	 .thumb
 2437              	 .thumb_func
 2439              	XMC_DMA_CH_EnableSourceAddressReload:
 2440              	.LFB213:
 608:../Libraries/XMCLib/src/xmc_dma.c **** 
 609:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source address reload */
 610:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 611:../Libraries/XMCLib/src/xmc_dma.c **** {
 2441              	 .loc 2 611 0
 2442              	 .cfi_startproc
 2443              	 
 2444              	 
 2445              	 
 2446 0000 80B4     	 push {r7}
 2447              	 .cfi_def_cfa_offset 4
 2448              	 .cfi_offset 7,-4
 2449 0002 83B0     	 sub sp,sp,#12
 2450              	 .cfi_def_cfa_offset 16
 2451 0004 00AF     	 add r7,sp,#0
 2452              	 .cfi_def_cfa_register 7
 2453 0006 7860     	 str r0,[r7,#4]
 2454 0008 0B46     	 mov r3,r1
 2455 000a FB70     	 strb r3,[r7,#3]
 612:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2456              	 .loc 2 612 0
 2457 000c FB78     	 ldrb r3,[r7,#3]
 2458 000e FA78     	 ldrb r2,[r7,#3]
 2459 0010 7968     	 ldr r1,[r7,#4]
 2460 0012 5820     	 movs r0,#88
 2461 0014 00FB02F2 	 mul r2,r0,r2
 2462 0018 0A44     	 add r2,r2,r1
 2463 001a 4032     	 adds r2,r2,#64
 2464 001c 1268     	 ldr r2,[r2]
 2465 001e 42F08042 	 orr r2,r2,#1073741824
 2466 0022 7968     	 ldr r1,[r7,#4]
 2467 0024 5820     	 movs r0,#88
 2468 0026 00FB03F3 	 mul r3,r0,r3
 2469 002a 0B44     	 add r3,r3,r1
 2470 002c 4033     	 adds r3,r3,#64
 2471 002e 1A60     	 str r2,[r3]
 613:../Libraries/XMCLib/src/xmc_dma.c **** }
 2472              	 .loc 2 613 0
 2473 0030 0C37     	 adds r7,r7,#12
 2474              	 .cfi_def_cfa_offset 4
 2475 0032 BD46     	 mov sp,r7
 2476              	 .cfi_def_cfa_register 13
 2477              	 
 2478 0034 5DF8047B 	 ldr r7,[sp],#4
 2479              	 .cfi_restore 7
 2480              	 .cfi_def_cfa_offset 0
 2481 0038 7047     	 bx lr
 2482              	 .cfi_endproc
 2483              	.LFE213:
 2485 003a 00BF     	 .section .text.XMC_DMA_CH_DisableSourceAddressReload,"ax",%progbits
 2486              	 .align 2
 2487              	 .global XMC_DMA_CH_DisableSourceAddressReload
 2488              	 .thumb
 2489              	 .thumb_func
 2491              	XMC_DMA_CH_DisableSourceAddressReload:
 2492              	.LFB214:
 614:../Libraries/XMCLib/src/xmc_dma.c **** 
 615:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source address reload */
 616:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 617:../Libraries/XMCLib/src/xmc_dma.c **** {
 2493              	 .loc 2 617 0
 2494              	 .cfi_startproc
 2495              	 
 2496              	 
 2497              	 
 2498 0000 80B4     	 push {r7}
 2499              	 .cfi_def_cfa_offset 4
 2500              	 .cfi_offset 7,-4
 2501 0002 83B0     	 sub sp,sp,#12
 2502              	 .cfi_def_cfa_offset 16
 2503 0004 00AF     	 add r7,sp,#0
 2504              	 .cfi_def_cfa_register 7
 2505 0006 7860     	 str r0,[r7,#4]
 2506 0008 0B46     	 mov r3,r1
 2507 000a FB70     	 strb r3,[r7,#3]
 618:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2508              	 .loc 2 618 0
 2509 000c FB78     	 ldrb r3,[r7,#3]
 2510 000e FA78     	 ldrb r2,[r7,#3]
 2511 0010 7968     	 ldr r1,[r7,#4]
 2512 0012 5820     	 movs r0,#88
 2513 0014 00FB02F2 	 mul r2,r0,r2
 2514 0018 0A44     	 add r2,r2,r1
 2515 001a 4032     	 adds r2,r2,#64
 2516 001c 1268     	 ldr r2,[r2]
 2517 001e 22F08042 	 bic r2,r2,#1073741824
 2518 0022 7968     	 ldr r1,[r7,#4]
 2519 0024 5820     	 movs r0,#88
 2520 0026 00FB03F3 	 mul r3,r0,r3
 2521 002a 0B44     	 add r3,r3,r1
 2522 002c 4033     	 adds r3,r3,#64
 2523 002e 1A60     	 str r2,[r3]
 619:../Libraries/XMCLib/src/xmc_dma.c **** }
 2524              	 .loc 2 619 0
 2525 0030 0C37     	 adds r7,r7,#12
 2526              	 .cfi_def_cfa_offset 4
 2527 0032 BD46     	 mov sp,r7
 2528              	 .cfi_def_cfa_register 13
 2529              	 
 2530 0034 5DF8047B 	 ldr r7,[sp],#4
 2531              	 .cfi_restore 7
 2532              	 .cfi_def_cfa_offset 0
 2533 0038 7047     	 bx lr
 2534              	 .cfi_endproc
 2535              	.LFE214:
 2537 003a 00BF     	 .section .text.XMC_DMA_CH_EnableDestinationAddressReload,"ax",%progbits
 2538              	 .align 2
 2539              	 .global XMC_DMA_CH_EnableDestinationAddressReload
 2540              	 .thumb
 2541              	 .thumb_func
 2543              	XMC_DMA_CH_EnableDestinationAddressReload:
 2544              	.LFB215:
 620:../Libraries/XMCLib/src/xmc_dma.c **** 
 621:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination address reload */
 622:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 623:../Libraries/XMCLib/src/xmc_dma.c **** {
 2545              	 .loc 2 623 0
 2546              	 .cfi_startproc
 2547              	 
 2548              	 
 2549              	 
 2550 0000 80B4     	 push {r7}
 2551              	 .cfi_def_cfa_offset 4
 2552              	 .cfi_offset 7,-4
 2553 0002 83B0     	 sub sp,sp,#12
 2554              	 .cfi_def_cfa_offset 16
 2555 0004 00AF     	 add r7,sp,#0
 2556              	 .cfi_def_cfa_register 7
 2557 0006 7860     	 str r0,[r7,#4]
 2558 0008 0B46     	 mov r3,r1
 2559 000a FB70     	 strb r3,[r7,#3]
 624:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2560              	 .loc 2 624 0
 2561 000c FB78     	 ldrb r3,[r7,#3]
 2562 000e FA78     	 ldrb r2,[r7,#3]
 2563 0010 7968     	 ldr r1,[r7,#4]
 2564 0012 5820     	 movs r0,#88
 2565 0014 00FB02F2 	 mul r2,r0,r2
 2566 0018 0A44     	 add r2,r2,r1
 2567 001a 4032     	 adds r2,r2,#64
 2568 001c 1268     	 ldr r2,[r2]
 2569 001e 42F00042 	 orr r2,r2,#-2147483648
 2570 0022 7968     	 ldr r1,[r7,#4]
 2571 0024 5820     	 movs r0,#88
 2572 0026 00FB03F3 	 mul r3,r0,r3
 2573 002a 0B44     	 add r3,r3,r1
 2574 002c 4033     	 adds r3,r3,#64
 2575 002e 1A60     	 str r2,[r3]
 625:../Libraries/XMCLib/src/xmc_dma.c **** }
 2576              	 .loc 2 625 0
 2577 0030 0C37     	 adds r7,r7,#12
 2578              	 .cfi_def_cfa_offset 4
 2579 0032 BD46     	 mov sp,r7
 2580              	 .cfi_def_cfa_register 13
 2581              	 
 2582 0034 5DF8047B 	 ldr r7,[sp],#4
 2583              	 .cfi_restore 7
 2584              	 .cfi_def_cfa_offset 0
 2585 0038 7047     	 bx lr
 2586              	 .cfi_endproc
 2587              	.LFE215:
 2589 003a 00BF     	 .section .text.XMC_DMA_CH_DisableDestinationAddressReload,"ax",%progbits
 2590              	 .align 2
 2591              	 .global XMC_DMA_CH_DisableDestinationAddressReload
 2592              	 .thumb
 2593              	 .thumb_func
 2595              	XMC_DMA_CH_DisableDestinationAddressReload:
 2596              	.LFB216:
 626:../Libraries/XMCLib/src/xmc_dma.c **** 
 627:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination address reload */
 628:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 629:../Libraries/XMCLib/src/xmc_dma.c **** {
 2597              	 .loc 2 629 0
 2598              	 .cfi_startproc
 2599              	 
 2600              	 
 2601              	 
 2602 0000 80B4     	 push {r7}
 2603              	 .cfi_def_cfa_offset 4
 2604              	 .cfi_offset 7,-4
 2605 0002 83B0     	 sub sp,sp,#12
 2606              	 .cfi_def_cfa_offset 16
 2607 0004 00AF     	 add r7,sp,#0
 2608              	 .cfi_def_cfa_register 7
 2609 0006 7860     	 str r0,[r7,#4]
 2610 0008 0B46     	 mov r3,r1
 2611 000a FB70     	 strb r3,[r7,#3]
 630:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2612              	 .loc 2 630 0
 2613 000c FB78     	 ldrb r3,[r7,#3]
 2614 000e FA78     	 ldrb r2,[r7,#3]
 2615 0010 7968     	 ldr r1,[r7,#4]
 2616 0012 5820     	 movs r0,#88
 2617 0014 00FB02F2 	 mul r2,r0,r2
 2618 0018 0A44     	 add r2,r2,r1
 2619 001a 4032     	 adds r2,r2,#64
 2620 001c 1268     	 ldr r2,[r2]
 2621 001e 22F00042 	 bic r2,r2,#-2147483648
 2622 0022 7968     	 ldr r1,[r7,#4]
 2623 0024 5820     	 movs r0,#88
 2624 0026 00FB03F3 	 mul r3,r0,r3
 2625 002a 0B44     	 add r3,r3,r1
 2626 002c 4033     	 adds r3,r3,#64
 2627 002e 1A60     	 str r2,[r3]
 631:../Libraries/XMCLib/src/xmc_dma.c **** }
 2628              	 .loc 2 631 0
 2629 0030 0C37     	 adds r7,r7,#12
 2630              	 .cfi_def_cfa_offset 4
 2631 0032 BD46     	 mov sp,r7
 2632              	 .cfi_def_cfa_register 13
 2633              	 
 2634 0034 5DF8047B 	 ldr r7,[sp],#4
 2635              	 .cfi_restore 7
 2636              	 .cfi_def_cfa_offset 0
 2637 0038 7047     	 bx lr
 2638              	 .cfi_endproc
 2639              	.LFE216:
 2641 003a 00BF     	 .section .text.XMC_DMA_CH_RequestLastMultiblockTransfer,"ax",%progbits
 2642              	 .align 2
 2643              	 .global XMC_DMA_CH_RequestLastMultiblockTransfer
 2644              	 .thumb
 2645              	 .thumb_func
 2647              	XMC_DMA_CH_RequestLastMultiblockTransfer:
 2648              	.LFB217:
 632:../Libraries/XMCLib/src/xmc_dma.c **** 
 633:../Libraries/XMCLib/src/xmc_dma.c **** /* Request last multi-block transfer */
 634:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_RequestLastMultiblockTransfer(XMC_DMA_t *const dma, const uint8_t channel)
 635:../Libraries/XMCLib/src/xmc_dma.c **** {
 2649              	 .loc 2 635 0
 2650              	 .cfi_startproc
 2651              	 
 2652              	 
 2653              	 
 2654 0000 80B4     	 push {r7}
 2655              	 .cfi_def_cfa_offset 4
 2656              	 .cfi_offset 7,-4
 2657 0002 83B0     	 sub sp,sp,#12
 2658              	 .cfi_def_cfa_offset 16
 2659 0004 00AF     	 add r7,sp,#0
 2660              	 .cfi_def_cfa_register 7
 2661 0006 7860     	 str r0,[r7,#4]
 2662 0008 0B46     	 mov r3,r1
 2663 000a FB70     	 strb r3,[r7,#3]
 636:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~(GPDMA0_CH_CFGL_RELOAD_SRC_Msk | GPDMA0_CH_CFGL_RELOAD_DST_Ms
 2664              	 .loc 2 636 0
 2665 000c FB78     	 ldrb r3,[r7,#3]
 2666 000e FA78     	 ldrb r2,[r7,#3]
 2667 0010 7968     	 ldr r1,[r7,#4]
 2668 0012 5820     	 movs r0,#88
 2669 0014 00FB02F2 	 mul r2,r0,r2
 2670 0018 0A44     	 add r2,r2,r1
 2671 001a 4032     	 adds r2,r2,#64
 2672 001c 1268     	 ldr r2,[r2]
 2673 001e 22F04042 	 bic r2,r2,#-1073741824
 2674 0022 7968     	 ldr r1,[r7,#4]
 2675 0024 5820     	 movs r0,#88
 2676 0026 00FB03F3 	 mul r3,r0,r3
 2677 002a 0B44     	 add r3,r3,r1
 2678 002c 4033     	 adds r3,r3,#64
 2679 002e 1A60     	 str r2,[r3]
 637:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~(GPDMA0_CH_CTLL_LLP_SRC_EN_Msk | GPDMA0_CH_CTLL_LLP_DST_EN_Ms
 2680              	 .loc 2 637 0
 2681 0030 FB78     	 ldrb r3,[r7,#3]
 2682 0032 FA78     	 ldrb r2,[r7,#3]
 2683 0034 7968     	 ldr r1,[r7,#4]
 2684 0036 5820     	 movs r0,#88
 2685 0038 00FB02F2 	 mul r2,r0,r2
 2686 003c 0A44     	 add r2,r2,r1
 2687 003e 1832     	 adds r2,r2,#24
 2688 0040 1268     	 ldr r2,[r2]
 2689 0042 22F0C052 	 bic r2,r2,#402653184
 2690 0046 7968     	 ldr r1,[r7,#4]
 2691 0048 5820     	 movs r0,#88
 2692 004a 00FB03F3 	 mul r3,r0,r3
 2693 004e 0B44     	 add r3,r3,r1
 2694 0050 1833     	 adds r3,r3,#24
 2695 0052 1A60     	 str r2,[r3]
 638:../Libraries/XMCLib/src/xmc_dma.c **** }
 2696              	 .loc 2 638 0
 2697 0054 0C37     	 adds r7,r7,#12
 2698              	 .cfi_def_cfa_offset 4
 2699 0056 BD46     	 mov sp,r7
 2700              	 .cfi_def_cfa_register 13
 2701              	 
 2702 0058 5DF8047B 	 ldr r7,[sp],#4
 2703              	 .cfi_restore 7
 2704              	 .cfi_def_cfa_offset 0
 2705 005c 7047     	 bx lr
 2706              	 .cfi_endproc
 2707              	.LFE217:
 2709 005e 00BF     	 .section .text.XMC_DMA_CH_SetEventHandler,"ax",%progbits
 2710              	 .align 2
 2711              	 .global XMC_DMA_CH_SetEventHandler
 2712              	 .thumb
 2713              	 .thumb_func
 2715              	XMC_DMA_CH_SetEventHandler:
 2716              	.LFB218:
 639:../Libraries/XMCLib/src/xmc_dma.c **** 
 640:../Libraries/XMCLib/src/xmc_dma.c **** /* Set event handler */
 641:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_SetEventHandler(XMC_DMA_t *const dma, const uint8_t channel, XMC_DMA_CH_EVENT_HANDL
 642:../Libraries/XMCLib/src/xmc_dma.c **** {
 2717              	 .loc 2 642 0
 2718              	 .cfi_startproc
 2719              	 
 2720              	 
 2721              	 
 2722 0000 80B4     	 push {r7}
 2723              	 .cfi_def_cfa_offset 4
 2724              	 .cfi_offset 7,-4
 2725 0002 85B0     	 sub sp,sp,#20
 2726              	 .cfi_def_cfa_offset 24
 2727 0004 00AF     	 add r7,sp,#0
 2728              	 .cfi_def_cfa_register 7
 2729 0006 F860     	 str r0,[r7,#12]
 2730 0008 0B46     	 mov r3,r1
 2731 000a 7A60     	 str r2,[r7,#4]
 2732 000c FB72     	 strb r3,[r7,#11]
 643:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 644:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 2733              	 .loc 2 644 0
 2734 000e FB68     	 ldr r3,[r7,#12]
 2735 0010 094A     	 ldr r2,.L137
 2736 0012 9342     	 cmp r3,r2
 2737 0014 05D1     	 bne .L135
 645:../Libraries/XMCLib/src/xmc_dma.c ****   {
 646:../Libraries/XMCLib/src/xmc_dma.c **** #else
 647:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_UNUSED_ARG(dma);
 648:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 649:../Libraries/XMCLib/src/xmc_dma.c ****     dma0_event_handlers[channel] = event_handler;
 2738              	 .loc 2 649 0
 2739 0016 FB7A     	 ldrb r3,[r7,#11]
 2740 0018 0849     	 ldr r1,.L137+4
 2741 001a 7A68     	 ldr r2,[r7,#4]
 2742 001c 41F82320 	 str r2,[r1,r3,lsl#2]
 2743 0020 04E0     	 b .L134
 2744              	.L135:
 650:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 651:../Libraries/XMCLib/src/xmc_dma.c ****   }
 652:../Libraries/XMCLib/src/xmc_dma.c ****   else
 653:../Libraries/XMCLib/src/xmc_dma.c ****   {
 654:../Libraries/XMCLib/src/xmc_dma.c ****     dma1_event_handlers[channel] = event_handler;
 2745              	 .loc 2 654 0
 2746 0022 FB7A     	 ldrb r3,[r7,#11]
 2747 0024 0649     	 ldr r1,.L137+8
 2748 0026 7A68     	 ldr r2,[r7,#4]
 2749 0028 41F82320 	 str r2,[r1,r3,lsl#2]
 2750              	.L134:
 655:../Libraries/XMCLib/src/xmc_dma.c ****   }
 656:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 657:../Libraries/XMCLib/src/xmc_dma.c **** }
 2751              	 .loc 2 657 0
 2752 002c 1437     	 adds r7,r7,#20
 2753              	 .cfi_def_cfa_offset 4
 2754 002e BD46     	 mov sp,r7
 2755              	 .cfi_def_cfa_register 13
 2756              	 
 2757 0030 5DF8047B 	 ldr r7,[sp],#4
 2758              	 .cfi_restore 7
 2759              	 .cfi_def_cfa_offset 0
 2760 0034 7047     	 bx lr
 2761              	.L138:
 2762 0036 00BF     	 .align 2
 2763              	.L137:
 2764 0038 00400150 	 .word 1342259200
 2765 003c 00000000 	 .word dma0_event_handlers
 2766 0040 00000000 	 .word dma1_event_handlers
 2767              	 .cfi_endproc
 2768              	.LFE218:
 2770              	 .section .text.XMC_DMA_CH_ClearSourcePeripheralRequest,"ax",%progbits
 2771              	 .align 2
 2772              	 .global XMC_DMA_CH_ClearSourcePeripheralRequest
 2773              	 .thumb
 2774              	 .thumb_func
 2776              	XMC_DMA_CH_ClearSourcePeripheralRequest:
 2777              	.LFB219:
 658:../Libraries/XMCLib/src/xmc_dma.c **** 
 659:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearSourcePeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 660:../Libraries/XMCLib/src/xmc_dma.c **** {
 2778              	 .loc 2 660 0
 2779              	 .cfi_startproc
 2780              	 
 2781              	 
 2782 0000 80B5     	 push {r7,lr}
 2783              	 .cfi_def_cfa_offset 8
 2784              	 .cfi_offset 7,-8
 2785              	 .cfi_offset 14,-4
 2786 0002 84B0     	 sub sp,sp,#16
 2787              	 .cfi_def_cfa_offset 24
 2788 0004 00AF     	 add r7,sp,#0
 2789              	 .cfi_def_cfa_register 7
 2790 0006 7860     	 str r0,[r7,#4]
 2791 0008 0B46     	 mov r3,r1
 2792 000a FB70     	 strb r3,[r7,#3]
 661:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 662:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_SRC_PER_Msk) >> GPDMA0_CH_CFGH_SRC_PER_Pos;
 2793              	 .loc 2 662 0
 2794 000c FB78     	 ldrb r3,[r7,#3]
 2795 000e 7A68     	 ldr r2,[r7,#4]
 2796 0010 5821     	 movs r1,#88
 2797 0012 01FB03F3 	 mul r3,r1,r3
 2798 0016 1344     	 add r3,r3,r2
 2799 0018 4033     	 adds r3,r3,#64
 2800 001a 5B68     	 ldr r3,[r3,#4]
 2801 001c 03F4F063 	 and r3,r3,#1920
 2802 0020 DB09     	 lsrs r3,r3,#7
 2803 0022 FB60     	 str r3,[r7,#12]
 663:../Libraries/XMCLib/src/xmc_dma.c **** 
 664:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 2804              	 .loc 2 664 0
 2805 0024 FB68     	 ldr r3,[r7,#12]
 2806 0026 DBB2     	 uxtb r3,r3
 2807 0028 7868     	 ldr r0,[r7,#4]
 2808 002a 1946     	 mov r1,r3
 2809 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 665:../Libraries/XMCLib/src/xmc_dma.c **** }
 2810              	 .loc 2 665 0
 2811 0030 1037     	 adds r7,r7,#16
 2812              	 .cfi_def_cfa_offset 8
 2813 0032 BD46     	 mov sp,r7
 2814              	 .cfi_def_cfa_register 13
 2815              	 
 2816 0034 80BD     	 pop {r7,pc}
 2817              	 .cfi_endproc
 2818              	.LFE219:
 2820 0036 00BF     	 .section .text.XMC_DMA_CH_ClearDestinationPeripheralRequest,"ax",%progbits
 2821              	 .align 2
 2822              	 .global XMC_DMA_CH_ClearDestinationPeripheralRequest
 2823              	 .thumb
 2824              	 .thumb_func
 2826              	XMC_DMA_CH_ClearDestinationPeripheralRequest:
 2827              	.LFB220:
 666:../Libraries/XMCLib/src/xmc_dma.c **** 
 667:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearDestinationPeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 668:../Libraries/XMCLib/src/xmc_dma.c **** {
 2828              	 .loc 2 668 0
 2829              	 .cfi_startproc
 2830              	 
 2831              	 
 2832 0000 80B5     	 push {r7,lr}
 2833              	 .cfi_def_cfa_offset 8
 2834              	 .cfi_offset 7,-8
 2835              	 .cfi_offset 14,-4
 2836 0002 84B0     	 sub sp,sp,#16
 2837              	 .cfi_def_cfa_offset 24
 2838 0004 00AF     	 add r7,sp,#0
 2839              	 .cfi_def_cfa_register 7
 2840 0006 7860     	 str r0,[r7,#4]
 2841 0008 0B46     	 mov r3,r1
 2842 000a FB70     	 strb r3,[r7,#3]
 669:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 670:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_DEST_PER_Msk) >> GPDMA0_CH_CFGH_DEST_PER_Pos;
 2843              	 .loc 2 670 0
 2844 000c FB78     	 ldrb r3,[r7,#3]
 2845 000e 7A68     	 ldr r2,[r7,#4]
 2846 0010 5821     	 movs r1,#88
 2847 0012 01FB03F3 	 mul r3,r1,r3
 2848 0016 1344     	 add r3,r3,r2
 2849 0018 4033     	 adds r3,r3,#64
 2850 001a 5B68     	 ldr r3,[r3,#4]
 2851 001c 03F4F043 	 and r3,r3,#30720
 2852 0020 DB0A     	 lsrs r3,r3,#11
 2853 0022 FB60     	 str r3,[r7,#12]
 671:../Libraries/XMCLib/src/xmc_dma.c **** 
 672:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 2854              	 .loc 2 672 0
 2855 0024 FB68     	 ldr r3,[r7,#12]
 2856 0026 DBB2     	 uxtb r3,r3
 2857 0028 7868     	 ldr r0,[r7,#4]
 2858 002a 1946     	 mov r1,r3
 2859 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 673:../Libraries/XMCLib/src/xmc_dma.c **** }
 2860              	 .loc 2 673 0
 2861 0030 1037     	 adds r7,r7,#16
 2862              	 .cfi_def_cfa_offset 8
 2863 0032 BD46     	 mov sp,r7
 2864              	 .cfi_def_cfa_register 13
 2865              	 
 2866 0034 80BD     	 pop {r7,pc}
 2867              	 .cfi_endproc
 2868              	.LFE220:
 2870 0036 00BF     	 .section .text.XMC_DMA_IRQHandler,"ax",%progbits
 2871              	 .align 2
 2872              	 .global XMC_DMA_IRQHandler
 2873              	 .thumb
 2874              	 .thumb_func
 2876              	XMC_DMA_IRQHandler:
 2877              	.LFB221:
 674:../Libraries/XMCLib/src/xmc_dma.c **** 
 675:../Libraries/XMCLib/src/xmc_dma.c **** /* Default DMA IRQ handler */
 676:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_IRQHandler(XMC_DMA_t *const dma)
 677:../Libraries/XMCLib/src/xmc_dma.c **** {
 2878              	 .loc 2 677 0
 2879              	 .cfi_startproc
 2880              	 
 2881              	 
 2882 0000 80B5     	 push {r7,lr}
 2883              	 .cfi_def_cfa_offset 8
 2884              	 .cfi_offset 7,-8
 2885              	 .cfi_offset 14,-4
 2886 0002 88B0     	 sub sp,sp,#32
 2887              	 .cfi_def_cfa_offset 40
 2888 0004 00AF     	 add r7,sp,#0
 2889              	 .cfi_def_cfa_register 7
 2890 0006 7860     	 str r0,[r7,#4]
 678:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event;
 679:../Libraries/XMCLib/src/xmc_dma.c ****   int32_t channel;
 680:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t mask;
 681:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t *dma_event_handlers;
 682:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t event_handler;
 683:../Libraries/XMCLib/src/xmc_dma.c **** 
 684:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 685:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 2891              	 .loc 2 685 0
 2892 0008 7B68     	 ldr r3,[r7,#4]
 2893 000a 824A     	 ldr r2,.L174
 2894 000c 9342     	 cmp r3,r2
 2895 000e 02D1     	 bne .L142
 686:../Libraries/XMCLib/src/xmc_dma.c ****   {
 687:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 688:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma0_event_handlers;
 2896              	 .loc 2 688 0
 2897 0010 814B     	 ldr r3,.L174+4
 2898 0012 BB61     	 str r3,[r7,#24]
 2899 0014 01E0     	 b .L143
 2900              	.L142:
 689:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 690:../Libraries/XMCLib/src/xmc_dma.c ****   }
 691:../Libraries/XMCLib/src/xmc_dma.c ****   else
 692:../Libraries/XMCLib/src/xmc_dma.c ****   {
 693:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma1_event_handlers;
 2901              	 .loc 2 693 0
 2902 0016 814B     	 ldr r3,.L174+8
 2903 0018 BB61     	 str r3,[r7,#24]
 2904              	.L143:
 694:../Libraries/XMCLib/src/xmc_dma.c ****   }
 695:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 696:../Libraries/XMCLib/src/xmc_dma.c **** 
 697:../Libraries/XMCLib/src/xmc_dma.c ****   event = XMC_DMA_GetEventStatus(dma);
 2905              	 .loc 2 697 0
 2906 001a 7868     	 ldr r0,[r7,#4]
 2907 001c FFF7FEFF 	 bl XMC_DMA_GetEventStatus
 2908 0020 7861     	 str r0,[r7,#20]
 698:../Libraries/XMCLib/src/xmc_dma.c ****   channel = 0;
 2909              	 .loc 2 698 0
 2910 0022 0023     	 movs r3,#0
 2911 0024 FB61     	 str r3,[r7,#28]
 699:../Libraries/XMCLib/src/xmc_dma.c **** 
 700:../Libraries/XMCLib/src/xmc_dma.c ****   if ((event & (uint32_t)XMC_DMA_CH_EVENT_ERROR) != (uint32_t)0UL)
 2912              	 .loc 2 700 0
 2913 0026 7B69     	 ldr r3,[r7,#20]
 2914 0028 03F01003 	 and r3,r3,#16
 2915 002c 002B     	 cmp r3,#0
 2916 002e 2BD0     	 beq .L144
 701:../Libraries/XMCLib/src/xmc_dma.c ****   {
 702:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsErrorStatus(dma);
 2917              	 .loc 2 702 0
 2918 0030 7868     	 ldr r0,[r7,#4]
 2919 0032 FFF7FEFF 	 bl XMC_DMA_GetChannelsErrorStatus
 2920 0036 7861     	 str r0,[r7,#20]
 703:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 2921              	 .loc 2 703 0
 2922 0038 21E0     	 b .L145
 2923              	.L149:
 704:../Libraries/XMCLib/src/xmc_dma.c ****     {
 705:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 2924              	 .loc 2 705 0
 2925 003a 0122     	 movs r2,#1
 2926 003c FB69     	 ldr r3,[r7,#28]
 2927 003e 02FA03F3 	 lsl r3,r2,r3
 2928 0042 3B61     	 str r3,[r7,#16]
 706:../Libraries/XMCLib/src/xmc_dma.c ****       if ((event & mask) != 0)
 2929              	 .loc 2 706 0
 2930 0044 7A69     	 ldr r2,[r7,#20]
 2931 0046 3B69     	 ldr r3,[r7,#16]
 2932 0048 1340     	 ands r3,r3,r2
 2933 004a 002B     	 cmp r3,#0
 2934 004c 14D0     	 beq .L146
 707:../Libraries/XMCLib/src/xmc_dma.c ****       {
 708:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_ERROR);
 2935              	 .loc 2 708 0
 2936 004e FB69     	 ldr r3,[r7,#28]
 2937 0050 DBB2     	 uxtb r3,r3
 2938 0052 7868     	 ldr r0,[r7,#4]
 2939 0054 1946     	 mov r1,r3
 2940 0056 1022     	 movs r2,#16
 2941 0058 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 709:../Libraries/XMCLib/src/xmc_dma.c **** 
 710:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 711:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 2942              	 .loc 2 711 0
 2943 005c FB69     	 ldr r3,[r7,#28]
 2944 005e 9B00     	 lsls r3,r3,#2
 2945 0060 BA69     	 ldr r2,[r7,#24]
 2946 0062 1344     	 add r3,r3,r2
 2947 0064 1B68     	 ldr r3,[r3]
 2948 0066 FB60     	 str r3,[r7,#12]
 712:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 2949              	 .loc 2 712 0
 2950 0068 FB68     	 ldr r3,[r7,#12]
 2951 006a 002B     	 cmp r3,#0
 2952 006c 03D0     	 beq .L147
 713:../Libraries/XMCLib/src/xmc_dma.c ****         {
 714:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_ERROR);
 2953              	 .loc 2 714 0
 2954 006e FB68     	 ldr r3,[r7,#12]
 2955 0070 1020     	 movs r0,#16
 2956 0072 9847     	 blx r3
 715:../Libraries/XMCLib/src/xmc_dma.c ****         }
 716:../Libraries/XMCLib/src/xmc_dma.c **** 
 717:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 2957              	 .loc 2 717 0
 2958 0074 07E0     	 b .L148
 2959              	.L147:
 2960 0076 06E0     	 b .L148
 2961              	.L146:
 718:../Libraries/XMCLib/src/xmc_dma.c ****       }
 719:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 2962              	 .loc 2 719 0
 2963 0078 FB69     	 ldr r3,[r7,#28]
 2964 007a 0133     	 adds r3,r3,#1
 2965 007c FB61     	 str r3,[r7,#28]
 2966              	.L145:
 703:../Libraries/XMCLib/src/xmc_dma.c ****     {
 2967              	 .loc 2 703 0
 2968 007e 7B69     	 ldr r3,[r7,#20]
 2969 0080 002B     	 cmp r3,#0
 2970 0082 DAD1     	 bne .L149
 2971 0084 C3E0     	 b .L141
 2972              	.L148:
 2973 0086 C2E0     	 b .L141
 2974              	.L144:
 720:../Libraries/XMCLib/src/xmc_dma.c ****     }
 721:../Libraries/XMCLib/src/xmc_dma.c ****   }
 722:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMPLETE) != (uint32_t)0UL)
 2975              	 .loc 2 722 0
 2976 0088 7B69     	 ldr r3,[r7,#20]
 2977 008a 03F00103 	 and r3,r3,#1
 2978 008e 002B     	 cmp r3,#0
 2979 0090 2BD0     	 beq .L151
 723:../Libraries/XMCLib/src/xmc_dma.c ****   {
 724:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsTransferCompleteStatus(dma);
 2980              	 .loc 2 724 0
 2981 0092 7868     	 ldr r0,[r7,#4]
 2982 0094 FFF7FEFF 	 bl XMC_DMA_GetChannelsTransferCompleteStatus
 2983 0098 7861     	 str r0,[r7,#20]
 725:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 2984              	 .loc 2 725 0
 2985 009a 21E0     	 b .L152
 2986              	.L156:
 726:../Libraries/XMCLib/src/xmc_dma.c ****     {
 727:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 2987              	 .loc 2 727 0
 2988 009c 0122     	 movs r2,#1
 2989 009e FB69     	 ldr r3,[r7,#28]
 2990 00a0 02FA03F3 	 lsl r3,r2,r3
 2991 00a4 3B61     	 str r3,[r7,#16]
 728:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 2992              	 .loc 2 728 0
 2993 00a6 7A69     	 ldr r2,[r7,#20]
 2994 00a8 3B69     	 ldr r3,[r7,#16]
 2995 00aa 1340     	 ands r3,r3,r2
 2996 00ac 002B     	 cmp r3,#0
 2997 00ae 14D0     	 beq .L153
 729:../Libraries/XMCLib/src/xmc_dma.c ****       {
 730:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TR
 2998              	 .loc 2 730 0
 2999 00b0 FB69     	 ldr r3,[r7,#28]
 3000 00b2 DBB2     	 uxtb r3,r3
 3001 00b4 7868     	 ldr r0,[r7,#4]
 3002 00b6 1946     	 mov r1,r3
 3003 00b8 0F22     	 movs r2,#15
 3004 00ba FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 731:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE |
 732:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE |
 733:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE));
 734:../Libraries/XMCLib/src/xmc_dma.c **** 
 735:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 736:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3005              	 .loc 2 736 0
 3006 00be FB69     	 ldr r3,[r7,#28]
 3007 00c0 9B00     	 lsls r3,r3,#2
 3008 00c2 BA69     	 ldr r2,[r7,#24]
 3009 00c4 1344     	 add r3,r3,r2
 3010 00c6 1B68     	 ldr r3,[r3]
 3011 00c8 FB60     	 str r3,[r7,#12]
 737:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3012              	 .loc 2 737 0
 3013 00ca FB68     	 ldr r3,[r7,#12]
 3014 00cc 002B     	 cmp r3,#0
 3015 00ce 03D0     	 beq .L154
 738:../Libraries/XMCLib/src/xmc_dma.c ****         {
 739:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_TRANSFER_COMPLETE);
 3016              	 .loc 2 739 0
 3017 00d0 FB68     	 ldr r3,[r7,#12]
 3018 00d2 0120     	 movs r0,#1
 3019 00d4 9847     	 blx r3
 740:../Libraries/XMCLib/src/xmc_dma.c ****         }
 741:../Libraries/XMCLib/src/xmc_dma.c **** 
 742:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3020              	 .loc 2 742 0
 3021 00d6 07E0     	 b .L155
 3022              	.L154:
 3023 00d8 06E0     	 b .L155
 3024              	.L153:
 743:../Libraries/XMCLib/src/xmc_dma.c ****       }
 744:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3025              	 .loc 2 744 0
 3026 00da FB69     	 ldr r3,[r7,#28]
 3027 00dc 0133     	 adds r3,r3,#1
 3028 00de FB61     	 str r3,[r7,#28]
 3029              	.L152:
 725:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3030              	 .loc 2 725 0
 3031 00e0 7B69     	 ldr r3,[r7,#20]
 3032 00e2 002B     	 cmp r3,#0
 3033 00e4 DAD1     	 bne .L156
 3034 00e6 92E0     	 b .L141
 3035              	.L155:
 3036 00e8 91E0     	 b .L141
 3037              	.L151:
 745:../Libraries/XMCLib/src/xmc_dma.c ****     }
 746:../Libraries/XMCLib/src/xmc_dma.c ****   }
 747:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE) != (uint32_t)0UL)
 3038              	 .loc 2 747 0
 3039 00ea 7B69     	 ldr r3,[r7,#20]
 3040 00ec 03F00203 	 and r3,r3,#2
 3041 00f0 002B     	 cmp r3,#0
 3042 00f2 2BD0     	 beq .L157
 748:../Libraries/XMCLib/src/xmc_dma.c ****   {
 749:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsBlockCompleteStatus(dma);
 3043              	 .loc 2 749 0
 3044 00f4 7868     	 ldr r0,[r7,#4]
 3045 00f6 FFF7FEFF 	 bl XMC_DMA_GetChannelsBlockCompleteStatus
 3046 00fa 7861     	 str r0,[r7,#20]
 750:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3047              	 .loc 2 750 0
 3048 00fc 21E0     	 b .L158
 3049              	.L162:
 751:../Libraries/XMCLib/src/xmc_dma.c ****     {
 752:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3050              	 .loc 2 752 0
 3051 00fe 0122     	 movs r2,#1
 3052 0100 FB69     	 ldr r3,[r7,#28]
 3053 0102 02FA03F3 	 lsl r3,r2,r3
 3054 0106 3B61     	 str r3,[r7,#16]
 753:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3055              	 .loc 2 753 0
 3056 0108 7A69     	 ldr r2,[r7,#20]
 3057 010a 3B69     	 ldr r3,[r7,#16]
 3058 010c 1340     	 ands r3,r3,r2
 3059 010e 002B     	 cmp r3,#0
 3060 0110 14D0     	 beq .L159
 754:../Libraries/XMCLib/src/xmc_dma.c ****       {
 755:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_BL
 3061              	 .loc 2 755 0
 3062 0112 FB69     	 ldr r3,[r7,#28]
 3063 0114 DBB2     	 uxtb r3,r3
 3064 0116 7868     	 ldr r0,[r7,#4]
 3065 0118 1946     	 mov r1,r3
 3066 011a 0E22     	 movs r2,#14
 3067 011c FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 756:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE |
 757:../Libraries/XMCLib/src/xmc_dma.c ****                                     (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE));
 758:../Libraries/XMCLib/src/xmc_dma.c **** 
 759:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 760:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3068              	 .loc 2 760 0
 3069 0120 FB69     	 ldr r3,[r7,#28]
 3070 0122 9B00     	 lsls r3,r3,#2
 3071 0124 BA69     	 ldr r2,[r7,#24]
 3072 0126 1344     	 add r3,r3,r2
 3073 0128 1B68     	 ldr r3,[r3]
 3074 012a FB60     	 str r3,[r7,#12]
 761:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3075              	 .loc 2 761 0
 3076 012c FB68     	 ldr r3,[r7,#12]
 3077 012e 002B     	 cmp r3,#0
 3078 0130 03D0     	 beq .L160
 762:../Libraries/XMCLib/src/xmc_dma.c ****         {
 763:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE);
 3079              	 .loc 2 763 0
 3080 0132 FB68     	 ldr r3,[r7,#12]
 3081 0134 0220     	 movs r0,#2
 3082 0136 9847     	 blx r3
 764:../Libraries/XMCLib/src/xmc_dma.c ****         }
 765:../Libraries/XMCLib/src/xmc_dma.c **** 
 766:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3083              	 .loc 2 766 0
 3084 0138 07E0     	 b .L161
 3085              	.L160:
 3086 013a 06E0     	 b .L161
 3087              	.L159:
 767:../Libraries/XMCLib/src/xmc_dma.c ****       }
 768:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3088              	 .loc 2 768 0
 3089 013c FB69     	 ldr r3,[r7,#28]
 3090 013e 0133     	 adds r3,r3,#1
 3091 0140 FB61     	 str r3,[r7,#28]
 3092              	.L158:
 750:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3093              	 .loc 2 750 0
 3094 0142 7B69     	 ldr r3,[r7,#20]
 3095 0144 002B     	 cmp r3,#0
 3096 0146 DAD1     	 bne .L162
 3097 0148 61E0     	 b .L141
 3098              	.L161:
 3099 014a 60E0     	 b .L141
 3100              	.L157:
 769:../Libraries/XMCLib/src/xmc_dma.c ****     }
 770:../Libraries/XMCLib/src/xmc_dma.c ****   }
 771:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 3101              	 .loc 2 771 0
 3102 014c 7B69     	 ldr r3,[r7,#20]
 3103 014e 03F00403 	 and r3,r3,#4
 3104 0152 002B     	 cmp r3,#0
 3105 0154 2BD0     	 beq .L163
 772:../Libraries/XMCLib/src/xmc_dma.c ****   {
 773:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsSourceTransactionCompleteStatus(dma);
 3106              	 .loc 2 773 0
 3107 0156 7868     	 ldr r0,[r7,#4]
 3108 0158 FFF7FEFF 	 bl XMC_DMA_GetChannelsSourceTransactionCompleteStatus
 3109 015c 7861     	 str r0,[r7,#20]
 774:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3110              	 .loc 2 774 0
 3111 015e 21E0     	 b .L164
 3112              	.L168:
 775:../Libraries/XMCLib/src/xmc_dma.c ****     {
 776:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3113              	 .loc 2 776 0
 3114 0160 0122     	 movs r2,#1
 3115 0162 FB69     	 ldr r3,[r7,#28]
 3116 0164 02FA03F3 	 lsl r3,r2,r3
 3117 0168 3B61     	 str r3,[r7,#16]
 777:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3118              	 .loc 2 777 0
 3119 016a 7A69     	 ldr r2,[r7,#20]
 3120 016c 3B69     	 ldr r3,[r7,#16]
 3121 016e 1340     	 ands r3,r3,r2
 3122 0170 002B     	 cmp r3,#0
 3123 0172 14D0     	 beq .L165
 778:../Libraries/XMCLib/src/xmc_dma.c ****       {
 779:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 3124              	 .loc 2 779 0
 3125 0174 FB69     	 ldr r3,[r7,#28]
 3126 0176 DBB2     	 uxtb r3,r3
 3127 0178 7868     	 ldr r0,[r7,#4]
 3128 017a 1946     	 mov r1,r3
 3129 017c 0422     	 movs r2,#4
 3130 017e FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 780:../Libraries/XMCLib/src/xmc_dma.c **** 
 781:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 782:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3131              	 .loc 2 782 0
 3132 0182 FB69     	 ldr r3,[r7,#28]
 3133 0184 9B00     	 lsls r3,r3,#2
 3134 0186 BA69     	 ldr r2,[r7,#24]
 3135 0188 1344     	 add r3,r3,r2
 3136 018a 1B68     	 ldr r3,[r3]
 3137 018c FB60     	 str r3,[r7,#12]
 783:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3138              	 .loc 2 783 0
 3139 018e FB68     	 ldr r3,[r7,#12]
 3140 0190 002B     	 cmp r3,#0
 3141 0192 03D0     	 beq .L166
 784:../Libraries/XMCLib/src/xmc_dma.c ****         {
 785:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE);
 3142              	 .loc 2 785 0
 3143 0194 FB68     	 ldr r3,[r7,#12]
 3144 0196 0420     	 movs r0,#4
 3145 0198 9847     	 blx r3
 786:../Libraries/XMCLib/src/xmc_dma.c ****         }
 787:../Libraries/XMCLib/src/xmc_dma.c **** 
 788:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3146              	 .loc 2 788 0
 3147 019a 07E0     	 b .L167
 3148              	.L166:
 3149 019c 06E0     	 b .L167
 3150              	.L165:
 789:../Libraries/XMCLib/src/xmc_dma.c ****       }
 790:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3151              	 .loc 2 790 0
 3152 019e FB69     	 ldr r3,[r7,#28]
 3153 01a0 0133     	 adds r3,r3,#1
 3154 01a2 FB61     	 str r3,[r7,#28]
 3155              	.L164:
 774:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3156              	 .loc 2 774 0
 3157 01a4 7B69     	 ldr r3,[r7,#20]
 3158 01a6 002B     	 cmp r3,#0
 3159 01a8 DAD1     	 bne .L168
 3160 01aa 30E0     	 b .L141
 3161              	.L167:
 3162 01ac 2FE0     	 b .L141
 3163              	.L163:
 791:../Libraries/XMCLib/src/xmc_dma.c ****     }
 792:../Libraries/XMCLib/src/xmc_dma.c ****   }
 793:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 3164              	 .loc 2 793 0
 3165 01ae 7B69     	 ldr r3,[r7,#20]
 3166 01b0 03F00803 	 and r3,r3,#8
 3167 01b4 002B     	 cmp r3,#0
 3168 01b6 2AD0     	 beq .L141
 794:../Libraries/XMCLib/src/xmc_dma.c ****   {
 795:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(dma);
 3169              	 .loc 2 795 0
 3170 01b8 7868     	 ldr r0,[r7,#4]
 3171 01ba FFF7FEFF 	 bl XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
 3172 01be 7861     	 str r0,[r7,#20]
 796:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3173              	 .loc 2 796 0
 3174 01c0 21E0     	 b .L169
 3175              	.L173:
 797:../Libraries/XMCLib/src/xmc_dma.c ****     {
 798:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3176              	 .loc 2 798 0
 3177 01c2 0122     	 movs r2,#1
 3178 01c4 FB69     	 ldr r3,[r7,#28]
 3179 01c6 02FA03F3 	 lsl r3,r2,r3
 3180 01ca 3B61     	 str r3,[r7,#16]
 799:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3181              	 .loc 2 799 0
 3182 01cc 7A69     	 ldr r2,[r7,#20]
 3183 01ce 3B69     	 ldr r3,[r7,#16]
 3184 01d0 1340     	 ands r3,r3,r2
 3185 01d2 002B     	 cmp r3,#0
 3186 01d4 14D0     	 beq .L170
 800:../Libraries/XMCLib/src/xmc_dma.c ****       {
 801:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 3187              	 .loc 2 801 0
 3188 01d6 FB69     	 ldr r3,[r7,#28]
 3189 01d8 DBB2     	 uxtb r3,r3
 3190 01da 7868     	 ldr r0,[r7,#4]
 3191 01dc 1946     	 mov r1,r3
 3192 01de 0822     	 movs r2,#8
 3193 01e0 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 802:../Libraries/XMCLib/src/xmc_dma.c **** 
 803:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 804:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3194              	 .loc 2 804 0
 3195 01e4 FB69     	 ldr r3,[r7,#28]
 3196 01e6 9B00     	 lsls r3,r3,#2
 3197 01e8 BA69     	 ldr r2,[r7,#24]
 3198 01ea 1344     	 add r3,r3,r2
 3199 01ec 1B68     	 ldr r3,[r3]
 3200 01ee FB60     	 str r3,[r7,#12]
 805:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3201              	 .loc 2 805 0
 3202 01f0 FB68     	 ldr r3,[r7,#12]
 3203 01f2 002B     	 cmp r3,#0
 3204 01f4 03D0     	 beq .L171
 806:../Libraries/XMCLib/src/xmc_dma.c ****         {
 807:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE);
 3205              	 .loc 2 807 0
 3206 01f6 FB68     	 ldr r3,[r7,#12]
 3207 01f8 0820     	 movs r0,#8
 3208 01fa 9847     	 blx r3
 808:../Libraries/XMCLib/src/xmc_dma.c ****         }
 809:../Libraries/XMCLib/src/xmc_dma.c **** 
 810:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3209              	 .loc 2 810 0
 3210 01fc 07E0     	 b .L172
 3211              	.L171:
 3212 01fe 06E0     	 b .L172
 3213              	.L170:
 811:../Libraries/XMCLib/src/xmc_dma.c ****       }
 812:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3214              	 .loc 2 812 0
 3215 0200 FB69     	 ldr r3,[r7,#28]
 3216 0202 0133     	 adds r3,r3,#1
 3217 0204 FB61     	 str r3,[r7,#28]
 3218              	.L169:
 796:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3219              	 .loc 2 796 0
 3220 0206 7B69     	 ldr r3,[r7,#20]
 3221 0208 002B     	 cmp r3,#0
 3222 020a DAD1     	 bne .L173
 3223 020c FFE7     	 b .L141
 3224              	.L172:
 3225              	.L141:
 813:../Libraries/XMCLib/src/xmc_dma.c ****     }
 814:../Libraries/XMCLib/src/xmc_dma.c ****   }
 815:../Libraries/XMCLib/src/xmc_dma.c ****   else
 816:../Libraries/XMCLib/src/xmc_dma.c ****   {
 817:../Libraries/XMCLib/src/xmc_dma.c ****     /* no active interrupt was found? */
 818:../Libraries/XMCLib/src/xmc_dma.c ****   }
 819:../Libraries/XMCLib/src/xmc_dma.c **** 
 820:../Libraries/XMCLib/src/xmc_dma.c **** }
 3226              	 .loc 2 820 0
 3227 020e 2037     	 adds r7,r7,#32
 3228              	 .cfi_def_cfa_offset 8
 3229 0210 BD46     	 mov sp,r7
 3230              	 .cfi_def_cfa_register 13
 3231              	 
 3232 0212 80BD     	 pop {r7,pc}
 3233              	.L175:
 3234              	 .align 2
 3235              	.L174:
 3236 0214 00400150 	 .word 1342259200
 3237 0218 00000000 	 .word dma0_event_handlers
 3238 021c 00000000 	 .word dma1_event_handlers
 3239              	 .cfi_endproc
 3240              	.LFE221:
 3242              	 .text
 3243              	.Letext0:
 3244              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3245              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3246              	 .file 5 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 3247              	 .file 6 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc/xmc4_scu.h"
 3248              	 .file 7 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/cmsis_gcc.h"
 3249              	 .file 8 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/core_cm4.h"
 3250              	 .file 9 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_dma.c
    {standard input}:20     .text.XMC_DMA_GetEventStatus:00000000 $t
    {standard input}:24     .text.XMC_DMA_GetEventStatus:00000000 XMC_DMA_GetEventStatus
    {standard input}:58     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 $t
    {standard input}:62     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 XMC_DMA_GetChannelsTransferCompleteStatus
    {standard input}:95     .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 $t
    {standard input}:99     .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 XMC_DMA_GetChannelsBlockCompleteStatus
    {standard input}:132    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 $t
    {standard input}:136    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsSourceTransactionCompleteStatus
    {standard input}:169    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 $t
    {standard input}:173    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
    {standard input}:206    .text.XMC_DMA_GetChannelsErrorStatus:00000000 $t
    {standard input}:210    .text.XMC_DMA_GetChannelsErrorStatus:00000000 XMC_DMA_GetChannelsErrorStatus
    {standard input}:243    .bss.dma0_event_handlers:00000000 $d
    {standard input}:246    .bss.dma0_event_handlers:00000000 dma0_event_handlers
    {standard input}:249    .bss.dma1_event_handlers:00000000 $d
    {standard input}:252    .bss.dma1_event_handlers:00000000 dma1_event_handlers
    {standard input}:255    .text.XMC_DMA_Init:00000000 $t
    {standard input}:260    .text.XMC_DMA_Init:00000000 XMC_DMA_Init
    {standard input}:295    .text.XMC_DMA_Enable:00000000 XMC_DMA_Enable
    {standard input}:290    .text.XMC_DMA_Enable:00000000 $t
    {standard input}:344    .text.XMC_DMA_Enable:00000038 $d
    {standard input}:351    .text.XMC_DMA_Disable:00000000 $t
    {standard input}:356    .text.XMC_DMA_Disable:00000000 XMC_DMA_Disable
    {standard input}:405    .text.XMC_DMA_Disable:00000038 $d
    {standard input}:412    .text.XMC_DMA_IsEnabled:00000000 $t
    {standard input}:417    .text.XMC_DMA_IsEnabled:00000000 XMC_DMA_IsEnabled
    {standard input}:557    .text.XMC_DMA_IsEnabled:000000d8 $d
    {standard input}:564    .text.XMC_DMA_EnableRequestLine:00000000 $t
    {standard input}:569    .text.XMC_DMA_EnableRequestLine:00000000 XMC_DMA_EnableRequestLine
    {standard input}:666    .text.XMC_DMA_EnableRequestLine:00000090 $d
    {standard input}:672    .text.XMC_DMA_DisableRequestLine:00000000 $t
    {standard input}:677    .text.XMC_DMA_DisableRequestLine:00000000 XMC_DMA_DisableRequestLine
    {standard input}:735    .text.XMC_DMA_DisableRequestLine:0000004c $d
    {standard input}:741    .text.XMC_DMA_ClearRequestLine:00000000 $t
    {standard input}:746    .text.XMC_DMA_ClearRequestLine:00000000 XMC_DMA_ClearRequestLine
    {standard input}:822    .text.XMC_DMA_ClearRequestLine:00000070 $d
    {standard input}:828    .text.XMC_DMA_GetOverrunStatus:00000000 $t
    {standard input}:833    .text.XMC_DMA_GetOverrunStatus:00000000 XMC_DMA_GetOverrunStatus
    {standard input}:897    .text.XMC_DMA_GetOverrunStatus:00000058 $d
    {standard input}:903    .text.XMC_DMA_ClearOverrunStatus:00000000 $t
    {standard input}:908    .text.XMC_DMA_ClearOverrunStatus:00000000 XMC_DMA_ClearOverrunStatus
    {standard input}:958    .text.XMC_DMA_ClearOverrunStatus:0000003c $d
    {standard input}:964    .text.XMC_DMA_CH_Disable:00000000 $t
    {standard input}:969    .text.XMC_DMA_CH_Disable:00000000 XMC_DMA_CH_Disable
    {standard input}:1017   .text.XMC_DMA_CH_IsEnabled:00000000 $t
    {standard input}:1022   .text.XMC_DMA_CH_IsEnabled:00000000 XMC_DMA_CH_IsEnabled
    {standard input}:1065   .text.XMC_DMA_CH_Init:00000000 $t
    {standard input}:1070   .text.XMC_DMA_CH_Init:00000000 XMC_DMA_CH_Init
    {standard input}:1909   .text.XMC_DMA_CH_ClearEventStatus:00000000 XMC_DMA_CH_ClearEventStatus
    {standard input}:1383   .text.XMC_DMA_CH_Init:00000250 $d
    {standard input}:1392   .text.XMC_DMA_CH_Init:00000274 $t
    {standard input}:1526   .text.XMC_DMA_CH_Init:0000037c $d
    {standard input}:1529   .text.XMC_DMA_CH_Init:00000380 $t
    {standard input}:1613   .text.XMC_DMA_CH_Suspend:00000000 $t
    {standard input}:1618   .text.XMC_DMA_CH_Suspend:00000000 XMC_DMA_CH_Suspend
    {standard input}:1665   .text.XMC_DMA_CH_Resume:00000000 $t
    {standard input}:1670   .text.XMC_DMA_CH_Resume:00000000 XMC_DMA_CH_Resume
    {standard input}:1717   .text.XMC_DMA_CH_IsSuspended:00000000 $t
    {standard input}:1722   .text.XMC_DMA_CH_IsSuspended:00000000 XMC_DMA_CH_IsSuspended
    {standard input}:1768   .text.XMC_DMA_CH_EnableEvent:00000000 $t
    {standard input}:1773   .text.XMC_DMA_CH_EnableEvent:00000000 XMC_DMA_CH_EnableEvent
    {standard input}:1836   .text.XMC_DMA_CH_DisableEvent:00000000 $t
    {standard input}:1841   .text.XMC_DMA_CH_DisableEvent:00000000 XMC_DMA_CH_DisableEvent
    {standard input}:1904   .text.XMC_DMA_CH_ClearEventStatus:00000000 $t
    {standard input}:1972   .text.XMC_DMA_CH_GetEventStatus:00000000 $t
    {standard input}:1977   .text.XMC_DMA_CH_GetEventStatus:00000000 XMC_DMA_CH_GetEventStatus
    {standard input}:2052   .text.XMC_DMA_CH_EnableSourceGather:00000000 $t
    {standard input}:2057   .text.XMC_DMA_CH_EnableSourceGather:00000000 XMC_DMA_CH_EnableSourceGather
    {standard input}:2120   .text.XMC_DMA_CH_DisableSourceGather:00000000 $t
    {standard input}:2125   .text.XMC_DMA_CH_DisableSourceGather:00000000 XMC_DMA_CH_DisableSourceGather
    {standard input}:2172   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 $t
    {standard input}:2177   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 XMC_DMA_CH_EnableDestinationScatter
    {standard input}:2240   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 $t
    {standard input}:2245   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 XMC_DMA_CH_DisableDestinationScatter
    {standard input}:2292   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 $t
    {standard input}:2297   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 XMC_DMA_CH_TriggerSourceRequest
    {standard input}:2363   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 $t
    {standard input}:2368   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 XMC_DMA_CH_TriggerDestinationRequest
    {standard input}:2434   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 $t
    {standard input}:2439   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 XMC_DMA_CH_EnableSourceAddressReload
    {standard input}:2486   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 $t
    {standard input}:2491   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 XMC_DMA_CH_DisableSourceAddressReload
    {standard input}:2538   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 $t
    {standard input}:2543   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 XMC_DMA_CH_EnableDestinationAddressReload
    {standard input}:2590   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 $t
    {standard input}:2595   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 XMC_DMA_CH_DisableDestinationAddressReload
    {standard input}:2642   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 $t
    {standard input}:2647   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 XMC_DMA_CH_RequestLastMultiblockTransfer
    {standard input}:2710   .text.XMC_DMA_CH_SetEventHandler:00000000 $t
    {standard input}:2715   .text.XMC_DMA_CH_SetEventHandler:00000000 XMC_DMA_CH_SetEventHandler
    {standard input}:2764   .text.XMC_DMA_CH_SetEventHandler:00000038 $d
    {standard input}:2771   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 $t
    {standard input}:2776   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 XMC_DMA_CH_ClearSourcePeripheralRequest
    {standard input}:2821   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 $t
    {standard input}:2826   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 XMC_DMA_CH_ClearDestinationPeripheralRequest
    {standard input}:2871   .text.XMC_DMA_IRQHandler:00000000 $t
    {standard input}:2876   .text.XMC_DMA_IRQHandler:00000000 XMC_DMA_IRQHandler
    {standard input}:3236   .text.XMC_DMA_IRQHandler:00000214 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_CLOCK_IsPeripheralClockGated
