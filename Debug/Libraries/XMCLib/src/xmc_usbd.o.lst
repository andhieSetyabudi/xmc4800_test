   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usbd.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.XMC_USBD_EP_OUT_BUFFERSIZE,"aw",%nobits
  20              	 .align 2
  23              	XMC_USBD_EP_OUT_BUFFERSIZE:
  24 0000 00000000 	 .space 28
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              	 .section .bss.XMC_USBD_EP_IN_BUFFERSIZE,"aw",%nobits
  26              	 .align 2
  29              	XMC_USBD_EP_IN_BUFFERSIZE:
  30 0000 00000000 	 .space 28
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              	 .comm xmc_device,520,4
  32              	 .section USB_RAM,"aw",%progbits
  33              	 .align 2
  36              	XMC_USBD_EP_OUT_BUFFER:
  37 0000 00000000 	 .space 1792
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
  38              	 .align 2
  41              	XMC_USBD_EP_IN_BUFFER:
  42 0700 00000000 	 .space 1792
  42      00000000 
  42      00000000 
  42      00000000 
  42      00000000 
  43              	 .section .bss.usbd_init,"aw",%nobits
  44              	 .align 2
  47              	usbd_init:
  48 0000 00000000 	 .space 4
  49              	 .global Driver_USBD0
  50              	 .section .rodata.Driver_USBD0,"a",%progbits
  51              	 .align 2
  54              	Driver_USBD0:
  55 0000 00000000 	 .word XMC_USBD_GetCapabilities
  56 0004 00000000 	 .word XMC_USBD_Init
  57 0008 00000000 	 .word XMC_USBD_Uninitialize
  58 000c 00000000 	 .word XMC_USBD_DeviceConnect
  59 0010 00000000 	 .word XMC_USBD_DeviceDisconnect
  60 0014 00000000 	 .word XMC_USBD_DeviceGetState
  61 0018 00000000 	 .word XMC_USBD_DeviceSetAddress
  62 001c 00000000 	 .word XMC_USBD_EndpointConfigure
  63 0020 00000000 	 .word XMC_USBD_EndpointUnconfigure
  64 0024 00000000 	 .word XMC_USBD_EndpointStall
  65 0028 00000000 	 .word XMC_USBD_EndpointReadStart
  66 002c 00000000 	 .word XMC_USBD_EndpointRead
  67 0030 00000000 	 .word XMC_USBD_EndpointWrite
  68 0034 00000000 	 .word XMC_USBD_EndpointAbort
  69 0038 00000000 	 .word XMC_USBD_GetFrameNumber
  70 003c 00000000 	 .word XMC_USBD_IsEnumDone
  71              	 .section .text.XMC_USBD_lDeviceActive,"ax",%progbits
  72              	 .align 2
  73              	 .thumb
  74              	 .thumb_func
  76              	XMC_USBD_lDeviceActive:
  77              	.LFB174:
  78              	 .file 1 "../Libraries/XMCLib/src/xmc_usbd.c"
   1:../Libraries/XMCLib/src/xmc_usbd.c **** /**
   2:../Libraries/XMCLib/src/xmc_usbd.c ****  * @file xmc_usbd.c
   3:../Libraries/XMCLib/src/xmc_usbd.c ****  * @date 2019-12-16
   4:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   5:../Libraries/XMCLib/src/xmc_usbd.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usbd.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_usbd.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   9:../Libraries/XMCLib/src/xmc_usbd.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usbd.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  12:../Libraries/XMCLib/src/xmc_usbd.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  14:../Libraries/XMCLib/src/xmc_usbd.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_usbd.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_usbd.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_usbd.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_usbd.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_usbd.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  21:../Libraries/XMCLib/src/xmc_usbd.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_usbd.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_usbd.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_usbd.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_usbd.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_usbd.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  28:../Libraries/XMCLib/src/xmc_usbd.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_usbd.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_usbd.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_usbd.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_usbd.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_usbd.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  36:../Libraries/XMCLib/src/xmc_usbd.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_usbd.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_usbd.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_usbd.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  41:../Libraries/XMCLib/src/xmc_usbd.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_usbd.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  44:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-02-16:
  45:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Initial Version.<br>
  46:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-03-18:
  47:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointStall() to fix issue on USB clear stall. <br>
  48:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointConfigure() to fix issue in EP0 configuration.<br>
  49:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IRQHandler()(Removed the DAVE_CE check on SOF event).<br>
  50:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-06-20:
  51:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Removed GetDriverVersion API.<br>
  52:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IsEnumDone() API.<br>
  53:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the copy right in the file header.<br>
  54:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_Disable() API to gate the clock after programming the SCU registers.<
  55:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2019-12-16:
  56:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  57:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2020-09-03:
  58:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Fix XMC_USBD_EndpointConfigure()
  59:../Libraries/XMCLib/src/xmc_usbd.c ****  * @endcond
  60:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  61:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  62:../Libraries/XMCLib/src/xmc_usbd.c **** 
  63:../Libraries/XMCLib/src/xmc_usbd.c **** 
  64:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  65:../Libraries/XMCLib/src/xmc_usbd.c ****  * HEADER FILES
  66:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  67:../Libraries/XMCLib/src/xmc_usbd.c **** #include "xmc_usbd.h"
  68:../Libraries/XMCLib/src/xmc_usbd.c **** 
  69:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(USB0)
  70:../Libraries/XMCLib/src/xmc_usbd.c **** 
  71:../Libraries/XMCLib/src/xmc_usbd.c **** /**< macro to check the maximum number of endpoints used*/
  72:../Libraries/XMCLib/src/xmc_usbd.c **** #define XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(usbd_max_num_eps) \
  73:../Libraries/XMCLib/src/xmc_usbd.c ****   ((usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_1 ) || \
  74:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_2 ) || \
  75:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_3 ) || \
  76:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_4 ) || \
  77:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_5 ) || \
  78:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_6 ) || \
  79:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps == XMC_USBD_MAX_NUM_EPS_7 ))
  80:../Libraries/XMCLib/src/xmc_usbd.c **** 
  81:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  82:../Libraries/XMCLib/src/xmc_usbd.c ****  *GLOBAL DATA
  83:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  84:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  85:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo Size
  86:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  87:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_EP_OUT_BUFFERSIZE[7] = {0U, 0U, 0U, 0U, 0U, 0U, 0U};
  88:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  89:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo Size
  90:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  91:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_EP_IN_BUFFERSIZE[7] = {0U, 0U, 0U, 0U, 0U, 0U, 0U};
  92:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  93:../Libraries/XMCLib/src/xmc_usbd.c ****  * Device definition
  94:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  95:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_DEVICE_t xmc_device;
  96:../Libraries/XMCLib/src/xmc_usbd.c **** #ifdef __GNUC__															  /*GCC*/
  97:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  98:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
  99:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 100:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section("U
 101:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 102:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 103:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 104:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section("US
 105:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 106:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__ICCARM__)
 107:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 108:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 109:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 110:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 111:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] @ ".dram";
 112:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 113:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 114:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 115:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 116:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_IN_BUFFER[7][256] @ ".dram";
 117:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 118:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__CC_ARM)
 119:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 120:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 121:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 122:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section ("
 123:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 124:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 125:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 126:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section ("R
 127:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 128:../Libraries/XMCLib/src/xmc_usbd.c **** static XMC_USBD_t *usbd_init;
 129:../Libraries/XMCLib/src/xmc_usbd.c **** 
 130:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 131:../Libraries/XMCLib/src/xmc_usbd.c ****  *LOCAL ROUTINES
 132:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 133:../Libraries/XMCLib/src/xmc_usbd.c **** /*Local routines prototypes*/
 134:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj);
 135:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num, const uint32_t byte_count);
 136:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *ep);
 137:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num);
 138:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void);
 139:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void);
 140:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep);
 141:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep);
 142:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void);
 143:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj);
 144:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void);
 145:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj);
 146:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr);
 147:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj);
 148:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void);
 149:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event);
 150:../Libraries/XMCLib/src/xmc_usbd.c **** 
 151:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 152:../Libraries/XMCLib/src/xmc_usbd.c ****  *  The device driver
 153:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 154:../Libraries/XMCLib/src/xmc_usbd.c **** const XMC_USBD_DRIVER_t Driver_USBD0 =
 155:../Libraries/XMCLib/src/xmc_usbd.c **** {
 156:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetCapabilities = XMC_USBD_GetCapabilities,
 157:../Libraries/XMCLib/src/xmc_usbd.c ****   .Initialize = XMC_USBD_Init,
 158:../Libraries/XMCLib/src/xmc_usbd.c ****   .Uninitialize = XMC_USBD_Uninitialize,
 159:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceConnect = XMC_USBD_DeviceConnect,
 160:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceDisconnect = XMC_USBD_DeviceDisconnect,
 161:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceGetState = XMC_USBD_DeviceGetState,
 162:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceSetAddress = XMC_USBD_DeviceSetAddress,
 163:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointConfigure = XMC_USBD_EndpointConfigure,
 164:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointUnconfigure = XMC_USBD_EndpointUnconfigure,
 165:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointStall = XMC_USBD_EndpointStall,
 166:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointReadStart = XMC_USBD_EndpointReadStart,
 167:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointRead = XMC_USBD_EndpointRead,
 168:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointWrite = XMC_USBD_EndpointWrite,
 169:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointAbort = XMC_USBD_EndpointAbort,
 170:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetFrameNumber = XMC_USBD_GetFrameNumber,
 171:../Libraries/XMCLib/src/xmc_usbd.c ****   .IsEnumDone = XMC_USBD_IsEnumDone
 172:../Libraries/XMCLib/src/xmc_usbd.c **** };
 173:../Libraries/XMCLib/src/xmc_usbd.c **** 
 174:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 175:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Checks if device is active
 176:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 177:../Libraries/XMCLib/src/xmc_usbd.c ****  * Therefore the endpoint inInUse flag are checked and if one endpoint is in use, 1 is returned,
 178:../Libraries/XMCLib/src/xmc_usbd.c ****  * else 0 is returned.
 179:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return 1 if an endpoint is active else 0
 180:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 181:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj)
 182:../Libraries/XMCLib/src/xmc_usbd.c **** {
  79              	 .loc 1 182 0
  80              	 .cfi_startproc
  81              	 
  82              	 
  83              	 
  84 0000 80B4     	 push {r7}
  85              	 .cfi_def_cfa_offset 4
  86              	 .cfi_offset 7,-4
  87 0002 85B0     	 sub sp,sp,#20
  88              	 .cfi_def_cfa_offset 24
  89 0004 00AF     	 add r7,sp,#0
  90              	 .cfi_def_cfa_register 7
  91 0006 7860     	 str r0,[r7,#4]
 183:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
  92              	 .loc 1 184 0
  93 0008 0023     	 movs r3,#0
  94 000a BB73     	 strb r3,[r7,#14]
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
  95              	 .loc 1 185 0
  96 000c 0023     	 movs r3,#0
  97 000e FB73     	 strb r3,[r7,#15]
  98 0010 1EE0     	 b .L2
  99              	.L5:
 186:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 187:../Libraries/XMCLib/src/xmc_usbd.c ****     if (xmc_device.ep[i].inInUse || xmc_device.ep[i].outInUse)
 100              	 .loc 1 187 0
 101 0012 FB7B     	 ldrb r3,[r7,#15]
 102 0014 144A     	 ldr r2,.L7
 103 0016 3421     	 movs r1,#52
 104 0018 01FB03F3 	 mul r3,r1,r3
 105 001c 1344     	 add r3,r3,r2
 106 001e 5B68     	 ldr r3,[r3,#4]
 107 0020 DB08     	 lsrs r3,r3,#3
 108 0022 03F00103 	 and r3,r3,#1
 109 0026 DBB2     	 uxtb r3,r3
 110 0028 002B     	 cmp r3,#0
 111 002a 0CD1     	 bne .L3
 112              	 .loc 1 187 0 is_stmt 0 discriminator 1
 113 002c FB7B     	 ldrb r3,[r7,#15]
 114 002e 0E4A     	 ldr r2,.L7
 115 0030 3421     	 movs r1,#52
 116 0032 01FB03F3 	 mul r3,r1,r3
 117 0036 1344     	 add r3,r3,r2
 118 0038 5B68     	 ldr r3,[r3,#4]
 119 003a 1B09     	 lsrs r3,r3,#4
 120 003c 03F00103 	 and r3,r3,#1
 121 0040 DBB2     	 uxtb r3,r3
 122 0042 002B     	 cmp r3,#0
 123 0044 01D0     	 beq .L4
 124              	.L3:
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 189:../Libraries/XMCLib/src/xmc_usbd.c ****       result = 1U;
 125              	 .loc 1 189 0 is_stmt 1
 126 0046 0123     	 movs r3,#1
 127 0048 BB73     	 strb r3,[r7,#14]
 128              	.L4:
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 129              	 .loc 1 185 0 discriminator 2
 130 004a FB7B     	 ldrb r3,[r7,#15]
 131 004c 0133     	 adds r3,r3,#1
 132 004e FB73     	 strb r3,[r7,#15]
 133              	.L2:
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 134              	 .loc 1 185 0 is_stmt 0 discriminator 1
 135 0050 7B68     	 ldr r3,[r7,#4]
 136 0052 1B7B     	 ldrb r3,[r3,#12]
 137 0054 FA7B     	 ldrb r2,[r7,#15]
 138 0056 9A42     	 cmp r2,r3
 139 0058 DBD3     	 bcc .L5
 190:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 191:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 192:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 140              	 .loc 1 192 0 is_stmt 1
 141 005a BB7B     	 ldrb r3,[r7,#14]
 193:../Libraries/XMCLib/src/xmc_usbd.c **** }
 142              	 .loc 1 193 0
 143 005c 1846     	 mov r0,r3
 144 005e 1437     	 adds r7,r7,#20
 145              	 .cfi_def_cfa_offset 4
 146 0060 BD46     	 mov sp,r7
 147              	 .cfi_def_cfa_register 13
 148              	 
 149 0062 5DF8047B 	 ldr r7,[sp],#4
 150              	 .cfi_restore 7
 151              	 .cfi_def_cfa_offset 0
 152 0066 7047     	 bx lr
 153              	.L8:
 154              	 .align 2
 155              	.L7:
 156 0068 00000000 	 .word xmc_device
 157              	 .cfi_endproc
 158              	.LFE174:
 160              	 .section .text.XMC_USBD_lReadFifo,"ax",%progbits
 161              	 .align 2
 162              	 .thumb
 163              	 .thumb_func
 165              	XMC_USBD_lReadFifo:
 166              	.LFB175:
 194:../Libraries/XMCLib/src/xmc_usbd.c **** 
 195:../Libraries/XMCLib/src/xmc_usbd.c **** 
 196:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 197:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Read data from the rx fifo
 198:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 199:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the fifo is copied in to the buffer specified by @ref xfer_buffer and
 200:../Libraries/XMCLib/src/xmc_usbd.c ****  * the transfer values get updated. If the endpoint is disabled or the buffer not existent
 201:../Libraries/XMCLib/src/xmc_usbd.c ****  * the function exits.
 202:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 203:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg ep_num the endpoint to read for
 204:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg byte_count the byte count to read
 205:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 206:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num, const uint32_t byte_count)
 207:../Libraries/XMCLib/src/xmc_usbd.c **** {
 167              	 .loc 1 207 0
 168              	 .cfi_startproc
 169              	 
 170              	 
 171              	 
 172 0000 80B4     	 push {r7}
 173              	 .cfi_def_cfa_offset 4
 174              	 .cfi_offset 7,-4
 175 0002 8BB0     	 sub sp,sp,#44
 176              	 .cfi_def_cfa_offset 48
 177 0004 00AF     	 add r7,sp,#0
 178              	 .cfi_def_cfa_register 7
 179 0006 7860     	 str r0,[r7,#4]
 180 0008 3960     	 str r1,[r7]
 208:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 181              	 .loc 1 208 0
 182 000a 7B68     	 ldr r3,[r7,#4]
 183 000c 3422     	 movs r2,#52
 184 000e 02FB03F3 	 mul r3,r2,r3
 185 0012 344A     	 ldr r2,.L16
 186 0014 1344     	 add r3,r3,r2
 187 0016 3B62     	 str r3,[r7,#32]
 209:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 210:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_data;
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_word_count;
 212:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo = xmc_device.fifo[0U];
 188              	 .loc 1 212 0
 189 0018 324B     	 ldr r3,.L16
 190 001a D3F8E031 	 ldr r3,[r3,#480]
 191 001e FB61     	 str r3,[r7,#28]
 213:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
 215:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.endpoint_out_register[ep_num]->doepctl;
 192              	 .loc 1 215 0
 193 0020 304A     	 ldr r2,.L16
 194 0022 7B68     	 ldr r3,[r7,#4]
 195 0024 7033     	 adds r3,r3,#112
 196 0026 9B00     	 lsls r3,r3,#2
 197 0028 1344     	 add r3,r3,r2
 198 002a 5B68     	 ldr r3,[r3,#4]
 199 002c 1B68     	 ldr r3,[r3]
 200 002e FB60     	 str r3,[r7,#12]
 216:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 201              	 .loc 1 216 0
 202 0030 3B68     	 ldr r3,[r7]
 203 0032 9B08     	 lsrs r3,r3,#2
 204 0034 BB61     	 str r3,[r7,#24]
 217:../Libraries/XMCLib/src/xmc_usbd.c ****   temp_word_count = (word_count << 2U);
 205              	 .loc 1 217 0
 206 0036 BB69     	 ldr r3,[r7,#24]
 207 0038 9B00     	 lsls r3,r3,#2
 208 003a 7B61     	 str r3,[r7,#20]
 218:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Check if ep is enabled and has buffer */
 219:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!data.b.usbactep)
 209              	 .loc 1 219 0
 210 003c 7B7B     	 ldrb r3,[r7,#13]
 211 003e 23F07F03 	 bic r3,r3,#127
 212 0042 DBB2     	 uxtb r3,r3
 213 0044 002B     	 cmp r3,#0
 214 0046 48D0     	 beq .L9
 220:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 221:../Libraries/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 222:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 223:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->xferBuffer == NULL)
 215              	 .loc 1 223 0
 216 0048 3B6A     	 ldr r3,[r7,#32]
 217 004a 5B6A     	 ldr r3,[r3,#36]
 218 004c 002B     	 cmp r3,#0
 219 004e 44D0     	 beq .L9
 224:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 225:../Libraries/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 226:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 227:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 228:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     /* store the data */
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count; i++)
 220              	 .loc 1 230 0
 221 0050 0023     	 movs r3,#0
 222 0052 7B62     	 str r3,[r7,#36]
 223 0054 0AE0     	 b .L11
 224              	.L12:
 231:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 232:../Libraries/XMCLib/src/xmc_usbd.c ****       *(((uint32_t *)ep->xferBuffer) + i) = *fifo;
 225              	 .loc 1 232 0 discriminator 3
 226 0056 3B6A     	 ldr r3,[r7,#32]
 227 0058 5A6A     	 ldr r2,[r3,#36]
 228 005a 7B6A     	 ldr r3,[r7,#36]
 229 005c 9B00     	 lsls r3,r3,#2
 230 005e 1344     	 add r3,r3,r2
 231 0060 FA69     	 ldr r2,[r7,#28]
 232 0062 1268     	 ldr r2,[r2]
 233 0064 1A60     	 str r2,[r3]
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 234              	 .loc 1 230 0 discriminator 3
 235 0066 7B6A     	 ldr r3,[r7,#36]
 236 0068 0133     	 adds r3,r3,#1
 237 006a 7B62     	 str r3,[r7,#36]
 238              	.L11:
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 239              	 .loc 1 230 0 is_stmt 0 discriminator 1
 240 006c 7A6A     	 ldr r2,[r7,#36]
 241 006e BB69     	 ldr r3,[r7,#24]
 242 0070 9A42     	 cmp r2,r3
 243 0072 F0D3     	 bcc .L12
 233:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 234:../Libraries/XMCLib/src/xmc_usbd.c ****     /* space is not devidable by 4 */
 235:../Libraries/XMCLib/src/xmc_usbd.c ****     if (byte_count != temp_word_count)
 244              	 .loc 1 235 0 is_stmt 1
 245 0074 3A68     	 ldr r2,[r7]
 246 0076 7B69     	 ldr r3,[r7,#20]
 247 0078 9A42     	 cmp r2,r3
 248 007a 22D0     	 beq .L13
 236:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       temp_data = *fifo;
 249              	 .loc 1 237 0
 250 007c FB69     	 ldr r3,[r7,#28]
 251 007e 1B68     	 ldr r3,[r3]
 252 0080 3B61     	 str r3,[r7,#16]
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U; (temp_word_count + i) < byte_count; i++)
 253              	 .loc 1 238 0
 254 0082 0023     	 movs r3,#0
 255 0084 7B62     	 str r3,[r7,#36]
 256 0086 16E0     	 b .L14
 257              	.L15:
 239:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 240:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->xferBuffer[(word_count << 2) + i] = (uint8_t)((temp_data & ((uint32_t)0xFFU << (i * 8U)
 258              	 .loc 1 240 0 discriminator 3
 259 0088 3B6A     	 ldr r3,[r7,#32]
 260 008a 5A6A     	 ldr r2,[r3,#36]
 261 008c BB69     	 ldr r3,[r7,#24]
 262 008e 9900     	 lsls r1,r3,#2
 263 0090 7B6A     	 ldr r3,[r7,#36]
 264 0092 0B44     	 add r3,r3,r1
 265 0094 1344     	 add r3,r3,r2
 266 0096 7A6A     	 ldr r2,[r7,#36]
 267 0098 D200     	 lsls r2,r2,#3
 268 009a 1146     	 mov r1,r2
 269 009c FF22     	 movs r2,#255
 270 009e 02FA01F1 	 lsl r1,r2,r1
 271 00a2 3A69     	 ldr r2,[r7,#16]
 272 00a4 0A40     	 ands r2,r2,r1
 273 00a6 796A     	 ldr r1,[r7,#36]
 274 00a8 C900     	 lsls r1,r1,#3
 275 00aa CA40     	 lsrs r2,r2,r1
 276 00ac D2B2     	 uxtb r2,r2
 277 00ae 1A70     	 strb r2,[r3]
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U; (temp_word_count + i) < byte_count; i++)
 278              	 .loc 1 238 0 discriminator 3
 279 00b0 7B6A     	 ldr r3,[r7,#36]
 280 00b2 0133     	 adds r3,r3,#1
 281 00b4 7B62     	 str r3,[r7,#36]
 282              	.L14:
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U; (temp_word_count + i) < byte_count; i++)
 283              	 .loc 1 238 0 is_stmt 0 discriminator 1
 284 00b6 7A69     	 ldr r2,[r7,#20]
 285 00b8 7B6A     	 ldr r3,[r7,#36]
 286 00ba 1A44     	 add r2,r2,r3
 287 00bc 3B68     	 ldr r3,[r7]
 288 00be 9A42     	 cmp r2,r3
 289 00c0 E2D3     	 bcc .L15
 290              	.L13:
 241:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 242:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 243:../Libraries/XMCLib/src/xmc_usbd.c **** 
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     /* save the amount of data */
 245:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount += byte_count;
 291              	 .loc 1 245 0 is_stmt 1
 292 00c2 3B6A     	 ldr r3,[r7,#32]
 293 00c4 DA6A     	 ldr r2,[r3,#44]
 294 00c6 3B68     	 ldr r3,[r7]
 295 00c8 1A44     	 add r2,r2,r3
 296 00ca 3B6A     	 ldr r3,[r7,#32]
 297 00cc DA62     	 str r2,[r3,#44]
 246:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 298              	 .loc 1 246 0
 299 00ce 3B6A     	 ldr r3,[r7,#32]
 300 00d0 5A6A     	 ldr r2,[r3,#36]
 301 00d2 3B68     	 ldr r3,[r7]
 302 00d4 1A44     	 add r2,r2,r3
 303 00d6 3B6A     	 ldr r3,[r7,#32]
 304 00d8 5A62     	 str r2,[r3,#36]
 305              	.L9:
 247:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 248:../Libraries/XMCLib/src/xmc_usbd.c **** }
 306              	 .loc 1 248 0
 307 00da 2C37     	 adds r7,r7,#44
 308              	 .cfi_def_cfa_offset 4
 309 00dc BD46     	 mov sp,r7
 310              	 .cfi_def_cfa_register 13
 311              	 
 312 00de 5DF8047B 	 ldr r7,[sp],#4
 313              	 .cfi_restore 7
 314              	 .cfi_def_cfa_offset 0
 315 00e2 7047     	 bx lr
 316              	.L17:
 317              	 .align 2
 318              	.L16:
 319 00e4 00000000 	 .word xmc_device
 320              	 .cfi_endproc
 321              	.LFE175:
 323              	 .section .text.XMC_USBD_lWriteFifo,"ax",%progbits
 324              	 .align 2
 325              	 .thumb
 326              	 .thumb_func
 328              	XMC_USBD_lWriteFifo:
 329              	.LFB176:
 249:../Libraries/XMCLib/src/xmc_usbd.c **** 
 250:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 251:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Write data to an endpoint fifo
 252:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 253:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the @ref xfer_buffer gets copied in to the tx fifo of the endpoint until the buffe
 254:../Libraries/XMCLib/src/xmc_usbd.c ****  *completely or the tx fifo is full. The transfer values are not updated.
 255:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 256:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg[in] ep the endpoint to use
 257:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return the number of bytes written to the fifo
 258:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 259:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *const ep)
 260:../Libraries/XMCLib/src/xmc_usbd.c **** {
 330              	 .loc 1 260 0
 331              	 .cfi_startproc
 332              	 
 333              	 
 334              	 
 335 0000 80B4     	 push {r7}
 336              	 .cfi_def_cfa_offset 4
 337              	 .cfi_offset 7,-4
 338 0002 89B0     	 sub sp,sp,#36
 339              	 .cfi_def_cfa_offset 40
 340 0004 00AF     	 add r7,sp,#0
 341              	 .cfi_def_cfa_register 7
 342 0006 7860     	 str r0,[r7,#4]
 261:../Libraries/XMCLib/src/xmc_usbd.c ****   dtxfsts_data_t freeSpace;
 262:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo;
 263:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t byte_count;
 264:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 265:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t result;
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   fifo = xmc_device.fifo[ep->address_u.address_st.number]; /* fifo */
 343              	 .loc 1 267 0
 344 0008 7B68     	 ldr r3,[r7,#4]
 345 000a 1B78     	 ldrb r3,[r3]
 346 000c C3F30303 	 ubfx r3,r3,#0,#4
 347 0010 DBB2     	 uxtb r3,r3
 348 0012 234A     	 ldr r2,.L25
 349 0014 7833     	 adds r3,r3,#120
 350 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 351 001a FB60     	 str r3,[r7,#12]
 268:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 352              	 .loc 1 268 0
 353 001c 7B68     	 ldr r3,[r7,#4]
 354 001e 1B78     	 ldrb r3,[r3]
 355 0020 C3F30303 	 ubfx r3,r3,#0,#4
 356 0024 DBB2     	 uxtb r3,r3
 357 0026 1E4A     	 ldr r2,.L25
 358 0028 6A33     	 adds r3,r3,#106
 359 002a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 360 002e 9B69     	 ldr r3,[r3,#24]
 361 0030 BB60     	 str r3,[r7,#8]
 269:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 270:../Libraries/XMCLib/src/xmc_usbd.c ****   byte_count = ep->xferLength - ep->xferCount;
 362              	 .loc 1 270 0
 363 0032 7B68     	 ldr r3,[r7,#4]
 364 0034 9A6A     	 ldr r2,[r3,#40]
 365 0036 7B68     	 ldr r3,[r7,#4]
 366 0038 DB6A     	 ldr r3,[r3,#44]
 367 003a D31A     	 subs r3,r2,r3
 368 003c FB61     	 str r3,[r7,#28]
 271:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 369              	 .loc 1 271 0
 370 003e FB69     	 ldr r3,[r7,#28]
 371 0040 002B     	 cmp r3,#0
 372 0042 02D1     	 bne .L19
 272:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 273:../Libraries/XMCLib/src/xmc_usbd.c ****     result = 0U;
 373              	 .loc 1 273 0
 374 0044 0023     	 movs r3,#0
 375 0046 7B61     	 str r3,[r7,#20]
 376 0048 23E0     	 b .L20
 377              	.L19:
 274:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 275:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 276:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     /* add the unaligned bytes to the word count to compare with the fifo space */
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     word_count = ((uint32_t)byte_count + 3U) >> 2U;
 378              	 .loc 1 278 0
 379 004a FB69     	 ldr r3,[r7,#28]
 380 004c 0333     	 adds r3,r3,#3
 381 004e 9B08     	 lsrs r3,r3,#2
 382 0050 BB61     	 str r3,[r7,#24]
 279:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 383              	 .loc 1 279 0
 384 0052 3B89     	 ldrh r3,[r7,#8]
 385 0054 1A46     	 mov r2,r3
 386 0056 BB69     	 ldr r3,[r7,#24]
 387 0058 9A42     	 cmp r2,r3
 388 005a 04D2     	 bcs .L21
 280:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 281:../Libraries/XMCLib/src/xmc_usbd.c ****       word_count = (uint32_t)freeSpace.b.txfspcavail;
 389              	 .loc 1 281 0
 390 005c 3B89     	 ldrh r3,[r7,#8]
 391 005e BB61     	 str r3,[r7,#24]
 282:../Libraries/XMCLib/src/xmc_usbd.c ****       byte_count = (uint32_t)word_count << (uint32_t)2U;
 392              	 .loc 1 282 0
 393 0060 BB69     	 ldr r3,[r7,#24]
 394 0062 9B00     	 lsls r3,r3,#2
 395 0064 FB61     	 str r3,[r7,#28]
 396              	.L21:
 283:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 284:../Libraries/XMCLib/src/xmc_usbd.c **** 
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data dword wise */
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count; ep->xferBuffer += 4U)
 397              	 .loc 1 286 0
 398 0066 0023     	 movs r3,#0
 399 0068 3B61     	 str r3,[r7,#16]
 400 006a 0CE0     	 b .L22
 401              	.L23:
 287:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 288:../Libraries/XMCLib/src/xmc_usbd.c ****       *fifo = *(uint32_t *)ep->xferBuffer;
 402              	 .loc 1 288 0 discriminator 3
 403 006c 7B68     	 ldr r3,[r7,#4]
 404 006e 5B6A     	 ldr r3,[r3,#36]
 405 0070 1A68     	 ldr r2,[r3]
 406 0072 FB68     	 ldr r3,[r7,#12]
 407 0074 1A60     	 str r2,[r3]
 289:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 408              	 .loc 1 289 0 discriminator 3
 409 0076 3B69     	 ldr r3,[r7,#16]
 410 0078 0133     	 adds r3,r3,#1
 411 007a 3B61     	 str r3,[r7,#16]
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 412              	 .loc 1 286 0 discriminator 3
 413 007c 7B68     	 ldr r3,[r7,#4]
 414 007e 5B6A     	 ldr r3,[r3,#36]
 415 0080 1A1D     	 adds r2,r3,#4
 416 0082 7B68     	 ldr r3,[r7,#4]
 417 0084 5A62     	 str r2,[r3,#36]
 418              	.L22:
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 419              	 .loc 1 286 0 is_stmt 0 discriminator 1
 420 0086 3A69     	 ldr r2,[r7,#16]
 421 0088 BB69     	 ldr r3,[r7,#24]
 422 008a 9A42     	 cmp r2,r3
 423 008c EED3     	 bcc .L23
 290:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 291:../Libraries/XMCLib/src/xmc_usbd.c ****     result = byte_count;
 424              	 .loc 1 291 0 is_stmt 1
 425 008e FB69     	 ldr r3,[r7,#28]
 426 0090 7B61     	 str r3,[r7,#20]
 427              	.L20:
 292:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 293:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 428              	 .loc 1 293 0
 429 0092 7B69     	 ldr r3,[r7,#20]
 294:../Libraries/XMCLib/src/xmc_usbd.c **** }
 430              	 .loc 1 294 0
 431 0094 1846     	 mov r0,r3
 432 0096 2437     	 adds r7,r7,#36
 433              	 .cfi_def_cfa_offset 4
 434 0098 BD46     	 mov sp,r7
 435              	 .cfi_def_cfa_register 13
 436              	 
 437 009a 5DF8047B 	 ldr r7,[sp],#4
 438              	 .cfi_restore 7
 439              	 .cfi_def_cfa_offset 0
 440 009e 7047     	 bx lr
 441              	.L26:
 442              	 .align 2
 443              	.L25:
 444 00a0 00000000 	 .word xmc_device
 445              	 .cfi_endproc
 446              	.LFE176:
 448              	 .section .text.XMC_USBD_lFlushTXFifo,"ax",%progbits
 449              	 .align 2
 450              	 .thumb
 451              	 .thumb_func
 453              	XMC_USBD_lFlushTXFifo:
 454              	.LFB177:
 295:../Libraries/XMCLib/src/xmc_usbd.c **** 
 296:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 297:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush a tx fifo
 298:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 299:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_num Fifo number to flush
 300:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 301:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note Use 0x10 as parameter to flush all tx fifos.
 302:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 303:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num)
 304:../Libraries/XMCLib/src/xmc_usbd.c **** {
 455              	 .loc 1 304 0
 456              	 .cfi_startproc
 457              	 
 458              	 
 459              	 
 460 0000 80B4     	 push {r7}
 461              	 .cfi_def_cfa_offset 4
 462              	 .cfi_offset 7,-4
 463 0002 85B0     	 sub sp,sp,#20
 464              	 .cfi_def_cfa_offset 24
 465 0004 00AF     	 add r7,sp,#0
 466              	 .cfi_def_cfa_register 7
 467 0006 0346     	 mov r3,r0
 468 0008 FB71     	 strb r3,[r7,#7]
 305:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 307:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 469              	 .loc 1 307 0
 470 000a 0023     	 movs r3,#0
 471 000c BB60     	 str r3,[r7,#8]
 308:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 309:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfflsh = 1U;
 472              	 .loc 1 309 0
 473 000e BB68     	 ldr r3,[r7,#8]
 474 0010 43F02003 	 orr r3,r3,#32
 475 0014 BB60     	 str r3,[r7,#8]
 310:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 476              	 .loc 1 310 0
 477 0016 FB79     	 ldrb r3,[r7,#7]
 478 0018 03F01F03 	 and r3,r3,#31
 479 001c DBB2     	 uxtb r3,r3
 480 001e 03F01F03 	 and r3,r3,#31
 481 0022 9B01     	 lsls r3,r3,#6
 482 0024 BA68     	 ldr r2,[r7,#8]
 483 0026 22F4F862 	 bic r2,r2,#1984
 484 002a 1343     	 orrs r3,r3,r2
 485 002c BB60     	 str r3,[r7,#8]
 311:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 486              	 .loc 1 311 0
 487 002e 144B     	 ldr r3,.L32
 488 0030 D3F8A031 	 ldr r3,[r3,#416]
 489 0034 BA68     	 ldr r2,[r7,#8]
 490 0036 1A61     	 str r2,[r3,#16]
 312:../Libraries/XMCLib/src/xmc_usbd.c ****   for (count = 0U; count < 1000U; count++) {}
 491              	 .loc 1 312 0
 492 0038 0023     	 movs r3,#0
 493 003a FB60     	 str r3,[r7,#12]
 494 003c 02E0     	 b .L28
 495              	.L29:
 496              	 .loc 1 312 0 is_stmt 0 discriminator 3
 497 003e FB68     	 ldr r3,[r7,#12]
 498 0040 0133     	 adds r3,r3,#1
 499 0042 FB60     	 str r3,[r7,#12]
 500              	.L28:
 501              	 .loc 1 312 0 discriminator 1
 502 0044 FB68     	 ldr r3,[r7,#12]
 503 0046 B3F57A7F 	 cmp r3,#1000
 504 004a F8D3     	 bcc .L29
 505              	.L30:
 313:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 314:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 315:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 506              	 .loc 1 315 0 is_stmt 1 discriminator 1
 507 004c 0C4B     	 ldr r3,.L32
 508 004e D3F8A031 	 ldr r3,[r3,#416]
 509 0052 1B69     	 ldr r3,[r3,#16]
 510 0054 BB60     	 str r3,[r7,#8]
 316:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 317:../Libraries/XMCLib/src/xmc_usbd.c ****   while (data.b.txfflsh);
 511              	 .loc 1 317 0 discriminator 1
 512 0056 BB68     	 ldr r3,[r7,#8]
 513 0058 5B09     	 lsrs r3,r3,#5
 514 005a 03F00103 	 and r3,r3,#1
 515 005e DBB2     	 uxtb r3,r3
 516 0060 002B     	 cmp r3,#0
 517 0062 F3D1     	 bne .L30
 318:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 518              	 .loc 1 318 0
 519 0064 0023     	 movs r3,#0
 520 0066 FB60     	 str r3,[r7,#12]
 319:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 521              	 .loc 1 319 0
 522 0068 00BF     	 nop
 523              	.L31:
 524              	 .loc 1 319 0 is_stmt 0 discriminator 1
 525 006a FB68     	 ldr r3,[r7,#12]
 526 006c 5A1C     	 adds r2,r3,#1
 527 006e FA60     	 str r2,[r7,#12]
 528 0070 B3F57A7F 	 cmp r3,#1000
 529 0074 F9D3     	 bcc .L31
 320:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 321:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 322:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 323:../Libraries/XMCLib/src/xmc_usbd.c **** }
 530              	 .loc 1 323 0 is_stmt 1
 531 0076 1437     	 adds r7,r7,#20
 532              	 .cfi_def_cfa_offset 4
 533 0078 BD46     	 mov sp,r7
 534              	 .cfi_def_cfa_register 13
 535              	 
 536 007a 5DF8047B 	 ldr r7,[sp],#4
 537              	 .cfi_restore 7
 538              	 .cfi_def_cfa_offset 0
 539 007e 7047     	 bx lr
 540              	.L33:
 541              	 .align 2
 542              	.L32:
 543 0080 00000000 	 .word xmc_device
 544              	 .cfi_endproc
 545              	.LFE177:
 547              	 .section .text.XMC_USBD_lFlushRXFifo,"ax",%progbits
 548              	 .align 2
 549              	 .thumb
 550              	 .thumb_func
 552              	XMC_USBD_lFlushRXFifo:
 553              	.LFB178:
 324:../Libraries/XMCLib/src/xmc_usbd.c **** 
 325:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 326:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush the rx fifo
 327:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 328:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void)
 329:../Libraries/XMCLib/src/xmc_usbd.c **** {
 554              	 .loc 1 329 0
 555              	 .cfi_startproc
 556              	 
 557              	 
 558              	 
 559 0000 80B4     	 push {r7}
 560              	 .cfi_def_cfa_offset 4
 561              	 .cfi_offset 7,-4
 562 0002 83B0     	 sub sp,sp,#12
 563              	 .cfi_def_cfa_offset 16
 564 0004 00AF     	 add r7,sp,#0
 565              	 .cfi_def_cfa_register 7
 330:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;
 331:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 332:../Libraries/XMCLib/src/xmc_usbd.c **** 
 333:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 566              	 .loc 1 333 0
 567 0006 0023     	 movs r3,#0
 568 0008 3B60     	 str r3,[r7]
 334:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.rxfflsh = 1U;
 569              	 .loc 1 334 0
 570 000a 3B68     	 ldr r3,[r7]
 571 000c 43F01003 	 orr r3,r3,#16
 572 0010 3B60     	 str r3,[r7]
 335:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush FIFO */
 336:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 573              	 .loc 1 336 0
 574 0012 144B     	 ldr r3,.L39
 575 0014 D3F8A031 	 ldr r3,[r3,#416]
 576 0018 3A68     	 ldr r2,[r7]
 577 001a 1A61     	 str r2,[r3,#16]
 578              	.L37:
 337:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 338:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 339:../Libraries/XMCLib/src/xmc_usbd.c ****     for (count = 0U; count < 1000U; count++) {}
 579              	 .loc 1 339 0
 580 001c 0023     	 movs r3,#0
 581 001e 7B60     	 str r3,[r7,#4]
 582 0020 02E0     	 b .L35
 583              	.L36:
 584              	 .loc 1 339 0 is_stmt 0 discriminator 3
 585 0022 7B68     	 ldr r3,[r7,#4]
 586 0024 0133     	 adds r3,r3,#1
 587 0026 7B60     	 str r3,[r7,#4]
 588              	.L35:
 589              	 .loc 1 339 0 discriminator 1
 590 0028 7B68     	 ldr r3,[r7,#4]
 591 002a B3F57A7F 	 cmp r3,#1000
 592 002e F8D3     	 bcc .L36
 340:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 593              	 .loc 1 340 0 is_stmt 1
 594 0030 0C4B     	 ldr r3,.L39
 595 0032 D3F8A031 	 ldr r3,[r3,#416]
 596 0036 1B69     	 ldr r3,[r3,#16]
 597 0038 3B60     	 str r3,[r7]
 341:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 342:../Libraries/XMCLib/src/xmc_usbd.c ****   while (data.b.rxfflsh);
 598              	 .loc 1 342 0
 599 003a 3B68     	 ldr r3,[r7]
 600 003c 1B09     	 lsrs r3,r3,#4
 601 003e 03F00103 	 and r3,r3,#1
 602 0042 DBB2     	 uxtb r3,r3
 603 0044 002B     	 cmp r3,#0
 604 0046 E9D1     	 bne .L37
 343:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 605              	 .loc 1 343 0
 606 0048 0023     	 movs r3,#0
 607 004a 7B60     	 str r3,[r7,#4]
 344:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 608              	 .loc 1 344 0
 609 004c 00BF     	 nop
 610              	.L38:
 611              	 .loc 1 344 0 is_stmt 0 discriminator 1
 612 004e 7B68     	 ldr r3,[r7,#4]
 613 0050 5A1C     	 adds r2,r3,#1
 614 0052 7A60     	 str r2,[r7,#4]
 615 0054 B3F57A7F 	 cmp r3,#1000
 616 0058 F9D3     	 bcc .L38
 345:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 346:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 347:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 348:../Libraries/XMCLib/src/xmc_usbd.c **** }
 617              	 .loc 1 348 0 is_stmt 1
 618 005a 0C37     	 adds r7,r7,#12
 619              	 .cfi_def_cfa_offset 4
 620 005c BD46     	 mov sp,r7
 621              	 .cfi_def_cfa_register 13
 622              	 
 623 005e 5DF8047B 	 ldr r7,[sp],#4
 624              	 .cfi_restore 7
 625              	 .cfi_def_cfa_offset 0
 626 0062 7047     	 bx lr
 627              	.L40:
 628              	 .align 2
 629              	.L39:
 630 0064 00000000 	 .word xmc_device
 631              	 .cfi_endproc
 632              	.LFE178:
 634              	 .section .text.XMC_USBD_lAssignTXFifo,"ax",%progbits
 635              	 .align 2
 636              	 .thumb
 637              	 .thumb_func
 639              	XMC_USBD_lAssignTXFifo:
 640              	.LFB179:
 349:../Libraries/XMCLib/src/xmc_usbd.c **** 
 350:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 351:../Libraries/XMCLib/src/xmc_usbd.c ****  * Support Functions
 352:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 353:../Libraries/XMCLib/src/xmc_usbd.c **** 
 354:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 355:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Assign a free tx fifo
 356:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 357:../Libraries/XMCLib/src/xmc_usbd.c ****  * A free tx fifo will be searched and the number will be returned.
 358:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 359:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return Fifo number for a free fifo
 360:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 361:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void)
 362:../Libraries/XMCLib/src/xmc_usbd.c **** {
 641              	 .loc 1 362 0
 642              	 .cfi_startproc
 643              	 
 644              	 
 645              	 
 646 0000 80B4     	 push {r7}
 647              	 .cfi_def_cfa_offset 4
 648              	 .cfi_offset 7,-4
 649 0002 83B0     	 sub sp,sp,#12
 650              	 .cfi_def_cfa_offset 16
 651 0004 00AF     	 add r7,sp,#0
 652              	 .cfi_def_cfa_register 7
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask = 1U;
 653              	 .loc 1 363 0
 654 0006 0123     	 movs r3,#1
 655 0008 FB80     	 strh r3,[r7,#6]
 364:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 656              	 .loc 1 364 0
 657 000a 0023     	 movs r3,#0
 658 000c 7B71     	 strb r3,[r7,#5]
 365:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 659              	 .loc 1 365 0
 660 000e 0023     	 movs r3,#0
 661 0010 3B71     	 strb r3,[r7,#4]
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   while ( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS) && ((xmc_device.txfifomsk & mask) != 0U))
 662              	 .loc 1 366 0
 663 0012 05E0     	 b .L42
 664              	.L44:
 367:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 368:../Libraries/XMCLib/src/xmc_usbd.c ****     mask = (uint16_t)(mask << 1U);
 665              	 .loc 1 368 0
 666 0014 FB88     	 ldrh r3,[r7,#6]
 667 0016 5B00     	 lsls r3,r3,#1
 668 0018 FB80     	 strh r3,[r7,#6]
 369:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 669              	 .loc 1 369 0
 670 001a 7B79     	 ldrb r3,[r7,#5]
 671 001c 0133     	 adds r3,r3,#1
 672 001e 7B71     	 strb r3,[r7,#5]
 673              	.L42:
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   while ( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS) && ((xmc_device.txfifomsk & mask) != 0U))
 674              	 .loc 1 366 0
 675 0020 7B79     	 ldrb r3,[r7,#5]
 676 0022 062B     	 cmp r3,#6
 677 0024 07D8     	 bhi .L43
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   while ( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS) && ((xmc_device.txfifomsk & mask) != 0U))
 678              	 .loc 1 366 0 is_stmt 0 discriminator 1
 679 0026 114B     	 ldr r3,.L47
 680 0028 B3F8FC21 	 ldrh r2,[r3,#508]
 681 002c FB88     	 ldrh r3,[r7,#6]
 682 002e 1340     	 ands r3,r3,r2
 683 0030 9BB2     	 uxth r3,r3
 684 0032 002B     	 cmp r3,#0
 685 0034 EED1     	 bne .L44
 686              	.L43:
 370:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 371:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((xmc_device.txfifomsk & mask) == 0U)
 687              	 .loc 1 371 0 is_stmt 1
 688 0036 0D4B     	 ldr r3,.L47
 689 0038 B3F8FC21 	 ldrh r2,[r3,#508]
 690 003c FB88     	 ldrh r3,[r7,#6]
 691 003e 1340     	 ands r3,r3,r2
 692 0040 9BB2     	 uxth r3,r3
 693 0042 002B     	 cmp r3,#0
 694 0044 0AD1     	 bne .L45
 372:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 373:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.txfifomsk |= mask;
 695              	 .loc 1 373 0
 696 0046 094B     	 ldr r3,.L47
 697 0048 B3F8FC21 	 ldrh r2,[r3,#508]
 698 004c FB88     	 ldrh r3,[r7,#6]
 699 004e 1343     	 orrs r3,r3,r2
 700 0050 9AB2     	 uxth r2,r3
 701 0052 064B     	 ldr r3,.L47
 702 0054 A3F8FC21 	 strh r2,[r3,#508]
 374:../Libraries/XMCLib/src/xmc_usbd.c ****     result = i;
 703              	 .loc 1 374 0
 704 0058 7B79     	 ldrb r3,[r7,#5]
 705 005a 3B71     	 strb r3,[r7,#4]
 706              	.L45:
 375:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 376:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 707              	 .loc 1 376 0
 708 005c 3B79     	 ldrb r3,[r7,#4]
 377:../Libraries/XMCLib/src/xmc_usbd.c **** }
 709              	 .loc 1 377 0
 710 005e 1846     	 mov r0,r3
 711 0060 0C37     	 adds r7,r7,#12
 712              	 .cfi_def_cfa_offset 4
 713 0062 BD46     	 mov sp,r7
 714              	 .cfi_def_cfa_register 13
 715              	 
 716 0064 5DF8047B 	 ldr r7,[sp],#4
 717              	 .cfi_restore 7
 718              	 .cfi_def_cfa_offset 0
 719 0068 7047     	 bx lr
 720              	.L48:
 721 006a 00BF     	 .align 2
 722              	.L47:
 723 006c 00000000 	 .word xmc_device
 724              	 .cfi_endproc
 725              	.LFE179:
 727              	 .section .text.XMC_USBD_lUnassignFifo,"ax",%progbits
 728              	 .align 2
 729              	 .thumb
 730              	 .thumb_func
 732              	XMC_USBD_lUnassignFifo:
 733              	.LFB180:
 378:../Libraries/XMCLib/src/xmc_usbd.c **** 
 379:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 380:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Free a tx fifo
 381:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 382:../Libraries/XMCLib/src/xmc_usbd.c ****  * Mark an used tx fifo as free.
 383:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_nr Fifo number to free
 384:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 385:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr)
 386:../Libraries/XMCLib/src/xmc_usbd.c **** {
 734              	 .loc 1 386 0
 735              	 .cfi_startproc
 736              	 
 737              	 
 738              	 
 739 0000 80B4     	 push {r7}
 740              	 .cfi_def_cfa_offset 4
 741              	 .cfi_offset 7,-4
 742 0002 83B0     	 sub sp,sp,#12
 743              	 .cfi_def_cfa_offset 16
 744 0004 00AF     	 add r7,sp,#0
 745              	 .cfi_def_cfa_register 7
 746 0006 0346     	 mov r3,r0
 747 0008 FB71     	 strb r3,[r7,#7]
 387:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.txfifomsk = (uint16_t)((uint32_t)xmc_device.txfifomsk & (uint32_t)(~((uint32_t)((uint3
 748              	 .loc 1 387 0
 749 000a 0A4B     	 ldr r3,.L50
 750 000c B3F8FC21 	 ldrh r2,[r3,#508]
 751 0010 FB79     	 ldrb r3,[r7,#7]
 752 0012 0121     	 movs r1,#1
 753 0014 01FA03F3 	 lsl r3,r1,r3
 754 0018 9BB2     	 uxth r3,r3
 755 001a DB43     	 mvns r3,r3
 756 001c 9BB2     	 uxth r3,r3
 757 001e 1340     	 ands r3,r3,r2
 758 0020 9AB2     	 uxth r2,r3
 759 0022 044B     	 ldr r3,.L50
 760 0024 A3F8FC21 	 strh r2,[r3,#508]
 388:../Libraries/XMCLib/src/xmc_usbd.c **** }
 761              	 .loc 1 388 0
 762 0028 0C37     	 adds r7,r7,#12
 763              	 .cfi_def_cfa_offset 4
 764 002a BD46     	 mov sp,r7
 765              	 .cfi_def_cfa_register 13
 766              	 
 767 002c 5DF8047B 	 ldr r7,[sp],#4
 768              	 .cfi_restore 7
 769              	 .cfi_def_cfa_offset 0
 770 0030 7047     	 bx lr
 771              	.L51:
 772 0032 00BF     	 .align 2
 773              	.L50:
 774 0034 00000000 	 .word xmc_device
 775              	 .cfi_endproc
 776              	.LFE180:
 778              	 .section .text.XMC_USBD_lStartReadXfer,"ax",%progbits
 779              	 .align 2
 780              	 .thumb
 781              	 .thumb_func
 783              	XMC_USBD_lStartReadXfer:
 784              	.LFB181:
 389:../Libraries/XMCLib/src/xmc_usbd.c **** 
 390:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 391:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a transfer for an out endpoint
 392:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 393:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint, the out endpoint registers will be programmed
 394:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new out transfer.
 395:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 396:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note No checking of the transfer values are done in this function. Be sure,
 397:../Libraries/XMCLib/src/xmc_usbd.c ****  * that the transfer values are reasonable (e.g. buffer size is not exceeded).
 398:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 399:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 400:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 401:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep)
 402:../Libraries/XMCLib/src/xmc_usbd.c **** {
 785              	 .loc 1 402 0
 786              	 .cfi_startproc
 787              	 
 788              	 
 789              	 
 790 0000 80B4     	 push {r7}
 791              	 .cfi_def_cfa_offset 4
 792              	 .cfi_offset 7,-4
 793 0002 87B0     	 sub sp,sp,#28
 794              	 .cfi_def_cfa_offset 32
 795 0004 00AF     	 add r7,sp,#0
 796              	 .cfi_def_cfa_register 7
 797 0006 7860     	 str r0,[r7,#4]
 403:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t data;
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 405:../Libraries/XMCLib/src/xmc_usbd.c **** 
 406:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 =  0U;
 798              	 .loc 1 406 0
 799 0008 0023     	 movs r3,#0
 800 000a 3B61     	 str r3,[r7,#16]
 407:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength) > ep->maxTransferSize)
 801              	 .loc 1 407 0
 802 000c 7B68     	 ldr r3,[r7,#4]
 803 000e 1A6B     	 ldr r2,[r3,#48]
 804 0010 7B68     	 ldr r3,[r7,#4]
 805 0012 9B6A     	 ldr r3,[r3,#40]
 806 0014 D31A     	 subs r3,r2,r3
 807 0016 7A68     	 ldr r2,[r7,#4]
 808 0018 9268     	 ldr r2,[r2,#8]
 809 001a C2F31202 	 ubfx r2,r2,#0,#19
 810 001e 9342     	 cmp r3,r2
 811 0020 09D9     	 bls .L53
 408:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 409:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 812              	 .loc 1 409 0
 813 0022 7B68     	 ldr r3,[r7,#4]
 814 0024 9B6A     	 ldr r3,[r3,#40]
 815 0026 7A68     	 ldr r2,[r7,#4]
 816 0028 9268     	 ldr r2,[r2,#8]
 817 002a C2F31202 	 ubfx r2,r2,#0,#19
 818 002e 1A44     	 add r2,r2,r3
 819 0030 7B68     	 ldr r3,[r7,#4]
 820 0032 9A62     	 str r2,[r3,#40]
 821 0034 03E0     	 b .L54
 822              	.L53:
 410:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 411:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 413:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 823              	 .loc 1 413 0
 824 0036 7B68     	 ldr r3,[r7,#4]
 825 0038 1A6B     	 ldr r2,[r3,#48]
 826 003a 7B68     	 ldr r3,[r7,#4]
 827 003c 9A62     	 str r2,[r3,#40]
 828              	.L54:
 414:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 415:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.number == 0U)
 829              	 .loc 1 415 0
 830 003e 7B68     	 ldr r3,[r7,#4]
 831 0040 1B78     	 ldrb r3,[r3]
 832 0042 03F00F03 	 and r3,r3,#15
 833 0046 DBB2     	 uxtb r3,r3
 834 0048 002B     	 cmp r3,#0
 835 004a 19D1     	 bne .L55
 836              	.LBB2:
 416:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 417:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Setup the endpoint to receive 3 setup packages and one normal package.*/
 418:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Cast the data pointer to use only one variable */
 419:../Libraries/XMCLib/src/xmc_usbd.c ****     deptsiz0_data_t *ep0_data = (deptsiz0_data_t *)&data;
 837              	 .loc 1 419 0
 838 004c 07F11003 	 add r3,r7,#16
 839 0050 7B61     	 str r3,[r7,#20]
 420:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.pktcnt = 0x1U;
 840              	 .loc 1 420 0
 841 0052 7A69     	 ldr r2,[r7,#20]
 842 0054 9378     	 ldrb r3,[r2,#2]
 843 0056 0121     	 movs r1,#1
 844 0058 61F3C403 	 bfi r3,r1,#3,#2
 845 005c 9370     	 strb r3,[r2,#2]
 421:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.supcnt = 0x3U;
 846              	 .loc 1 421 0
 847 005e 7A69     	 ldr r2,[r7,#20]
 848 0060 D378     	 ldrb r3,[r2,#3]
 849 0062 43F06003 	 orr r3,r3,#96
 850 0066 D370     	 strb r3,[r2,#3]
 422:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.xfersize = (uint8_t)ep->xferTotal;
 851              	 .loc 1 422 0
 852 0068 7B68     	 ldr r3,[r7,#4]
 853 006a 1B6B     	 ldr r3,[r3,#48]
 854 006c DBB2     	 uxtb r3,r3
 855 006e 03F07F03 	 and r3,r3,#127
 856 0072 D9B2     	 uxtb r1,r3
 857 0074 7A69     	 ldr r2,[r7,#20]
 858 0076 1378     	 ldrb r3,[r2]
 859 0078 61F30603 	 bfi r3,r1,#0,#7
 860 007c 1370     	 strb r3,[r2]
 861              	.LBE2:
 862 007e 33E0     	 b .L56
 863              	.L55:
 423:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 424:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 425:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 426:../Libraries/XMCLib/src/xmc_usbd.c ****     /* If requested length is zero, just receive one zero length packet */
 427:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->xferLength == 0U)
 864              	 .loc 1 427 0
 865 0080 7B68     	 ldr r3,[r7,#4]
 866 0082 9B6A     	 ldr r3,[r3,#40]
 867 0084 002B     	 cmp r3,#0
 868 0086 09D1     	 bne .L57
 428:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 429:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = 0U;
 869              	 .loc 1 429 0
 870 0088 3B69     	 ldr r3,[r7,#16]
 871 008a 6FF31203 	 bfc r3,#0,#19
 872 008e 3B61     	 str r3,[r7,#16]
 430:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = 1U;
 873              	 .loc 1 430 0
 874 0090 7B8A     	 ldrh r3,[r7,#18]
 875 0092 0122     	 movs r2,#1
 876 0094 62F3CC03 	 bfi r3,r2,#3,#10
 877 0098 7B82     	 strh r3,[r7,#18]
 878 009a 25E0     	 b .L56
 879              	.L57:
 431:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 432:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 433:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 434:../Libraries/XMCLib/src/xmc_usbd.c ****       /* setup endpoint to recive a amount of packages by given size */
 435:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = (uint16_t)(((ep->xferLength - ep->xferCount) + (ep->maxPacketSize - (uint32_t
 880              	 .loc 1 435 0
 881 009c 7B68     	 ldr r3,[r7,#4]
 882 009e 9A6A     	 ldr r2,[r3,#40]
 883 00a0 7B68     	 ldr r3,[r7,#4]
 884 00a2 DB6A     	 ldr r3,[r3,#44]
 885 00a4 D31A     	 subs r3,r2,r3
 886 00a6 7A68     	 ldr r2,[r7,#4]
 887 00a8 5268     	 ldr r2,[r2,#4]
 888 00aa C2F3C622 	 ubfx r2,r2,#11,#7
 889 00ae D2B2     	 uxtb r2,r2
 890 00b0 1344     	 add r3,r3,r2
 891 00b2 013B     	 subs r3,r3,#1
 892 00b4 7A68     	 ldr r2,[r7,#4]
 893 00b6 5268     	 ldr r2,[r2,#4]
 894 00b8 C2F3C622 	 ubfx r2,r2,#11,#7
 895 00bc D2B2     	 uxtb r2,r2
 896 00be B3FBF2F3 	 udiv r3,r3,r2
 897 00c2 9BB2     	 uxth r3,r3
 898 00c4 C3F30903 	 ubfx r3,r3,#0,#10
 899 00c8 9AB2     	 uxth r2,r3
 900 00ca 7B8A     	 ldrh r3,[r7,#18]
 901 00cc 62F3CC03 	 bfi r3,r2,#3,#10
 902 00d0 7B82     	 strh r3,[r7,#18]
 436:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 903              	 .loc 1 436 0
 904 00d2 7B68     	 ldr r3,[r7,#4]
 905 00d4 9A6A     	 ldr r2,[r3,#40]
 906 00d6 7B68     	 ldr r3,[r7,#4]
 907 00d8 DB6A     	 ldr r3,[r3,#44]
 908 00da D31A     	 subs r3,r2,r3
 909 00dc C3F31202 	 ubfx r2,r3,#0,#19
 910 00e0 3B69     	 ldr r3,[r7,#16]
 911 00e2 62F31203 	 bfi r3,r2,#0,#19
 912 00e6 3B61     	 str r3,[r7,#16]
 913              	.L56:
 437:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 438:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 439:../Libraries/XMCLib/src/xmc_usbd.c ****   if (usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 914              	 .loc 1 439 0
 915 00e8 214B     	 ldr r3,.L59
 916 00ea 1B68     	 ldr r3,[r3]
 917 00ec 5B7B     	 ldrb r3,[r3,#13]
 918 00ee 002B     	 cmp r3,#0
 919 00f0 0CD1     	 bne .L58
 440:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 441:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Programm dma address if needed */
 442:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepdma = (uint32_t)(ep->xfe
 920              	 .loc 1 442 0
 921 00f2 7B68     	 ldr r3,[r7,#4]
 922 00f4 1B78     	 ldrb r3,[r3]
 923 00f6 C3F30303 	 ubfx r3,r3,#0,#4
 924 00fa DBB2     	 uxtb r3,r3
 925 00fc 1D4A     	 ldr r2,.L59+4
 926 00fe 7033     	 adds r3,r3,#112
 927 0100 9B00     	 lsls r3,r3,#2
 928 0102 1344     	 add r3,r3,r2
 929 0104 5B68     	 ldr r3,[r3,#4]
 930 0106 7A68     	 ldr r2,[r7,#4]
 931 0108 526A     	 ldr r2,[r2,#36]
 932 010a 5A61     	 str r2,[r3,#20]
 933              	.L58:
 443:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 444:../Libraries/XMCLib/src/xmc_usbd.c ****   /* setup endpoint size and enable endpoint */
 445:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doeptsiz = data.d32;
 934              	 .loc 1 445 0
 935 010c 7B68     	 ldr r3,[r7,#4]
 936 010e 1B78     	 ldrb r3,[r3]
 937 0110 C3F30303 	 ubfx r3,r3,#0,#4
 938 0114 DBB2     	 uxtb r3,r3
 939 0116 174A     	 ldr r2,.L59+4
 940 0118 7033     	 adds r3,r3,#112
 941 011a 9B00     	 lsls r3,r3,#2
 942 011c 1344     	 add r3,r3,r2
 943 011e 5B68     	 ldr r3,[r3,#4]
 944 0120 3A69     	 ldr r2,[r7,#16]
 945 0122 1A61     	 str r2,[r3,#16]
 446:../Libraries/XMCLib/src/xmc_usbd.c **** 
 447:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 946              	 .loc 1 447 0
 947 0124 7B68     	 ldr r3,[r7,#4]
 948 0126 1B78     	 ldrb r3,[r3]
 949 0128 C3F30303 	 ubfx r3,r3,#0,#4
 950 012c DBB2     	 uxtb r3,r3
 951 012e 114A     	 ldr r2,.L59+4
 952 0130 7033     	 adds r3,r3,#112
 953 0132 9B00     	 lsls r3,r3,#2
 954 0134 1344     	 add r3,r3,r2
 955 0136 5B68     	 ldr r3,[r3,#4]
 956 0138 1B68     	 ldr r3,[r3]
 957 013a FB60     	 str r3,[r7,#12]
 448:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.cnak = 1U;
 958              	 .loc 1 448 0
 959 013c FB7B     	 ldrb r3,[r7,#15]
 960 013e 43F00403 	 orr r3,r3,#4
 961 0142 FB73     	 strb r3,[r7,#15]
 449:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.epena = 1U;
 962              	 .loc 1 449 0
 963 0144 FB7B     	 ldrb r3,[r7,#15]
 964 0146 43F08003 	 orr r3,r3,#128
 965 014a FB73     	 strb r3,[r7,#15]
 450:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = epctl.d32;
 966              	 .loc 1 450 0
 967 014c 7B68     	 ldr r3,[r7,#4]
 968 014e 1B78     	 ldrb r3,[r3]
 969 0150 C3F30303 	 ubfx r3,r3,#0,#4
 970 0154 DBB2     	 uxtb r3,r3
 971 0156 074A     	 ldr r2,.L59+4
 972 0158 7033     	 adds r3,r3,#112
 973 015a 9B00     	 lsls r3,r3,#2
 974 015c 1344     	 add r3,r3,r2
 975 015e 5B68     	 ldr r3,[r3,#4]
 976 0160 FA68     	 ldr r2,[r7,#12]
 977 0162 1A60     	 str r2,[r3]
 451:../Libraries/XMCLib/src/xmc_usbd.c **** }
 978              	 .loc 1 451 0
 979 0164 1C37     	 adds r7,r7,#28
 980              	 .cfi_def_cfa_offset 4
 981 0166 BD46     	 mov sp,r7
 982              	 .cfi_def_cfa_register 13
 983              	 
 984 0168 5DF8047B 	 ldr r7,[sp],#4
 985              	 .cfi_restore 7
 986              	 .cfi_def_cfa_offset 0
 987 016c 7047     	 bx lr
 988              	.L60:
 989 016e 00BF     	 .align 2
 990              	.L59:
 991 0170 00000000 	 .word usbd_init
 992 0174 00000000 	 .word xmc_device
 993              	 .cfi_endproc
 994              	.LFE181:
 996              	 .section .text.XMC_USBD_lStartWriteXfer,"ax",%progbits
 997              	 .align 2
 998              	 .thumb
 999              	 .thumb_func
 1001              	XMC_USBD_lStartWriteXfer:
 1002              	.LFB182:
 452:../Libraries/XMCLib/src/xmc_usbd.c **** 
 453:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 454:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a new in transfer
 455:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 456:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint the in endpoint registers will be programmed
 457:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new in transfer
 458:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 459:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 460:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 461:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep)
 462:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1003              	 .loc 1 462 0
 1004              	 .cfi_startproc
 1005              	 
 1006              	 
 1007              	 
 1008 0000 80B4     	 push {r7}
 1009              	 .cfi_def_cfa_offset 4
 1010              	 .cfi_offset 7,-4
 1011 0002 85B0     	 sub sp,sp,#20
 1012              	 .cfi_def_cfa_offset 24
 1013 0004 00AF     	 add r7,sp,#0
 1014              	 .cfi_def_cfa_register 7
 1015 0006 7860     	 str r0,[r7,#4]
 463:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t size;
 464:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t ctl;
 465:../Libraries/XMCLib/src/xmc_usbd.c **** 
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   size.d32 = 0U;
 1016              	 .loc 1 466 0
 1017 0008 0023     	 movs r3,#0
 1018 000a FB60     	 str r3,[r7,#12]
 467:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 1019              	 .loc 1 467 0
 1020 000c 7B68     	 ldr r3,[r7,#4]
 1021 000e 1B78     	 ldrb r3,[r3]
 1022 0010 C3F30303 	 ubfx r3,r3,#0,#4
 1023 0014 DBB2     	 uxtb r3,r3
 1024 0016 5D4A     	 ldr r2,.L69
 1025 0018 6A33     	 adds r3,r3,#106
 1026 001a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1027 001e 1B68     	 ldr r3,[r3]
 1028 0020 BB60     	 str r3,[r7,#8]
 468:../Libraries/XMCLib/src/xmc_usbd.c **** 
 469:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength)  < ep->maxTransferSize)
 1029              	 .loc 1 469 0
 1030 0022 7B68     	 ldr r3,[r7,#4]
 1031 0024 1A6B     	 ldr r2,[r3,#48]
 1032 0026 7B68     	 ldr r3,[r7,#4]
 1033 0028 9B6A     	 ldr r3,[r3,#40]
 1034 002a D31A     	 subs r3,r2,r3
 1035 002c 7A68     	 ldr r2,[r7,#4]
 1036 002e 9268     	 ldr r2,[r2,#8]
 1037 0030 C2F31202 	 ubfx r2,r2,#0,#19
 1038 0034 9342     	 cmp r3,r2
 1039 0036 04D2     	 bcs .L62
 470:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 471:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 1040              	 .loc 1 471 0
 1041 0038 7B68     	 ldr r3,[r7,#4]
 1042 003a 1A6B     	 ldr r2,[r3,#48]
 1043 003c 7B68     	 ldr r3,[r7,#4]
 1044 003e 9A62     	 str r2,[r3,#40]
 1045 0040 08E0     	 b .L63
 1046              	.L62:
 472:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 473:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 474:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 475:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 1047              	 .loc 1 475 0
 1048 0042 7B68     	 ldr r3,[r7,#4]
 1049 0044 9B6A     	 ldr r3,[r3,#40]
 1050 0046 7A68     	 ldr r2,[r7,#4]
 1051 0048 9268     	 ldr r2,[r2,#8]
 1052 004a C2F31202 	 ubfx r2,r2,#0,#19
 1053 004e 1A44     	 add r2,r2,r3
 1054 0050 7B68     	 ldr r3,[r7,#4]
 1055 0052 9A62     	 str r2,[r3,#40]
 1056              	.L63:
 476:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 477:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->xferLength == 0U)
 1057              	 .loc 1 477 0
 1058 0054 7B68     	 ldr r3,[r7,#4]
 1059 0056 9B6A     	 ldr r3,[r3,#40]
 1060 0058 002B     	 cmp r3,#0
 1061 005a 09D1     	 bne .L64
 478:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 479:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.xfersize = 0U;
 1062              	 .loc 1 479 0
 1063 005c FB68     	 ldr r3,[r7,#12]
 1064 005e 6FF31203 	 bfc r3,#0,#19
 1065 0062 FB60     	 str r3,[r7,#12]
 480:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.pktcnt = 1U;
 1066              	 .loc 1 480 0
 1067 0064 FB89     	 ldrh r3,[r7,#14]
 1068 0066 0122     	 movs r2,#1
 1069 0068 62F3CC03 	 bfi r3,r2,#3,#10
 1070 006c FB81     	 strh r3,[r7,#14]
 1071 006e 6AE0     	 b .L65
 1072              	.L64:
 481:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 482:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 483:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 484:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->address_u.address_st.number == 0U)
 1073              	 .loc 1 484 0
 1074 0070 7B68     	 ldr r3,[r7,#4]
 1075 0072 1B78     	 ldrb r3,[r3]
 1076 0074 03F00F03 	 and r3,r3,#15
 1077 0078 DBB2     	 uxtb r3,r3
 1078 007a 002B     	 cmp r3,#0
 1079 007c 10D1     	 bne .L66
 485:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 486:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = 1U;
 1080              	 .loc 1 486 0
 1081 007e FB89     	 ldrh r3,[r7,#14]
 1082 0080 0122     	 movs r2,#1
 1083 0082 62F3CC03 	 bfi r3,r2,#3,#10
 1084 0086 FB81     	 strh r3,[r7,#14]
 487:../Libraries/XMCLib/src/xmc_usbd.c ****       /* ep->maxXferSize equals maxPacketSize */
 488:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 1085              	 .loc 1 488 0
 1086 0088 7B68     	 ldr r3,[r7,#4]
 1087 008a 9A6A     	 ldr r2,[r3,#40]
 1088 008c 7B68     	 ldr r3,[r7,#4]
 1089 008e DB6A     	 ldr r3,[r3,#44]
 1090 0090 D31A     	 subs r3,r2,r3
 1091 0092 C3F31202 	 ubfx r2,r3,#0,#19
 1092 0096 FB68     	 ldr r3,[r7,#12]
 1093 0098 62F31203 	 bfi r3,r2,#0,#19
 1094 009c FB60     	 str r3,[r7,#12]
 1095 009e 2BE0     	 b .L67
 1096              	.L66:
 489:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 490:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 491:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 492:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 1097              	 .loc 1 492 0
 1098 00a0 7B68     	 ldr r3,[r7,#4]
 1099 00a2 9A6A     	 ldr r2,[r3,#40]
 1100 00a4 7B68     	 ldr r3,[r7,#4]
 1101 00a6 DB6A     	 ldr r3,[r3,#44]
 1102 00a8 D31A     	 subs r3,r2,r3
 1103 00aa C3F31202 	 ubfx r2,r3,#0,#19
 1104 00ae FB68     	 ldr r3,[r7,#12]
 1105 00b0 62F31203 	 bfi r3,r2,#0,#19
 1106 00b4 FB60     	 str r3,[r7,#12]
 493:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1107              	 .loc 1 493 0
 1108 00b6 7B68     	 ldr r3,[r7,#4]
 1109 00b8 9B6A     	 ldr r3,[r3,#40]
 1110 00ba 9AB2     	 uxth r2,r3
 1111 00bc 7B68     	 ldr r3,[r7,#4]
 1112 00be DB6A     	 ldr r3,[r3,#44]
 1113 00c0 9BB2     	 uxth r3,r3
 1114 00c2 D31A     	 subs r3,r2,r3
 1115 00c4 9BB2     	 uxth r3,r3
 1116 00c6 1A46     	 mov r2,r3
 1117 00c8 7B68     	 ldr r3,[r7,#4]
 1118 00ca 5B68     	 ldr r3,[r3,#4]
 1119 00cc C3F3C623 	 ubfx r3,r3,#11,#7
 1120 00d0 DBB2     	 uxtb r3,r3
 1121 00d2 9BB2     	 uxth r3,r3
 1122 00d4 013B     	 subs r3,r3,#1
 1123 00d6 9BB2     	 uxth r3,r3
 1124 00d8 1344     	 add r3,r3,r2
 494:../Libraries/XMCLib/src/xmc_usbd.c ****                                  ep->maxPacketSize);
 1125              	 .loc 1 494 0
 1126 00da 7A68     	 ldr r2,[r7,#4]
 1127 00dc 5268     	 ldr r2,[r2,#4]
 1128 00de C2F3C622 	 ubfx r2,r2,#11,#7
 1129 00e2 D2B2     	 uxtb r2,r2
 493:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1130              	 .loc 1 493 0
 1131 00e4 93FBF2F3 	 sdiv r3,r3,r2
 1132 00e8 9BB2     	 uxth r3,r3
 1133 00ea C3F30903 	 ubfx r3,r3,#0,#10
 1134 00ee 9AB2     	 uxth r2,r3
 1135 00f0 FB89     	 ldrh r3,[r7,#14]
 1136 00f2 62F3CC03 	 bfi r3,r2,#3,#10
 1137 00f6 FB81     	 strh r3,[r7,#14]
 1138              	.L67:
 495:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 496:../Libraries/XMCLib/src/xmc_usbd.c ****     if (usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1139              	 .loc 1 496 0
 1140 00f8 254B     	 ldr r3,.L69+4
 1141 00fa 1B68     	 ldr r3,[r3]
 1142 00fc 5B7B     	 ldrb r3,[r3,#13]
 1143 00fe 002B     	 cmp r3,#0
 1144 0100 0BD1     	 bne .L68
 497:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 498:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Program dma*/
 499:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepdma = (uint32_t)ep->xfe
 1145              	 .loc 1 499 0
 1146 0102 7B68     	 ldr r3,[r7,#4]
 1147 0104 1B78     	 ldrb r3,[r3]
 1148 0106 C3F30303 	 ubfx r3,r3,#0,#4
 1149 010a DBB2     	 uxtb r3,r3
 1150 010c 1F4A     	 ldr r2,.L69
 1151 010e 6A33     	 adds r3,r3,#106
 1152 0110 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1153 0114 7A68     	 ldr r2,[r7,#4]
 1154 0116 526A     	 ldr r2,[r2,#36]
 1155 0118 5A61     	 str r2,[r3,#20]
 1156              	.L68:
 500:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 501:../Libraries/XMCLib/src/xmc_usbd.c ****     if (usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1157              	 .loc 1 501 0
 1158 011a 1D4B     	 ldr r3,.L69+4
 1159 011c 1B68     	 ldr r3,[r3]
 1160 011e 5B7B     	 ldrb r3,[r3,#13]
 1161 0120 012B     	 cmp r3,#1
 1162 0122 10D1     	 bne .L65
 502:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 503:../Libraries/XMCLib/src/xmc_usbd.c ****       /* enable fifo empty interrupt */
 504:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.device_register->dtknqr4_fifoemptymsk |= (uint32_t)((uint32_t)1U << (uint8_t)ep->a
 1163              	 .loc 1 504 0
 1164 0124 194B     	 ldr r3,.L69
 1165 0126 D3F8A431 	 ldr r3,[r3,#420]
 1166 012a 184A     	 ldr r2,.L69
 1167 012c D2F8A421 	 ldr r2,[r2,#420]
 1168 0130 516B     	 ldr r1,[r2,#52]
 1169 0132 7A68     	 ldr r2,[r7,#4]
 1170 0134 1278     	 ldrb r2,[r2]
 1171 0136 C2F30302 	 ubfx r2,r2,#0,#4
 1172 013a D2B2     	 uxtb r2,r2
 1173 013c 1046     	 mov r0,r2
 1174 013e 0122     	 movs r2,#1
 1175 0140 8240     	 lsls r2,r2,r0
 1176 0142 0A43     	 orrs r2,r2,r1
 1177 0144 5A63     	 str r2,[r3,#52]
 1178              	.L65:
 505:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 507:../Libraries/XMCLib/src/xmc_usbd.c **** 
 508:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Program size of transfer and enable endpoint */
 509:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dieptsiz = size.d32;
 1179              	 .loc 1 509 0
 1180 0146 7B68     	 ldr r3,[r7,#4]
 1181 0148 1B78     	 ldrb r3,[r3]
 1182 014a C3F30303 	 ubfx r3,r3,#0,#4
 1183 014e DBB2     	 uxtb r3,r3
 1184 0150 0E4A     	 ldr r2,.L69
 1185 0152 6A33     	 adds r3,r3,#106
 1186 0154 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1187 0158 FA68     	 ldr r2,[r7,#12]
 1188 015a 1A61     	 str r2,[r3,#16]
 510:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 1189              	 .loc 1 510 0
 1190 015c FB7A     	 ldrb r3,[r7,#11]
 1191 015e 43F08003 	 orr r3,r3,#128
 1192 0162 FB72     	 strb r3,[r7,#11]
 511:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.cnak = 1U;
 1193              	 .loc 1 511 0
 1194 0164 FB7A     	 ldrb r3,[r7,#11]
 1195 0166 43F00403 	 orr r3,r3,#4
 1196 016a FB72     	 strb r3,[r7,#11]
 512:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = ctl.d32;
 1197              	 .loc 1 512 0
 1198 016c 7B68     	 ldr r3,[r7,#4]
 1199 016e 1B78     	 ldrb r3,[r3]
 1200 0170 C3F30303 	 ubfx r3,r3,#0,#4
 1201 0174 DBB2     	 uxtb r3,r3
 1202 0176 054A     	 ldr r2,.L69
 1203 0178 6A33     	 adds r3,r3,#106
 1204 017a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1205 017e BA68     	 ldr r2,[r7,#8]
 1206 0180 1A60     	 str r2,[r3]
 513:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1207              	 .loc 1 513 0
 1208 0182 1437     	 adds r7,r7,#20
 1209              	 .cfi_def_cfa_offset 4
 1210 0184 BD46     	 mov sp,r7
 1211              	 .cfi_def_cfa_register 13
 1212              	 
 1213 0186 5DF8047B 	 ldr r7,[sp],#4
 1214              	 .cfi_restore 7
 1215              	 .cfi_def_cfa_offset 0
 1216 018a 7047     	 bx lr
 1217              	.L70:
 1218              	 .align 2
 1219              	.L69:
 1220 018c 00000000 	 .word xmc_device
 1221 0190 00000000 	 .word usbd_init
 1222              	 .cfi_endproc
 1223              	.LFE182:
 1225              	 .section .text.XMC_USBD_lHandleUSBReset,"ax",%progbits
 1226              	 .align 2
 1227              	 .thumb
 1228              	 .thumb_func
 1230              	XMC_USBD_lHandleUSBReset:
 1231              	.LFB183:
 514:../Libraries/XMCLib/src/xmc_usbd.c **** 
 515:../Libraries/XMCLib/src/xmc_usbd.c **** 
 516:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 517:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles the USBD reset interrupt
 518:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 519:../Libraries/XMCLib/src/xmc_usbd.c ****  * When ever the host sets the bus into reset condition the usb otg_core generates
 520:../Libraries/XMCLib/src/xmc_usbd.c ****  * an interrupt, which is handled by this function. It resets the complete otg_core
 521:../Libraries/XMCLib/src/xmc_usbd.c ****  * into the default state.
 522:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 523:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj)
 524:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1232              	 .loc 1 524 0
 1233              	 .cfi_startproc
 1234              	 
 1235              	 
 1236 0000 80B5     	 push {r7,lr}
 1237              	 .cfi_def_cfa_offset 8
 1238              	 .cfi_offset 7,-8
 1239              	 .cfi_offset 14,-4
 1240 0002 88B0     	 sub sp,sp,#32
 1241              	 .cfi_def_cfa_offset 40
 1242 0004 00AF     	 add r7,sp,#0
 1243              	 .cfi_def_cfa_register 7
 1244 0006 7860     	 str r0,[r7,#4]
 525:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 526:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 527:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
 528:../Libraries/XMCLib/src/xmc_usbd.c ****   fifosize_data_t gnptxfsiz;
 529:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
 531:../Libraries/XMCLib/src/xmc_usbd.c **** 
 532:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear the Remote Wakeup Signaling */
 533:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 1245              	 .loc 1 533 0
 1246 0008 4F4B     	 ldr r3,.L77
 1247 000a D3F8A431 	 ldr r3,[r3,#420]
 1248 000e 5B68     	 ldr r3,[r3,#4]
 1249 0010 7B61     	 str r3,[r7,#20]
 534:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 1250              	 .loc 1 534 0
 1251 0012 3B7D     	 ldrb r3,[r7,#20]
 1252 0014 43F00103 	 orr r3,r3,#1
 1253 0018 3B75     	 strb r3,[r7,#20]
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 1254              	 .loc 1 535 0
 1255 001a 4B4B     	 ldr r3,.L77
 1256 001c D3F8A431 	 ldr r3,[r3,#420]
 1257 0020 7A69     	 ldr r2,[r7,#20]
 1258 0022 5A60     	 str r2,[r3,#4]
 536:../Libraries/XMCLib/src/xmc_usbd.c **** 
 537:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable naks for all eps */
 538:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)XMC_USBD_NUM_EPS; i++)
 1259              	 .loc 1 538 0
 1260 0024 0023     	 movs r3,#0
 1261 0026 FB61     	 str r3,[r7,#28]
 1262 0028 1AE0     	 b .L72
 1263              	.L73:
 539:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 540:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.d32 = xmc_device.endpoint_out_register[i]->doepctl;
 1264              	 .loc 1 540 0 discriminator 3
 1265 002a 474A     	 ldr r2,.L77
 1266 002c FB69     	 ldr r3,[r7,#28]
 1267 002e 7033     	 adds r3,r3,#112
 1268 0030 9B00     	 lsls r3,r3,#2
 1269 0032 1344     	 add r3,r3,r2
 1270 0034 5B68     	 ldr r3,[r3,#4]
 1271 0036 1B68     	 ldr r3,[r3]
 1272 0038 BB61     	 str r3,[r7,#24]
 541:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.b.snak = 1U;
 1273              	 .loc 1 541 0 discriminator 3
 1274 003a FB7E     	 ldrb r3,[r7,#27]
 1275 003c 43F00803 	 orr r3,r3,#8
 1276 0040 FB76     	 strb r3,[r7,#27]
 542:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.b.stall = 0U;
 1277              	 .loc 1 542 0 discriminator 3
 1278 0042 BB7E     	 ldrb r3,[r7,#26]
 1279 0044 6FF34513 	 bfc r3,#5,#1
 1280 0048 BB76     	 strb r3,[r7,#26]
 543:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 1281              	 .loc 1 543 0 discriminator 3
 1282 004a 3F4A     	 ldr r2,.L77
 1283 004c FB69     	 ldr r3,[r7,#28]
 1284 004e 7033     	 adds r3,r3,#112
 1285 0050 9B00     	 lsls r3,r3,#2
 1286 0052 1344     	 add r3,r3,r2
 1287 0054 5B68     	 ldr r3,[r3,#4]
 1288 0056 BA69     	 ldr r2,[r7,#24]
 1289 0058 1A60     	 str r2,[r3]
 538:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1290              	 .loc 1 538 0 discriminator 3
 1291 005a FB69     	 ldr r3,[r7,#28]
 1292 005c 0133     	 adds r3,r3,#1
 1293 005e FB61     	 str r3,[r7,#28]
 1294              	.L72:
 538:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1295              	 .loc 1 538 0 is_stmt 0 discriminator 1
 1296 0060 FB69     	 ldr r3,[r7,#28]
 1297 0062 062B     	 cmp r3,#6
 1298 0064 E1D9     	 bls .L73
 544:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 545:../Libraries/XMCLib/src/xmc_usbd.c **** 
 546:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Configure fifos */
 547:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the rx fifo */
 548:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grxfsiz = 64U;
 1299              	 .loc 1 548 0 is_stmt 1
 1300 0066 384B     	 ldr r3,.L77
 1301 0068 D3F8A031 	 ldr r3,[r3,#416]
 1302 006c 4022     	 movs r2,#64
 1303 006e 5A62     	 str r2,[r3,#36]
 549:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */
 550:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.d32 = 0U;
 1304              	 .loc 1 550 0
 1305 0070 0023     	 movs r3,#0
 1306 0072 3B61     	 str r3,[r7,#16]
 551:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.depth = 16U;
 1307              	 .loc 1 551 0
 1308 0074 1023     	 movs r3,#16
 1309 0076 7B82     	 strh r3,[r7,#18]
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 1310              	 .loc 1 552 0
 1311 0078 4023     	 movs r3,#64
 1312 007a 3B82     	 strh r3,[r7,#16]
 553:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 1313              	 .loc 1 553 0
 1314 007c 324B     	 ldr r3,.L77
 1315 007e D3F8A031 	 ldr r3,[r3,#416]
 1316 0082 3A69     	 ldr r2,[r7,#16]
 1317 0084 9A62     	 str r2,[r3,#40]
 554:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 1U; i < (uint8_t)XMC_USBD_NUM_TX_FIFOS; i++)
 1318              	 .loc 1 555 0
 1319 0086 0123     	 movs r3,#1
 1320 0088 FB61     	 str r3,[r7,#28]
 1321 008a 11E0     	 b .L74
 1322              	.L75:
 556:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 557:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.global_register->dtxfsiz[i - 1U] = (uint32_t)(((256U + (i * (64U))) / 4U) | ((uint32
 1323              	 .loc 1 557 0 discriminator 3
 1324 008c 2E4B     	 ldr r3,.L77
 1325 008e D3F8A011 	 ldr r1,[r3,#416]
 1326 0092 FB69     	 ldr r3,[r7,#28]
 1327 0094 013B     	 subs r3,r3,#1
 1328 0096 FA69     	 ldr r2,[r7,#28]
 1329 0098 0432     	 adds r2,r2,#4
 1330 009a 9201     	 lsls r2,r2,#6
 1331 009c 9208     	 lsrs r2,r2,#2
 1332 009e 42F48012 	 orr r2,r2,#1048576
 1333 00a2 4033     	 adds r3,r3,#64
 1334 00a4 9B00     	 lsls r3,r3,#2
 1335 00a6 0B44     	 add r3,r3,r1
 1336 00a8 5A60     	 str r2,[r3,#4]
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1337              	 .loc 1 555 0 discriminator 3
 1338 00aa FB69     	 ldr r3,[r7,#28]
 1339 00ac 0133     	 adds r3,r3,#1
 1340 00ae FB61     	 str r3,[r7,#28]
 1341              	.L74:
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1342              	 .loc 1 555 0 is_stmt 0 discriminator 1
 1343 00b0 FB69     	 ldr r3,[r7,#28]
 1344 00b2 062B     	 cmp r3,#6
 1345 00b4 EAD9     	 bls .L75
 558:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 559:../Libraries/XMCLib/src/xmc_usbd.c **** 
 560:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 561:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x10U); /* 0x10 == all fifos, see doc */
 1346              	 .loc 1 561 0 is_stmt 1
 1347 00b6 1020     	 movs r0,#16
 1348 00b8 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 562:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x0U);
 1349              	 .loc 1 562 0
 1350 00bc 0020     	 movs r0,#0
 1351 00be FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 563:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 1352              	 .loc 1 563 0
 1353 00c2 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
 564:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Flush learning queue not needed due to fifo config */
 565:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable ep0 interrupts */
 566:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = 0U;
 1354              	 .loc 1 566 0
 1355 00c6 0023     	 movs r3,#0
 1356 00c8 FB60     	 str r3,[r7,#12]
 567:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.inep0 = 1U;
 1357              	 .loc 1 567 0
 1358 00ca 3B7B     	 ldrb r3,[r7,#12]
 1359 00cc 43F00103 	 orr r3,r3,#1
 1360 00d0 3B73     	 strb r3,[r7,#12]
 568:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.outep0 = 1U;
 1361              	 .loc 1 568 0
 1362 00d2 BB7B     	 ldrb r3,[r7,#14]
 1363 00d4 43F00103 	 orr r3,r3,#1
 1364 00d8 BB73     	 strb r3,[r7,#14]
 569:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daint.d32;
 1365              	 .loc 1 569 0
 1366 00da 1B4B     	 ldr r3,.L77
 1367 00dc D3F8A431 	 ldr r3,[r3,#420]
 1368 00e0 FA68     	 ldr r2,[r7,#12]
 1369 00e2 DA61     	 str r2,[r3,#28]
 570:../Libraries/XMCLib/src/xmc_usbd.c **** 
 571:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable endpoint interrupts */
 572:../Libraries/XMCLib/src/xmc_usbd.c ****   /* out ep interrupts */
 573:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventOUTEP(((uint32_t)XMC_USBD_EVENT_OUT_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_
 1370              	 .loc 1 573 0
 1371 00e4 0F20     	 movs r0,#15
 1372 00e6 FFF7FEFF 	 bl XMC_USBD_EnableEventOUTEP
 574:../Libraries/XMCLib/src/xmc_usbd.c ****                              (uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP | (uint32_t)XMC_USBD_EVENT_OUT_E
 575:../Libraries/XMCLib/src/xmc_usbd.c **** 
 576:../Libraries/XMCLib/src/xmc_usbd.c ****   /*in ep interrupts */
 577:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventINEP(((uint32_t)XMC_USBD_EVENT_IN_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_IN
 1373              	 .loc 1 577 0
 1374 00ea 0F20     	 movs r0,#15
 1375 00ec FFF7FEFF 	 bl XMC_USBD_EnableEventINEP
 578:../Libraries/XMCLib/src/xmc_usbd.c ****                             (uint32_t)XMC_USBD_EVENT_IN_EP_AHB_ERROR | (uint32_t)XMC_USBD_EVENT_IN_
 579:../Libraries/XMCLib/src/xmc_usbd.c **** 
 580:../Libraries/XMCLib/src/xmc_usbd.c **** 
 581:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear device Address */
 582:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 1376              	 .loc 1 582 0
 1377 00f0 154B     	 ldr r3,.L77
 1378 00f2 D3F8A431 	 ldr r3,[r3,#420]
 1379 00f6 1B68     	 ldr r3,[r3]
 1380 00f8 BB60     	 str r3,[r7,#8]
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 1381              	 .loc 1 583 0
 1382 00fa 3B89     	 ldrh r3,[r7,#8]
 1383 00fc 6FF30A13 	 bfc r3,#4,#7
 1384 0100 3B81     	 strh r3,[r7,#8]
 584:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 1385              	 .loc 1 584 0
 1386 0102 114B     	 ldr r3,.L77
 1387 0104 D3F8A431 	 ldr r3,[r3,#420]
 1388 0108 BA68     	 ldr r2,[r7,#8]
 1389 010a 1A60     	 str r2,[r3]
 585:../Libraries/XMCLib/src/xmc_usbd.c **** 
 586:../Libraries/XMCLib/src/xmc_usbd.c ****   if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1390              	 .loc 1 586 0
 1391 010c 7B68     	 ldr r3,[r7,#4]
 1392 010e 5B7B     	 ldrb r3,[r3,#13]
 1393 0110 012B     	 cmp r3,#1
 1394 0112 04D1     	 bne .L76
 587:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 588:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Clear Empty interrupt */
 589:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dtknqr4_fifoemptymsk = 0U;
 1395              	 .loc 1 589 0
 1396 0114 0C4B     	 ldr r3,.L77
 1397 0116 D3F8A431 	 ldr r3,[r3,#420]
 1398 011a 0022     	 movs r2,#0
 1399 011c 5A63     	 str r2,[r3,#52]
 1400              	.L76:
 590:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 591:../Libraries/XMCLib/src/xmc_usbd.c **** 
 592:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].outInUse = 0U;
 1401              	 .loc 1 592 0
 1402 011e 0A4B     	 ldr r3,.L77
 1403 0120 5A68     	 ldr r2,[r3,#4]
 1404 0122 22F01002 	 bic r2,r2,#16
 1405 0126 5A60     	 str r2,[r3,#4]
 593:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 1406              	 .loc 1 593 0
 1407 0128 074B     	 ldr r3,.L77
 1408 012a 5A68     	 ldr r2,[r3,#4]
 1409 012c 22F00802 	 bic r2,r2,#8
 1410 0130 5A60     	 str r2,[r3,#4]
 594:../Libraries/XMCLib/src/xmc_usbd.c **** 
 595:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_RESET);
 1411              	 .loc 1 595 0
 1412 0132 054B     	 ldr r3,.L77
 1413 0134 D3F80032 	 ldr r3,[r3,#512]
 1414 0138 0420     	 movs r0,#4
 1415 013a 9847     	 blx r3
 596:../Libraries/XMCLib/src/xmc_usbd.c **** 
 597:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear reset intr */
 598:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_RESET);
 1416              	 .loc 1 598 0
 1417 013c 0420     	 movs r0,#4
 1418 013e FFF7FEFF 	 bl XMC_USBD_ClearEvent
 599:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1419              	 .loc 1 599 0
 1420 0142 2037     	 adds r7,r7,#32
 1421              	 .cfi_def_cfa_offset 8
 1422 0144 BD46     	 mov sp,r7
 1423              	 .cfi_def_cfa_register 13
 1424              	 
 1425 0146 80BD     	 pop {r7,pc}
 1426              	.L78:
 1427              	 .align 2
 1428              	.L77:
 1429 0148 00000000 	 .word xmc_device
 1430              	 .cfi_endproc
 1431              	.LFE183:
 1433              	 .section .text.XMC_USBD_lHandleOTGInt,"ax",%progbits
 1434              	 .align 2
 1435              	 .thumb
 1436              	 .thumb_func
 1438              	XMC_USBD_lHandleOTGInt:
 1439              	.LFB184:
 600:../Libraries/XMCLib/src/xmc_usbd.c **** 
 601:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 602:../Libraries/XMCLib/src/xmc_usbd.c **** * @brief Handle OTG Interrupt
 603:../Libraries/XMCLib/src/xmc_usbd.c **** *
 604:../Libraries/XMCLib/src/xmc_usbd.c **** * It detects especially connect and disconnect events.
 605:../Libraries/XMCLib/src/xmc_usbd.c **** */
 606:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void)
 607:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1440              	 .loc 1 607 0
 1441              	 .cfi_startproc
 1442              	 
 1443              	 
 1444 0000 80B5     	 push {r7,lr}
 1445              	 .cfi_def_cfa_offset 8
 1446              	 .cfi_offset 7,-8
 1447              	 .cfi_offset 14,-4
 1448 0002 82B0     	 sub sp,sp,#8
 1449              	 .cfi_def_cfa_offset 16
 1450 0004 00AF     	 add r7,sp,#0
 1451              	 .cfi_def_cfa_register 7
 608:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t data;
 609:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gotgint;
 1452              	 .loc 1 609 0
 1453 0006 0F4B     	 ldr r3,.L81
 1454 0008 D3F8A031 	 ldr r3,[r3,#416]
 1455 000c 5B68     	 ldr r3,[r3,#4]
 1456 000e 7B60     	 str r3,[r7,#4]
 610:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 1457              	 .loc 1 610 0
 1458 0010 3B79     	 ldrb r3,[r7,#4]
 1459 0012 03F00403 	 and r3,r3,#4
 1460 0016 DBB2     	 uxtb r3,r3
 1461 0018 002B     	 cmp r3,#0
 1462 001a 0BD0     	 beq .L80
 611:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 612:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 0U;
 1463              	 .loc 1 612 0
 1464 001c 094A     	 ldr r2,.L81
 1465 001e 92F8FE31 	 ldrb r3,[r2,#510]
 1466 0022 6FF38203 	 bfc r3,#2,#1
 1467 0026 82F8FE31 	 strb r3,[r2,#510]
 613:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 1468              	 .loc 1 613 0
 1469 002a 064B     	 ldr r3,.L81
 1470 002c D3F80032 	 ldr r3,[r3,#512]
 1471 0030 0120     	 movs r0,#1
 1472 0032 9847     	 blx r3
 1473              	.L80:
 614:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 615:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lClearEventOTG(data.d32);
 1474              	 .loc 1 615 0
 1475 0034 7B68     	 ldr r3,[r7,#4]
 1476 0036 1846     	 mov r0,r3
 1477 0038 FFF7FEFF 	 bl XMC_USBD_lClearEventOTG
 616:../Libraries/XMCLib/src/xmc_usbd.c **** 
 617:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1478              	 .loc 1 617 0
 1479 003c 0837     	 adds r7,r7,#8
 1480              	 .cfi_def_cfa_offset 8
 1481 003e BD46     	 mov sp,r7
 1482              	 .cfi_def_cfa_register 13
 1483              	 
 1484 0040 80BD     	 pop {r7,pc}
 1485              	.L82:
 1486 0042 00BF     	 .align 2
 1487              	.L81:
 1488 0044 00000000 	 .word xmc_device
 1489              	 .cfi_endproc
 1490              	.LFE184:
 1492              	 .section .text.XMC_USBD_lHandleEnumDone,"ax",%progbits
 1493              	 .align 2
 1494              	 .thumb
 1495              	 .thumb_func
 1497              	XMC_USBD_lHandleEnumDone:
 1498              	.LFB185:
 618:../Libraries/XMCLib/src/xmc_usbd.c **** 
 619:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 620:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Interrupt handler for device enumeration done.
 621:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 622:../Libraries/XMCLib/src/xmc_usbd.c ****  * Handles the enumeration done from dwc_otg, when the host has enumerated the device.
 623:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 624:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void)
 625:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1499              	 .loc 1 625 0
 1500              	 .cfi_startproc
 1501              	 
 1502              	 
 1503 0000 80B5     	 push {r7,lr}
 1504              	 .cfi_def_cfa_offset 8
 1505              	 .cfi_offset 7,-8
 1506              	 .cfi_offset 14,-4
 1507 0002 82B0     	 sub sp,sp,#8
 1508              	 .cfi_def_cfa_offset 16
 1509 0004 00AF     	 add r7,sp,#0
 1510              	 .cfi_def_cfa_register 7
 626:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Normaly we need to check dctl
 627:../Libraries/XMCLib/src/xmc_usbd.c ****    * We are always fullspeed, so max it up. */
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 629:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
 630:../Libraries/XMCLib/src/xmc_usbd.c **** 
 631:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_in_register[0U]->diepctl;
 1511              	 .loc 1 631 0
 1512 0006 1B4B     	 ldr r3,.L84
 1513 0008 D3F8A831 	 ldr r3,[r3,#424]
 1514 000c 1B68     	 ldr r3,[r3]
 1515 000e 7B60     	 str r3,[r7,#4]
 632:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 1516              	 .loc 1 632 0
 1517 0010 BB88     	 ldrh r3,[r7,#4]
 1518 0012 6FF30A03 	 bfc r3,#0,#11
 1519 0016 BB80     	 strh r3,[r7,#4]
 633:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 1520              	 .loc 1 633 0
 1521 0018 164B     	 ldr r3,.L84
 1522 001a D3F8A831 	 ldr r3,[r3,#424]
 1523 001e 7A68     	 ldr r2,[r7,#4]
 1524 0020 1A60     	 str r2,[r3]
 634:../Libraries/XMCLib/src/xmc_usbd.c **** 
 635:../Libraries/XMCLib/src/xmc_usbd.c ****   /* update device connected flag */
 636:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsConnected = 1U;
 1525              	 .loc 1 636 0
 1526 0022 144A     	 ldr r2,.L84
 1527 0024 92F8FE31 	 ldrb r3,[r2,#510]
 1528 0028 43F00103 	 orr r3,r3,#1
 1529 002c 82F8FE31 	 strb r3,[r2,#510]
 637:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 1530              	 .loc 1 637 0
 1531 0030 104A     	 ldr r2,.L84
 1532 0032 92F8FE31 	 ldrb r3,[r2,#510]
 1533 0036 43F00403 	 orr r3,r3,#4
 1534 003a 82F8FE31 	 strb r3,[r2,#510]
 638:../Libraries/XMCLib/src/xmc_usbd.c **** 
 639:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_CONNECT);
 1535              	 .loc 1 639 0
 1536 003e 0D4B     	 ldr r3,.L84
 1537 0040 D3F80032 	 ldr r3,[r3,#512]
 1538 0044 0220     	 movs r0,#2
 1539 0046 9847     	 blx r3
 640:../Libraries/XMCLib/src/xmc_usbd.c **** 
 641:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Set Trim */
 642:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 1540              	 .loc 1 642 0
 1541 0048 0A4B     	 ldr r3,.L84
 1542 004a D3F8A031 	 ldr r3,[r3,#416]
 1543 004e DB68     	 ldr r3,[r3,#12]
 1544 0050 3B60     	 str r3,[r7]
 643:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 1545              	 .loc 1 643 0
 1546 0052 7B78     	 ldrb r3,[r7,#1]
 1547 0054 0922     	 movs r2,#9
 1548 0056 62F38503 	 bfi r3,r2,#2,#4
 1549 005a 7B70     	 strb r3,[r7,#1]
 644:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 1550              	 .loc 1 644 0
 1551 005c 054B     	 ldr r3,.L84
 1552 005e D3F8A031 	 ldr r3,[r3,#416]
 1553 0062 3A68     	 ldr r2,[r7]
 1554 0064 DA60     	 str r2,[r3,#12]
 645:../Libraries/XMCLib/src/xmc_usbd.c **** 
 646:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 647:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_ENUMDONE);
 1555              	 .loc 1 647 0
 1556 0066 0B20     	 movs r0,#11
 1557 0068 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 648:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1558              	 .loc 1 648 0
 1559 006c 0837     	 adds r7,r7,#8
 1560              	 .cfi_def_cfa_offset 8
 1561 006e BD46     	 mov sp,r7
 1562              	 .cfi_def_cfa_register 13
 1563              	 
 1564 0070 80BD     	 pop {r7,pc}
 1565              	.L85:
 1566 0072 00BF     	 .align 2
 1567              	.L84:
 1568 0074 00000000 	 .word xmc_device
 1569              	 .cfi_endproc
 1570              	.LFE185:
 1572              	 .section .text.XMC_USBD_lHandleOEPInt,"ax",%progbits
 1573              	 .align 2
 1574              	 .thumb
 1575              	 .thumb_func
 1577              	XMC_USBD_lHandleOEPInt:
 1578              	.LFB186:
 649:../Libraries/XMCLib/src/xmc_usbd.c **** 
 650:../Libraries/XMCLib/src/xmc_usbd.c **** 
 651:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 652:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all out endpoints
 653:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 654:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 655:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 656:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 657:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj)
 658:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1579              	 .loc 1 658 0
 1580              	 .cfi_startproc
 1581              	 
 1582              	 
 1583 0000 80B5     	 push {r7,lr}
 1584              	 .cfi_def_cfa_offset 8
 1585              	 .cfi_offset 7,-8
 1586              	 .cfi_offset 14,-4
 1587 0002 8CB0     	 sub sp,sp,#48
 1588              	 .cfi_def_cfa_offset 56
 1589 0004 00AF     	 add r7,sp,#0
 1590              	 .cfi_def_cfa_register 7
 1591 0006 7860     	 str r0,[r7,#4]
 659:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 660:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 661:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk_data_t doepmsk;
 662:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
 663:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t doeptsiz;
 664:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 665:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 666:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 667:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 668:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 669:../Libraries/XMCLib/src/xmc_usbd.c **** 
 670:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 1592              	 .loc 1 670 0
 1593 0008 6A4B     	 ldr r3,.L97
 1594 000a D3F8A431 	 ldr r3,[r3,#420]
 1595 000e 9B69     	 ldr r3,[r3,#24]
 1596 0010 FB61     	 str r3,[r7,#28]
 671:../Libraries/XMCLib/src/xmc_usbd.c **** 
 672:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 1597              	 .loc 1 672 0
 1598 0012 684B     	 ldr r3,.L97
 1599 0014 D3F8A431 	 ldr r3,[r3,#420]
 1600 0018 DB69     	 ldr r3,[r3,#28]
 1601 001a BB61     	 str r3,[r7,#24]
 673:../Libraries/XMCLib/src/xmc_usbd.c **** 
 674:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk.d32 = xmc_device.device_register->doepmsk;
 1602              	 .loc 1 674 0
 1603 001c 654B     	 ldr r3,.L97
 1604 001e D3F8A431 	 ldr r3,[r3,#420]
 1605 0022 5B69     	 ldr r3,[r3,#20]
 1606 0024 7B61     	 str r3,[r7,#20]
 675:../Libraries/XMCLib/src/xmc_usbd.c **** 
 676:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.out & daintmsk.ep.out;
 1607              	 .loc 1 676 0
 1608 0026 FA8B     	 ldrh r2,[r7,#30]
 1609 0028 7B8B     	 ldrh r3,[r7,#26]
 1610 002a 1340     	 ands r3,r3,r2
 1611 002c BB85     	 strh r3,[r7,#44]
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 1612              	 .loc 1 677 0
 1613 002e 0023     	 movs r3,#0
 1614 0030 87F82F30 	 strb r3,[r7,#47]
 678:../Libraries/XMCLib/src/xmc_usbd.c ****   doeptsiz.d32 = 0U;
 1615              	 .loc 1 678 0
 1616 0034 0023     	 movs r3,#0
 1617 0036 FB60     	 str r3,[r7,#12]
 679:../Libraries/XMCLib/src/xmc_usbd.c **** 
 680:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 1618              	 .loc 1 680 0
 1619 0038 AEE0     	 b .L87
 1620              	.L96:
 681:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 682:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = (mask >> (uint16_t)ep_num);
 1621              	 .loc 1 682 0
 1622 003a BA8D     	 ldrh r2,[r7,#44]
 1623 003c 97F82F30 	 ldrb r3,[r7,#47]
 1624 0040 42FA03F3 	 asr r3,r2,r3
 1625 0044 7B85     	 strh r3,[r7,#42]
 683:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = temp1 & 0x1U;
 1626              	 .loc 1 683 0
 1627 0046 7B8D     	 ldrh r3,[r7,#42]
 1628 0048 03F00103 	 and r3,r3,#1
 1629 004c 3B85     	 strh r3,[r7,#40]
 684:../Libraries/XMCLib/src/xmc_usbd.c ****     if (temp)
 1630              	 .loc 1 684 0
 1631 004e 3B8D     	 ldrh r3,[r7,#40]
 1632 0050 002B     	 cmp r3,#0
 1633 0052 00F09C80 	 beq .L88
 685:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 686:../Libraries/XMCLib/src/xmc_usbd.c ****       /* load register data for endpoint */
 687:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 1634              	 .loc 1 687 0
 1635 0056 97F82F30 	 ldrb r3,[r7,#47]
 1636 005a 3422     	 movs r2,#52
 1637 005c 02FB03F3 	 mul r3,r2,r3
 1638 0060 544A     	 ldr r2,.L97
 1639 0062 1344     	 add r3,r3,r2
 1640 0064 7B62     	 str r3,[r7,#36]
 688:../Libraries/XMCLib/src/xmc_usbd.c ****       doepint.d32 = xmc_device.endpoint_out_register[ep_num]->doepint & doepmsk.d32;
 1641              	 .loc 1 688 0
 1642 0066 97F82F30 	 ldrb r3,[r7,#47]
 1643 006a 524A     	 ldr r2,.L97
 1644 006c 7033     	 adds r3,r3,#112
 1645 006e 9B00     	 lsls r3,r3,#2
 1646 0070 1344     	 add r3,r3,r2
 1647 0072 5B68     	 ldr r3,[r3,#4]
 1648 0074 9A68     	 ldr r2,[r3,#8]
 1649 0076 7B69     	 ldr r3,[r7,#20]
 1650 0078 1340     	 ands r3,r3,r2
 1651 007a 3B61     	 str r3,[r7,#16]
 689:../Libraries/XMCLib/src/xmc_usbd.c ****       if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1652              	 .loc 1 689 0
 1653 007c 7B68     	 ldr r3,[r7,#4]
 1654 007e 5B7B     	 ldrb r3,[r3,#13]
 1655 0080 002B     	 cmp r3,#0
 1656 0082 08D1     	 bne .L89
 690:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 691:../Libraries/XMCLib/src/xmc_usbd.c ****         doeptsiz.d32 = xmc_device.endpoint_out_register[ep_num]->doeptsiz;
 1657              	 .loc 1 691 0
 1658 0084 97F82F30 	 ldrb r3,[r7,#47]
 1659 0088 4A4A     	 ldr r2,.L97
 1660 008a 7033     	 adds r3,r3,#112
 1661 008c 9B00     	 lsls r3,r3,#2
 1662 008e 1344     	 add r3,r3,r2
 1663 0090 5B68     	 ldr r3,[r3,#4]
 1664 0092 1B69     	 ldr r3,[r3,#16]
 1665 0094 FB60     	 str r3,[r7,#12]
 1666              	.L89:
 692:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 693:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Setup Phase Complete */
 694:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.setup)
 1667              	 .loc 1 694 0
 1668 0096 3B7C     	 ldrb r3,[r7,#16]
 1669 0098 03F00803 	 and r3,r3,#8
 1670 009c DBB2     	 uxtb r3,r3
 1671 009e 002B     	 cmp r3,#0
 1672 00a0 33D0     	 beq .L90
 695:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 696:../Libraries/XMCLib/src/xmc_usbd.c ****         /* ep0 not stalled any more */
 697:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->isStalled = 0U;
 1673              	 .loc 1 697 0
 1674 00a2 7A6A     	 ldr r2,[r7,#36]
 1675 00a4 1379     	 ldrb r3,[r2,#4]
 1676 00a6 6FF34513 	 bfc r3,#5,#1
 1677 00aa 1371     	 strb r3,[r2,#4]
 698:../Libraries/XMCLib/src/xmc_usbd.c ****         if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1678              	 .loc 1 698 0
 1679 00ac 7B68     	 ldr r3,[r7,#4]
 1680 00ae 5B7B     	 ldrb r3,[r3,#13]
 1681 00b0 002B     	 cmp r3,#0
 1682 00b2 0ED1     	 bne .L91
 699:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 700:../Libraries/XMCLib/src/xmc_usbd.c ****           /* calculate size for setup packet */
 701:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = (uint32_t)(((uint32_t)XMC_USBD_SETUP_COUNT -
 702:../Libraries/XMCLib/src/xmc_usbd.c ****                                               (uint32_t)((deptsiz0_data_t *)&doeptsiz)->b.supcnt) *
 1683              	 .loc 1 702 0
 1684 00b4 07F10C03 	 add r3,r7,#12
 1685 00b8 DB78     	 ldrb r3,[r3,#3]
 1686 00ba C3F34113 	 ubfx r3,r3,#5,#2
 1687 00be DBB2     	 uxtb r3,r3
 1688 00c0 1A46     	 mov r2,r3
 701:../Libraries/XMCLib/src/xmc_usbd.c ****                                               (uint32_t)((deptsiz0_data_t *)&doeptsiz)->b.supcnt) *
 1689              	 .loc 1 701 0
 1690 00c2 1346     	 mov r3,r2
 1691 00c4 5B07     	 lsls r3,r3,#29
 1692 00c6 9B1A     	 subs r3,r3,r2
 1693 00c8 DB00     	 lsls r3,r3,#3
 1694 00ca 03F11802 	 add r2,r3,#24
 1695 00ce 7B6A     	 ldr r3,[r7,#36]
 1696 00d0 1A61     	 str r2,[r3,#16]
 1697              	.L91:
 703:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 704:../Libraries/XMCLib/src/xmc_usbd.c ****         if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1698              	 .loc 1 704 0
 1699 00d2 7B68     	 ldr r3,[r7,#4]
 1700 00d4 5B7B     	 ldrb r3,[r3,#13]
 1701 00d6 012B     	 cmp r3,#1
 1702 00d8 06D1     	 bne .L92
 705:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 706:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable += ep->xferCount;
 1703              	 .loc 1 706 0
 1704 00da 7B6A     	 ldr r3,[r7,#36]
 1705 00dc 1A69     	 ldr r2,[r3,#16]
 1706 00de 7B6A     	 ldr r3,[r7,#36]
 1707 00e0 DB6A     	 ldr r3,[r3,#44]
 1708 00e2 1A44     	 add r2,r2,r3
 1709 00e4 7B6A     	 ldr r3,[r7,#36]
 1710 00e6 1A61     	 str r2,[r3,#16]
 1711              	.L92:
 707:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 708:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->outInUse = 0U;
 1712              	 .loc 1 708 0
 1713 00e8 7B6A     	 ldr r3,[r7,#36]
 1714 00ea 5A68     	 ldr r2,[r3,#4]
 1715 00ec 22F01002 	 bic r2,r2,#16
 1716 00f0 5A60     	 str r2,[r3,#4]
 709:../Libraries/XMCLib/src/xmc_usbd.c ****         xmc_device.EndpointEvent_cb(0U, XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 1717              	 .loc 1 709 0
 1718 00f2 304B     	 ldr r3,.L97
 1719 00f4 D3F80432 	 ldr r3,[r3,#516]
 1720 00f8 0020     	 movs r0,#0
 1721 00fa 0021     	 movs r1,#0
 1722 00fc 9847     	 blx r3
 710:../Libraries/XMCLib/src/xmc_usbd.c ****         /* clear the interrupt */
 711:../Libraries/XMCLib/src/xmc_usbd.c ****         XMC_USBD_ClearEventOUTEP((uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP, ep_num);
 1723              	 .loc 1 711 0
 1724 00fe 97F82F30 	 ldrb r3,[r7,#47]
 1725 0102 0820     	 movs r0,#8
 1726 0104 1946     	 mov r1,r3
 1727 0106 FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 1728              	.L90:
 712:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 713:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.xfercompl)
 1729              	 .loc 1 713 0
 1730 010a 3B7C     	 ldrb r3,[r7,#16]
 1731 010c 03F00103 	 and r3,r3,#1
 1732 0110 DBB2     	 uxtb r3,r3
 1733 0112 002B     	 cmp r3,#0
 1734 0114 34D0     	 beq .L93
 714:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 715:../Libraries/XMCLib/src/xmc_usbd.c ****         if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1735              	 .loc 1 715 0
 1736 0116 7B68     	 ldr r3,[r7,#4]
 1737 0118 5B7B     	 ldrb r3,[r3,#13]
 1738 011a 002B     	 cmp r3,#0
 1739 011c 15D1     	 bne .L94
 1740              	.LBB3:
 716:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 717:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes = (ep->xferLength - ep->xferCount) - doeptsiz.b.xfersize;
 1741              	 .loc 1 717 0
 1742 011e 7B6A     	 ldr r3,[r7,#36]
 1743 0120 9A6A     	 ldr r2,[r3,#40]
 1744 0122 7B6A     	 ldr r3,[r7,#36]
 1745 0124 DB6A     	 ldr r3,[r3,#44]
 1746 0126 D31A     	 subs r3,r2,r3
 1747 0128 FA68     	 ldr r2,[r7,#12]
 1748 012a C2F31202 	 ubfx r2,r2,#0,#19
 1749 012e 9B1A     	 subs r3,r3,r2
 1750 0130 3B62     	 str r3,[r7,#32]
 718:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 1751              	 .loc 1 718 0
 1752 0132 7B6A     	 ldr r3,[r7,#36]
 1753 0134 DA6A     	 ldr r2,[r3,#44]
 1754 0136 3B6A     	 ldr r3,[r7,#32]
 1755 0138 1A44     	 add r2,r2,r3
 1756 013a 7B6A     	 ldr r3,[r7,#36]
 1757 013c DA62     	 str r2,[r3,#44]
 719:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 1758              	 .loc 1 719 0
 1759 013e 7B6A     	 ldr r3,[r7,#36]
 1760 0140 5A6A     	 ldr r2,[r3,#36]
 1761 0142 3B6A     	 ldr r3,[r7,#32]
 1762 0144 1A44     	 add r2,r2,r3
 1763 0146 7B6A     	 ldr r3,[r7,#36]
 1764 0148 5A62     	 str r2,[r3,#36]
 1765              	.L94:
 1766              	.LBE3:
 720:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 721:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 1767              	 .loc 1 721 0
 1768 014a 7B6A     	 ldr r3,[r7,#36]
 1769 014c 1A6B     	 ldr r2,[r3,#48]
 1770 014e 7B6A     	 ldr r3,[r7,#36]
 1771 0150 9B6A     	 ldr r3,[r3,#40]
 1772 0152 9A42     	 cmp r2,r3
 1773 0154 11D1     	 bne .L95
 722:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 723:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = ep->xferCount;
 1774              	 .loc 1 723 0
 1775 0156 7B6A     	 ldr r3,[r7,#36]
 1776 0158 DA6A     	 ldr r2,[r3,#44]
 1777 015a 7B6A     	 ldr r3,[r7,#36]
 1778 015c 1A61     	 str r2,[r3,#16]
 724:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 1779              	 .loc 1 724 0
 1780 015e 7B6A     	 ldr r3,[r7,#36]
 1781 0160 5A68     	 ldr r2,[r3,#4]
 1782 0162 22F01002 	 bic r2,r2,#16
 1783 0166 5A60     	 str r2,[r3,#4]
 725:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num, XMC_USBD_EP_EVENT_OUT);
 1784              	 .loc 1 725 0
 1785 0168 124B     	 ldr r3,.L97
 1786 016a D3F80432 	 ldr r3,[r3,#516]
 1787 016e 97F82F20 	 ldrb r2,[r7,#47]
 1788 0172 1046     	 mov r0,r2
 1789 0174 0121     	 movs r1,#1
 1790 0176 9847     	 blx r3
 1791 0178 02E0     	 b .L93
 1792              	.L95:
 726:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 727:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 728:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 729:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartReadXfer(ep);
 1793              	 .loc 1 729 0
 1794 017a 786A     	 ldr r0,[r7,#36]
 1795 017c FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
 1796              	.L93:
 730:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 731:../Libraries/XMCLib/src/xmc_usbd.c **** 
 732:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 733:../Libraries/XMCLib/src/xmc_usbd.c **** 
 734:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventOUTEP(doepint.d32, ep_num);
 1797              	 .loc 1 734 0
 1798 0180 3A69     	 ldr r2,[r7,#16]
 1799 0182 97F82F30 	 ldrb r3,[r7,#47]
 1800 0186 1046     	 mov r0,r2
 1801 0188 1946     	 mov r1,r3
 1802 018a FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 1803              	.L88:
 735:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 736:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 1804              	 .loc 1 736 0
 1805 018e 97F82F30 	 ldrb r3,[r7,#47]
 1806 0192 0133     	 adds r3,r3,#1
 1807 0194 87F82F30 	 strb r3,[r7,#47]
 1808              	.L87:
 680:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1809              	 .loc 1 680 0
 1810 0198 BA8D     	 ldrh r2,[r7,#44]
 1811 019a 97F82F30 	 ldrb r3,[r7,#47]
 1812 019e 42FA03F3 	 asr r3,r2,r3
 1813 01a2 002B     	 cmp r3,#0
 1814 01a4 7FF449AF 	 bne .L96
 737:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 738:../Libraries/XMCLib/src/xmc_usbd.c **** 
 739:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 740:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_OUTEP);
 1815              	 .loc 1 740 0
 1816 01a8 0D20     	 movs r0,#13
 1817 01aa FFF7FEFF 	 bl XMC_USBD_ClearEvent
 741:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1818              	 .loc 1 741 0
 1819 01ae 3037     	 adds r7,r7,#48
 1820              	 .cfi_def_cfa_offset 8
 1821 01b0 BD46     	 mov sp,r7
 1822              	 .cfi_def_cfa_register 13
 1823              	 
 1824 01b2 80BD     	 pop {r7,pc}
 1825              	.L98:
 1826              	 .align 2
 1827              	.L97:
 1828 01b4 00000000 	 .word xmc_device
 1829              	 .cfi_endproc
 1830              	.LFE186:
 1832              	 .section .text.XMC_USBD_lHandleIEPInt,"ax",%progbits
 1833              	 .align 2
 1834              	 .thumb
 1835              	 .thumb_func
 1837              	XMC_USBD_lHandleIEPInt:
 1838              	.LFB187:
 742:../Libraries/XMCLib/src/xmc_usbd.c **** 
 743:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 744:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all in endpoints
 745:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 746:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 747:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 748:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 749:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj)
 750:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1839              	 .loc 1 750 0
 1840              	 .cfi_startproc
 1841              	 
 1842              	 
 1843 0000 80B5     	 push {r7,lr}
 1844              	 .cfi_def_cfa_offset 8
 1845              	 .cfi_offset 7,-8
 1846              	 .cfi_offset 14,-4
 1847 0002 8CB0     	 sub sp,sp,#48
 1848              	 .cfi_def_cfa_offset 56
 1849 0004 00AF     	 add r7,sp,#0
 1850              	 .cfi_def_cfa_register 7
 1851 0006 7860     	 str r0,[r7,#4]
 751:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 752:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 753:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk_data_t diepmsk;
 754:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
 755:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t dieptsiz;
 756:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 757:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 758:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 759:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 760:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t inepint;
 761:../Libraries/XMCLib/src/xmc_usbd.c **** 
 762:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 1852              	 .loc 1 762 0
 1853 0008 6A4B     	 ldr r3,.L109
 1854 000a D3F8A431 	 ldr r3,[r3,#420]
 1855 000e 9B69     	 ldr r3,[r3,#24]
 1856 0010 7B61     	 str r3,[r7,#20]
 763:../Libraries/XMCLib/src/xmc_usbd.c **** 
 764:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk.d32 = xmc_device.device_register->diepmsk;
 1857              	 .loc 1 764 0
 1858 0012 684B     	 ldr r3,.L109
 1859 0014 D3F8A431 	 ldr r3,[r3,#420]
 1860 0018 1B69     	 ldr r3,[r3,#16]
 1861 001a 3B61     	 str r3,[r7,#16]
 765:../Libraries/XMCLib/src/xmc_usbd.c **** 
 766:../Libraries/XMCLib/src/xmc_usbd.c ****   dieptsiz.d32 = 0U;
 1862              	 .loc 1 766 0
 1863 001c 0023     	 movs r3,#0
 1864 001e BB60     	 str r3,[r7,#8]
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.in;
 1865              	 .loc 1 767 0
 1866 0020 BB8A     	 ldrh r3,[r7,#20]
 1867 0022 BB85     	 strh r3,[r7,#44]
 768:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 1868              	 .loc 1 768 0
 1869 0024 0023     	 movs r3,#0
 1870 0026 87F82F30 	 strb r3,[r7,#47]
 769:../Libraries/XMCLib/src/xmc_usbd.c **** 
 770:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 1871              	 .loc 1 770 0
 1872 002a B5E0     	 b .L100
 1873              	.L108:
 771:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 772:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = ((uint16_t)mask >> (uint16_t)ep_num);
 1874              	 .loc 1 772 0
 1875 002c BA8D     	 ldrh r2,[r7,#44]
 1876 002e 97F82F30 	 ldrb r3,[r7,#47]
 1877 0032 42FA03F3 	 asr r3,r2,r3
 1878 0036 7B85     	 strh r3,[r7,#42]
 773:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = (uint16_t)temp1 & (uint16_t)0x1U;
 1879              	 .loc 1 773 0
 1880 0038 7B8D     	 ldrh r3,[r7,#42]
 1881 003a 03F00103 	 and r3,r3,#1
 1882 003e 3B85     	 strh r3,[r7,#40]
 774:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((uint16_t)temp)
 1883              	 .loc 1 774 0
 1884 0040 3B8D     	 ldrh r3,[r7,#40]
 1885 0042 002B     	 cmp r3,#0
 1886 0044 00F0A380 	 beq .L101
 775:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 776:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 1887              	 .loc 1 776 0
 1888 0048 97F82F30 	 ldrb r3,[r7,#47]
 1889 004c 3422     	 movs r2,#52
 1890 004e 02FB03F3 	 mul r3,r2,r3
 1891 0052 584A     	 ldr r2,.L109
 1892 0054 1344     	 add r3,r3,r2
 1893 0056 7B62     	 str r3,[r7,#36]
 777:../Libraries/XMCLib/src/xmc_usbd.c ****       inepint = (uint32_t)xmc_device.endpoint_in_register[ep_num]->diepint;
 1894              	 .loc 1 777 0
 1895 0058 97F82F30 	 ldrb r3,[r7,#47]
 1896 005c 554A     	 ldr r2,.L109
 1897 005e 6A33     	 adds r3,r3,#106
 1898 0060 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1899 0064 9B68     	 ldr r3,[r3,#8]
 1900 0066 3B62     	 str r3,[r7,#32]
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 779:../Libraries/XMCLib/src/xmc_usbd.c ****                     ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep-
 1901              	 .loc 1 779 0
 1902 0068 524B     	 ldr r3,.L109
 1903 006a D3F8A431 	 ldr r3,[r3,#420]
 1904 006e 5B6B     	 ldr r3,[r3,#52]
 1905 0070 7A6A     	 ldr r2,[r7,#36]
 1906 0072 1278     	 ldrb r2,[r2]
 1907 0074 C2F30302 	 ubfx r2,r2,#0,#4
 1908 0078 D2B2     	 uxtb r2,r2
 1909 007a D340     	 lsrs r3,r3,r2
 780:../Libraries/XMCLib/src/xmc_usbd.c ****                        0x1U) << 7U) | (uint32_t)diepmsk.d32);
 1910              	 .loc 1 780 0
 1911 007c DB01     	 lsls r3,r3,#7
 1912 007e DAB2     	 uxtb r2,r3
 1913 0080 3B69     	 ldr r3,[r7,#16]
 1914 0082 1A43     	 orrs r2,r2,r3
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 1915              	 .loc 1 778 0
 1916 0084 3B6A     	 ldr r3,[r7,#32]
 1917 0086 1340     	 ands r3,r3,r2
 1918 0088 FB60     	 str r3,[r7,#12]
 781:../Libraries/XMCLib/src/xmc_usbd.c ****       if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1919              	 .loc 1 781 0
 1920 008a 7B68     	 ldr r3,[r7,#4]
 1921 008c 5B7B     	 ldrb r3,[r3,#13]
 1922 008e 002B     	 cmp r3,#0
 1923 0090 07D1     	 bne .L102
 782:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 783:../Libraries/XMCLib/src/xmc_usbd.c ****         dieptsiz.d32 = xmc_device.endpoint_in_register[ep_num]->dieptsiz;
 1924              	 .loc 1 783 0
 1925 0092 97F82F30 	 ldrb r3,[r7,#47]
 1926 0096 474A     	 ldr r2,.L109
 1927 0098 6A33     	 adds r3,r3,#106
 1928 009a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1929 009e 1B69     	 ldr r3,[r3,#16]
 1930 00a0 BB60     	 str r3,[r7,#8]
 1931              	.L102:
 784:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 785:../Libraries/XMCLib/src/xmc_usbd.c ****       if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1932              	 .loc 1 785 0
 1933 00a2 7B68     	 ldr r3,[r7,#4]
 1934 00a4 5B7B     	 ldrb r3,[r3,#13]
 1935 00a6 012B     	 cmp r3,#1
 1936 00a8 15D1     	 bne .L103
 786:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 787:../Libraries/XMCLib/src/xmc_usbd.c ****         if (diepint.b.emptyintr)
 1937              	 .loc 1 787 0
 1938 00aa 3B7B     	 ldrb r3,[r7,#12]
 1939 00ac 23F07F03 	 bic r3,r3,#127
 1940 00b0 DBB2     	 uxtb r3,r3
 1941 00b2 002B     	 cmp r3,#0
 1942 00b4 0FD0     	 beq .L103
 1943              	.LBB4:
 788:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 789:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes;
 790:../Libraries/XMCLib/src/xmc_usbd.c ****           bytes = XMC_USBD_lWriteFifo(ep);
 1944              	 .loc 1 790 0
 1945 00b6 786A     	 ldr r0,[r7,#36]
 1946 00b8 FFF7FEFF 	 bl XMC_USBD_lWriteFifo
 1947 00bc F861     	 str r0,[r7,#28]
 791:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 1948              	 .loc 1 791 0
 1949 00be 7B6A     	 ldr r3,[r7,#36]
 1950 00c0 DA6A     	 ldr r2,[r3,#44]
 1951 00c2 FB69     	 ldr r3,[r7,#28]
 1952 00c4 1A44     	 add r2,r2,r3
 1953 00c6 7B6A     	 ldr r3,[r7,#36]
 1954 00c8 DA62     	 str r2,[r3,#44]
 792:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 1955              	 .loc 1 792 0
 1956 00ca 7B6A     	 ldr r3,[r7,#36]
 1957 00cc 5A6A     	 ldr r2,[r3,#36]
 1958 00ce FB69     	 ldr r3,[r7,#28]
 1959 00d0 1A44     	 add r2,r2,r3
 1960 00d2 7B6A     	 ldr r3,[r7,#36]
 1961 00d4 5A62     	 str r2,[r3,#36]
 1962              	.L103:
 1963              	.LBE4:
 793:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 794:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 795:../Libraries/XMCLib/src/xmc_usbd.c ****       if (diepint.b.xfercompl)
 1964              	 .loc 1 795 0
 1965 00d6 3B7B     	 ldrb r3,[r7,#12]
 1966 00d8 03F00103 	 and r3,r3,#1
 1967 00dc DBB2     	 uxtb r3,r3
 1968 00de 002B     	 cmp r3,#0
 1969 00e0 4ED0     	 beq .L104
 796:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 797:../Libraries/XMCLib/src/xmc_usbd.c ****         if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1970              	 .loc 1 797 0
 1971 00e2 7B68     	 ldr r3,[r7,#4]
 1972 00e4 5B7B     	 ldrb r3,[r3,#13]
 1973 00e6 002B     	 cmp r3,#0
 1974 00e8 1DD1     	 bne .L105
 798:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 799:../Libraries/XMCLib/src/xmc_usbd.c ****           /* update xfer values */
 800:../Libraries/XMCLib/src/xmc_usbd.c ****           if ((dieptsiz.b.pktcnt == 0U) && (dieptsiz.b.xfersize == 0U))
 1975              	 .loc 1 800 0
 1976 00ea 7A89     	 ldrh r2,[r7,#10]
 1977 00ec 41F6F873 	 movw r3,#8184
 1978 00f0 1340     	 ands r3,r3,r2
 1979 00f2 9BB2     	 uxth r3,r3
 1980 00f4 002B     	 cmp r3,#0
 1981 00f6 16D1     	 bne .L105
 1982              	 .loc 1 800 0 is_stmt 0 discriminator 1
 1983 00f8 BB68     	 ldr r3,[r7,#8]
 1984 00fa C3F31203 	 ubfx r3,r3,#0,#19
 1985 00fe 002B     	 cmp r3,#0
 1986 0100 11D1     	 bne .L105
 1987              	.LBB5:
 801:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 802:../Libraries/XMCLib/src/xmc_usbd.c ****             uint32_t Bytes = ep->xferLength - ep->xferCount;
 1988              	 .loc 1 802 0 is_stmt 1
 1989 0102 7B6A     	 ldr r3,[r7,#36]
 1990 0104 9A6A     	 ldr r2,[r3,#40]
 1991 0106 7B6A     	 ldr r3,[r7,#36]
 1992 0108 DB6A     	 ldr r3,[r3,#44]
 1993 010a D31A     	 subs r3,r2,r3
 1994 010c BB61     	 str r3,[r7,#24]
 803:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 1995              	 .loc 1 803 0
 1996 010e 7B6A     	 ldr r3,[r7,#36]
 1997 0110 DA6A     	 ldr r2,[r3,#44]
 1998 0112 BB69     	 ldr r3,[r7,#24]
 1999 0114 1A44     	 add r2,r2,r3
 2000 0116 7B6A     	 ldr r3,[r7,#36]
 2001 0118 DA62     	 str r2,[r3,#44]
 804:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 2002              	 .loc 1 804 0
 2003 011a 7B6A     	 ldr r3,[r7,#36]
 2004 011c 5A6A     	 ldr r2,[r3,#36]
 2005 011e BB69     	 ldr r3,[r7,#24]
 2006 0120 1A44     	 add r2,r2,r3
 2007 0122 7B6A     	 ldr r3,[r7,#36]
 2008 0124 5A62     	 str r2,[r3,#36]
 2009              	.L105:
 2010              	.LBE5:
 805:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 806:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 807:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 2011              	 .loc 1 807 0
 2012 0126 7B6A     	 ldr r3,[r7,#36]
 2013 0128 1A6B     	 ldr r2,[r3,#48]
 2014 012a 7B6A     	 ldr r3,[r7,#36]
 2015 012c 9B6A     	 ldr r3,[r3,#40]
 2016 012e 9A42     	 cmp r2,r3
 2017 0130 23D1     	 bne .L106
 808:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 809:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->inInUse = 0U;
 2018              	 .loc 1 809 0
 2019 0132 7B6A     	 ldr r3,[r7,#36]
 2020 0134 5A68     	 ldr r2,[r3,#4]
 2021 0136 22F00802 	 bic r2,r2,#8
 2022 013a 5A60     	 str r2,[r3,#4]
 810:../Libraries/XMCLib/src/xmc_usbd.c ****           if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2023              	 .loc 1 810 0
 2024 013c 7B68     	 ldr r3,[r7,#4]
 2025 013e 5B7B     	 ldrb r3,[r3,#13]
 2026 0140 012B     	 cmp r3,#1
 2027 0142 0ED1     	 bne .L107
 811:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 812:../Libraries/XMCLib/src/xmc_usbd.c ****             /* mask fifo empty interrupt */
 813:../Libraries/XMCLib/src/xmc_usbd.c ****             xmc_device.device_register->dtknqr4_fifoemptymsk =
 2028              	 .loc 1 813 0
 2029 0144 1B4B     	 ldr r3,.L109
 2030 0146 D3F8A431 	 ldr r3,[r3,#420]
 814:../Libraries/XMCLib/src/xmc_usbd.c ****               (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_n
 2031              	 .loc 1 814 0
 2032 014a 1A4A     	 ldr r2,.L109
 2033 014c D2F8A421 	 ldr r2,[r2,#420]
 2034 0150 516B     	 ldr r1,[r2,#52]
 2035 0152 97F82F20 	 ldrb r2,[r7,#47]
 2036 0156 0120     	 movs r0,#1
 2037 0158 00FA02F2 	 lsl r2,r0,r2
 2038 015c D243     	 mvns r2,r2
 2039 015e 0A40     	 ands r2,r2,r1
 813:../Libraries/XMCLib/src/xmc_usbd.c ****               (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_n
 2040              	 .loc 1 813 0
 2041 0160 5A63     	 str r2,[r3,#52]
 2042              	.L107:
 815:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 816:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(0x80U | ep_num, XMC_USBD_EP_EVENT_IN);
 2043              	 .loc 1 816 0
 2044 0162 144B     	 ldr r3,.L109
 2045 0164 D3F80432 	 ldr r3,[r3,#516]
 2046 0168 97F82F20 	 ldrb r2,[r7,#47]
 2047 016c 62F07F02 	 orn r2,r2,#127
 2048 0170 D2B2     	 uxtb r2,r2
 2049 0172 1046     	 mov r0,r2
 2050 0174 0221     	 movs r1,#2
 2051 0176 9847     	 blx r3
 2052 0178 02E0     	 b .L104
 2053              	.L106:
 817:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 818:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 819:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 820:../Libraries/XMCLib/src/xmc_usbd.c ****           /* start next step of transfer */
 821:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartWriteXfer(ep);
 2054              	 .loc 1 821 0
 2055 017a 786A     	 ldr r0,[r7,#36]
 2056 017c FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
 2057              	.L104:
 822:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 823:../Libraries/XMCLib/src/xmc_usbd.c **** 
 824:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 825:../Libraries/XMCLib/src/xmc_usbd.c **** 
 826:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventINEP((uint32_t)diepint.d32, ep_num);
 2058              	 .loc 1 826 0
 2059 0180 FA68     	 ldr r2,[r7,#12]
 2060 0182 97F82F30 	 ldrb r3,[r7,#47]
 2061 0186 1046     	 mov r0,r2
 2062 0188 1946     	 mov r1,r3
 2063 018a FFF7FEFF 	 bl XMC_USBD_ClearEventINEP
 2064              	.L101:
 827:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 828:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 2065              	 .loc 1 828 0
 2066 018e 97F82F30 	 ldrb r3,[r7,#47]
 2067 0192 0133     	 adds r3,r3,#1
 2068 0194 87F82F30 	 strb r3,[r7,#47]
 2069              	.L100:
 770:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2070              	 .loc 1 770 0
 2071 0198 BA8D     	 ldrh r2,[r7,#44]
 2072 019a 97F82F30 	 ldrb r3,[r7,#47]
 2073 019e 42FA03F3 	 asr r3,r2,r3
 2074 01a2 002B     	 cmp r3,#0
 2075 01a4 7FF442AF 	 bne .L108
 829:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 830:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_INEP);
 2076              	 .loc 1 830 0
 2077 01a8 0E20     	 movs r0,#14
 2078 01aa FFF7FEFF 	 bl XMC_USBD_ClearEvent
 831:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2079              	 .loc 1 831 0
 2080 01ae 3037     	 adds r7,r7,#48
 2081              	 .cfi_def_cfa_offset 8
 2082 01b0 BD46     	 mov sp,r7
 2083              	 .cfi_def_cfa_register 13
 2084              	 
 2085 01b2 80BD     	 pop {r7,pc}
 2086              	.L110:
 2087              	 .align 2
 2088              	.L109:
 2089 01b4 00000000 	 .word xmc_device
 2090              	 .cfi_endproc
 2091              	.LFE187:
 2093              	 .section .text.XMC_USBD_lHandleRxFLvl,"ax",%progbits
 2094              	 .align 2
 2095              	 .thumb
 2096              	 .thumb_func
 2098              	XMC_USBD_lHandleRxFLvl:
 2099              	.LFB188:
 832:../Libraries/XMCLib/src/xmc_usbd.c **** 
 833:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 834:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief RX Fifo interrupt handler
 835:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 836:../Libraries/XMCLib/src/xmc_usbd.c ****  * This function handles the interrupt, when the rx fifo is not empty anymore.
 837:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 838:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void)
 839:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2100              	 .loc 1 839 0
 2101              	 .cfi_startproc
 2102              	 
 2103              	 
 2104 0000 80B5     	 push {r7,lr}
 2105              	 .cfi_def_cfa_offset 8
 2106              	 .cfi_offset 7,-8
 2107              	 .cfi_offset 14,-4
 2108 0002 82B0     	 sub sp,sp,#8
 2109              	 .cfi_def_cfa_offset 16
 2110 0004 00AF     	 add r7,sp,#0
 2111              	 .cfi_def_cfa_register 7
 840:../Libraries/XMCLib/src/xmc_usbd.c ****   device_grxsts_data_t data;
 841:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->grxstsp;
 2112              	 .loc 1 841 0
 2113 0006 1D4B     	 ldr r3,.L121
 2114 0008 D3F8A031 	 ldr r3,[r3,#416]
 2115 000c 1B6A     	 ldr r3,[r3,#32]
 2116 000e 7B60     	 str r3,[r7,#4]
 842:../Libraries/XMCLib/src/xmc_usbd.c **** 
 843:../Libraries/XMCLib/src/xmc_usbd.c ****   switch (data.b.pktsts)
 2117              	 .loc 1 843 0
 2118 0010 BB79     	 ldrb r3,[r7,#6]
 2119 0012 C3F34303 	 ubfx r3,r3,#1,#4
 2120 0016 DBB2     	 uxtb r3,r3
 2121 0018 013B     	 subs r3,r3,#1
 2122 001a 052B     	 cmp r3,#5
 2123 001c 2AD8     	 bhi .L120
 2124 001e 01A2     	 adr r2,.L114
 2125 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2126              	 .p2align 2
 2127              	.L114:
 2128 0024 75000000 	 .word .L120+1
 2129 0028 3D000000 	 .word .L115+1
 2130 002c 75000000 	 .word .L120+1
 2131 0030 75000000 	 .word .L120+1
 2132 0034 75000000 	 .word .L120+1
 2133 0038 59000000 	 .word .L118+1
 2134              	 .p2align 1
 2135              	.L115:
 844:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 845:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_GOUTNAK:
 846:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 847:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTCMPL:
 848:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 849:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTDATA:
 850:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum, (uint32_t)data.b.bcnt);
 2136              	 .loc 1 850 0
 2137 003c 3B79     	 ldrb r3,[r7,#4]
 2138 003e C3F30303 	 ubfx r3,r3,#0,#4
 2139 0042 DBB2     	 uxtb r3,r3
 2140 0044 1A46     	 mov r2,r3
 2141 0046 BB88     	 ldrh r3,[r7,#4]
 2142 0048 C3F30A13 	 ubfx r3,r3,#4,#11
 2143 004c 9BB2     	 uxth r3,r3
 2144 004e 1046     	 mov r0,r2
 2145 0050 1946     	 mov r1,r3
 2146 0052 FFF7FEFF 	 bl XMC_USBD_lReadFifo
 851:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2147              	 .loc 1 851 0
 2148 0056 0EE0     	 b .L111
 2149              	.L118:
 852:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUP:
 853:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum, (uint32_t)data.b.bcnt);
 2150              	 .loc 1 853 0
 2151 0058 3B79     	 ldrb r3,[r7,#4]
 2152 005a C3F30303 	 ubfx r3,r3,#0,#4
 2153 005e DBB2     	 uxtb r3,r3
 2154 0060 1A46     	 mov r2,r3
 2155 0062 BB88     	 ldrh r3,[r7,#4]
 2156 0064 C3F30A13 	 ubfx r3,r3,#4,#11
 2157 0068 9BB2     	 uxth r3,r3
 2158 006a 1046     	 mov r0,r2
 2159 006c 1946     	 mov r1,r3
 2160 006e FFF7FEFF 	 bl XMC_USBD_lReadFifo
 854:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2161              	 .loc 1 854 0
 2162 0072 00E0     	 b .L111
 2163              	.L120:
 855:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUPCMPL:
 856:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 857:../Libraries/XMCLib/src/xmc_usbd.c ****     default:
 858:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2164              	 .loc 1 858 0
 2165 0074 00BF     	 nop
 2166              	.L111:
 859:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 860:../Libraries/XMCLib/src/xmc_usbd.c ****   /* no need to clear */
 861:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2167              	 .loc 1 861 0
 2168 0076 0837     	 adds r7,r7,#8
 2169              	 .cfi_def_cfa_offset 8
 2170 0078 BD46     	 mov sp,r7
 2171              	 .cfi_def_cfa_register 13
 2172              	 
 2173 007a 80BD     	 pop {r7,pc}
 2174              	.L122:
 2175              	 .align 2
 2176              	.L121:
 2177 007c 00000000 	 .word xmc_device
 2178              	 .cfi_endproc
 2179              	.LFE188:
 2181              	 .section .text.XMC_USBD_IRQHandler,"ax",%progbits
 2182              	 .align 2
 2183              	 .global XMC_USBD_IRQHandler
 2184              	 .thumb
 2185              	 .thumb_func
 2187              	XMC_USBD_IRQHandler:
 2188              	.LFB189:
 862:../Libraries/XMCLib/src/xmc_usbd.c **** 
 863:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 864:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Global interrupt handler
 865:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 866:../Libraries/XMCLib/src/xmc_usbd.c ****  * The handler first checks, which global interrupt has caused the interrupt
 867:../Libraries/XMCLib/src/xmc_usbd.c ****  * and then dispatches interrupt to the corresponding sub-handler.
 868:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 869:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_IRQHandler(const XMC_USBD_t *const obj)
 870:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2189              	 .loc 1 870 0
 2190              	 .cfi_startproc
 2191              	 
 2192              	 
 2193 0000 80B5     	 push {r7,lr}
 2194              	 .cfi_def_cfa_offset 8
 2195              	 .cfi_offset 7,-8
 2196              	 .cfi_offset 14,-4
 2197 0002 84B0     	 sub sp,sp,#16
 2198              	 .cfi_def_cfa_offset 24
 2199 0004 00AF     	 add r7,sp,#0
 2200              	 .cfi_def_cfa_register 7
 2201 0006 7860     	 str r0,[r7,#4]
 871:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 872:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t data;
 873:../Libraries/XMCLib/src/xmc_usbd.c **** 
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = xmc_device.global_register->gintmsk;
 2202              	 .loc 1 874 0
 2203 0008 4F4B     	 ldr r3,.L135
 2204 000a D3F8A031 	 ldr r3,[r3,#416]
 2205 000e 9B69     	 ldr r3,[r3,#24]
 2206 0010 FB60     	 str r3,[r7,#12]
 875:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 2207              	 .loc 1 875 0
 2208 0012 4D4B     	 ldr r3,.L135
 2209 0014 D3F8A031 	 ldr r3,[r3,#416]
 2210 0018 5A69     	 ldr r2,[r3,#20]
 2211 001a FB68     	 ldr r3,[r7,#12]
 2212 001c 1340     	 ands r3,r3,r2
 2213 001e BB60     	 str r3,[r7,#8]
 876:../Libraries/XMCLib/src/xmc_usbd.c **** 
 877:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sofintr)
 2214              	 .loc 1 877 0
 2215 0020 3B7A     	 ldrb r3,[r7,#8]
 2216 0022 03F00803 	 and r3,r3,#8
 2217 0026 DBB2     	 uxtb r3,r3
 2218 0028 002B     	 cmp r3,#0
 2219 002a 07D0     	 beq .L124
 878:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 879:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SOF);
 2220              	 .loc 1 879 0
 2221 002c 464B     	 ldr r3,.L135
 2222 002e D3F80032 	 ldr r3,[r3,#512]
 2223 0032 0920     	 movs r0,#9
 2224 0034 9847     	 blx r3
 880:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 2225              	 .loc 1 880 0
 2226 0036 0920     	 movs r0,#9
 2227 0038 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2228              	.L124:
 881:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 882:../Libraries/XMCLib/src/xmc_usbd.c ****   if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2229              	 .loc 1 882 0
 2230 003c 7B68     	 ldr r3,[r7,#4]
 2231 003e 5B7B     	 ldrb r3,[r3,#13]
 2232 0040 012B     	 cmp r3,#1
 2233 0042 19D1     	 bne .L125
 883:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 884:../Libraries/XMCLib/src/xmc_usbd.c ****     if (data.b.rxstsqlvl)
 2234              	 .loc 1 884 0
 2235 0044 3B7A     	 ldrb r3,[r7,#8]
 2236 0046 03F01003 	 and r3,r3,#16
 2237 004a DBB2     	 uxtb r3,r3
 2238 004c 002B     	 cmp r3,#0
 2239 004e 13D0     	 beq .L125
 885:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 886:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Masked that interrupt so its only done once */
 887:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 0U;
 2240              	 .loc 1 887 0
 2241 0050 3B7B     	 ldrb r3,[r7,#12]
 2242 0052 6FF30413 	 bfc r3,#4,#1
 2243 0056 3B73     	 strb r3,[r7,#12]
 888:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2244              	 .loc 1 888 0
 2245 0058 3B4B     	 ldr r3,.L135
 2246 005a D3F8A031 	 ldr r3,[r3,#416]
 2247 005e FA68     	 ldr r2,[r7,#12]
 2248 0060 9A61     	 str r2,[r3,#24]
 889:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 2249              	 .loc 1 889 0
 2250 0062 FFF7FEFF 	 bl XMC_USBD_lHandleRxFLvl
 890:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 1U;
 2251              	 .loc 1 890 0
 2252 0066 3B7B     	 ldrb r3,[r7,#12]
 2253 0068 43F01003 	 orr r3,r3,#16
 2254 006c 3B73     	 strb r3,[r7,#12]
 891:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2255              	 .loc 1 891 0
 2256 006e 364B     	 ldr r3,.L135
 2257 0070 D3F8A031 	 ldr r3,[r3,#416]
 2258 0074 FA68     	 ldr r2,[r7,#12]
 2259 0076 9A61     	 str r2,[r3,#24]
 2260              	.L125:
 892:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 893:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 894:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.erlysuspend)
 2261              	 .loc 1 894 0
 2262 0078 7B7A     	 ldrb r3,[r7,#9]
 2263 007a 03F00403 	 and r3,r3,#4
 2264 007e DBB2     	 uxtb r3,r3
 2265 0080 002B     	 cmp r3,#0
 2266 0082 02D0     	 beq .L126
 895:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 896:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_EARLYSUSPEND);
 2267              	 .loc 1 896 0
 2268 0084 0A20     	 movs r0,#10
 2269 0086 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2270              	.L126:
 897:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 898:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbsuspend)
 2271              	 .loc 1 898 0
 2272 008a 7B7A     	 ldrb r3,[r7,#9]
 2273 008c 03F00803 	 and r3,r3,#8
 2274 0090 DBB2     	 uxtb r3,r3
 2275 0092 002B     	 cmp r3,#0
 2276 0094 07D0     	 beq .L127
 899:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 900:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SUSPEND);
 2277              	 .loc 1 900 0
 2278 0096 2C4B     	 ldr r3,.L135
 2279 0098 D3F80032 	 ldr r3,[r3,#512]
 2280 009c 0620     	 movs r0,#6
 2281 009e 9847     	 blx r3
 901:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 2282              	 .loc 1 901 0
 2283 00a0 0620     	 movs r0,#6
 2284 00a2 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2285              	.L127:
 902:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 903:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.wkupintr)
 2286              	 .loc 1 903 0
 2287 00a6 FB7A     	 ldrb r3,[r7,#11]
 2288 00a8 23F07F03 	 bic r3,r3,#127
 2289 00ac DBB2     	 uxtb r3,r3
 2290 00ae 002B     	 cmp r3,#0
 2291 00b0 07D0     	 beq .L128
 904:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 905:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2292              	 .loc 1 905 0
 2293 00b2 254B     	 ldr r3,.L135
 2294 00b4 D3F80032 	 ldr r3,[r3,#512]
 2295 00b8 0820     	 movs r0,#8
 2296 00ba 9847     	 blx r3
 906:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2297              	 .loc 1 906 0
 2298 00bc 0820     	 movs r0,#8
 2299 00be FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2300              	.L128:
 907:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 908:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sessreqintr)
 2301              	 .loc 1 908 0
 2302 00c2 FB7A     	 ldrb r3,[r7,#11]
 2303 00c4 03F04003 	 and r3,r3,#64
 2304 00c8 DBB2     	 uxtb r3,r3
 2305 00ca 002B     	 cmp r3,#0
 2306 00cc 0ED0     	 beq .L129
 909:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 910:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 1U;
 2307              	 .loc 1 910 0
 2308 00ce 1E4A     	 ldr r2,.L135
 2309 00d0 92F8FE31 	 ldrb r3,[r2,#510]
 2310 00d4 43F00403 	 orr r3,r3,#4
 2311 00d8 82F8FE31 	 strb r3,[r2,#510]
 911:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 2312              	 .loc 1 911 0
 2313 00dc 1A4B     	 ldr r3,.L135
 2314 00de D3F80032 	 ldr r3,[r3,#512]
 2315 00e2 0020     	 movs r0,#0
 2316 00e4 9847     	 blx r3
 912:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 2317              	 .loc 1 912 0
 2318 00e6 0020     	 movs r0,#0
 2319 00e8 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2320              	.L129:
 913:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 914:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbreset)
 2321              	 .loc 1 914 0
 2322 00ec 7B7A     	 ldrb r3,[r7,#9]
 2323 00ee 03F01003 	 and r3,r3,#16
 2324 00f2 DBB2     	 uxtb r3,r3
 2325 00f4 002B     	 cmp r3,#0
 2326 00f6 02D0     	 beq .L130
 915:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 916:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleUSBReset(obj);
 2327              	 .loc 1 916 0
 2328 00f8 7868     	 ldr r0,[r7,#4]
 2329 00fa FFF7FEFF 	 bl XMC_USBD_lHandleUSBReset
 2330              	.L130:
 917:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 918:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.enumdone)
 2331              	 .loc 1 918 0
 2332 00fe 7B7A     	 ldrb r3,[r7,#9]
 2333 0100 03F02003 	 and r3,r3,#32
 2334 0104 DBB2     	 uxtb r3,r3
 2335 0106 002B     	 cmp r3,#0
 2336 0108 01D0     	 beq .L131
 919:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 920:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleEnumDone();
 2337              	 .loc 1 920 0
 2338 010a FFF7FEFF 	 bl XMC_USBD_lHandleEnumDone
 2339              	.L131:
 921:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 922:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.inepint)
 2340              	 .loc 1 922 0
 2341 010e BB7A     	 ldrb r3,[r7,#10]
 2342 0110 03F00403 	 and r3,r3,#4
 2343 0114 DBB2     	 uxtb r3,r3
 2344 0116 002B     	 cmp r3,#0
 2345 0118 02D0     	 beq .L132
 923:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 924:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleIEPInt(obj);
 2346              	 .loc 1 924 0
 2347 011a 7868     	 ldr r0,[r7,#4]
 2348 011c FFF7FEFF 	 bl XMC_USBD_lHandleIEPInt
 2349              	.L132:
 925:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 926:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.outepintr)
 2350              	 .loc 1 926 0
 2351 0120 BB7A     	 ldrb r3,[r7,#10]
 2352 0122 03F00803 	 and r3,r3,#8
 2353 0126 DBB2     	 uxtb r3,r3
 2354 0128 002B     	 cmp r3,#0
 2355 012a 02D0     	 beq .L133
 927:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 928:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleOEPInt(obj);
 2356              	 .loc 1 928 0
 2357 012c 7868     	 ldr r0,[r7,#4]
 2358 012e FFF7FEFF 	 bl XMC_USBD_lHandleOEPInt
 2359              	.L133:
 929:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 930:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.otgintr)
 2360              	 .loc 1 930 0
 2361 0132 3B7A     	 ldrb r3,[r7,#8]
 2362 0134 03F00403 	 and r3,r3,#4
 2363 0138 DBB2     	 uxtb r3,r3
 2364 013a 002B     	 cmp r3,#0
 2365 013c 01D0     	 beq .L123
 931:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 932:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleOTGInt();
 2366              	 .loc 1 932 0
 2367 013e FFF7FEFF 	 bl XMC_USBD_lHandleOTGInt
 2368              	.L123:
 933:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 934:../Libraries/XMCLib/src/xmc_usbd.c **** 
 935:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2369              	 .loc 1 935 0
 2370 0142 1037     	 adds r7,r7,#16
 2371              	 .cfi_def_cfa_offset 8
 2372 0144 BD46     	 mov sp,r7
 2373              	 .cfi_def_cfa_register 13
 2374              	 
 2375 0146 80BD     	 pop {r7,pc}
 2376              	.L136:
 2377              	 .align 2
 2378              	.L135:
 2379 0148 00000000 	 .word xmc_device
 2380              	 .cfi_endproc
 2381              	.LFE189:
 2383              	 .section .text.XMC_USBD_Enable,"ax",%progbits
 2384              	 .align 2
 2385              	 .global XMC_USBD_Enable
 2386              	 .thumb
 2387              	 .thumb_func
 2389              	XMC_USBD_Enable:
 2390              	.LFB190:
 936:../Libraries/XMCLib/src/xmc_usbd.c **** 
 937:../Libraries/XMCLib/src/xmc_usbd.c **** 
 938:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 939:../Libraries/XMCLib/src/xmc_usbd.c ****  * API IMPLEMENTATION
 940:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 941:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 942:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enables the USB0 module
 943:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 944:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Enable(void)
 945:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2391              	 .loc 1 945 0
 2392              	 .cfi_startproc
 2393              	 
 2394              	 
 2395 0000 80B5     	 push {r7,lr}
 2396              	 .cfi_def_cfa_offset 8
 2397              	 .cfi_offset 7,-8
 2398              	 .cfi_offset 14,-4
 2399 0002 00AF     	 add r7,sp,#0
 2400              	 .cfi_def_cfa_register 7
 946:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 947:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 2401              	 .loc 1 947 0
 2402 0004 0448     	 ldr r0,.L138
 2403 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 948:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 949:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Reset and power up */
 950:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2404              	 .loc 1 950 0
 2405 000a 0348     	 ldr r0,.L138
 2406 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 951:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 2407              	 .loc 1 951 0
 2408 0010 FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 952:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2409              	 .loc 1 952 0
 2410 0014 80BD     	 pop {r7,pc}
 2411              	.L139:
 2412 0016 00BF     	 .align 2
 2413              	.L138:
 2414 0018 80000020 	 .word 536871040
 2415              	 .cfi_endproc
 2416              	.LFE190:
 2418              	 .section .text.XMC_USBD_Disable,"ax",%progbits
 2419              	 .align 2
 2420              	 .global XMC_USBD_Disable
 2421              	 .thumb
 2422              	 .thumb_func
 2424              	XMC_USBD_Disable:
 2425              	.LFB191:
 953:../Libraries/XMCLib/src/xmc_usbd.c **** 
 954:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 955:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disables the USB0 module
 956:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 957:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Disable(void)
 958:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2426              	 .loc 1 958 0
 2427              	 .cfi_startproc
 2428              	 
 2429              	 
 2430 0000 80B5     	 push {r7,lr}
 2431              	 .cfi_def_cfa_offset 8
 2432              	 .cfi_offset 7,-8
 2433              	 .cfi_offset 14,-4
 2434 0002 00AF     	 add r7,sp,#0
 2435              	 .cfi_def_cfa_register 7
 959:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 960:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2436              	 .loc 1 960 0
 2437 0004 0448     	 ldr r0,.L141
 2438 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 961:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 962:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 2439              	 .loc 1 962 0
 2440 000a 0348     	 ldr r0,.L141
 2441 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 963:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 964:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_DisableUsb();
 2442              	 .loc 1 964 0
 2443 0010 FFF7FEFF 	 bl XMC_SCU_POWER_DisableUsb
 965:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2444              	 .loc 1 965 0
 2445 0014 80BD     	 pop {r7,pc}
 2446              	.L142:
 2447 0016 00BF     	 .align 2
 2448              	.L141:
 2449 0018 80000020 	 .word 536871040
 2450              	 .cfi_endproc
 2451              	.LFE191:
 2453              	 .section .text.XMC_USBD_ClearEvent,"ax",%progbits
 2454              	 .align 2
 2455              	 .global XMC_USBD_ClearEvent
 2456              	 .thumb
 2457              	 .thumb_func
 2459              	XMC_USBD_ClearEvent:
 2460              	.LFB192:
 966:../Libraries/XMCLib/src/xmc_usbd.c **** 
 967:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 968:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB device event
 969:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 970:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEvent(const XMC_USBD_EVENT_t event)
 971:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2461              	 .loc 1 971 0
 2462              	 .cfi_startproc
 2463              	 
 2464              	 
 2465              	 
 2466 0000 80B4     	 push {r7}
 2467              	 .cfi_def_cfa_offset 4
 2468              	 .cfi_offset 7,-4
 2469 0002 85B0     	 sub sp,sp,#20
 2470              	 .cfi_def_cfa_offset 24
 2471 0004 00AF     	 add r7,sp,#0
 2472              	 .cfi_def_cfa_register 7
 2473 0006 0346     	 mov r3,r0
 2474 0008 FB71     	 strb r3,[r7,#7]
 972:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 973:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = 0U;
 2475              	 .loc 1 973 0
 2476 000a 0023     	 movs r3,#0
 2477 000c FB60     	 str r3,[r7,#12]
 974:../Libraries/XMCLib/src/xmc_usbd.c ****   switch (event)
 2478              	 .loc 1 974 0
 2479 000e FB79     	 ldrb r3,[r7,#7]
 2480 0010 0D2B     	 cmp r3,#13
 2481 0012 4CD8     	 bhi .L156
 2482 0014 01A2     	 adr r2,.L146
 2483 0016 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2484 001a 00BF     	 .p2align 2
 2485              	.L146:
 2486 001c 55000000 	 .word .L145+1
 2487 0020 AF000000 	 .word .L156+1
 2488 0024 AF000000 	 .word .L156+1
 2489 0028 AF000000 	 .word .L156+1
 2490 002c 5F000000 	 .word .L147+1
 2491 0030 AF000000 	 .word .L156+1
 2492 0034 69000000 	 .word .L148+1
 2493 0038 73000000 	 .word .L149+1
 2494 003c 7D000000 	 .word .L150+1
 2495 0040 87000000 	 .word .L151+1
 2496 0044 91000000 	 .word .L152+1
 2497 0048 9B000000 	 .word .L153+1
 2498 004c AF000000 	 .word .L156+1
 2499 0050 A5000000 	 .word .L154+1
 2500              	 .p2align 1
 2501              	.L145:
 975:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 976:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_POWER_ON):
 977:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.sessreqintr = 1U;
 2502              	 .loc 1 977 0
 2503 0054 FB7B     	 ldrb r3,[r7,#15]
 2504 0056 43F04003 	 orr r3,r3,#64
 2505 005a FB73     	 strb r3,[r7,#15]
 978:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2506              	 .loc 1 978 0
 2507 005c 28E0     	 b .L155
 2508              	.L147:
 979:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESET):
 980:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.usbreset = 1U;
 2509              	 .loc 1 980 0
 2510 005e 7B7B     	 ldrb r3,[r7,#13]
 2511 0060 43F01003 	 orr r3,r3,#16
 2512 0064 7B73     	 strb r3,[r7,#13]
 981:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2513              	 .loc 1 981 0
 2514 0066 23E0     	 b .L155
 2515              	.L148:
 982:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SUSPEND):
 983:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.usbsuspend = 1U;
 2516              	 .loc 1 983 0
 2517 0068 7B7B     	 ldrb r3,[r7,#13]
 2518 006a 43F00803 	 orr r3,r3,#8
 2519 006e 7B73     	 strb r3,[r7,#13]
 984:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2520              	 .loc 1 984 0
 2521 0070 1EE0     	 b .L155
 2522              	.L149:
 985:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESUME):
 986:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.wkupintr = 1U;
 2523              	 .loc 1 986 0
 2524 0072 FB7B     	 ldrb r3,[r7,#15]
 2525 0074 43F08003 	 orr r3,r3,#128
 2526 0078 FB73     	 strb r3,[r7,#15]
 987:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2527              	 .loc 1 987 0
 2528 007a 19E0     	 b .L155
 2529              	.L150:
 988:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_REMOTE_WAKEUP):
 989:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.wkupintr = 1U;
 2530              	 .loc 1 989 0
 2531 007c FB7B     	 ldrb r3,[r7,#15]
 2532 007e 43F08003 	 orr r3,r3,#128
 2533 0082 FB73     	 strb r3,[r7,#15]
 990:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2534              	 .loc 1 990 0
 2535 0084 14E0     	 b .L155
 2536              	.L151:
 991:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SOF):
 992:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.sofintr = 1U;
 2537              	 .loc 1 992 0
 2538 0086 3B7B     	 ldrb r3,[r7,#12]
 2539 0088 43F00803 	 orr r3,r3,#8
 2540 008c 3B73     	 strb r3,[r7,#12]
 993:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2541              	 .loc 1 993 0
 2542 008e 0FE0     	 b .L155
 2543              	.L152:
 994:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_EARLYSUSPEND):
 995:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.erlysuspend = 1U;
 2544              	 .loc 1 995 0
 2545 0090 7B7B     	 ldrb r3,[r7,#13]
 2546 0092 43F00403 	 orr r3,r3,#4
 2547 0096 7B73     	 strb r3,[r7,#13]
 996:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2548              	 .loc 1 996 0
 2549 0098 0AE0     	 b .L155
 2550              	.L153:
 997:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_ENUMDONE):
 998:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.enumdone = 1U;
 2551              	 .loc 1 998 0
 2552 009a 7B7B     	 ldrb r3,[r7,#13]
 2553 009c 43F02003 	 orr r3,r3,#32
 2554 00a0 7B73     	 strb r3,[r7,#13]
 999:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2555              	 .loc 1 999 0
 2556 00a2 05E0     	 b .L155
 2557              	.L154:
1000:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_OUTEP):
1001:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.outepintr = 1U;
 2558              	 .loc 1 1001 0
 2559 00a4 BB7B     	 ldrb r3,[r7,#14]
 2560 00a6 43F00803 	 orr r3,r3,#8
 2561 00aa BB73     	 strb r3,[r7,#14]
1002:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2562              	 .loc 1 1002 0
 2563 00ac 00E0     	 b .L155
 2564              	.L156:
1003:../Libraries/XMCLib/src/xmc_usbd.c ****     default:
1004:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2565              	 .loc 1 1004 0
 2566 00ae 00BF     	 nop
 2567              	.L155:
1005:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1006:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = clear.d32;
 2568              	 .loc 1 1006 0
 2569 00b0 044B     	 ldr r3,.L157
 2570 00b2 D3F8A031 	 ldr r3,[r3,#416]
 2571 00b6 FA68     	 ldr r2,[r7,#12]
 2572 00b8 5A61     	 str r2,[r3,#20]
1007:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2573              	 .loc 1 1007 0
 2574 00ba 1437     	 adds r7,r7,#20
 2575              	 .cfi_def_cfa_offset 4
 2576 00bc BD46     	 mov sp,r7
 2577              	 .cfi_def_cfa_register 13
 2578              	 
 2579 00be 5DF8047B 	 ldr r7,[sp],#4
 2580              	 .cfi_restore 7
 2581              	 .cfi_def_cfa_offset 0
 2582 00c2 7047     	 bx lr
 2583              	.L158:
 2584              	 .align 2
 2585              	.L157:
 2586 00c4 00000000 	 .word xmc_device
 2587              	 .cfi_endproc
 2588              	.LFE192:
 2590              	 .section .text.XMC_USBD_lClearEventOTG,"ax",%progbits
 2591              	 .align 2
 2592              	 .thumb
 2593              	 .thumb_func
 2595              	XMC_USBD_lClearEventOTG:
 2596              	.LFB193:
1008:../Libraries/XMCLib/src/xmc_usbd.c **** 
1009:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1010:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OTG events
1011:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1012:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event)
1013:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2597              	 .loc 1 1013 0
 2598              	 .cfi_startproc
 2599              	 
 2600              	 
 2601              	 
 2602 0000 80B4     	 push {r7}
 2603              	 .cfi_def_cfa_offset 4
 2604              	 .cfi_offset 7,-4
 2605 0002 85B0     	 sub sp,sp,#20
 2606              	 .cfi_def_cfa_offset 24
 2607 0004 00AF     	 add r7,sp,#0
 2608              	 .cfi_def_cfa_register 7
 2609 0006 7860     	 str r0,[r7,#4]
1014:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t clear = { .d32 = 0U};
 2610              	 .loc 1 1014 0
 2611 0008 0023     	 movs r3,#0
 2612 000a FB60     	 str r3,[r7,#12]
1015:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2613              	 .loc 1 1015 0
 2614 000c 7B68     	 ldr r3,[r7,#4]
 2615 000e FB60     	 str r3,[r7,#12]
1016:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gotgint = clear.d32;
 2616              	 .loc 1 1016 0
 2617 0010 044B     	 ldr r3,.L160
 2618 0012 D3F8A031 	 ldr r3,[r3,#416]
 2619 0016 FA68     	 ldr r2,[r7,#12]
 2620 0018 5A60     	 str r2,[r3,#4]
1017:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2621              	 .loc 1 1017 0
 2622 001a 1437     	 adds r7,r7,#20
 2623              	 .cfi_def_cfa_offset 4
 2624 001c BD46     	 mov sp,r7
 2625              	 .cfi_def_cfa_register 13
 2626              	 
 2627 001e 5DF8047B 	 ldr r7,[sp],#4
 2628              	 .cfi_restore 7
 2629              	 .cfi_def_cfa_offset 0
 2630 0022 7047     	 bx lr
 2631              	.L161:
 2632              	 .align 2
 2633              	.L160:
 2634 0024 00000000 	 .word xmc_device
 2635              	 .cfi_endproc
 2636              	.LFE193:
 2638              	 .section .text.XMC_USBD_ClearEventINEP,"ax",%progbits
 2639              	 .align 2
 2640              	 .global XMC_USBD_ClearEventINEP
 2641              	 .thumb
 2642              	 .thumb_func
 2644              	XMC_USBD_ClearEventINEP:
 2645              	.LFB194:
1018:../Libraries/XMCLib/src/xmc_usbd.c **** 
1019:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1020:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB IN EP events
1021:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1022:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventINEP(uint32_t event, const uint8_t ep_num)
1023:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2646              	 .loc 1 1023 0
 2647              	 .cfi_startproc
 2648              	 
 2649              	 
 2650              	 
 2651 0000 80B4     	 push {r7}
 2652              	 .cfi_def_cfa_offset 4
 2653              	 .cfi_offset 7,-4
 2654 0002 85B0     	 sub sp,sp,#20
 2655              	 .cfi_def_cfa_offset 24
 2656 0004 00AF     	 add r7,sp,#0
 2657              	 .cfi_def_cfa_register 7
 2658 0006 7860     	 str r0,[r7,#4]
 2659 0008 0B46     	 mov r3,r1
 2660 000a FB70     	 strb r3,[r7,#3]
1024:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
1025:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2661              	 .loc 1 1025 0
 2662 000c 7B68     	 ldr r3,[r7,#4]
 2663 000e FB60     	 str r3,[r7,#12]
1026:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep_num]->diepint = clear.d32;
 2664              	 .loc 1 1026 0
 2665 0010 FB78     	 ldrb r3,[r7,#3]
 2666 0012 054A     	 ldr r2,.L163
 2667 0014 6A33     	 adds r3,r3,#106
 2668 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2669 001a FA68     	 ldr r2,[r7,#12]
 2670 001c 9A60     	 str r2,[r3,#8]
1027:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2671              	 .loc 1 1027 0
 2672 001e 1437     	 adds r7,r7,#20
 2673              	 .cfi_def_cfa_offset 4
 2674 0020 BD46     	 mov sp,r7
 2675              	 .cfi_def_cfa_register 13
 2676              	 
 2677 0022 5DF8047B 	 ldr r7,[sp],#4
 2678              	 .cfi_restore 7
 2679              	 .cfi_def_cfa_offset 0
 2680 0026 7047     	 bx lr
 2681              	.L164:
 2682              	 .align 2
 2683              	.L163:
 2684 0028 00000000 	 .word xmc_device
 2685              	 .cfi_endproc
 2686              	.LFE194:
 2688              	 .section .text.XMC_USBD_ClearEventOUTEP,"ax",%progbits
 2689              	 .align 2
 2690              	 .global XMC_USBD_ClearEventOUTEP
 2691              	 .thumb
 2692              	 .thumb_func
 2694              	XMC_USBD_ClearEventOUTEP:
 2695              	.LFB195:
1028:../Libraries/XMCLib/src/xmc_usbd.c **** 
1029:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1030:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OUT EP events
1031:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1032:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventOUTEP(uint32_t event, const uint8_t ep_num)
1033:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2696              	 .loc 1 1033 0
 2697              	 .cfi_startproc
 2698              	 
 2699              	 
 2700              	 
 2701 0000 80B4     	 push {r7}
 2702              	 .cfi_def_cfa_offset 4
 2703              	 .cfi_offset 7,-4
 2704 0002 85B0     	 sub sp,sp,#20
 2705              	 .cfi_def_cfa_offset 24
 2706 0004 00AF     	 add r7,sp,#0
 2707              	 .cfi_def_cfa_register 7
 2708 0006 7860     	 str r0,[r7,#4]
 2709 0008 0B46     	 mov r3,r1
 2710 000a FB70     	 strb r3,[r7,#3]
1034:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
1035:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2711              	 .loc 1 1035 0
 2712 000c 7B68     	 ldr r3,[r7,#4]
 2713 000e FB60     	 str r3,[r7,#12]
1036:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep_num]->doepint = clear.d32;
 2714              	 .loc 1 1036 0
 2715 0010 FB78     	 ldrb r3,[r7,#3]
 2716 0012 064A     	 ldr r2,.L166
 2717 0014 7033     	 adds r3,r3,#112
 2718 0016 9B00     	 lsls r3,r3,#2
 2719 0018 1344     	 add r3,r3,r2
 2720 001a 5B68     	 ldr r3,[r3,#4]
 2721 001c FA68     	 ldr r2,[r7,#12]
 2722 001e 9A60     	 str r2,[r3,#8]
1037:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2723              	 .loc 1 1037 0
 2724 0020 1437     	 adds r7,r7,#20
 2725              	 .cfi_def_cfa_offset 4
 2726 0022 BD46     	 mov sp,r7
 2727              	 .cfi_def_cfa_register 13
 2728              	 
 2729 0024 5DF8047B 	 ldr r7,[sp],#4
 2730              	 .cfi_restore 7
 2731              	 .cfi_def_cfa_offset 0
 2732 0028 7047     	 bx lr
 2733              	.L167:
 2734 002a 00BF     	 .align 2
 2735              	.L166:
 2736 002c 00000000 	 .word xmc_device
 2737              	 .cfi_endproc
 2738              	.LFE195:
 2740              	 .section .text.XMC_USBD_EnableEventOUTEP,"ax",%progbits
 2741              	 .align 2
 2742              	 .global XMC_USBD_EnableEventOUTEP
 2743              	 .thumb
 2744              	 .thumb_func
 2746              	XMC_USBD_EnableEventOUTEP:
 2747              	.LFB196:
1038:../Libraries/XMCLib/src/xmc_usbd.c **** 
1039:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1040:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB OUT EP events
1041:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1042:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventOUTEP(uint32_t event)
1043:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2748              	 .loc 1 1043 0
 2749              	 .cfi_startproc
 2750              	 
 2751              	 
 2752              	 
 2753 0000 80B4     	 push {r7}
 2754              	 .cfi_def_cfa_offset 4
 2755              	 .cfi_offset 7,-4
 2756 0002 85B0     	 sub sp,sp,#20
 2757              	 .cfi_def_cfa_offset 24
 2758 0004 00AF     	 add r7,sp,#0
 2759              	 .cfi_def_cfa_register 7
 2760 0006 7860     	 str r0,[r7,#4]
1044:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
1045:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint.d32 = event;
 2761              	 .loc 1 1045 0
 2762 0008 7B68     	 ldr r3,[r7,#4]
 2763 000a FB60     	 str r3,[r7,#12]
1046:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->doepmsk |= doepint.d32;
 2764              	 .loc 1 1046 0
 2765 000c 074B     	 ldr r3,.L169
 2766 000e D3F8A431 	 ldr r3,[r3,#420]
 2767 0012 064A     	 ldr r2,.L169
 2768 0014 D2F8A421 	 ldr r2,[r2,#420]
 2769 0018 5169     	 ldr r1,[r2,#20]
 2770 001a FA68     	 ldr r2,[r7,#12]
 2771 001c 0A43     	 orrs r2,r2,r1
 2772 001e 5A61     	 str r2,[r3,#20]
1047:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2773              	 .loc 1 1047 0
 2774 0020 1437     	 adds r7,r7,#20
 2775              	 .cfi_def_cfa_offset 4
 2776 0022 BD46     	 mov sp,r7
 2777              	 .cfi_def_cfa_register 13
 2778              	 
 2779 0024 5DF8047B 	 ldr r7,[sp],#4
 2780              	 .cfi_restore 7
 2781              	 .cfi_def_cfa_offset 0
 2782 0028 7047     	 bx lr
 2783              	.L170:
 2784 002a 00BF     	 .align 2
 2785              	.L169:
 2786 002c 00000000 	 .word xmc_device
 2787              	 .cfi_endproc
 2788              	.LFE196:
 2790              	 .section .text.XMC_USBD_EnableEventINEP,"ax",%progbits
 2791              	 .align 2
 2792              	 .global XMC_USBD_EnableEventINEP
 2793              	 .thumb
 2794              	 .thumb_func
 2796              	XMC_USBD_EnableEventINEP:
 2797              	.LFB197:
1048:../Libraries/XMCLib/src/xmc_usbd.c **** 
1049:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1050:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB IN EP events
1051:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1052:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventINEP(uint32_t event)
1053:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2798              	 .loc 1 1053 0
 2799              	 .cfi_startproc
 2800              	 
 2801              	 
 2802              	 
 2803 0000 80B4     	 push {r7}
 2804              	 .cfi_def_cfa_offset 4
 2805              	 .cfi_offset 7,-4
 2806 0002 85B0     	 sub sp,sp,#20
 2807              	 .cfi_def_cfa_offset 24
 2808 0004 00AF     	 add r7,sp,#0
 2809              	 .cfi_def_cfa_register 7
 2810 0006 7860     	 str r0,[r7,#4]
1054:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
1055:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint.d32 = event;
 2811              	 .loc 1 1055 0
 2812 0008 7B68     	 ldr r3,[r7,#4]
 2813 000a FB60     	 str r3,[r7,#12]
1056:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->diepmsk |= diepint.d32;
 2814              	 .loc 1 1056 0
 2815 000c 074B     	 ldr r3,.L172
 2816 000e D3F8A431 	 ldr r3,[r3,#420]
 2817 0012 064A     	 ldr r2,.L172
 2818 0014 D2F8A421 	 ldr r2,[r2,#420]
 2819 0018 1169     	 ldr r1,[r2,#16]
 2820 001a FA68     	 ldr r2,[r7,#12]
 2821 001c 0A43     	 orrs r2,r2,r1
 2822 001e 1A61     	 str r2,[r3,#16]
1057:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2823              	 .loc 1 1057 0
 2824 0020 1437     	 adds r7,r7,#20
 2825              	 .cfi_def_cfa_offset 4
 2826 0022 BD46     	 mov sp,r7
 2827              	 .cfi_def_cfa_register 13
 2828              	 
 2829 0024 5DF8047B 	 ldr r7,[sp],#4
 2830              	 .cfi_restore 7
 2831              	 .cfi_def_cfa_offset 0
 2832 0028 7047     	 bx lr
 2833              	.L173:
 2834 002a 00BF     	 .align 2
 2835              	.L172:
 2836 002c 00000000 	 .word xmc_device
 2837              	 .cfi_endproc
 2838              	.LFE197:
 2840              	 .section .text.XMC_USBD_GetCapabilities,"ax",%progbits
 2841              	 .align 2
 2842              	 .global XMC_USBD_GetCapabilities
 2843              	 .thumb
 2844              	 .thumb_func
 2846              	XMC_USBD_GetCapabilities:
 2847              	.LFB198:
1058:../Libraries/XMCLib/src/xmc_usbd.c **** 
1059:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1060:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device capabilities
1061:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1062:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_CAPABILITIES_t XMC_USBD_GetCapabilities()
1063:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2848              	 .loc 1 1063 0
 2849              	 .cfi_startproc
 2850              	 
 2851              	 
 2852              	 
 2853 0000 80B4     	 push {r7}
 2854              	 .cfi_def_cfa_offset 4
 2855              	 .cfi_offset 7,-4
 2856 0002 83B0     	 sub sp,sp,#12
 2857              	 .cfi_def_cfa_offset 16
 2858 0004 00AF     	 add r7,sp,#0
 2859              	 .cfi_def_cfa_register 7
1064:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_CAPABILITIES_t cap = {0U};
 2860              	 .loc 1 1064 0
 2861 0006 0023     	 movs r3,#0
 2862 0008 7B60     	 str r3,[r7,#4]
1065:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_connect = 1U;
 2863              	 .loc 1 1065 0
 2864 000a 3B79     	 ldrb r3,[r7,#4]
 2865 000c 43F00403 	 orr r3,r3,#4
 2866 0010 3B71     	 strb r3,[r7,#4]
1066:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_disconnect = 1U;
 2867              	 .loc 1 1066 0
 2868 0012 3B79     	 ldrb r3,[r7,#4]
 2869 0014 43F00803 	 orr r3,r3,#8
 2870 0018 3B71     	 strb r3,[r7,#4]
1067:../Libraries/XMCLib/src/xmc_usbd.c **** #if UC_SERIES == 45
1068:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 1U;
1069:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 1U;
1070:../Libraries/XMCLib/src/xmc_usbd.c **** #else
1071:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 0U;
 2871              	 .loc 1 1071 0
 2872 001a 3B79     	 ldrb r3,[r7,#4]
 2873 001c 6FF34103 	 bfc r3,#1,#1
 2874 0020 3B71     	 strb r3,[r7,#4]
1072:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 0U;
 2875              	 .loc 1 1072 0
 2876 0022 3B79     	 ldrb r3,[r7,#4]
 2877 0024 6FF30003 	 bfc r3,#0,#1
 2878 0028 3B71     	 strb r3,[r7,#4]
1073:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
1074:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_high_speed = 0U;
 2879              	 .loc 1 1074 0
 2880 002a 3B79     	 ldrb r3,[r7,#4]
 2881 002c 6FF34513 	 bfc r3,#5,#1
 2882 0030 3B71     	 strb r3,[r7,#4]
1075:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_remote_wakeup = 1U;
 2883              	 .loc 1 1075 0
 2884 0032 7B79     	 ldrb r3,[r7,#5]
 2885 0034 43F00103 	 orr r3,r3,#1
 2886 0038 7B71     	 strb r3,[r7,#5]
1076:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_reset = 1U;
 2887              	 .loc 1 1076 0
 2888 003a 3B79     	 ldrb r3,[r7,#4]
 2889 003c 43F01003 	 orr r3,r3,#16
 2890 0040 3B71     	 strb r3,[r7,#4]
1077:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_resume = 1U;
 2891              	 .loc 1 1077 0
 2892 0042 3B79     	 ldrb r3,[r7,#4]
 2893 0044 43F08003 	 orr r3,r3,#128
 2894 0048 3B71     	 strb r3,[r7,#4]
1078:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_suspend = 1U;
 2895              	 .loc 1 1078 0
 2896 004a 3B79     	 ldrb r3,[r7,#4]
 2897 004c 43F04003 	 orr r3,r3,#64
 2898 0050 3B71     	 strb r3,[r7,#4]
1079:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.reserved = 0U;
 2899              	 .loc 1 1079 0
 2900 0052 7B68     	 ldr r3,[r7,#4]
 2901 0054 6FF35F23 	 bfc r3,#9,#23
 2902 0058 7B60     	 str r3,[r7,#4]
1080:../Libraries/XMCLib/src/xmc_usbd.c ****   return cap;
 2903              	 .loc 1 1080 0
 2904 005a 7B68     	 ldr r3,[r7,#4]
1081:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2905              	 .loc 1 1081 0
 2906 005c 1846     	 mov r0,r3
 2907 005e 0C37     	 adds r7,r7,#12
 2908              	 .cfi_def_cfa_offset 4
 2909 0060 BD46     	 mov sp,r7
 2910              	 .cfi_def_cfa_register 13
 2911              	 
 2912 0062 5DF8047B 	 ldr r7,[sp],#4
 2913              	 .cfi_restore 7
 2914              	 .cfi_def_cfa_offset 0
 2915 0066 7047     	 bx lr
 2916              	 .cfi_endproc
 2917              	.LFE198:
 2919              	 .section .text.XMC_USBD_Init,"ax",%progbits
 2920              	 .align 2
 2921              	 .global XMC_USBD_Init
 2922              	 .thumb
 2923              	 .thumb_func
 2925              	XMC_USBD_Init:
 2926              	.LFB199:
1082:../Libraries/XMCLib/src/xmc_usbd.c **** 
1083:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1084:../Libraries/XMCLib/src/xmc_usbd.c ****  * Initializes the USB device
1085:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1086:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Init(XMC_USBD_t *obj)
1087:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2927              	 .loc 1 1087 0
 2928              	 .cfi_startproc
 2929              	 
 2930              	 
 2931 0000 80B5     	 push {r7,lr}
 2932              	 .cfi_def_cfa_offset 8
 2933              	 .cfi_offset 7,-8
 2934              	 .cfi_offset 14,-4
 2935 0002 8AB0     	 sub sp,sp,#40
 2936              	 .cfi_def_cfa_offset 48
 2937 0004 00AF     	 add r7,sp,#0
 2938              	 .cfi_def_cfa_register 7
 2939 0006 7860     	 str r0,[r7,#4]
1088:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
1089:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
1090:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg_data_t gahbcfg;
1091:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
1092:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
1093:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1094:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
1095:../Libraries/XMCLib/src/xmc_usbd.c **** 
1096:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_ASSERT("XMC_USBD_Init: obj.usbd_max_num_eps not of type XMC_USBD_MAX_NUM_EPS_t",
1097:../Libraries/XMCLib/src/xmc_usbd.c ****              XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(obj->usbd_max_num_eps))
1098:../Libraries/XMCLib/src/xmc_usbd.c **** 
1099:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_Enable();
 2940              	 .loc 1 1099 0
 2941 0008 FFF7FEFF 	 bl XMC_USBD_Enable
1100:../Libraries/XMCLib/src/xmc_usbd.c **** 
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   usbd_init = obj;
 2942              	 .loc 1 1101 0
 2943 000c 874A     	 ldr r2,.L189
 2944 000e 7B68     	 ldr r3,[r7,#4]
 2945 0010 1360     	 str r3,[r2]
1102:../Libraries/XMCLib/src/xmc_usbd.c **** 
1103:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Filling out buffer size */
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 2946              	 .loc 1 1104 0
 2947 0012 0023     	 movs r3,#0
 2948 0014 7B62     	 str r3,[r7,#36]
 2949 0016 0CE0     	 b .L177
 2950              	.L178:
1105:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1106:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_EP_OUT_BUFFERSIZE[i] = XMC_USBD_EP0_BUFFER_SIZE;
 2951              	 .loc 1 1106 0 discriminator 3
 2952 0018 854A     	 ldr r2,.L189+4
 2953 001a 7B6A     	 ldr r3,[r7,#36]
 2954 001c 4021     	 movs r1,#64
 2955 001e 42F82310 	 str r1,[r2,r3,lsl#2]
1107:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 2956              	 .loc 1 1107 0 discriminator 3
 2957 0022 844A     	 ldr r2,.L189+8
 2958 0024 7B6A     	 ldr r3,[r7,#36]
 2959 0026 4021     	 movs r1,#64
 2960 0028 42F82310 	 str r1,[r2,r3,lsl#2]
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2961              	 .loc 1 1104 0 discriminator 3
 2962 002c 7B6A     	 ldr r3,[r7,#36]
 2963 002e 0133     	 adds r3,r3,#1
 2964 0030 7B62     	 str r3,[r7,#36]
 2965              	.L177:
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2966              	 .loc 1 1104 0 is_stmt 0 discriminator 1
 2967 0032 7B6A     	 ldr r3,[r7,#36]
 2968 0034 062B     	 cmp r3,#6
 2969 0036 EFD9     	 bls .L178
1108:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1109:../Libraries/XMCLib/src/xmc_usbd.c **** 
1110:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear device status */
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void *)&xmc_device, 0x0U, sizeof(XMC_USBD_DEVICE_t));
 2970              	 .loc 1 1111 0 is_stmt 1
 2971 0038 7F48     	 ldr r0,.L189+12
 2972 003a 0021     	 movs r1,#0
 2973 003c 4FF40272 	 mov r2,#520
 2974 0040 FFF7FEFF 	 bl memset
1112:../Libraries/XMCLib/src/xmc_usbd.c **** 
1113:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign callbacks */
1114:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb = obj->cb_xmc_device_event;
 2975              	 .loc 1 1114 0
 2976 0044 7B68     	 ldr r3,[r7,#4]
 2977 0046 5B68     	 ldr r3,[r3,#4]
 2978 0048 7B4A     	 ldr r2,.L189+12
 2979 004a C2F80032 	 str r3,[r2,#512]
1115:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
 2980              	 .loc 1 1115 0
 2981 004e 7B68     	 ldr r3,[r7,#4]
 2982 0050 9B68     	 ldr r3,[r3,#8]
 2983 0052 794A     	 ldr r2,.L189+12
 2984 0054 C2F80432 	 str r3,[r2,#516]
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
 2985              	 .loc 1 1116 0
 2986 0058 7B68     	 ldr r3,[r7,#4]
 2987 005a 1B68     	 ldr r3,[r3]
 2988 005c 3B62     	 str r3,[r7,#32]
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign register address */
1118:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register = (dwc_otg_core_global_regs_t *)(obj->usbd);
 2989              	 .loc 1 1118 0
 2990 005e 7B68     	 ldr r3,[r7,#4]
 2991 0060 1B68     	 ldr r3,[r3]
 2992 0062 754A     	 ldr r2,.L189+12
 2993 0064 C2F8A031 	 str r3,[r2,#416]
1119:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t *)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GL
 2994              	 .loc 1 1119 0
 2995 0068 3B6A     	 ldr r3,[r7,#32]
 2996 006a 03F50063 	 add r3,r3,#2048
 2997 006e 724A     	 ldr r2,.L189+12
 2998 0070 C2F8A431 	 str r3,[r2,#420]
1120:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 2999              	 .loc 1 1120 0
 3000 0074 0023     	 movs r3,#0
 3001 0076 7B62     	 str r3,[r7,#36]
 3002 0078 0CE0     	 b .L179
 3003              	.L180:
1121:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1122:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[i] = (dwc_otg_dev_in_ep_regs_t *)(XMC_USBD_BASE_ADDRESS + DWC_D
 3004              	 .loc 1 1122 0 discriminator 3
 3005 007a 7B6A     	 ldr r3,[r7,#36]
 3006 007c 4833     	 adds r3,r3,#72
 3007 007e 5B01     	 lsls r3,r3,#5
 3008 0080 3A6A     	 ldr r2,[r7,#32]
 3009 0082 1A44     	 add r2,r2,r3
 3010 0084 6C49     	 ldr r1,.L189+12
 3011 0086 7B6A     	 ldr r3,[r7,#36]
 3012 0088 6A33     	 adds r3,r3,#106
 3013 008a 41F82320 	 str r2,[r1,r3,lsl#2]
1120:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3014              	 .loc 1 1120 0 discriminator 3
 3015 008e 7B6A     	 ldr r3,[r7,#36]
 3016 0090 0133     	 adds r3,r3,#1
 3017 0092 7B62     	 str r3,[r7,#36]
 3018              	.L179:
1120:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3019              	 .loc 1 1120 0 is_stmt 0 discriminator 1
 3020 0094 7B6A     	 ldr r3,[r7,#36]
 3021 0096 062B     	 cmp r3,#6
 3022 0098 EFD9     	 bls .L180
1123:../Libraries/XMCLib/src/xmc_usbd.c ****                                          ((uint32_t)DWC_EP_REG_OFFSET * i));
1124:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1125:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3023              	 .loc 1 1125 0 is_stmt 1
 3024 009a 0023     	 movs r3,#0
 3025 009c 7B62     	 str r3,[r7,#36]
 3026 009e 0DE0     	 b .L181
 3027              	.L182:
1126:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1127:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i] = (dwc_otg_dev_out_ep_regs_t *)(XMC_USBD_BASE_ADDRESS +
1128:../Libraries/XMCLib/src/xmc_usbd.c ****                                           DWC_DEV_OUT_EP_REG_OFFSET +
 3028              	 .loc 1 1128 0 discriminator 3
 3029 00a0 7B6A     	 ldr r3,[r7,#36]
 3030 00a2 5833     	 adds r3,r3,#88
 3031 00a4 5B01     	 lsls r3,r3,#5
 3032 00a6 3A6A     	 ldr r2,[r7,#32]
 3033 00a8 1A44     	 add r2,r2,r3
1127:../Libraries/XMCLib/src/xmc_usbd.c ****                                           DWC_DEV_OUT_EP_REG_OFFSET +
 3034              	 .loc 1 1127 0 discriminator 3
 3035 00aa 6349     	 ldr r1,.L189+12
 3036 00ac 7B6A     	 ldr r3,[r7,#36]
 3037 00ae 7033     	 adds r3,r3,#112
 3038 00b0 9B00     	 lsls r3,r3,#2
 3039 00b2 0B44     	 add r3,r3,r1
 3040 00b4 5A60     	 str r2,[r3,#4]
1125:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3041              	 .loc 1 1125 0 discriminator 3
 3042 00b6 7B6A     	 ldr r3,[r7,#36]
 3043 00b8 0133     	 adds r3,r3,#1
 3044 00ba 7B62     	 str r3,[r7,#36]
 3045              	.L181:
1125:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3046              	 .loc 1 1125 0 is_stmt 0 discriminator 1
 3047 00bc 7B6A     	 ldr r3,[r7,#36]
 3048 00be 062B     	 cmp r3,#6
 3049 00c0 EED9     	 bls .L182
1129:../Libraries/XMCLib/src/xmc_usbd.c ****                                           ((uint32_t)DWC_EP_REG_OFFSET * i));
1130:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1131:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_TX_FIFOS; i++)
 3050              	 .loc 1 1131 0 is_stmt 1
 3051 00c2 0023     	 movs r3,#0
 3052 00c4 7B62     	 str r3,[r7,#36]
 3053 00c6 0CE0     	 b .L183
 3054              	.L184:
1132:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1133:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.fifo[i] = (uint32_t *)(XMC_USBD_BASE_ADDRESS +
1134:../Libraries/XMCLib/src/xmc_usbd.c ****                                       XMC_USBD_TX_FIFO_REG_OFFSET +
 3055              	 .loc 1 1134 0 discriminator 3
 3056 00c8 7B6A     	 ldr r3,[r7,#36]
 3057 00ca 0133     	 adds r3,r3,#1
 3058 00cc 1B03     	 lsls r3,r3,#12
 3059 00ce 3A6A     	 ldr r2,[r7,#32]
 3060 00d0 1A44     	 add r2,r2,r3
1133:../Libraries/XMCLib/src/xmc_usbd.c ****                                       XMC_USBD_TX_FIFO_REG_OFFSET +
 3061              	 .loc 1 1133 0 discriminator 3
 3062 00d2 5949     	 ldr r1,.L189+12
 3063 00d4 7B6A     	 ldr r3,[r7,#36]
 3064 00d6 7833     	 adds r3,r3,#120
 3065 00d8 41F82320 	 str r2,[r1,r3,lsl#2]
1131:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3066              	 .loc 1 1131 0 discriminator 3
 3067 00dc 7B6A     	 ldr r3,[r7,#36]
 3068 00de 0133     	 adds r3,r3,#1
 3069 00e0 7B62     	 str r3,[r7,#36]
 3070              	.L183:
1131:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3071              	 .loc 1 1131 0 is_stmt 0 discriminator 1
 3072 00e2 7B6A     	 ldr r3,[r7,#36]
 3073 00e4 062B     	 cmp r3,#6
 3074 00e6 EFD9     	 bls .L184
1135:../Libraries/XMCLib/src/xmc_usbd.c ****                                       (i * XMC_USBD_TX_FIFO_OFFSET));
1136:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1137:../Libraries/XMCLib/src/xmc_usbd.c ****   /* obj data structure for endpoint 0 */
1138:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Done by driver core */
1139:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure ahb details */
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.d32 = xmc_device.global_register->gahbcfg;
 3075              	 .loc 1 1140 0 is_stmt 1
 3076 00e8 534B     	 ldr r3,.L189+12
 3077 00ea D3F8A031 	 ldr r3,[r3,#416]
 3078 00ee 9B68     	 ldr r3,[r3,#8]
 3079 00f0 FB61     	 str r3,[r7,#28]
1141:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
 3080              	 .loc 1 1141 0
 3081 00f2 3B7F     	 ldrb r3,[r7,#28]
 3082 00f4 43F00103 	 orr r3,r3,#1
 3083 00f8 3B77     	 strb r3,[r7,#28]
1142:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.nptxfemplvl_txfemplvl = 1U;
 3084              	 .loc 1 1142 0
 3085 00fa 3B7F     	 ldrb r3,[r7,#28]
 3086 00fc 43F08003 	 orr r3,r3,#128
 3087 0100 3B77     	 strb r3,[r7,#28]
1143:../Libraries/XMCLib/src/xmc_usbd.c ****   if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 3088              	 .loc 1 1143 0
 3089 0102 7B68     	 ldr r3,[r7,#4]
 3090 0104 5B7B     	 ldrb r3,[r3,#13]
 3091 0106 002B     	 cmp r3,#0
 3092 0108 04D1     	 bne .L185
1144:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1145:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Enable dma if needed */
1146:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 1U; /* enable dma if needed */
 3093              	 .loc 1 1146 0
 3094 010a 3B7F     	 ldrb r3,[r7,#28]
 3095 010c 43F02003 	 orr r3,r3,#32
 3096 0110 3B77     	 strb r3,[r7,#28]
 3097 0112 03E0     	 b .L186
 3098              	.L185:
1147:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1148:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1149:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1150:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 0U;
 3099              	 .loc 1 1150 0
 3100 0114 3B7F     	 ldrb r3,[r7,#28]
 3101 0116 6FF34513 	 bfc r3,#5,#1
 3102 011a 3B77     	 strb r3,[r7,#28]
 3103              	.L186:
1151:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1152:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gahbcfg = gahbcfg.d32;
 3104              	 .loc 1 1152 0
 3105 011c 464B     	 ldr r3,.L189+12
 3106 011e D3F8A031 	 ldr r3,[r3,#416]
 3107 0122 FA69     	 ldr r2,[r7,#28]
 3108 0124 9A60     	 str r2,[r3,#8]
1153:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure usb details */
1154:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 3109              	 .loc 1 1154 0
 3110 0126 444B     	 ldr r3,.L189+12
 3111 0128 D3F8A031 	 ldr r3,[r3,#416]
 3112 012c DB68     	 ldr r3,[r3,#12]
 3113 012e BB61     	 str r3,[r7,#24]
1155:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
 3114              	 .loc 1 1155 0
 3115 0130 FB7E     	 ldrb r3,[r7,#27]
 3116 0132 43F04003 	 orr r3,r3,#64
 3117 0136 FB76     	 strb r3,[r7,#27]
1156:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.srpcap = 1U; /* enable session request protocoll */
 3118              	 .loc 1 1156 0
 3119 0138 7B7E     	 ldrb r3,[r7,#25]
 3120 013a 43F00103 	 orr r3,r3,#1
 3121 013e 7B76     	 strb r3,[r7,#25]
1157:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 3122              	 .loc 1 1157 0
 3123 0140 3D4B     	 ldr r3,.L189+12
 3124 0142 D3F8A031 	 ldr r3,[r3,#416]
 3125 0146 BA69     	 ldr r2,[r7,#24]
 3126 0148 DA60     	 str r2,[r3,#12]
1158:../Libraries/XMCLib/src/xmc_usbd.c **** 
1159:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Device init */
1160:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device speed */
1161:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 3127              	 .loc 1 1161 0
 3128 014a 3B4B     	 ldr r3,.L189+12
 3129 014c D3F8A431 	 ldr r3,[r3,#420]
 3130 0150 1B68     	 ldr r3,[r3]
 3131 0152 7B61     	 str r3,[r7,#20]
1162:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
 3132              	 .loc 1 1162 0
 3133 0154 3B7D     	 ldrb r3,[r7,#20]
 3134 0156 43F00303 	 orr r3,r3,#3
 3135 015a 3B75     	 strb r3,[r7,#20]
1163:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
 3136              	 .loc 1 1163 0
 3137 015c BB7D     	 ldrb r3,[r7,#22]
 3138 015e 6FF3C713 	 bfc r3,#7,#1
 3139 0162 BB75     	 strb r3,[r7,#22]
1164:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 3140              	 .loc 1 1164 0
 3141 0164 344B     	 ldr r3,.L189+12
 3142 0166 D3F8A431 	 ldr r3,[r3,#420]
 3143 016a 7A69     	 ldr r2,[r7,#20]
 3144 016c 1A60     	 str r2,[r3]
1165:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device functions */
1166:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3145              	 .loc 1 1166 0
 3146 016e 324B     	 ldr r3,.L189+12
 3147 0170 D3F8A431 	 ldr r3,[r3,#420]
 3148 0174 5B68     	 ldr r3,[r3,#4]
 3149 0176 3B61     	 str r3,[r7,#16]
1167:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
 3150              	 .loc 1 1167 0
 3151 0178 3B7C     	 ldrb r3,[r7,#16]
 3152 017a 43F00203 	 orr r3,r3,#2
 3153 017e 3B74     	 strb r3,[r7,#16]
1168:../Libraries/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
1169:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3154              	 .loc 1 1169 0
 3155 0180 2D4B     	 ldr r3,.L189+12
 3156 0182 D3F8A431 	 ldr r3,[r3,#420]
 3157 0186 3A69     	 ldr r2,[r7,#16]
 3158 0188 5A60     	 str r2,[r3,#4]
1170:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
1171:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo((uint8_t)0x10U); /* 0x10 == all fifos, see doc */
 3159              	 .loc 1 1171 0
 3160 018a 1020     	 movs r0,#16
 3161 018c FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 3162              	 .loc 1 1172 0
 3163 0190 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
1173:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Enable Global Interrupts */
1174:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt status bits prior to unmasking */
1175:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = 0U; /* disable all interrupts */
 3164              	 .loc 1 1175 0
 3165 0194 284B     	 ldr r3,.L189+12
 3166 0196 D3F8A031 	 ldr r3,[r3,#416]
 3167 019a 0022     	 movs r2,#0
 3168 019c 9A61     	 str r2,[r3,#24]
1176:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
 3169              	 .loc 1 1176 0
 3170 019e 264B     	 ldr r3,.L189+12
 3171 01a0 D3F8A031 	 ldr r3,[r3,#416]
 3172 01a4 4FF0FF32 	 mov r2,#-1
 3173 01a8 5A61     	 str r2,[r3,#20]
1177:../Libraries/XMCLib/src/xmc_usbd.c **** 
1178:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = 0U;
 3174              	 .loc 1 1178 0
 3175 01aa 0023     	 movs r3,#0
 3176 01ac FB60     	 str r3,[r7,#12]
1179:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable common interrupts */
1180:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.modemismatch = 1U;
 3177              	 .loc 1 1180 0
 3178 01ae 3B7B     	 ldrb r3,[r7,#12]
 3179 01b0 43F00203 	 orr r3,r3,#2
 3180 01b4 3B73     	 strb r3,[r7,#12]
1181:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.otgintr = 1U;
 3181              	 .loc 1 1181 0
 3182 01b6 3B7B     	 ldrb r3,[r7,#12]
 3183 01b8 43F00403 	 orr r3,r3,#4
 3184 01bc 3B73     	 strb r3,[r7,#12]
1182:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sessreqintr = 1U;
 3185              	 .loc 1 1182 0
 3186 01be FB7B     	 ldrb r3,[r7,#15]
 3187 01c0 43F04003 	 orr r3,r3,#64
 3188 01c4 FB73     	 strb r3,[r7,#15]
1183:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable device interrupts */
1184:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbreset = 1U;
 3189              	 .loc 1 1184 0
 3190 01c6 7B7B     	 ldrb r3,[r7,#13]
 3191 01c8 43F01003 	 orr r3,r3,#16
 3192 01cc 7B73     	 strb r3,[r7,#13]
1185:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.enumdone = 1U;
 3193              	 .loc 1 1185 0
 3194 01ce 7B7B     	 ldrb r3,[r7,#13]
 3195 01d0 43F02003 	 orr r3,r3,#32
 3196 01d4 7B73     	 strb r3,[r7,#13]
1186:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.erlysuspend = 1U;
 3197              	 .loc 1 1186 0
 3198 01d6 7B7B     	 ldrb r3,[r7,#13]
 3199 01d8 43F00403 	 orr r3,r3,#4
 3200 01dc 7B73     	 strb r3,[r7,#13]
1187:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbsuspend = 1U;
 3201              	 .loc 1 1187 0
 3202 01de 7B7B     	 ldrb r3,[r7,#13]
 3203 01e0 43F00803 	 orr r3,r3,#8
 3204 01e4 7B73     	 strb r3,[r7,#13]
1188:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.wkupintr = 1U;
 3205              	 .loc 1 1188 0
 3206 01e6 FB7B     	 ldrb r3,[r7,#15]
 3207 01e8 43F08003 	 orr r3,r3,#128
 3208 01ec FB73     	 strb r3,[r7,#15]
1189:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sofintr = 1U;
 3209              	 .loc 1 1189 0
 3210 01ee 3B7B     	 ldrb r3,[r7,#12]
 3211 01f0 43F00803 	 orr r3,r3,#8
 3212 01f4 3B73     	 strb r3,[r7,#12]
1190:../Libraries/XMCLib/src/xmc_usbd.c ****   if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 3213              	 .loc 1 1190 0
 3214 01f6 7B68     	 ldr r3,[r7,#4]
 3215 01f8 5B7B     	 ldrb r3,[r3,#13]
 3216 01fa 012B     	 cmp r3,#1
 3217 01fc 03D1     	 bne .L187
1191:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1192:../Libraries/XMCLib/src/xmc_usbd.c ****     gintmsk.b.rxstsqlvl = 1U;
 3218              	 .loc 1 1192 0
 3219 01fe 3B7B     	 ldrb r3,[r7,#12]
 3220 0200 43F01003 	 orr r3,r3,#16
 3221 0204 3B73     	 strb r3,[r7,#12]
 3222              	.L187:
1193:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1194:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.outepintr = 1U;
 3223              	 .loc 1 1194 0
 3224 0206 BB7B     	 ldrb r3,[r7,#14]
 3225 0208 43F00803 	 orr r3,r3,#8
 3226 020c BB73     	 strb r3,[r7,#14]
1195:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.inepintr = 1U;
 3227              	 .loc 1 1195 0
 3228 020e BB7B     	 ldrb r3,[r7,#14]
 3229 0210 43F00403 	 orr r3,r3,#4
 3230 0214 BB73     	 strb r3,[r7,#14]
1196:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
 3231              	 .loc 1 1196 0
 3232 0216 084B     	 ldr r3,.L189+12
 3233 0218 D3F8A031 	 ldr r3,[r3,#416]
 3234 021c FA68     	 ldr r2,[r7,#12]
 3235 021e 9A61     	 str r2,[r3,#24]
1197:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3236              	 .loc 1 1197 0
 3237 0220 0023     	 movs r3,#0
1198:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3238              	 .loc 1 1198 0
 3239 0222 1846     	 mov r0,r3
 3240 0224 2837     	 adds r7,r7,#40
 3241              	 .cfi_def_cfa_offset 8
 3242 0226 BD46     	 mov sp,r7
 3243              	 .cfi_def_cfa_register 13
 3244              	 
 3245 0228 80BD     	 pop {r7,pc}
 3246              	.L190:
 3247 022a 00BF     	 .align 2
 3248              	.L189:
 3249 022c 00000000 	 .word usbd_init
 3250 0230 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 3251 0234 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 3252 0238 00000000 	 .word xmc_device
 3253              	 .cfi_endproc
 3254              	.LFE199:
 3256              	 .section .text.XMC_USBD_Uninitialize,"ax",%progbits
 3257              	 .align 2
 3258              	 .global XMC_USBD_Uninitialize
 3259              	 .thumb
 3260              	 .thumb_func
 3262              	XMC_USBD_Uninitialize:
 3263              	.LFB200:
1199:../Libraries/XMCLib/src/xmc_usbd.c **** 
1200:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1201:../Libraries/XMCLib/src/xmc_usbd.c ****  * Uninitializes the USB device
1202:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1203:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Uninitialize()
1204:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3264              	 .loc 1 1204 0
 3265              	 .cfi_startproc
 3266              	 
 3267              	 
 3268 0000 80B5     	 push {r7,lr}
 3269              	 .cfi_def_cfa_offset 8
 3270              	 .cfi_offset 7,-8
 3271              	 .cfi_offset 14,-4
 3272 0002 82B0     	 sub sp,sp,#8
 3273              	 .cfi_def_cfa_offset 16
 3274 0004 00AF     	 add r7,sp,#0
 3275              	 .cfi_def_cfa_register 7
1205:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
1206:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1207:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3276              	 .loc 1 1207 0
 3277 0006 0C4B     	 ldr r3,.L193
 3278 0008 D3F8A431 	 ldr r3,[r3,#420]
 3279 000c 5B68     	 ldr r3,[r3,#4]
 3280 000e 7B60     	 str r3,[r7,#4]
1208:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3281              	 .loc 1 1208 0
 3282 0010 3B79     	 ldrb r3,[r7,#4]
 3283 0012 43F00203 	 orr r3,r3,#2
 3284 0016 3B71     	 strb r3,[r7,#4]
1209:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3285              	 .loc 1 1209 0
 3286 0018 074B     	 ldr r3,.L193
 3287 001a D3F8A431 	 ldr r3,[r3,#420]
 3288 001e 7A68     	 ldr r2,[r7,#4]
 3289 0020 5A60     	 str r2,[r3,#4]
1210:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clean up */
1211:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void *)&xmc_device, 0U, sizeof(xmc_device));
 3290              	 .loc 1 1211 0
 3291 0022 0548     	 ldr r0,.L193
 3292 0024 0021     	 movs r1,#0
 3293 0026 4FF40272 	 mov r2,#520
 3294 002a FFF7FEFF 	 bl memset
1212:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3295              	 .loc 1 1212 0
 3296 002e 0023     	 movs r3,#0
1213:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3297              	 .loc 1 1213 0
 3298 0030 1846     	 mov r0,r3
 3299 0032 0837     	 adds r7,r7,#8
 3300              	 .cfi_def_cfa_offset 8
 3301 0034 BD46     	 mov sp,r7
 3302              	 .cfi_def_cfa_register 13
 3303              	 
 3304 0036 80BD     	 pop {r7,pc}
 3305              	.L194:
 3306              	 .align 2
 3307              	.L193:
 3308 0038 00000000 	 .word xmc_device
 3309              	 .cfi_endproc
 3310              	.LFE200:
 3312              	 .section .text.XMC_USBD_DeviceConnect,"ax",%progbits
 3313              	 .align 2
 3314              	 .global XMC_USBD_DeviceConnect
 3315              	 .thumb
 3316              	 .thumb_func
 3318              	XMC_USBD_DeviceConnect:
 3319              	.LFB201:
1214:../Libraries/XMCLib/src/xmc_usbd.c **** 
1215:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1216:../Libraries/XMCLib/src/xmc_usbd.c ****  * Connects the USB device to host
1217:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1218:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceConnect()
1219:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3320              	 .loc 1 1219 0
 3321              	 .cfi_startproc
 3322              	 
 3323              	 
 3324              	 
 3325 0000 80B4     	 push {r7}
 3326              	 .cfi_def_cfa_offset 4
 3327              	 .cfi_offset 7,-4
 3328 0002 83B0     	 sub sp,sp,#12
 3329              	 .cfi_def_cfa_offset 16
 3330 0004 00AF     	 add r7,sp,#0
 3331              	 .cfi_def_cfa_register 7
1220:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Just disable softdisconnect */
1221:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1222:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3332              	 .loc 1 1222 0
 3333 0006 0A4B     	 ldr r3,.L197
 3334 0008 D3F8A431 	 ldr r3,[r3,#420]
 3335 000c 5B68     	 ldr r3,[r3,#4]
 3336 000e 7B60     	 str r3,[r7,#4]
1223:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 0U;
 3337              	 .loc 1 1223 0
 3338 0010 3B79     	 ldrb r3,[r7,#4]
 3339 0012 6FF34103 	 bfc r3,#1,#1
 3340 0016 3B71     	 strb r3,[r7,#4]
1224:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3341              	 .loc 1 1224 0
 3342 0018 054B     	 ldr r3,.L197
 3343 001a D3F8A431 	 ldr r3,[r3,#420]
 3344 001e 7A68     	 ldr r2,[r7,#4]
 3345 0020 5A60     	 str r2,[r3,#4]
1225:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3346              	 .loc 1 1225 0
 3347 0022 0023     	 movs r3,#0
1226:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3348              	 .loc 1 1226 0
 3349 0024 1846     	 mov r0,r3
 3350 0026 0C37     	 adds r7,r7,#12
 3351              	 .cfi_def_cfa_offset 4
 3352 0028 BD46     	 mov sp,r7
 3353              	 .cfi_def_cfa_register 13
 3354              	 
 3355 002a 5DF8047B 	 ldr r7,[sp],#4
 3356              	 .cfi_restore 7
 3357              	 .cfi_def_cfa_offset 0
 3358 002e 7047     	 bx lr
 3359              	.L198:
 3360              	 .align 2
 3361              	.L197:
 3362 0030 00000000 	 .word xmc_device
 3363              	 .cfi_endproc
 3364              	.LFE201:
 3366              	 .section .text.XMC_USBD_DeviceDisconnect,"ax",%progbits
 3367              	 .align 2
 3368              	 .global XMC_USBD_DeviceDisconnect
 3369              	 .thumb
 3370              	 .thumb_func
 3372              	XMC_USBD_DeviceDisconnect:
 3373              	.LFB202:
1227:../Libraries/XMCLib/src/xmc_usbd.c **** 
1228:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1229:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disconnects the USB device from host
1230:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1231:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceDisconnect()
1232:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3374              	 .loc 1 1232 0
 3375              	 .cfi_startproc
 3376              	 
 3377              	 
 3378              	 
 3379 0000 80B4     	 push {r7}
 3380              	 .cfi_def_cfa_offset 4
 3381              	 .cfi_offset 7,-4
 3382 0002 83B0     	 sub sp,sp,#12
 3383              	 .cfi_def_cfa_offset 16
 3384 0004 00AF     	 add r7,sp,#0
 3385              	 .cfi_def_cfa_register 7
1233:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1234:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3386              	 .loc 1 1234 0
 3387 0006 0A4B     	 ldr r3,.L201
 3388 0008 D3F8A431 	 ldr r3,[r3,#420]
 3389 000c 5B68     	 ldr r3,[r3,#4]
 3390 000e 7B60     	 str r3,[r7,#4]
1235:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3391              	 .loc 1 1235 0
 3392 0010 3B79     	 ldrb r3,[r7,#4]
 3393 0012 43F00203 	 orr r3,r3,#2
 3394 0016 3B71     	 strb r3,[r7,#4]
1236:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3395              	 .loc 1 1236 0
 3396 0018 054B     	 ldr r3,.L201
 3397 001a D3F8A431 	 ldr r3,[r3,#420]
 3398 001e 7A68     	 ldr r2,[r7,#4]
 3399 0020 5A60     	 str r2,[r3,#4]
1237:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3400              	 .loc 1 1237 0
 3401 0022 0023     	 movs r3,#0
1238:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3402              	 .loc 1 1238 0
 3403 0024 1846     	 mov r0,r3
 3404 0026 0C37     	 adds r7,r7,#12
 3405              	 .cfi_def_cfa_offset 4
 3406 0028 BD46     	 mov sp,r7
 3407              	 .cfi_def_cfa_register 13
 3408              	 
 3409 002a 5DF8047B 	 ldr r7,[sp],#4
 3410              	 .cfi_restore 7
 3411              	 .cfi_def_cfa_offset 0
 3412 002e 7047     	 bx lr
 3413              	.L202:
 3414              	 .align 2
 3415              	.L201:
 3416 0030 00000000 	 .word xmc_device
 3417              	 .cfi_endproc
 3418              	.LFE202:
 3420              	 .section .text.XMC_USBD_DeviceGetState,"ax",%progbits
 3421              	 .align 2
 3422              	 .global XMC_USBD_DeviceGetState
 3423              	 .thumb
 3424              	 .thumb_func
 3426              	XMC_USBD_DeviceGetState:
 3427              	.LFB203:
1239:../Libraries/XMCLib/src/xmc_usbd.c **** 
1240:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1241:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device state.
1242:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1243:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATE_t XMC_USBD_DeviceGetState(const XMC_USBD_t *const obj)
1244:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3428              	 .loc 1 1244 0
 3429              	 .cfi_startproc
 3430              	 
 3431              	 
 3432 0000 80B5     	 push {r7,lr}
 3433              	 .cfi_def_cfa_offset 8
 3434              	 .cfi_offset 7,-8
 3435              	 .cfi_offset 14,-4
 3436 0002 84B0     	 sub sp,sp,#16
 3437              	 .cfi_def_cfa_offset 24
 3438 0004 00AF     	 add r7,sp,#0
 3439              	 .cfi_def_cfa_register 7
 3440 0006 7860     	 str r0,[r7,#4]
1245:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state = {0U};
 3441              	 .loc 1 1245 0
 3442 0008 0023     	 movs r3,#0
 3443 000a FB60     	 str r3,[r7,#12]
1246:../Libraries/XMCLib/src/xmc_usbd.c ****   state.speed = XMC_USBD_SPEED_FULL;
 3444              	 .loc 1 1246 0
 3445 000c 3B7B     	 ldrb r3,[r7,#12]
 3446 000e 0122     	 movs r2,#1
 3447 0010 62F3C403 	 bfi r3,r2,#3,#2
 3448 0014 3B73     	 strb r3,[r7,#12]
1247:../Libraries/XMCLib/src/xmc_usbd.c ****   state.connected = xmc_device.IsConnected;
 3449              	 .loc 1 1247 0
 3450 0016 124B     	 ldr r3,.L205
 3451 0018 93F8FE31 	 ldrb r3,[r3,#510]
 3452 001c C3F30003 	 ubfx r3,r3,#0,#1
 3453 0020 DAB2     	 uxtb r2,r3
 3454 0022 3B7B     	 ldrb r3,[r7,#12]
 3455 0024 62F34103 	 bfi r3,r2,#1,#1
 3456 0028 3B73     	 strb r3,[r7,#12]
1248:../Libraries/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
 3457              	 .loc 1 1248 0
 3458 002a 7868     	 ldr r0,[r7,#4]
 3459 002c FFF7FEFF 	 bl XMC_USBD_lDeviceActive
 3460 0030 0346     	 mov r3,r0
 3461 0032 03F00103 	 and r3,r3,#1
 3462 0036 DAB2     	 uxtb r2,r3
 3463 0038 3B7B     	 ldrb r3,[r7,#12]
 3464 003a 62F38203 	 bfi r3,r2,#2,#1
 3465 003e 3B73     	 strb r3,[r7,#12]
1249:../Libraries/XMCLib/src/xmc_usbd.c ****   state.powered = xmc_device.IsPowered;
 3466              	 .loc 1 1249 0
 3467 0040 074B     	 ldr r3,.L205
 3468 0042 93F8FE31 	 ldrb r3,[r3,#510]
 3469 0046 C3F38003 	 ubfx r3,r3,#2,#1
 3470 004a DAB2     	 uxtb r2,r3
 3471 004c 3B7B     	 ldrb r3,[r7,#12]
 3472 004e 62F30003 	 bfi r3,r2,#0,#1
 3473 0052 3B73     	 strb r3,[r7,#12]
1250:../Libraries/XMCLib/src/xmc_usbd.c ****   return state;
 3474              	 .loc 1 1250 0
 3475 0054 FB68     	 ldr r3,[r7,#12]
1251:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3476              	 .loc 1 1251 0
 3477 0056 1846     	 mov r0,r3
 3478 0058 1037     	 adds r7,r7,#16
 3479              	 .cfi_def_cfa_offset 8
 3480 005a BD46     	 mov sp,r7
 3481              	 .cfi_def_cfa_register 13
 3482              	 
 3483 005c 80BD     	 pop {r7,pc}
 3484              	.L206:
 3485 005e 00BF     	 .align 2
 3486              	.L205:
 3487 0060 00000000 	 .word xmc_device
 3488              	 .cfi_endproc
 3489              	.LFE203:
 3491              	 .section .text.XMC_USBD_EndpointReadStart,"ax",%progbits
 3492              	 .align 2
 3493              	 .global XMC_USBD_EndpointReadStart
 3494              	 .thumb
 3495              	 .thumb_func
 3497              	XMC_USBD_EndpointReadStart:
 3498              	.LFB204:
1252:../Libraries/XMCLib/src/xmc_usbd.c **** 
1253:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1254:../Libraries/XMCLib/src/xmc_usbd.c ****  * Prepares the endpoint to read next OUT packet
1255:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1256:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointReadStart(const uint8_t ep_addr, uint32_t size)
1257:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3499              	 .loc 1 1257 0
 3500              	 .cfi_startproc
 3501              	 
 3502              	 
 3503 0000 80B5     	 push {r7,lr}
 3504              	 .cfi_def_cfa_offset 8
 3505              	 .cfi_offset 7,-8
 3506              	 .cfi_offset 14,-4
 3507 0002 84B0     	 sub sp,sp,#16
 3508              	 .cfi_def_cfa_offset 24
 3509 0004 00AF     	 add r7,sp,#0
 3510              	 .cfi_def_cfa_register 7
 3511 0006 0346     	 mov r3,r0
 3512 0008 3960     	 str r1,[r7]
 3513 000a FB71     	 strb r3,[r7,#7]
1258:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
 3514              	 .loc 1 1258 0
 3515 000c FB79     	 ldrb r3,[r7,#7]
 3516 000e 03F00F03 	 and r3,r3,#15
 3517 0012 3422     	 movs r2,#52
 3518 0014 02FB03F3 	 mul r3,r2,r3
 3519 0018 1B4A     	 ldr r2,.L213
 3520 001a 1344     	 add r3,r3,r2
 3521 001c BB60     	 str r3,[r7,#8]
1259:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1260:../Libraries/XMCLib/src/xmc_usbd.c **** 
1261:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outInUse || !ep->isConfigured)
 3522              	 .loc 1 1261 0
 3523 001e BB68     	 ldr r3,[r7,#8]
 3524 0020 5B68     	 ldr r3,[r3,#4]
 3525 0022 1B09     	 lsrs r3,r3,#4
 3526 0024 03F00103 	 and r3,r3,#1
 3527 0028 DBB2     	 uxtb r3,r3
 3528 002a 002B     	 cmp r3,#0
 3529 002c 06D1     	 bne .L208
 3530              	 .loc 1 1261 0 is_stmt 0 discriminator 1
 3531 002e BB68     	 ldr r3,[r7,#8]
 3532 0030 1B79     	 ldrb r3,[r3,#4]
 3533 0032 03F00403 	 and r3,r3,#4
 3534 0036 DBB2     	 uxtb r3,r3
 3535 0038 002B     	 cmp r3,#0
 3536 003a 02D1     	 bne .L209
 3537              	.L208:
1262:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1263:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
 3538              	 .loc 1 1263 0 is_stmt 1
 3539 003c 0123     	 movs r3,#1
 3540 003e FB73     	 strb r3,[r7,#15]
 3541 0040 1CE0     	 b .L210
 3542              	.L209:
1264:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1265:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1266:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1267:../Libraries/XMCLib/src/xmc_usbd.c ****     /* short the length to buffer size if needed */
1268:../Libraries/XMCLib/src/xmc_usbd.c ****     if (size > ep->outBufferSize)
 3543              	 .loc 1 1268 0
 3544 0042 BB68     	 ldr r3,[r7,#8]
 3545 0044 5A69     	 ldr r2,[r3,#20]
 3546 0046 3B68     	 ldr r3,[r7]
 3547 0048 9A42     	 cmp r2,r3
 3548 004a 02D2     	 bcs .L211
1269:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1270:../Libraries/XMCLib/src/xmc_usbd.c ****       size = ep->outBufferSize;
 3549              	 .loc 1 1270 0
 3550 004c BB68     	 ldr r3,[r7,#8]
 3551 004e 5B69     	 ldr r3,[r3,#20]
 3552 0050 3B60     	 str r3,[r7]
 3553              	.L211:
1271:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1272:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep values */
1273:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = size;
 3554              	 .loc 1 1273 0
 3555 0052 BB68     	 ldr r3,[r7,#8]
 3556 0054 3A68     	 ldr r2,[r7]
 3557 0056 1A63     	 str r2,[r3,#48]
1274:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 3558              	 .loc 1 1274 0
 3559 0058 BB68     	 ldr r3,[r7,#8]
 3560 005a 0022     	 movs r2,#0
 3561 005c DA62     	 str r2,[r3,#44]
1275:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 3562              	 .loc 1 1275 0
 3563 005e BB68     	 ldr r3,[r7,#8]
 3564 0060 0022     	 movs r2,#0
 3565 0062 9A62     	 str r2,[r3,#40]
1276:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->outBuffer;
 3566              	 .loc 1 1276 0
 3567 0064 BB68     	 ldr r3,[r7,#8]
 3568 0066 DA68     	 ldr r2,[r3,#12]
 3569 0068 BB68     	 ldr r3,[r7,#8]
 3570 006a 5A62     	 str r2,[r3,#36]
1277:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outBytesAvailable = 0U;
 3571              	 .loc 1 1277 0
 3572 006c BB68     	 ldr r3,[r7,#8]
 3573 006e 0022     	 movs r2,#0
 3574 0070 1A61     	 str r2,[r3,#16]
1278:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartReadXfer(ep);
 3575              	 .loc 1 1278 0
 3576 0072 B868     	 ldr r0,[r7,#8]
 3577 0074 FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
1279:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 3578              	 .loc 1 1279 0
 3579 0078 0023     	 movs r3,#0
 3580 007a FB73     	 strb r3,[r7,#15]
 3581              	.L210:
1280:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1281:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 3582              	 .loc 1 1281 0
 3583 007c FB7B     	 ldrb r3,[r7,#15]
1282:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3584              	 .loc 1 1282 0
 3585 007e 1846     	 mov r0,r3
 3586 0080 1037     	 adds r7,r7,#16
 3587              	 .cfi_def_cfa_offset 8
 3588 0082 BD46     	 mov sp,r7
 3589              	 .cfi_def_cfa_register 13
 3590              	 
 3591 0084 80BD     	 pop {r7,pc}
 3592              	.L214:
 3593 0086 00BF     	 .align 2
 3594              	.L213:
 3595 0088 00000000 	 .word xmc_device
 3596              	 .cfi_endproc
 3597              	.LFE204:
 3599              	 .section .text.XMC_USBD_EndpointRead,"ax",%progbits
 3600              	 .align 2
 3601              	 .global XMC_USBD_EndpointRead
 3602              	 .thumb
 3603              	 .thumb_func
 3605              	XMC_USBD_EndpointRead:
 3606              	.LFB205:
1283:../Libraries/XMCLib/src/xmc_usbd.c **** 
1284:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1285:../Libraries/XMCLib/src/xmc_usbd.c ****  * Reads the number of bytes from the USB OUT endpoint
1286:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1287:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointRead(const uint8_t ep_num, uint8_t *buffer, uint32_t length)
1288:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3607              	 .loc 1 1288 0
 3608              	 .cfi_startproc
 3609              	 
 3610              	 
 3611 0000 80B5     	 push {r7,lr}
 3612              	 .cfi_def_cfa_offset 8
 3613              	 .cfi_offset 7,-8
 3614              	 .cfi_offset 14,-4
 3615 0002 86B0     	 sub sp,sp,#24
 3616              	 .cfi_def_cfa_offset 32
 3617 0004 00AF     	 add r7,sp,#0
 3618              	 .cfi_def_cfa_register 7
 3619 0006 0346     	 mov r3,r0
 3620 0008 B960     	 str r1,[r7,#8]
 3621 000a 7A60     	 str r2,[r7,#4]
 3622 000c FB73     	 strb r3,[r7,#15]
1289:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 3623              	 .loc 1 1289 0
 3624 000e FB7B     	 ldrb r3,[r7,#15]
 3625 0010 3422     	 movs r2,#52
 3626 0012 02FB03F3 	 mul r3,r2,r3
 3627 0016 174A     	 ldr r2,.L220
 3628 0018 1344     	 add r3,r3,r2
 3629 001a 7B61     	 str r3,[r7,#20]
1290:../Libraries/XMCLib/src/xmc_usbd.c ****   if (length > ep->outBytesAvailable)
 3630              	 .loc 1 1290 0
 3631 001c 7B69     	 ldr r3,[r7,#20]
 3632 001e 1A69     	 ldr r2,[r3,#16]
 3633 0020 7B68     	 ldr r3,[r7,#4]
 3634 0022 9A42     	 cmp r2,r3
 3635 0024 02D2     	 bcs .L216
1291:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1292:../Libraries/XMCLib/src/xmc_usbd.c ****     length = ep->outBytesAvailable;
 3636              	 .loc 1 1292 0
 3637 0026 7B69     	 ldr r3,[r7,#20]
 3638 0028 1B69     	 ldr r3,[r3,#16]
 3639 002a 7B60     	 str r3,[r7,#4]
 3640              	.L216:
1293:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1294:../Libraries/XMCLib/src/xmc_usbd.c ****   memcpy(buffer, &ep->outBuffer[ep->outOffset], length);
 3641              	 .loc 1 1294 0
 3642 002c 7B69     	 ldr r3,[r7,#20]
 3643 002e DA68     	 ldr r2,[r3,#12]
 3644 0030 7B69     	 ldr r3,[r7,#20]
 3645 0032 9B69     	 ldr r3,[r3,#24]
 3646 0034 1344     	 add r3,r3,r2
 3647 0036 B868     	 ldr r0,[r7,#8]
 3648 0038 1946     	 mov r1,r3
 3649 003a 7A68     	 ldr r2,[r7,#4]
 3650 003c FFF7FEFF 	 bl memcpy
1295:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
 3651              	 .loc 1 1295 0
 3652 0040 7B69     	 ldr r3,[r7,#20]
 3653 0042 1A69     	 ldr r2,[r3,#16]
 3654 0044 7B68     	 ldr r3,[r7,#4]
 3655 0046 D21A     	 subs r2,r2,r3
 3656 0048 7B69     	 ldr r3,[r7,#20]
 3657 004a 1A61     	 str r2,[r3,#16]
1296:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
 3658              	 .loc 1 1296 0
 3659 004c 7B69     	 ldr r3,[r7,#20]
 3660 004e 1B69     	 ldr r3,[r3,#16]
 3661 0050 002B     	 cmp r3,#0
 3662 0052 06D0     	 beq .L217
1297:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1298:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset += length;
 3663              	 .loc 1 1298 0
 3664 0054 7B69     	 ldr r3,[r7,#20]
 3665 0056 9A69     	 ldr r2,[r3,#24]
 3666 0058 7B68     	 ldr r3,[r7,#4]
 3667 005a 1A44     	 add r2,r2,r3
 3668 005c 7B69     	 ldr r3,[r7,#20]
 3669 005e 9A61     	 str r2,[r3,#24]
 3670 0060 02E0     	 b .L218
 3671              	.L217:
1299:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1300:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1301:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1302:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset = 0U;
 3672              	 .loc 1 1302 0
 3673 0062 7B69     	 ldr r3,[r7,#20]
 3674 0064 0022     	 movs r2,#0
 3675 0066 9A61     	 str r2,[r3,#24]
 3676              	.L218:
1303:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1304:../Libraries/XMCLib/src/xmc_usbd.c ****   return (int32_t)length;
 3677              	 .loc 1 1304 0
 3678 0068 7B68     	 ldr r3,[r7,#4]
1305:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3679              	 .loc 1 1305 0
 3680 006a 1846     	 mov r0,r3
 3681 006c 1837     	 adds r7,r7,#24
 3682              	 .cfi_def_cfa_offset 8
 3683 006e BD46     	 mov sp,r7
 3684              	 .cfi_def_cfa_register 13
 3685              	 
 3686 0070 80BD     	 pop {r7,pc}
 3687              	.L221:
 3688 0072 00BF     	 .align 2
 3689              	.L220:
 3690 0074 00000000 	 .word xmc_device
 3691              	 .cfi_endproc
 3692              	.LFE205:
 3694              	 .section .text.XMC_USBD_EndpointWrite,"ax",%progbits
 3695              	 .align 2
 3696              	 .global XMC_USBD_EndpointWrite
 3697              	 .thumb
 3698              	 .thumb_func
 3700              	XMC_USBD_EndpointWrite:
 3701              	.LFB206:
1306:../Libraries/XMCLib/src/xmc_usbd.c **** 
1307:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1308:../Libraries/XMCLib/src/xmc_usbd.c ****  * Writes number of bytes in to the USB IN endpoint.
1309:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1310:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointWrite(const uint8_t ep_num, const uint8_t *buffer, uint32_t length)
1311:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3702              	 .loc 1 1311 0
 3703              	 .cfi_startproc
 3704              	 
 3705              	 
 3706 0000 80B5     	 push {r7,lr}
 3707              	 .cfi_def_cfa_offset 8
 3708              	 .cfi_offset 7,-8
 3709              	 .cfi_offset 14,-4
 3710 0002 86B0     	 sub sp,sp,#24
 3711              	 .cfi_def_cfa_offset 32
 3712 0004 00AF     	 add r7,sp,#0
 3713              	 .cfi_def_cfa_register 7
 3714 0006 0346     	 mov r3,r0
 3715 0008 B960     	 str r1,[r7,#8]
 3716 000a 7A60     	 str r2,[r7,#4]
 3717 000c FB73     	 strb r3,[r7,#15]
1312:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
 3718              	 .loc 1 1312 0
 3719 000e FB7B     	 ldrb r3,[r7,#15]
 3720 0010 03F00F03 	 and r3,r3,#15
 3721 0014 3422     	 movs r2,#52
 3722 0016 02FB03F3 	 mul r3,r2,r3
 3723 001a 224A     	 ldr r2,.L228
 3724 001c 1344     	 add r3,r3,r2
 3725 001e 3B61     	 str r3,[r7,#16]
1313:../Libraries/XMCLib/src/xmc_usbd.c ****   int32_t result;
1314:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 3726              	 .loc 1 1314 0
 3727 0020 3B69     	 ldr r3,[r7,#16]
 3728 0022 1B79     	 ldrb r3,[r3,#4]
 3729 0024 03F00403 	 and r3,r3,#4
 3730 0028 DBB2     	 uxtb r3,r3
 3731 002a 002B     	 cmp r3,#0
 3732 002c 02D1     	 bne .L223
1315:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1316:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)XMC_USBD_STATUS_ERROR;
 3733              	 .loc 1 1316 0
 3734 002e 0123     	 movs r3,#1
 3735 0030 7B61     	 str r3,[r7,#20]
 3736 0032 31E0     	 b .L224
 3737              	.L223:
1317:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1318:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->inInUse == 1U)
 3738              	 .loc 1 1318 0
 3739 0034 3B69     	 ldr r3,[r7,#16]
 3740 0036 5B68     	 ldr r3,[r3,#4]
 3741 0038 DB08     	 lsrs r3,r3,#3
 3742 003a 03F00103 	 and r3,r3,#1
 3743 003e DBB2     	 uxtb r3,r3
 3744 0040 012B     	 cmp r3,#1
 3745 0042 02D1     	 bne .L225
1319:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1320:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)0;
 3746              	 .loc 1 1320 0
 3747 0044 0023     	 movs r3,#0
 3748 0046 7B61     	 str r3,[r7,#20]
 3749 0048 26E0     	 b .L224
 3750              	.L225:
1321:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1322:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1323:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1324:../Libraries/XMCLib/src/xmc_usbd.c ****     if (length > ep->inBufferSize)
 3751              	 .loc 1 1324 0
 3752 004a 3B69     	 ldr r3,[r7,#16]
 3753 004c 1A6A     	 ldr r2,[r3,#32]
 3754 004e 7B68     	 ldr r3,[r7,#4]
 3755 0050 9A42     	 cmp r2,r3
 3756 0052 02D2     	 bcs .L226
1325:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1326:../Libraries/XMCLib/src/xmc_usbd.c ****       length = ep->inBufferSize;
 3757              	 .loc 1 1326 0
 3758 0054 3B69     	 ldr r3,[r7,#16]
 3759 0056 1B6A     	 ldr r3,[r3,#32]
 3760 0058 7B60     	 str r3,[r7,#4]
 3761              	.L226:
1327:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1328:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data into input buffer for DMA and FIFO mode */
1329:../Libraries/XMCLib/src/xmc_usbd.c ****     memcpy(ep->inBuffer, (const void *)buffer, length);
 3762              	 .loc 1 1329 0
 3763 005a 3B69     	 ldr r3,[r7,#16]
 3764 005c DB69     	 ldr r3,[r3,#28]
 3765 005e 1846     	 mov r0,r3
 3766 0060 B968     	 ldr r1,[r7,#8]
 3767 0062 7A68     	 ldr r2,[r7,#4]
 3768 0064 FFF7FEFF 	 bl memcpy
1330:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->inBuffer;
 3769              	 .loc 1 1330 0
 3770 0068 3B69     	 ldr r3,[r7,#16]
 3771 006a DA69     	 ldr r2,[r3,#28]
 3772 006c 3B69     	 ldr r3,[r7,#16]
 3773 006e 5A62     	 str r2,[r3,#36]
1331:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
 3774              	 .loc 1 1331 0
 3775 0070 3B69     	 ldr r3,[r7,#16]
 3776 0072 7A68     	 ldr r2,[r7,#4]
 3777 0074 1A63     	 str r2,[r3,#48]
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
1333:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 3778              	 .loc 1 1333 0
 3779 0076 3B69     	 ldr r3,[r7,#16]
 3780 0078 0022     	 movs r2,#0
 3781 007a 9A62     	 str r2,[r3,#40]
1334:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 3782              	 .loc 1 1334 0
 3783 007c 3B69     	 ldr r3,[r7,#16]
 3784 007e 0022     	 movs r2,#0
 3785 0080 DA62     	 str r2,[r3,#44]
1335:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
 3786              	 .loc 1 1335 0
 3787 0082 3B69     	 ldr r3,[r7,#16]
 3788 0084 5A68     	 ldr r2,[r3,#4]
 3789 0086 42F00802 	 orr r2,r2,#8
 3790 008a 5A60     	 str r2,[r3,#4]
1336:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
1337:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartWriteXfer(ep);
 3791              	 .loc 1 1337 0
 3792 008c 3869     	 ldr r0,[r7,#16]
 3793 008e FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
1338:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)ep->xferTotal;
 3794              	 .loc 1 1338 0
 3795 0092 3B69     	 ldr r3,[r7,#16]
 3796 0094 1B6B     	 ldr r3,[r3,#48]
 3797 0096 7B61     	 str r3,[r7,#20]
 3798              	.L224:
1339:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1340:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 3799              	 .loc 1 1340 0
 3800 0098 7B69     	 ldr r3,[r7,#20]
1341:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3801              	 .loc 1 1341 0
 3802 009a 1846     	 mov r0,r3
 3803 009c 1837     	 adds r7,r7,#24
 3804              	 .cfi_def_cfa_offset 8
 3805 009e BD46     	 mov sp,r7
 3806              	 .cfi_def_cfa_register 13
 3807              	 
 3808 00a0 80BD     	 pop {r7,pc}
 3809              	.L229:
 3810 00a2 00BF     	 .align 2
 3811              	.L228:
 3812 00a4 00000000 	 .word xmc_device
 3813              	 .cfi_endproc
 3814              	.LFE206:
 3816              	 .section .text.XMC_USBD_DeviceSetAddress,"ax",%progbits
 3817              	 .align 2
 3818              	 .global XMC_USBD_DeviceSetAddress
 3819              	 .thumb
 3820              	 .thumb_func
 3822              	XMC_USBD_DeviceSetAddress:
 3823              	.LFB207:
1342:../Libraries/XMCLib/src/xmc_usbd.c **** 
1343:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1344:../Libraries/XMCLib/src/xmc_usbd.c ****  * Sets the USB device address.
1345:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1346:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceSetAddress(const uint8_t address, const XMC_USBD_SET_ADDRESS_STAGE
1347:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3824              	 .loc 1 1347 0
 3825              	 .cfi_startproc
 3826              	 
 3827              	 
 3828              	 
 3829 0000 80B4     	 push {r7}
 3830              	 .cfi_def_cfa_offset 4
 3831              	 .cfi_offset 7,-4
 3832 0002 85B0     	 sub sp,sp,#20
 3833              	 .cfi_def_cfa_offset 24
 3834 0004 00AF     	 add r7,sp,#0
 3835              	 .cfi_def_cfa_register 7
 3836 0006 0346     	 mov r3,r0
 3837 0008 0A46     	 mov r2,r1
 3838 000a FB71     	 strb r3,[r7,#7]
 3839 000c 1346     	 mov r3,r2
 3840 000e BB71     	 strb r3,[r7,#6]
1348:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t data;
1349:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.device_register->dcfg;
 3841              	 .loc 1 1349 0
 3842 0010 0D4B     	 ldr r3,.L233
 3843 0012 D3F8A431 	 ldr r3,[r3,#420]
 3844 0016 1B68     	 ldr r3,[r3]
 3845 0018 FB60     	 str r3,[r7,#12]
1350:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stage == XMC_USBD_SET_ADDRESS_STAGE_SETUP)
 3846              	 .loc 1 1350 0
 3847 001a BB79     	 ldrb r3,[r7,#6]
 3848 001c 002B     	 cmp r3,#0
 3849 001e 0CD1     	 bne .L231
1351:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1352:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.devaddr = address;
 3850              	 .loc 1 1352 0
 3851 0020 FB79     	 ldrb r3,[r7,#7]
 3852 0022 03F07F03 	 and r3,r3,#127
 3853 0026 DAB2     	 uxtb r2,r3
 3854 0028 BB89     	 ldrh r3,[r7,#12]
 3855 002a 62F30A13 	 bfi r3,r2,#4,#7
 3856 002e BB81     	 strh r3,[r7,#12]
1353:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dcfg = data.d32;
 3857              	 .loc 1 1353 0
 3858 0030 054B     	 ldr r3,.L233
 3859 0032 D3F8A431 	 ldr r3,[r3,#420]
 3860 0036 FA68     	 ldr r2,[r7,#12]
 3861 0038 1A60     	 str r2,[r3]
 3862              	.L231:
1354:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1355:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3863              	 .loc 1 1355 0
 3864 003a 0023     	 movs r3,#0
1356:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3865              	 .loc 1 1356 0
 3866 003c 1846     	 mov r0,r3
 3867 003e 1437     	 adds r7,r7,#20
 3868              	 .cfi_def_cfa_offset 4
 3869 0040 BD46     	 mov sp,r7
 3870              	 .cfi_def_cfa_register 13
 3871              	 
 3872 0042 5DF8047B 	 ldr r7,[sp],#4
 3873              	 .cfi_restore 7
 3874              	 .cfi_def_cfa_offset 0
 3875 0046 7047     	 bx lr
 3876              	.L234:
 3877              	 .align 2
 3878              	.L233:
 3879 0048 00000000 	 .word xmc_device
 3880              	 .cfi_endproc
 3881              	.LFE207:
 3883              	 .section .text.XMC_USBD_EndpointStall,"ax",%progbits
 3884              	 .align 2
 3885              	 .global XMC_USBD_EndpointStall
 3886              	 .thumb
 3887              	 .thumb_func
 3889              	XMC_USBD_EndpointStall:
 3890              	.LFB208:
1357:../Libraries/XMCLib/src/xmc_usbd.c **** 
1358:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1359:../Libraries/XMCLib/src/xmc_usbd.c ****  * Set/clear stall on the selected endpoint.
1360:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1361:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointStall(const uint8_t ep_addr, const bool stall)
1362:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3891              	 .loc 1 1362 0
 3892              	 .cfi_startproc
 3893              	 
 3894              	 
 3895              	 
 3896 0000 80B4     	 push {r7}
 3897              	 .cfi_def_cfa_offset 4
 3898              	 .cfi_offset 7,-4
 3899 0002 85B0     	 sub sp,sp,#20
 3900              	 .cfi_def_cfa_offset 24
 3901 0004 00AF     	 add r7,sp,#0
 3902              	 .cfi_def_cfa_register 7
 3903 0006 0346     	 mov r3,r0
 3904 0008 0A46     	 mov r2,r1
 3905 000a FB71     	 strb r3,[r7,#7]
 3906 000c 1346     	 mov r3,r2
 3907 000e BB71     	 strb r3,[r7,#6]
1363:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1364:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[(ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK)];
 3908              	 .loc 1 1364 0
 3909 0010 FB79     	 ldrb r3,[r7,#7]
 3910 0012 03F00F03 	 and r3,r3,#15
 3911 0016 3422     	 movs r2,#52
 3912 0018 02FB03F3 	 mul r3,r2,r3
 3913 001c 4A4A     	 ldr r2,.L243
 3914 001e 1344     	 add r3,r3,r2
 3915 0020 FB60     	 str r3,[r7,#12]
1365:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stall)
 3916              	 .loc 1 1365 0
 3917 0022 BB79     	 ldrb r3,[r7,#6]
 3918 0024 002B     	 cmp r3,#0
 3919 0026 40D0     	 beq .L236
1366:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1367:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 3920              	 .loc 1 1367 0
 3921 0028 FB79     	 ldrb r3,[r7,#7]
 3922 002a 5BB2     	 sxtb r3,r3
 3923 002c 002B     	 cmp r3,#0
 3924 002e 1ADA     	 bge .L237
1368:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1369:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1370:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 3925              	 .loc 1 1370 0
 3926 0030 FB68     	 ldr r3,[r7,#12]
 3927 0032 1B78     	 ldrb r3,[r3]
 3928 0034 C3F30303 	 ubfx r3,r3,#0,#4
 3929 0038 DBB2     	 uxtb r3,r3
 3930 003a 434A     	 ldr r2,.L243
 3931 003c 6A33     	 adds r3,r3,#106
 3932 003e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3933 0042 1B68     	 ldr r3,[r3]
 3934 0044 BB60     	 str r3,[r7,#8]
1371:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 3935              	 .loc 1 1371 0
 3936 0046 BB7A     	 ldrb r3,[r7,#10]
 3937 0048 43F02003 	 orr r3,r3,#32
 3938 004c BB72     	 strb r3,[r7,#10]
1372:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 3939              	 .loc 1 1372 0
 3940 004e FB68     	 ldr r3,[r7,#12]
 3941 0050 1B78     	 ldrb r3,[r3]
 3942 0052 C3F30303 	 ubfx r3,r3,#0,#4
 3943 0056 DBB2     	 uxtb r3,r3
 3944 0058 3B4A     	 ldr r2,.L243
 3945 005a 6A33     	 adds r3,r3,#106
 3946 005c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3947 0060 BA68     	 ldr r2,[r7,#8]
 3948 0062 1A60     	 str r2,[r3]
 3949 0064 1BE0     	 b .L238
 3950              	.L237:
1373:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1374:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1375:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1376:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1377:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 3951              	 .loc 1 1377 0
 3952 0066 FB68     	 ldr r3,[r7,#12]
 3953 0068 1B78     	 ldrb r3,[r3]
 3954 006a C3F30303 	 ubfx r3,r3,#0,#4
 3955 006e DBB2     	 uxtb r3,r3
 3956 0070 354A     	 ldr r2,.L243
 3957 0072 7033     	 adds r3,r3,#112
 3958 0074 9B00     	 lsls r3,r3,#2
 3959 0076 1344     	 add r3,r3,r2
 3960 0078 5B68     	 ldr r3,[r3,#4]
 3961 007a 1B68     	 ldr r3,[r3]
 3962 007c BB60     	 str r3,[r7,#8]
1378:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 3963              	 .loc 1 1378 0
 3964 007e BB7A     	 ldrb r3,[r7,#10]
 3965 0080 43F02003 	 orr r3,r3,#32
 3966 0084 BB72     	 strb r3,[r7,#10]
1379:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 3967              	 .loc 1 1379 0
 3968 0086 FB68     	 ldr r3,[r7,#12]
 3969 0088 1B78     	 ldrb r3,[r3]
 3970 008a C3F30303 	 ubfx r3,r3,#0,#4
 3971 008e DBB2     	 uxtb r3,r3
 3972 0090 2D4A     	 ldr r2,.L243
 3973 0092 7033     	 adds r3,r3,#112
 3974 0094 9B00     	 lsls r3,r3,#2
 3975 0096 1344     	 add r3,r3,r2
 3976 0098 5B68     	 ldr r3,[r3,#4]
 3977 009a BA68     	 ldr r2,[r7,#8]
 3978 009c 1A60     	 str r2,[r3]
 3979              	.L238:
1380:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1381:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 1U;
 3980              	 .loc 1 1381 0
 3981 009e FA68     	 ldr r2,[r7,#12]
 3982 00a0 1379     	 ldrb r3,[r2,#4]
 3983 00a2 43F02003 	 orr r3,r3,#32
 3984 00a6 1371     	 strb r3,[r2,#4]
 3985 00a8 47E0     	 b .L239
 3986              	.L236:
1382:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1383:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1384:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1385:../Libraries/XMCLib/src/xmc_usbd.c ****     /* just clear stall bit */
1386:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 3987              	 .loc 1 1386 0
 3988 00aa FB79     	 ldrb r3,[r7,#7]
 3989 00ac 5BB2     	 sxtb r3,r3
 3990 00ae 002B     	 cmp r3,#0
 3991 00b0 1EDA     	 bge .L240
1387:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1388:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 3992              	 .loc 1 1388 0
 3993 00b2 FB68     	 ldr r3,[r7,#12]
 3994 00b4 1B78     	 ldrb r3,[r3]
 3995 00b6 C3F30303 	 ubfx r3,r3,#0,#4
 3996 00ba DBB2     	 uxtb r3,r3
 3997 00bc 224A     	 ldr r2,.L243
 3998 00be 6A33     	 adds r3,r3,#106
 3999 00c0 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4000 00c4 1B68     	 ldr r3,[r3]
 4001 00c6 BB60     	 str r3,[r7,#8]
1389:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 0U;
 4002              	 .loc 1 1389 0
 4003 00c8 BB7A     	 ldrb r3,[r7,#10]
 4004 00ca 6FF34513 	 bfc r3,#5,#1
 4005 00ce BB72     	 strb r3,[r7,#10]
1390:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.setd0pid = 1U; /* reset pid to 0 */
 4006              	 .loc 1 1390 0
 4007 00d0 FB7A     	 ldrb r3,[r7,#11]
 4008 00d2 43F01003 	 orr r3,r3,#16
 4009 00d6 FB72     	 strb r3,[r7,#11]
1391:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4010              	 .loc 1 1391 0
 4011 00d8 FB68     	 ldr r3,[r7,#12]
 4012 00da 1B78     	 ldrb r3,[r3]
 4013 00dc C3F30303 	 ubfx r3,r3,#0,#4
 4014 00e0 DBB2     	 uxtb r3,r3
 4015 00e2 194A     	 ldr r2,.L243
 4016 00e4 6A33     	 adds r3,r3,#106
 4017 00e6 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4018 00ea BA68     	 ldr r2,[r7,#8]
 4019 00ec 1A60     	 str r2,[r3]
 4020 00ee 1FE0     	 b .L241
 4021              	.L240:
1392:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1393:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1394:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1395:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4022              	 .loc 1 1395 0
 4023 00f0 FB68     	 ldr r3,[r7,#12]
 4024 00f2 1B78     	 ldrb r3,[r3]
 4025 00f4 C3F30303 	 ubfx r3,r3,#0,#4
 4026 00f8 DBB2     	 uxtb r3,r3
 4027 00fa 134A     	 ldr r2,.L243
 4028 00fc 7033     	 adds r3,r3,#112
 4029 00fe 9B00     	 lsls r3,r3,#2
 4030 0100 1344     	 add r3,r3,r2
 4031 0102 5B68     	 ldr r3,[r3,#4]
 4032 0104 1B68     	 ldr r3,[r3]
 4033 0106 BB60     	 str r3,[r7,#8]
1396:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 0U;
 4034              	 .loc 1 1396 0
 4035 0108 BB7A     	 ldrb r3,[r7,#10]
 4036 010a 6FF34513 	 bfc r3,#5,#1
 4037 010e BB72     	 strb r3,[r7,#10]
1397:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.setd0pid = 1U; /* reset pid to 0 */
 4038              	 .loc 1 1397 0
 4039 0110 FB7A     	 ldrb r3,[r7,#11]
 4040 0112 43F01003 	 orr r3,r3,#16
 4041 0116 FB72     	 strb r3,[r7,#11]
1398:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4042              	 .loc 1 1398 0
 4043 0118 FB68     	 ldr r3,[r7,#12]
 4044 011a 1B78     	 ldrb r3,[r3]
 4045 011c C3F30303 	 ubfx r3,r3,#0,#4
 4046 0120 DBB2     	 uxtb r3,r3
 4047 0122 094A     	 ldr r2,.L243
 4048 0124 7033     	 adds r3,r3,#112
 4049 0126 9B00     	 lsls r3,r3,#2
 4050 0128 1344     	 add r3,r3,r2
 4051 012a 5B68     	 ldr r3,[r3,#4]
 4052 012c BA68     	 ldr r2,[r7,#8]
 4053 012e 1A60     	 str r2,[r3]
 4054              	.L241:
1399:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1400:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 0U;
 4055              	 .loc 1 1400 0
 4056 0130 FA68     	 ldr r2,[r7,#12]
 4057 0132 1379     	 ldrb r3,[r2,#4]
 4058 0134 6FF34513 	 bfc r3,#5,#1
 4059 0138 1371     	 strb r3,[r2,#4]
 4060              	.L239:
1401:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1402:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4061              	 .loc 1 1402 0
 4062 013a 0023     	 movs r3,#0
1403:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4063              	 .loc 1 1403 0
 4064 013c 1846     	 mov r0,r3
 4065 013e 1437     	 adds r7,r7,#20
 4066              	 .cfi_def_cfa_offset 4
 4067 0140 BD46     	 mov sp,r7
 4068              	 .cfi_def_cfa_register 13
 4069              	 
 4070 0142 5DF8047B 	 ldr r7,[sp],#4
 4071              	 .cfi_restore 7
 4072              	 .cfi_def_cfa_offset 0
 4073 0146 7047     	 bx lr
 4074              	.L244:
 4075              	 .align 2
 4076              	.L243:
 4077 0148 00000000 	 .word xmc_device
 4078              	 .cfi_endproc
 4079              	.LFE208:
 4081              	 .section .text.XMC_USBD_EndpointAbort,"ax",%progbits
 4082              	 .align 2
 4083              	 .global XMC_USBD_EndpointAbort
 4084              	 .thumb
 4085              	 .thumb_func
 4087              	XMC_USBD_EndpointAbort:
 4088              	.LFB209:
1404:../Libraries/XMCLib/src/xmc_usbd.c **** 
1405:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1406:../Libraries/XMCLib/src/xmc_usbd.c ****  * Aborts the data transfer on the selected endpoint
1407:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1408:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointAbort(const uint8_t ep_addr)
1409:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4089              	 .loc 1 1409 0
 4090              	 .cfi_startproc
 4091              	 
 4092              	 
 4093              	 
 4094 0000 80B4     	 push {r7}
 4095              	 .cfi_def_cfa_offset 4
 4096              	 .cfi_offset 7,-4
 4097 0002 85B0     	 sub sp,sp,#20
 4098              	 .cfi_def_cfa_offset 24
 4099 0004 00AF     	 add r7,sp,#0
 4100              	 .cfi_def_cfa_register 7
 4101 0006 0346     	 mov r3,r0
 4102 0008 FB71     	 strb r3,[r7,#7]
1410:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4103              	 .loc 1 1410 0
 4104 000a FB79     	 ldrb r3,[r7,#7]
 4105 000c 03F00F03 	 and r3,r3,#15
 4106 0010 3422     	 movs r2,#52
 4107 0012 02FB03F3 	 mul r3,r2,r3
 4108 0016 1B4A     	 ldr r2,.L249
 4109 0018 1344     	 add r3,r3,r2
 4110 001a FB60     	 str r3,[r7,#12]
1411:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.direction)
 4111              	 .loc 1 1411 0
 4112 001c FB68     	 ldr r3,[r7,#12]
 4113 001e 1B78     	 ldrb r3,[r3]
 4114 0020 23F07F03 	 bic r3,r3,#127
 4115 0024 DBB2     	 uxtb r3,r3
 4116 0026 002B     	 cmp r3,#0
 4117 0028 04D0     	 beq .L246
1412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1413:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 0U;
 4118              	 .loc 1 1413 0
 4119 002a FB68     	 ldr r3,[r7,#12]
 4120 002c 5A68     	 ldr r2,[r3,#4]
 4121 002e 22F00802 	 bic r2,r2,#8
 4122 0032 5A60     	 str r2,[r3,#4]
 4123              	.L246:
1414:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1415:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->address_u.address_st.direction)
 4124              	 .loc 1 1415 0
 4125 0034 FB68     	 ldr r3,[r7,#12]
 4126 0036 1B78     	 ldrb r3,[r3]
 4127 0038 23F07F03 	 bic r3,r3,#127
 4128 003c DBB2     	 uxtb r3,r3
 4129 003e 002B     	 cmp r3,#0
 4130 0040 04D1     	 bne .L247
1416:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1417:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse = 0U;
 4131              	 .loc 1 1417 0
 4132 0042 FB68     	 ldr r3,[r7,#12]
 4133 0044 5A68     	 ldr r2,[r3,#4]
 4134 0046 22F01002 	 bic r2,r2,#16
 4135 004a 5A60     	 str r2,[r3,#4]
 4136              	.L247:
1418:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1419:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isStalled = 0U;
 4137              	 .loc 1 1419 0
 4138 004c FA68     	 ldr r2,[r7,#12]
 4139 004e 1379     	 ldrb r3,[r2,#4]
 4140 0050 6FF34513 	 bfc r3,#5,#1
 4141 0054 1371     	 strb r3,[r2,#4]
1420:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 4142              	 .loc 1 1420 0
 4143 0056 FB68     	 ldr r3,[r7,#12]
 4144 0058 0022     	 movs r2,#0
 4145 005a 1A61     	 str r2,[r3,#16]
1421:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outOffset = 0U;
 4146              	 .loc 1 1421 0
 4147 005c FB68     	 ldr r3,[r7,#12]
 4148 005e 0022     	 movs r2,#0
 4149 0060 9A61     	 str r2,[r3,#24]
1422:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferLength = 0U;
 4150              	 .loc 1 1422 0
 4151 0062 FB68     	 ldr r3,[r7,#12]
 4152 0064 0022     	 movs r2,#0
 4153 0066 9A62     	 str r2,[r3,#40]
1423:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferCount = 0U;
 4154              	 .loc 1 1423 0
 4155 0068 FB68     	 ldr r3,[r7,#12]
 4156 006a 0022     	 movs r2,#0
 4157 006c DA62     	 str r2,[r3,#44]
1424:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferTotal = 0U;
 4158              	 .loc 1 1424 0
 4159 006e FB68     	 ldr r3,[r7,#12]
 4160 0070 0022     	 movs r2,#0
 4161 0072 1A63     	 str r2,[r3,#48]
1425:../Libraries/XMCLib/src/xmc_usbd.c **** 
1426:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4162              	 .loc 1 1426 0
 4163 0074 0023     	 movs r3,#0
1427:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4164              	 .loc 1 1427 0
 4165 0076 1846     	 mov r0,r3
 4166 0078 1437     	 adds r7,r7,#20
 4167              	 .cfi_def_cfa_offset 4
 4168 007a BD46     	 mov sp,r7
 4169              	 .cfi_def_cfa_register 13
 4170              	 
 4171 007c 5DF8047B 	 ldr r7,[sp],#4
 4172              	 .cfi_restore 7
 4173              	 .cfi_def_cfa_offset 0
 4174 0080 7047     	 bx lr
 4175              	.L250:
 4176 0082 00BF     	 .align 2
 4177              	.L249:
 4178 0084 00000000 	 .word xmc_device
 4179              	 .cfi_endproc
 4180              	.LFE209:
 4182              	 .section .text.XMC_USBD_EndpointConfigure,"ax",%progbits
 4183              	 .align 2
 4184              	 .global XMC_USBD_EndpointConfigure
 4185              	 .thumb
 4186              	 .thumb_func
 4188              	XMC_USBD_EndpointConfigure:
 4189              	.LFB210:
1428:../Libraries/XMCLib/src/xmc_usbd.c **** 
1429:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1430:../Libraries/XMCLib/src/xmc_usbd.c ****  * Configures the given endpoint
1431:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1432:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointConfigure(const uint8_t ep_addr,
1433:../Libraries/XMCLib/src/xmc_usbd.c ****     const XMC_USBD_ENDPOINT_TYPE_t ep_type,
1434:../Libraries/XMCLib/src/xmc_usbd.c ****     const uint16_t ep_max_packet_size)
1435:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4190              	 .loc 1 1435 0
 4191              	 .cfi_startproc
 4192              	 
 4193              	 
 4194 0000 80B5     	 push {r7,lr}
 4195              	 .cfi_def_cfa_offset 8
 4196              	 .cfi_offset 7,-8
 4197              	 .cfi_offset 14,-4
 4198 0002 86B0     	 sub sp,sp,#24
 4199              	 .cfi_def_cfa_offset 32
 4200 0004 00AF     	 add r7,sp,#0
 4201              	 .cfi_def_cfa_register 7
 4202 0006 0346     	 mov r3,r0
 4203 0008 FB71     	 strb r3,[r7,#7]
 4204 000a 0B46     	 mov r3,r1
 4205 000c BB71     	 strb r3,[r7,#6]
 4206 000e 1346     	 mov r3,r2
 4207 0010 BB80     	 strh r3,[r7,#4]
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1437:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
1438:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 4208              	 .loc 1 1438 0
 4209 0012 984B     	 ldr r3,.L277
 4210 0014 D3F8A431 	 ldr r3,[r3,#420]
 4211 0018 DB69     	 ldr r3,[r3,#28]
 4212 001a 3B61     	 str r3,[r7,#16]
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep = &xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4213              	 .loc 1 1439 0
 4214 001c FB79     	 ldrb r3,[r7,#7]
 4215 001e 03F00F03 	 and r3,r3,#15
 4216 0022 3422     	 movs r2,#52
 4217 0024 02FB03F3 	 mul r3,r2,r3
 4218 0028 924A     	 ldr r2,.L277
 4219 002a 1344     	 add r3,r3,r2
 4220 002c 7B61     	 str r3,[r7,#20]
1440:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void *)ep, 0x0U, sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
 4221              	 .loc 1 1440 0
 4222 002e 7869     	 ldr r0,[r7,#20]
 4223 0030 0021     	 movs r1,#0
 4224 0032 3422     	 movs r2,#52
 4225 0034 FFF7FEFF 	 bl memset
1441:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
1442:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->address_u.address = ep_addr;
 4226              	 .loc 1 1442 0
 4227 0038 7B69     	 ldr r3,[r7,#20]
 4228 003a FA79     	 ldrb r2,[r7,#7]
 4229 003c 1A70     	 strb r2,[r3]
1443:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
 4230              	 .loc 1 1443 0
 4231 003e 7A69     	 ldr r2,[r7,#20]
 4232 0040 1379     	 ldrb r3,[r2,#4]
 4233 0042 43F00403 	 orr r3,r3,#4
 4234 0046 1371     	 strb r3,[r2,#4]
1444:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
 4235              	 .loc 1 1444 0
 4236 0048 BB88     	 ldrh r3,[r7,#4]
 4237 004a DBB2     	 uxtb r3,r3
 4238 004c 03F07F03 	 and r3,r3,#127
 4239 0050 D9B2     	 uxtb r1,r3
 4240 0052 7A69     	 ldr r2,[r7,#20]
 4241 0054 5368     	 ldr r3,[r2,#4]
 4242 0056 61F3D123 	 bfi r3,r1,#11,#7
 4243 005a 5360     	 str r3,[r2,#4]
1445:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
 4244              	 .loc 1 1445 0
 4245 005c 7B69     	 ldr r3,[r7,#20]
 4246 005e 1B78     	 ldrb r3,[r3]
 4247 0060 002B     	 cmp r3,#0
 4248 0062 07D0     	 beq .L252
1446:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1447:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE;
 4249              	 .loc 1 1447 0
 4250 0064 7A69     	 ldr r2,[r7,#20]
 4251 0066 9368     	 ldr r3,[r2,#8]
 4252 0068 4FF6C071 	 movw r1,#65472
 4253 006c 61F31203 	 bfi r3,r1,#0,#19
 4254 0070 9360     	 str r3,[r2,#8]
 4255 0072 05E0     	 b .L253
 4256              	.L252:
1448:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1449:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1451:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE_EP0;
 4257              	 .loc 1 1451 0
 4258 0074 7A69     	 ldr r2,[r7,#20]
 4259 0076 9368     	 ldr r3,[r2,#8]
 4260 0078 4021     	 movs r1,#64
 4261 007a 61F31203 	 bfi r3,r1,#0,#19
 4262 007e 9360     	 str r3,[r2,#8]
 4263              	.L253:
1452:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   /* transfer buffer */
1454:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBuffer = XMC_USBD_EP_IN_BUFFER[ep->address_u.address_st.number];
 4264              	 .loc 1 1454 0
 4265 0080 7B69     	 ldr r3,[r7,#20]
 4266 0082 1B78     	 ldrb r3,[r3]
 4267 0084 C3F30303 	 ubfx r3,r3,#0,#4
 4268 0088 DBB2     	 uxtb r3,r3
 4269 008a 1B02     	 lsls r3,r3,#8
 4270 008c 7A4A     	 ldr r2,.L277+4
 4271 008e 1A44     	 add r2,r2,r3
 4272 0090 7B69     	 ldr r3,[r7,#20]
 4273 0092 DA61     	 str r2,[r3,#28]
1455:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 4274              	 .loc 1 1455 0
 4275 0094 7B69     	 ldr r3,[r7,#20]
 4276 0096 1B78     	 ldrb r3,[r3]
 4277 0098 C3F30303 	 ubfx r3,r3,#0,#4
 4278 009c DBB2     	 uxtb r3,r3
 4279 009e 1B02     	 lsls r3,r3,#8
 4280 00a0 764A     	 ldr r2,.L277+8
 4281 00a2 1A44     	 add r2,r2,r3
 4282 00a4 7B69     	 ldr r3,[r7,#20]
 4283 00a6 DA60     	 str r2,[r3,#12]
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
1457:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBufferSize = XMC_USBD_EP_IN_BUFFERSIZE[ep->address_u.address_st.number];
 4284              	 .loc 1 1457 0
 4285 00a8 7B69     	 ldr r3,[r7,#20]
 4286 00aa 1B78     	 ldrb r3,[r3]
 4287 00ac C3F30303 	 ubfx r3,r3,#0,#4
 4288 00b0 DBB2     	 uxtb r3,r3
 4289 00b2 1A46     	 mov r2,r3
 4290 00b4 724B     	 ldr r3,.L277+12
 4291 00b6 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4292 00ba 7B69     	 ldr r3,[r7,#20]
 4293 00bc 1A62     	 str r2,[r3,#32]
1458:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
 4294              	 .loc 1 1458 0
 4295 00be 7B69     	 ldr r3,[r7,#20]
 4296 00c0 1B78     	 ldrb r3,[r3]
 4297 00c2 C3F30303 	 ubfx r3,r3,#0,#4
 4298 00c6 DBB2     	 uxtb r3,r3
 4299 00c8 1A46     	 mov r2,r3
 4300 00ca 6E4B     	 ldr r3,.L277+16
 4301 00cc 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4302 00d0 7B69     	 ldr r3,[r7,#20]
 4303 00d2 5A61     	 str r2,[r3,#20]
1459:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
1460:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 1U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 4304              	 .loc 1 1460 0
 4305 00d4 7B69     	 ldr r3,[r7,#20]
 4306 00d6 1B78     	 ldrb r3,[r3]
 4307 00d8 23F07F03 	 bic r3,r3,#127
 4308 00dc DBB2     	 uxtb r3,r3
 4309 00de 002B     	 cmp r3,#0
 4310 00e0 02D1     	 bne .L254
 4311              	 .loc 1 1460 0 is_stmt 0 discriminator 1
 4312 00e2 BB79     	 ldrb r3,[r7,#6]
 4313 00e4 002B     	 cmp r3,#0
 4314 00e6 7AD1     	 bne .L255
 4315              	.L254:
 4316              	.LBB6:
1461:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1462:../Libraries/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1463:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4317              	 .loc 1 1463 0 is_stmt 1
 4318 00e8 7B69     	 ldr r3,[r7,#20]
 4319 00ea 1B78     	 ldrb r3,[r3]
 4320 00ec C3F30303 	 ubfx r3,r3,#0,#4
 4321 00f0 DBB2     	 uxtb r3,r3
 4322 00f2 604A     	 ldr r2,.L277
 4323 00f4 6A33     	 adds r3,r3,#106
 4324 00f6 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4325 00fa 1B68     	 ldr r3,[r3]
 4326 00fc FB60     	 str r3,[r7,#12]
1464:../Libraries/XMCLib/src/xmc_usbd.c ****     /*enable endpoint */
1465:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 1U;
 4327              	 .loc 1 1465 0
 4328 00fe 7B7B     	 ldrb r3,[r7,#13]
 4329 0100 43F08003 	 orr r3,r3,#128
 4330 0104 7B73     	 strb r3,[r7,#13]
1466:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep type */
1467:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.eptype = (uint8_t)ep_type;
 4331              	 .loc 1 1467 0
 4332 0106 BB79     	 ldrb r3,[r7,#6]
 4333 0108 03F00303 	 and r3,r3,#3
 4334 010c DAB2     	 uxtb r2,r3
 4335 010e BB7B     	 ldrb r3,[r7,#14]
 4336 0110 62F38303 	 bfi r3,r2,#2,#2
 4337 0114 BB73     	 strb r3,[r7,#14]
1468:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
1469:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 4338              	 .loc 1 1469 0
 4339 0116 BB79     	 ldrb r3,[r7,#6]
 4340 0118 002B     	 cmp r3,#0
 4341 011a 24D1     	 bne .L256
1470:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1471:../Libraries/XMCLib/src/xmc_usbd.c ****       switch (ep_max_packet_size)
 4342              	 .loc 1 1471 0
 4343 011c BB88     	 ldrh r3,[r7,#4]
 4344 011e 102B     	 cmp r3,#16
 4345 0120 14D0     	 beq .L258
 4346 0122 102B     	 cmp r3,#16
 4347 0124 02DC     	 bgt .L259
 4348 0126 082B     	 cmp r3,#8
 4349 0128 16D0     	 beq .L260
1472:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1473:../Libraries/XMCLib/src/xmc_usbd.c ****         case (64U):
1474:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x0U;
1475:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1476:../Libraries/XMCLib/src/xmc_usbd.c ****         case (32U):
1477:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x1U;
1478:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1479:../Libraries/XMCLib/src/xmc_usbd.c ****         case (16U):
1480:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x2U;
1481:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1482:../Libraries/XMCLib/src/xmc_usbd.c ****         case (8U):
1483:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x3U;
1484:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1485:../Libraries/XMCLib/src/xmc_usbd.c ****         default:
1486:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4350              	 .loc 1 1486 0
 4351 012a 1BE0     	 b .L263
 4352              	.L259:
1471:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 4353              	 .loc 1 1471 0
 4354 012c 202B     	 cmp r3,#32
 4355 012e 07D0     	 beq .L261
 4356 0130 402B     	 cmp r3,#64
 4357 0132 00D0     	 beq .L262
 4358              	 .loc 1 1486 0
 4359 0134 16E0     	 b .L263
 4360              	.L262:
1474:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4361              	 .loc 1 1474 0
 4362 0136 BB89     	 ldrh r3,[r7,#12]
 4363 0138 6FF30A03 	 bfc r3,#0,#11
 4364 013c BB81     	 strh r3,[r7,#12]
1475:../Libraries/XMCLib/src/xmc_usbd.c ****         case (32U):
 4365              	 .loc 1 1475 0
 4366 013e 11E0     	 b .L263
 4367              	.L261:
1477:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4368              	 .loc 1 1477 0
 4369 0140 BB89     	 ldrh r3,[r7,#12]
 4370 0142 0122     	 movs r2,#1
 4371 0144 62F30A03 	 bfi r3,r2,#0,#11
 4372 0148 BB81     	 strh r3,[r7,#12]
1478:../Libraries/XMCLib/src/xmc_usbd.c ****         case (16U):
 4373              	 .loc 1 1478 0
 4374 014a 0BE0     	 b .L263
 4375              	.L258:
1480:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4376              	 .loc 1 1480 0
 4377 014c BB89     	 ldrh r3,[r7,#12]
 4378 014e 0222     	 movs r2,#2
 4379 0150 62F30A03 	 bfi r3,r2,#0,#11
 4380 0154 BB81     	 strh r3,[r7,#12]
1481:../Libraries/XMCLib/src/xmc_usbd.c ****         case (8U):
 4381              	 .loc 1 1481 0
 4382 0156 05E0     	 b .L263
 4383              	.L260:
1483:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4384              	 .loc 1 1483 0
 4385 0158 BB89     	 ldrh r3,[r7,#12]
 4386 015a 0322     	 movs r2,#3
 4387 015c 62F30A03 	 bfi r3,r2,#0,#11
 4388 0160 BB81     	 strh r3,[r7,#12]
1484:../Libraries/XMCLib/src/xmc_usbd.c ****         default:
 4389              	 .loc 1 1484 0
 4390 0162 00BF     	 nop
 4391              	.L263:
 4392 0164 07E0     	 b .L264
 4393              	.L256:
1487:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1488:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1489:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1490:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1491:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.mps = ep_max_packet_size;
 4394              	 .loc 1 1491 0
 4395 0166 BB88     	 ldrh r3,[r7,#4]
 4396 0168 C3F30A03 	 ubfx r3,r3,#0,#11
 4397 016c 9AB2     	 uxth r2,r3
 4398 016e BB89     	 ldrh r3,[r7,#12]
 4399 0170 62F30A03 	 bfi r3,r2,#0,#11
 4400 0174 BB81     	 strh r3,[r7,#12]
 4401              	.L264:
1492:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1493:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set first data0 pid */
1494:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.setd0pid = 1U;
 4402              	 .loc 1 1494 0 discriminator 2
 4403 0176 FB7B     	 ldrb r3,[r7,#15]
 4404 0178 43F01003 	 orr r3,r3,#16
 4405 017c FB73     	 strb r3,[r7,#15]
1495:../Libraries/XMCLib/src/xmc_usbd.c ****     /* clear stall */
1496:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall = 0U;
 4406              	 .loc 1 1496 0 discriminator 2
 4407 017e BB7B     	 ldrb r3,[r7,#14]
 4408 0180 6FF34513 	 bfc r3,#5,#1
 4409 0184 BB73     	 strb r3,[r7,#14]
1497:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set tx fifo */
1498:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->txFifoNum = XMC_USBD_lAssignTXFifo(); /* get tx fifo */
 4410              	 .loc 1 1498 0 discriminator 2
 4411 0186 FFF7FEFF 	 bl XMC_USBD_lAssignTXFifo
 4412 018a 0346     	 mov r3,r0
 4413 018c 03F00F03 	 and r3,r3,#15
 4414 0190 D9B2     	 uxtb r1,r3
 4415 0192 7A69     	 ldr r2,[r7,#20]
 4416 0194 9388     	 ldrh r3,[r2,#4]
 4417 0196 61F38913 	 bfi r3,r1,#6,#4
 4418 019a 9380     	 strh r3,[r2,#4]
1499:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.txfnum = ep->txFifoNum;
 4419              	 .loc 1 1499 0 discriminator 2
 4420 019c 7B69     	 ldr r3,[r7,#20]
 4421 019e 9B88     	 ldrh r3,[r3,#4]
 4422 01a0 C3F38313 	 ubfx r3,r3,#6,#4
 4423 01a4 DAB2     	 uxtb r2,r3
 4424 01a6 FB89     	 ldrh r3,[r7,#14]
 4425 01a8 62F38913 	 bfi r3,r2,#6,#4
 4426 01ac FB81     	 strh r3,[r7,#14]
1500:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* config
 4427              	 .loc 1 1500 0 discriminator 2
 4428 01ae 7B69     	 ldr r3,[r7,#20]
 4429 01b0 1B78     	 ldrb r3,[r3]
 4430 01b2 C3F30303 	 ubfx r3,r3,#0,#4
 4431 01b6 DBB2     	 uxtb r3,r3
 4432 01b8 2E4A     	 ldr r2,.L277
 4433 01ba 6A33     	 adds r3,r3,#106
 4434 01bc 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4435 01c0 FA68     	 ldr r2,[r7,#12]
 4436 01c2 1A60     	 str r2,[r3]
1501:../Libraries/XMCLib/src/xmc_usbd.c ****     daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enab
 4437              	 .loc 1 1501 0 discriminator 2
 4438 01c4 3A8A     	 ldrh r2,[r7,#16]
 4439 01c6 7B69     	 ldr r3,[r7,#20]
 4440 01c8 1B78     	 ldrb r3,[r3]
 4441 01ca C3F30303 	 ubfx r3,r3,#0,#4
 4442 01ce DBB2     	 uxtb r3,r3
 4443 01d0 1946     	 mov r1,r3
 4444 01d2 0123     	 movs r3,#1
 4445 01d4 8B40     	 lsls r3,r3,r1
 4446 01d6 9BB2     	 uxth r3,r3
 4447 01d8 1343     	 orrs r3,r3,r2
 4448 01da 9BB2     	 uxth r3,r3
 4449 01dc 3B82     	 strh r3,[r7,#16]
 4450              	.L255:
 4451              	.LBE6:
1502:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1503:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 0U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 4452              	 .loc 1 1503 0
 4453 01de 7B69     	 ldr r3,[r7,#20]
 4454 01e0 1B78     	 ldrb r3,[r3]
 4455 01e2 23F07F03 	 bic r3,r3,#127
 4456 01e6 DBB2     	 uxtb r3,r3
 4457 01e8 002B     	 cmp r3,#0
 4458 01ea 02D0     	 beq .L265
 4459              	 .loc 1 1503 0 is_stmt 0 discriminator 1
 4460 01ec BB79     	 ldrb r3,[r7,#6]
 4461 01ee 002B     	 cmp r3,#0
 4462 01f0 73D1     	 bne .L266
 4463              	.L265:
 4464              	.LBB7:
1504:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1505:../Libraries/XMCLib/src/xmc_usbd.c ****     /* is out */
1506:../Libraries/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1507:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4465              	 .loc 1 1507 0 is_stmt 1
 4466 01f2 7B69     	 ldr r3,[r7,#20]
 4467 01f4 1B78     	 ldrb r3,[r3]
 4468 01f6 C3F30303 	 ubfx r3,r3,#0,#4
 4469 01fa DBB2     	 uxtb r3,r3
 4470 01fc 1D4A     	 ldr r2,.L277
 4471 01fe 7033     	 adds r3,r3,#112
 4472 0200 9B00     	 lsls r3,r3,#2
 4473 0202 1344     	 add r3,r3,r2
 4474 0204 5B68     	 ldr r3,[r3,#4]
 4475 0206 1B68     	 ldr r3,[r3]
 4476 0208 BB60     	 str r3,[r7,#8]
1508:../Libraries/XMCLib/src/xmc_usbd.c ****     /*enable endpoint */
1509:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 1U;
 4477              	 .loc 1 1509 0
 4478 020a 7B7A     	 ldrb r3,[r7,#9]
 4479 020c 43F08003 	 orr r3,r3,#128
 4480 0210 7B72     	 strb r3,[r7,#9]
1510:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep type */
1511:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.eptype = (uint8_t)ep_type;
 4481              	 .loc 1 1511 0
 4482 0212 BB79     	 ldrb r3,[r7,#6]
 4483 0214 03F00303 	 and r3,r3,#3
 4484 0218 DAB2     	 uxtb r2,r3
 4485 021a BB7A     	 ldrb r3,[r7,#10]
 4486 021c 62F38303 	 bfi r3,r2,#2,#2
 4487 0220 BB72     	 strb r3,[r7,#10]
1512:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
1513:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 4488              	 .loc 1 1513 0
 4489 0222 BB79     	 ldrb r3,[r7,#6]
 4490 0224 002B     	 cmp r3,#0
 4491 0226 2FD1     	 bne .L267
1514:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1515:../Libraries/XMCLib/src/xmc_usbd.c ****       switch (ep_max_packet_size)
 4492              	 .loc 1 1515 0
 4493 0228 BB88     	 ldrh r3,[r7,#4]
 4494 022a 102B     	 cmp r3,#16
 4495 022c 14D0     	 beq .L269
 4496 022e 102B     	 cmp r3,#16
 4497 0230 02DC     	 bgt .L270
 4498 0232 082B     	 cmp r3,#8
 4499 0234 16D0     	 beq .L271
1516:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1517:../Libraries/XMCLib/src/xmc_usbd.c ****         case (64U):
1518:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x0U;
1519:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1520:../Libraries/XMCLib/src/xmc_usbd.c ****         case (32U):
1521:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x1U;
1522:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1523:../Libraries/XMCLib/src/xmc_usbd.c ****         case (16U):
1524:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x2U;
1525:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1526:../Libraries/XMCLib/src/xmc_usbd.c ****         case (8U):
1527:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x3U;
1528:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1529:../Libraries/XMCLib/src/xmc_usbd.c ****         default:
1530:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4500              	 .loc 1 1530 0
 4501 0236 1BE0     	 b .L274
 4502              	.L270:
1515:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 4503              	 .loc 1 1515 0
 4504 0238 202B     	 cmp r3,#32
 4505 023a 07D0     	 beq .L272
 4506 023c 402B     	 cmp r3,#64
 4507 023e 00D0     	 beq .L273
 4508              	 .loc 1 1530 0
 4509 0240 16E0     	 b .L274
 4510              	.L273:
1518:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4511              	 .loc 1 1518 0
 4512 0242 3B89     	 ldrh r3,[r7,#8]
 4513 0244 6FF30A03 	 bfc r3,#0,#11
 4514 0248 3B81     	 strh r3,[r7,#8]
1519:../Libraries/XMCLib/src/xmc_usbd.c ****         case (32U):
 4515              	 .loc 1 1519 0
 4516 024a 11E0     	 b .L274
 4517              	.L272:
1521:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4518              	 .loc 1 1521 0
 4519 024c 3B89     	 ldrh r3,[r7,#8]
 4520 024e 0122     	 movs r2,#1
 4521 0250 62F30A03 	 bfi r3,r2,#0,#11
 4522 0254 3B81     	 strh r3,[r7,#8]
1522:../Libraries/XMCLib/src/xmc_usbd.c ****         case (16U):
 4523              	 .loc 1 1522 0
 4524 0256 0BE0     	 b .L274
 4525              	.L269:
1524:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4526              	 .loc 1 1524 0
 4527 0258 3B89     	 ldrh r3,[r7,#8]
 4528 025a 0222     	 movs r2,#2
 4529 025c 62F30A03 	 bfi r3,r2,#0,#11
 4530 0260 3B81     	 strh r3,[r7,#8]
1525:../Libraries/XMCLib/src/xmc_usbd.c ****         case (8U):
 4531              	 .loc 1 1525 0
 4532 0262 05E0     	 b .L274
 4533              	.L271:
1527:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4534              	 .loc 1 1527 0
 4535 0264 3B89     	 ldrh r3,[r7,#8]
 4536 0266 0322     	 movs r2,#3
 4537 0268 62F30A03 	 bfi r3,r2,#0,#11
 4538 026c 3B81     	 strh r3,[r7,#8]
1528:../Libraries/XMCLib/src/xmc_usbd.c ****         default:
 4539              	 .loc 1 1528 0
 4540 026e 00BF     	 nop
 4541              	.L274:
 4542 0270 12E0     	 b .L275
 4543              	.L278:
 4544 0272 00BF     	 .align 2
 4545              	.L277:
 4546 0274 00000000 	 .word xmc_device
 4547 0278 00070000 	 .word XMC_USBD_EP_IN_BUFFER
 4548 027c 00000000 	 .word XMC_USBD_EP_OUT_BUFFER
 4549 0280 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 4550 0284 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 4551              	.L267:
1531:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1532:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1533:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1534:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1535:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.mps = ep_max_packet_size;
 4552              	 .loc 1 1535 0
 4553 0288 BB88     	 ldrh r3,[r7,#4]
 4554 028a C3F30A03 	 ubfx r3,r3,#0,#11
 4555 028e 9AB2     	 uxth r2,r3
 4556 0290 3B89     	 ldrh r3,[r7,#8]
 4557 0292 62F30A03 	 bfi r3,r2,#0,#11
 4558 0296 3B81     	 strh r3,[r7,#8]
 4559              	.L275:
1536:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1537:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set first data0 pid */
1538:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.setd0pid = 1U;
 4560              	 .loc 1 1538 0 discriminator 4
 4561 0298 FB7A     	 ldrb r3,[r7,#11]
 4562 029a 43F01003 	 orr r3,r3,#16
 4563 029e FB72     	 strb r3,[r7,#11]
1539:../Libraries/XMCLib/src/xmc_usbd.c ****     /* clear stall */
1540:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall = (uint8_t) 0U;
 4564              	 .loc 1 1540 0 discriminator 4
 4565 02a0 BB7A     	 ldrb r3,[r7,#10]
 4566 02a2 6FF34513 	 bfc r3,#5,#1
 4567 02a6 BB72     	 strb r3,[r7,#10]
1541:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* confi
 4568              	 .loc 1 1541 0 discriminator 4
 4569 02a8 7B69     	 ldr r3,[r7,#20]
 4570 02aa 1B78     	 ldrb r3,[r3]
 4571 02ac C3F30303 	 ubfx r3,r3,#0,#4
 4572 02b0 DBB2     	 uxtb r3,r3
 4573 02b2 0F4A     	 ldr r2,.L279
 4574 02b4 7033     	 adds r3,r3,#112
 4575 02b6 9B00     	 lsls r3,r3,#2
 4576 02b8 1344     	 add r3,r3,r2
 4577 02ba 5B68     	 ldr r3,[r3,#4]
 4578 02bc BA68     	 ldr r2,[r7,#8]
 4579 02be 1A60     	 str r2,[r3]
1542:../Libraries/XMCLib/src/xmc_usbd.c ****     daintmsk.ep.out |= (uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* en
 4580              	 .loc 1 1542 0 discriminator 4
 4581 02c0 7A8A     	 ldrh r2,[r7,#18]
 4582 02c2 7B69     	 ldr r3,[r7,#20]
 4583 02c4 1B78     	 ldrb r3,[r3]
 4584 02c6 C3F30303 	 ubfx r3,r3,#0,#4
 4585 02ca DBB2     	 uxtb r3,r3
 4586 02cc 1946     	 mov r1,r3
 4587 02ce 0123     	 movs r3,#1
 4588 02d0 8B40     	 lsls r3,r3,r1
 4589 02d2 9BB2     	 uxth r3,r3
 4590 02d4 1343     	 orrs r3,r3,r2
 4591 02d6 9BB2     	 uxth r3,r3
 4592 02d8 7B82     	 strh r3,[r7,#18]
 4593              	.L266:
 4594              	.LBE7:
1543:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1544:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daintmsk.d32;
 4595              	 .loc 1 1544 0
 4596 02da 054B     	 ldr r3,.L279
 4597 02dc D3F8A431 	 ldr r3,[r3,#420]
 4598 02e0 3A69     	 ldr r2,[r7,#16]
 4599 02e2 DA61     	 str r2,[r3,#28]
1545:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4600              	 .loc 1 1545 0
 4601 02e4 0023     	 movs r3,#0
1546:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4602              	 .loc 1 1546 0
 4603 02e6 1846     	 mov r0,r3
 4604 02e8 1837     	 adds r7,r7,#24
 4605              	 .cfi_def_cfa_offset 8
 4606 02ea BD46     	 mov sp,r7
 4607              	 .cfi_def_cfa_register 13
 4608              	 
 4609 02ec 80BD     	 pop {r7,pc}
 4610              	.L280:
 4611 02ee 00BF     	 .align 2
 4612              	.L279:
 4613 02f0 00000000 	 .word xmc_device
 4614              	 .cfi_endproc
 4615              	.LFE210:
 4617              	 .section .text.XMC_USBD_EndpointUnconfigure,"ax",%progbits
 4618              	 .align 2
 4619              	 .global XMC_USBD_EndpointUnconfigure
 4620              	 .thumb
 4621              	 .thumb_func
 4623              	XMC_USBD_EndpointUnconfigure:
 4624              	.LFB211:
1547:../Libraries/XMCLib/src/xmc_usbd.c **** 
1548:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1549:../Libraries/XMCLib/src/xmc_usbd.c ****  * Unconfigure the selected endpoint.
1550:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1551:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointUnconfigure(const uint8_t ep_addr)
1552:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4625              	 .loc 1 1552 0
 4626              	 .cfi_startproc
 4627              	 
 4628              	 
 4629 0000 80B5     	 push {r7,lr}
 4630              	 .cfi_def_cfa_offset 8
 4631              	 .cfi_offset 7,-8
 4632              	 .cfi_offset 14,-4
 4633 0002 88B0     	 sub sp,sp,#32
 4634              	 .cfi_def_cfa_offset 40
 4635 0004 00AF     	 add r7,sp,#0
 4636              	 .cfi_def_cfa_register 7
 4637 0006 0346     	 mov r3,r0
 4638 0008 FB71     	 strb r3,[r7,#7]
1553:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4639              	 .loc 1 1553 0
 4640 000a FB79     	 ldrb r3,[r7,#7]
 4641 000c 03F00F03 	 and r3,r3,#15
 4642 0010 3422     	 movs r2,#52
 4643 0012 02FB03F3 	 mul r3,r2,r3
 4644 0016 544A     	 ldr r2,.L289
 4645 0018 1344     	 add r3,r3,r2
 4646 001a BB61     	 str r3,[r7,#24]
1554:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1555:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1557:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t number_temp;
1558:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 4647              	 .loc 1 1558 0
 4648 001c 0023     	 movs r3,#0
 4649 001e 3B61     	 str r3,[r7,#16]
1559:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 4650              	 .loc 1 1559 0
 4651 0020 514B     	 ldr r3,.L289
 4652 0022 D3F8A431 	 ldr r3,[r3,#420]
 4653 0026 DB69     	 ldr r3,[r3,#28]
 4654 0028 FB60     	 str r3,[r7,#12]
1560:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 4655              	 .loc 1 1560 0
 4656 002a BB69     	 ldr r3,[r7,#24]
 4657 002c 1B78     	 ldrb r3,[r3]
 4658 002e C3F30303 	 ubfx r3,r3,#0,#4
 4659 0032 DBB2     	 uxtb r3,r3
 4660 0034 1A46     	 mov r2,r3
 4661 0036 0123     	 movs r3,#1
 4662 0038 9340     	 lsls r3,r3,r2
 4663 003a 7B61     	 str r3,[r7,#20]
1561:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
1562:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 4664              	 .loc 1 1562 0
 4665 003c BB69     	 ldr r3,[r7,#24]
 4666 003e 1B79     	 ldrb r3,[r3,#4]
 4667 0040 03F00403 	 and r3,r3,#4
 4668 0044 DBB2     	 uxtb r3,r3
 4669 0046 002B     	 cmp r3,#0
 4670 0048 02D1     	 bne .L282
1563:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1564:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
 4671              	 .loc 1 1564 0
 4672 004a 0123     	 movs r3,#1
 4673 004c FB77     	 strb r3,[r7,#31]
 4674 004e 85E0     	 b .L283
 4675              	.L282:
1565:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1566:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1567:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1568:../Libraries/XMCLib/src/xmc_usbd.c ****     /* disable the endpoint, deactivate it and only send naks */
1569:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 0U;
 4676              	 .loc 1 1569 0
 4677 0050 7B7C     	 ldrb r3,[r7,#17]
 4678 0052 6FF3C713 	 bfc r3,#7,#1
 4679 0056 7B74     	 strb r3,[r7,#17]
1570:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.epdis =  1U;
 4680              	 .loc 1 1570 0
 4681 0058 FB7C     	 ldrb r3,[r7,#19]
 4682 005a 43F04003 	 orr r3,r3,#64
 4683 005e FB74     	 strb r3,[r7,#19]
1571:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.snak =  1U;
 4684              	 .loc 1 1571 0
 4685 0060 FB7C     	 ldrb r3,[r7,#19]
 4686 0062 43F00803 	 orr r3,r3,#8
 4687 0066 FB74     	 strb r3,[r7,#19]
1572:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall =  0U;
 4688              	 .loc 1 1572 0
 4689 0068 BB7C     	 ldrb r3,[r7,#18]
 4690 006a 6FF34513 	 bfc r3,#5,#1
 4691 006e BB74     	 strb r3,[r7,#18]
1573:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isConfigured =  0U;
 4692              	 .loc 1 1573 0
 4693 0070 BA69     	 ldr r2,[r7,#24]
 4694 0072 1379     	 ldrb r3,[r2,#4]
 4695 0074 6FF38203 	 bfc r3,#2,#1
 4696 0078 1371     	 strb r3,[r2,#4]
1574:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled =  0U;
 4697              	 .loc 1 1574 0
 4698 007a BA69     	 ldr r2,[r7,#24]
 4699 007c 1379     	 ldrb r3,[r2,#4]
 4700 007e 6FF34513 	 bfc r3,#5,#1
 4701 0082 1371     	 strb r3,[r2,#4]
1575:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse =  0U;
 4702              	 .loc 1 1575 0
 4703 0084 BB69     	 ldr r3,[r7,#24]
 4704 0086 5A68     	 ldr r2,[r3,#4]
 4705 0088 22F01002 	 bic r2,r2,#16
 4706 008c 5A60     	 str r2,[r3,#4]
1576:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse =  0U;
 4707              	 .loc 1 1576 0
 4708 008e BB69     	 ldr r3,[r7,#24]
 4709 0090 5A68     	 ldr r2,[r3,#4]
 4710 0092 22F00802 	 bic r2,r2,#8
 4711 0096 5A60     	 str r2,[r3,#4]
1577:../Libraries/XMCLib/src/xmc_usbd.c ****     /* chose register based on the direction. Control Endpoint need both */
1578:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 1U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 4712              	 .loc 1 1578 0
 4713 0098 BB69     	 ldr r3,[r7,#24]
 4714 009a 1B78     	 ldrb r3,[r3]
 4715 009c 23F07F03 	 bic r3,r3,#127
 4716 00a0 DBB2     	 uxtb r3,r3
 4717 00a2 002B     	 cmp r3,#0
 4718 00a4 06D1     	 bne .L284
 4719              	 .loc 1 1578 0 is_stmt 0 discriminator 1
 4720 00a6 BB69     	 ldr r3,[r7,#24]
 4721 00a8 1B79     	 ldrb r3,[r3,#4]
 4722 00aa 03F00303 	 and r3,r3,#3
 4723 00ae DBB2     	 uxtb r3,r3
 4724 00b0 002B     	 cmp r3,#0
 4725 00b2 12D1     	 bne .L285
 4726              	.L284:
1579:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1580:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable endpoint configuration */
1581:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4727              	 .loc 1 1581 0 is_stmt 1
 4728 00b4 BB69     	 ldr r3,[r7,#24]
 4729 00b6 1B78     	 ldrb r3,[r3]
 4730 00b8 C3F30303 	 ubfx r3,r3,#0,#4
 4731 00bc DBB2     	 uxtb r3,r3
 4732 00be 2A4A     	 ldr r2,.L289
 4733 00c0 6A33     	 adds r3,r3,#106
 4734 00c2 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4735 00c6 3A69     	 ldr r2,[r7,#16]
 4736 00c8 1A60     	 str r2,[r3]
1582:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
1583:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.in = (uint16_t)((uint32_t)daintmsk.ep.in & (~(uint32_t)number_temp));
 4737              	 .loc 1 1583 0
 4738 00ca BA89     	 ldrh r2,[r7,#12]
 4739 00cc 7B69     	 ldr r3,[r7,#20]
 4740 00ce 9BB2     	 uxth r3,r3
 4741 00d0 DB43     	 mvns r3,r3
 4742 00d2 9BB2     	 uxth r3,r3
 4743 00d4 1340     	 ands r3,r3,r2
 4744 00d6 9BB2     	 uxth r3,r3
 4745 00d8 BB81     	 strh r3,[r7,#12]
 4746              	.L285:
1584:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1585:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 0U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 4747              	 .loc 1 1585 0
 4748 00da BB69     	 ldr r3,[r7,#24]
 4749 00dc 1B78     	 ldrb r3,[r3]
 4750 00de 23F07F03 	 bic r3,r3,#127
 4751 00e2 DBB2     	 uxtb r3,r3
 4752 00e4 002B     	 cmp r3,#0
 4753 00e6 06D0     	 beq .L286
 4754              	 .loc 1 1585 0 is_stmt 0 discriminator 1
 4755 00e8 BB69     	 ldr r3,[r7,#24]
 4756 00ea 1B79     	 ldrb r3,[r3,#4]
 4757 00ec 03F00303 	 and r3,r3,#3
 4758 00f0 DBB2     	 uxtb r3,r3
 4759 00f2 002B     	 cmp r3,#0
 4760 00f4 23D1     	 bne .L287
 4761              	.L286:
1586:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1587:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4762              	 .loc 1 1587 0 is_stmt 1
 4763 00f6 BB69     	 ldr r3,[r7,#24]
 4764 00f8 1B78     	 ldrb r3,[r3]
 4765 00fa C3F30303 	 ubfx r3,r3,#0,#4
 4766 00fe DBB2     	 uxtb r3,r3
 4767 0100 194A     	 ldr r2,.L289
 4768 0102 7033     	 adds r3,r3,#112
 4769 0104 9B00     	 lsls r3,r3,#2
 4770 0106 1344     	 add r3,r3,r2
 4771 0108 5B68     	 ldr r3,[r3,#4]
 4772 010a 3A69     	 ldr r2,[r7,#16]
 4773 010c 1A60     	 str r2,[r3]
1588:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
 4774              	 .loc 1 1588 0
 4775 010e FA89     	 ldrh r2,[r7,#14]
 4776 0110 7B69     	 ldr r3,[r7,#20]
 4777 0112 9BB2     	 uxth r3,r3
 4778 0114 DB43     	 mvns r3,r3
 4779 0116 9BB2     	 uxth r3,r3
 4780 0118 1340     	 ands r3,r3,r2
 4781 011a 9BB2     	 uxth r3,r3
 4782 011c FB81     	 strh r3,[r7,#14]
1589:../Libraries/XMCLib/src/xmc_usbd.c ****       if (usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 4783              	 .loc 1 1589 0
 4784 011e 134B     	 ldr r3,.L289+4
 4785 0120 1B68     	 ldr r3,[r3]
 4786 0122 5B7B     	 ldrb r3,[r3,#13]
 4787 0124 012B     	 cmp r3,#1
 4788 0126 0AD1     	 bne .L287
1590:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1591:../Libraries/XMCLib/src/xmc_usbd.c ****         xmc_device.device_register->dtknqr4_fifoemptymsk &= ~number_temp;
 4789              	 .loc 1 1591 0
 4790 0128 0F4B     	 ldr r3,.L289
 4791 012a D3F8A431 	 ldr r3,[r3,#420]
 4792 012e 0E4A     	 ldr r2,.L289
 4793 0130 D2F8A421 	 ldr r2,[r2,#420]
 4794 0134 516B     	 ldr r1,[r2,#52]
 4795 0136 7A69     	 ldr r2,[r7,#20]
 4796 0138 D243     	 mvns r2,r2
 4797 013a 0A40     	 ands r2,r2,r1
 4798 013c 5A63     	 str r2,[r3,#52]
 4799              	.L287:
1592:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1593:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1594:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->daintmsk = daintmsk.d32;
 4800              	 .loc 1 1594 0
 4801 013e 0A4B     	 ldr r3,.L289
 4802 0140 D3F8A431 	 ldr r3,[r3,#420]
 4803 0144 FA68     	 ldr r2,[r7,#12]
 4804 0146 DA61     	 str r2,[r3,#28]
1595:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lUnassignFifo(ep->txFifoNum); /* free fifo */
 4805              	 .loc 1 1595 0
 4806 0148 BB69     	 ldr r3,[r7,#24]
 4807 014a 9B88     	 ldrh r3,[r3,#4]
 4808 014c C3F38313 	 ubfx r3,r3,#6,#4
 4809 0150 DBB2     	 uxtb r3,r3
 4810 0152 1846     	 mov r0,r3
 4811 0154 FFF7FEFF 	 bl XMC_USBD_lUnassignFifo
1596:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 4812              	 .loc 1 1596 0
 4813 0158 0023     	 movs r3,#0
 4814 015a FB77     	 strb r3,[r7,#31]
 4815              	.L283:
1597:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1598:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 4816              	 .loc 1 1598 0
 4817 015c FB7F     	 ldrb r3,[r7,#31]
1599:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4818              	 .loc 1 1599 0
 4819 015e 1846     	 mov r0,r3
 4820 0160 2037     	 adds r7,r7,#32
 4821              	 .cfi_def_cfa_offset 8
 4822 0162 BD46     	 mov sp,r7
 4823              	 .cfi_def_cfa_register 13
 4824              	 
 4825 0164 80BD     	 pop {r7,pc}
 4826              	.L290:
 4827 0166 00BF     	 .align 2
 4828              	.L289:
 4829 0168 00000000 	 .word xmc_device
 4830 016c 00000000 	 .word usbd_init
 4831              	 .cfi_endproc
 4832              	.LFE211:
 4834              	 .section .text.XMC_USBD_GetFrameNumber,"ax",%progbits
 4835              	 .align 2
 4836              	 .global XMC_USBD_GetFrameNumber
 4837              	 .thumb
 4838              	 .thumb_func
 4840              	XMC_USBD_GetFrameNumber:
 4841              	.LFB212:
1600:../Libraries/XMCLib/src/xmc_usbd.c **** 
1601:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1602:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the current USB frame number
1603:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1604:../Libraries/XMCLib/src/xmc_usbd.c **** uint16_t XMC_USBD_GetFrameNumber(void)
1605:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4842              	 .loc 1 1605 0
 4843              	 .cfi_startproc
 4844              	 
 4845              	 
 4846              	 
 4847 0000 80B4     	 push {r7}
 4848              	 .cfi_def_cfa_offset 4
 4849              	 .cfi_offset 7,-4
 4850 0002 83B0     	 sub sp,sp,#12
 4851              	 .cfi_def_cfa_offset 16
 4852 0004 00AF     	 add r7,sp,#0
 4853              	 .cfi_def_cfa_register 7
1606:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t result;
1607:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts_data_t dsts;
1608:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts.d32 = xmc_device.device_register->dsts;
 4854              	 .loc 1 1608 0
 4855 0006 084B     	 ldr r3,.L293
 4856 0008 D3F8A431 	 ldr r3,[r3,#420]
 4857 000c 9B68     	 ldr r3,[r3,#8]
 4858 000e 3B60     	 str r3,[r7]
1609:../Libraries/XMCLib/src/xmc_usbd.c ****   result = (uint16_t)dsts.b.soffn;
 4859              	 .loc 1 1609 0
 4860 0010 3B68     	 ldr r3,[r7]
 4861 0012 C3F30D23 	 ubfx r3,r3,#8,#14
 4862 0016 9BB2     	 uxth r3,r3
 4863 0018 FB80     	 strh r3,[r7,#6]
1610:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 4864              	 .loc 1 1610 0
 4865 001a FB88     	 ldrh r3,[r7,#6]
1611:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4866              	 .loc 1 1611 0
 4867 001c 1846     	 mov r0,r3
 4868 001e 0C37     	 adds r7,r7,#12
 4869              	 .cfi_def_cfa_offset 4
 4870 0020 BD46     	 mov sp,r7
 4871              	 .cfi_def_cfa_register 13
 4872              	 
 4873 0022 5DF8047B 	 ldr r7,[sp],#4
 4874              	 .cfi_restore 7
 4875              	 .cfi_def_cfa_offset 0
 4876 0026 7047     	 bx lr
 4877              	.L294:
 4878              	 .align 2
 4879              	.L293:
 4880 0028 00000000 	 .word xmc_device
 4881              	 .cfi_endproc
 4882              	.LFE212:
 4884              	 .section .text.XMC_USBD_IsEnumDone,"ax",%progbits
 4885              	 .align 2
 4886              	 .global XMC_USBD_IsEnumDone
 4887              	 .thumb
 4888              	 .thumb_func
 4890              	XMC_USBD_IsEnumDone:
 4891              	.LFB213:
1612:../Libraries/XMCLib/src/xmc_usbd.c **** 
1613:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1614:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB speed enumeration completion status.
1615:../Libraries/XMCLib/src/xmc_usbd.c ****  * This should not be used for the actual USB enumeration completion status. For the actual USB enu
1616:../Libraries/XMCLib/src/xmc_usbd.c ****  * the application layer should check for the completion of USB standard request Set configuration.
1617:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1618:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_IsEnumDone(void)
1619:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4892              	 .loc 1 1619 0
 4893              	 .cfi_startproc
 4894              	 
 4895              	 
 4896              	 
 4897 0000 80B4     	 push {r7}
 4898              	 .cfi_def_cfa_offset 4
 4899              	 .cfi_offset 7,-4
 4900 0002 00AF     	 add r7,sp,#0
 4901              	 .cfi_def_cfa_register 7
1620:../Libraries/XMCLib/src/xmc_usbd.c ****   return (uint32_t)((uint8_t)xmc_device.IsConnected && (uint8_t)xmc_device.IsPowered);
 4902              	 .loc 1 1620 0
 4903 0004 0B4B     	 ldr r3,.L299
 4904 0006 93F8FE31 	 ldrb r3,[r3,#510]
 4905 000a 03F00103 	 and r3,r3,#1
 4906 000e DBB2     	 uxtb r3,r3
 4907 0010 002B     	 cmp r3,#0
 4908 0012 09D0     	 beq .L296
 4909              	 .loc 1 1620 0 is_stmt 0 discriminator 1
 4910 0014 074B     	 ldr r3,.L299
 4911 0016 93F8FE31 	 ldrb r3,[r3,#510]
 4912 001a 03F00403 	 and r3,r3,#4
 4913 001e DBB2     	 uxtb r3,r3
 4914 0020 002B     	 cmp r3,#0
 4915 0022 01D0     	 beq .L296
 4916              	 .loc 1 1620 0 discriminator 3
 4917 0024 0123     	 movs r3,#1
 4918 0026 00E0     	 b .L297
 4919              	.L296:
 4920              	 .loc 1 1620 0 discriminator 4
 4921 0028 0023     	 movs r3,#0
 4922              	.L297:
1621:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4923              	 .loc 1 1621 0 is_stmt 1 discriminator 6
 4924 002a 1846     	 mov r0,r3
 4925 002c BD46     	 mov sp,r7
 4926              	 .cfi_def_cfa_register 13
 4927              	 
 4928 002e 5DF8047B 	 ldr r7,[sp],#4
 4929              	 .cfi_restore 7
 4930              	 .cfi_def_cfa_offset 0
 4931 0032 7047     	 bx lr
 4932              	.L300:
 4933              	 .align 2
 4934              	.L299:
 4935 0034 00000000 	 .word xmc_device
 4936              	 .cfi_endproc
 4937              	.LFE213:
 4939              	 .text
 4940              	.Letext0:
 4941              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4942              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4943              	 .file 4 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 4944              	 .file 5 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 4945              	 .file 6 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc/xmc4_scu.h"
 4946              	 .file 7 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc/xmc_usbd.h"
 4947              	 .file 8 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/cmsis_gcc.h"
 4948              	 .file 9 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/core_cm4.h"
 4949              	 .file 10 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbd.c
    {standard input}:20     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 $d
    {standard input}:23     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 XMC_USBD_EP_OUT_BUFFERSIZE
    {standard input}:26     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 $d
    {standard input}:29     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 XMC_USBD_EP_IN_BUFFERSIZE
                            *COM*:00000208 xmc_device
    {standard input}:33     USB_RAM:00000000 $d
    {standard input}:36     USB_RAM:00000000 XMC_USBD_EP_OUT_BUFFER
    {standard input}:41     USB_RAM:00000700 XMC_USBD_EP_IN_BUFFER
    {standard input}:44     .bss.usbd_init:00000000 $d
    {standard input}:47     .bss.usbd_init:00000000 usbd_init
    {standard input}:54     .rodata.Driver_USBD0:00000000 Driver_USBD0
    {standard input}:51     .rodata.Driver_USBD0:00000000 $d
    {standard input}:2846   .text.XMC_USBD_GetCapabilities:00000000 XMC_USBD_GetCapabilities
    {standard input}:2925   .text.XMC_USBD_Init:00000000 XMC_USBD_Init
    {standard input}:3262   .text.XMC_USBD_Uninitialize:00000000 XMC_USBD_Uninitialize
    {standard input}:3318   .text.XMC_USBD_DeviceConnect:00000000 XMC_USBD_DeviceConnect
    {standard input}:3372   .text.XMC_USBD_DeviceDisconnect:00000000 XMC_USBD_DeviceDisconnect
    {standard input}:3426   .text.XMC_USBD_DeviceGetState:00000000 XMC_USBD_DeviceGetState
    {standard input}:3822   .text.XMC_USBD_DeviceSetAddress:00000000 XMC_USBD_DeviceSetAddress
    {standard input}:4188   .text.XMC_USBD_EndpointConfigure:00000000 XMC_USBD_EndpointConfigure
    {standard input}:4623   .text.XMC_USBD_EndpointUnconfigure:00000000 XMC_USBD_EndpointUnconfigure
    {standard input}:3889   .text.XMC_USBD_EndpointStall:00000000 XMC_USBD_EndpointStall
    {standard input}:3497   .text.XMC_USBD_EndpointReadStart:00000000 XMC_USBD_EndpointReadStart
    {standard input}:3605   .text.XMC_USBD_EndpointRead:00000000 XMC_USBD_EndpointRead
    {standard input}:3700   .text.XMC_USBD_EndpointWrite:00000000 XMC_USBD_EndpointWrite
    {standard input}:4087   .text.XMC_USBD_EndpointAbort:00000000 XMC_USBD_EndpointAbort
    {standard input}:4840   .text.XMC_USBD_GetFrameNumber:00000000 XMC_USBD_GetFrameNumber
    {standard input}:4890   .text.XMC_USBD_IsEnumDone:00000000 XMC_USBD_IsEnumDone
    {standard input}:72     .text.XMC_USBD_lDeviceActive:00000000 $t
    {standard input}:76     .text.XMC_USBD_lDeviceActive:00000000 XMC_USBD_lDeviceActive
    {standard input}:156    .text.XMC_USBD_lDeviceActive:00000068 $d
    {standard input}:161    .text.XMC_USBD_lReadFifo:00000000 $t
    {standard input}:165    .text.XMC_USBD_lReadFifo:00000000 XMC_USBD_lReadFifo
    {standard input}:319    .text.XMC_USBD_lReadFifo:000000e4 $d
    {standard input}:324    .text.XMC_USBD_lWriteFifo:00000000 $t
    {standard input}:328    .text.XMC_USBD_lWriteFifo:00000000 XMC_USBD_lWriteFifo
    {standard input}:444    .text.XMC_USBD_lWriteFifo:000000a0 $d
    {standard input}:449    .text.XMC_USBD_lFlushTXFifo:00000000 $t
    {standard input}:453    .text.XMC_USBD_lFlushTXFifo:00000000 XMC_USBD_lFlushTXFifo
    {standard input}:543    .text.XMC_USBD_lFlushTXFifo:00000080 $d
    {standard input}:548    .text.XMC_USBD_lFlushRXFifo:00000000 $t
    {standard input}:552    .text.XMC_USBD_lFlushRXFifo:00000000 XMC_USBD_lFlushRXFifo
    {standard input}:630    .text.XMC_USBD_lFlushRXFifo:00000064 $d
    {standard input}:635    .text.XMC_USBD_lAssignTXFifo:00000000 $t
    {standard input}:639    .text.XMC_USBD_lAssignTXFifo:00000000 XMC_USBD_lAssignTXFifo
    {standard input}:723    .text.XMC_USBD_lAssignTXFifo:0000006c $d
    {standard input}:728    .text.XMC_USBD_lUnassignFifo:00000000 $t
    {standard input}:732    .text.XMC_USBD_lUnassignFifo:00000000 XMC_USBD_lUnassignFifo
    {standard input}:774    .text.XMC_USBD_lUnassignFifo:00000034 $d
    {standard input}:779    .text.XMC_USBD_lStartReadXfer:00000000 $t
    {standard input}:783    .text.XMC_USBD_lStartReadXfer:00000000 XMC_USBD_lStartReadXfer
    {standard input}:991    .text.XMC_USBD_lStartReadXfer:00000170 $d
    {standard input}:997    .text.XMC_USBD_lStartWriteXfer:00000000 $t
    {standard input}:1001   .text.XMC_USBD_lStartWriteXfer:00000000 XMC_USBD_lStartWriteXfer
    {standard input}:1220   .text.XMC_USBD_lStartWriteXfer:0000018c $d
    {standard input}:1226   .text.XMC_USBD_lHandleUSBReset:00000000 $t
    {standard input}:1230   .text.XMC_USBD_lHandleUSBReset:00000000 XMC_USBD_lHandleUSBReset
    {standard input}:2746   .text.XMC_USBD_EnableEventOUTEP:00000000 XMC_USBD_EnableEventOUTEP
    {standard input}:2796   .text.XMC_USBD_EnableEventINEP:00000000 XMC_USBD_EnableEventINEP
    {standard input}:2459   .text.XMC_USBD_ClearEvent:00000000 XMC_USBD_ClearEvent
    {standard input}:1429   .text.XMC_USBD_lHandleUSBReset:00000148 $d
    {standard input}:1434   .text.XMC_USBD_lHandleOTGInt:00000000 $t
    {standard input}:1438   .text.XMC_USBD_lHandleOTGInt:00000000 XMC_USBD_lHandleOTGInt
    {standard input}:2595   .text.XMC_USBD_lClearEventOTG:00000000 XMC_USBD_lClearEventOTG
    {standard input}:1488   .text.XMC_USBD_lHandleOTGInt:00000044 $d
    {standard input}:1493   .text.XMC_USBD_lHandleEnumDone:00000000 $t
    {standard input}:1497   .text.XMC_USBD_lHandleEnumDone:00000000 XMC_USBD_lHandleEnumDone
    {standard input}:1568   .text.XMC_USBD_lHandleEnumDone:00000074 $d
    {standard input}:1573   .text.XMC_USBD_lHandleOEPInt:00000000 $t
    {standard input}:1577   .text.XMC_USBD_lHandleOEPInt:00000000 XMC_USBD_lHandleOEPInt
    {standard input}:2694   .text.XMC_USBD_ClearEventOUTEP:00000000 XMC_USBD_ClearEventOUTEP
    {standard input}:1828   .text.XMC_USBD_lHandleOEPInt:000001b4 $d
    {standard input}:1833   .text.XMC_USBD_lHandleIEPInt:00000000 $t
    {standard input}:1837   .text.XMC_USBD_lHandleIEPInt:00000000 XMC_USBD_lHandleIEPInt
    {standard input}:2644   .text.XMC_USBD_ClearEventINEP:00000000 XMC_USBD_ClearEventINEP
    {standard input}:2089   .text.XMC_USBD_lHandleIEPInt:000001b4 $d
    {standard input}:2094   .text.XMC_USBD_lHandleRxFLvl:00000000 $t
    {standard input}:2098   .text.XMC_USBD_lHandleRxFLvl:00000000 XMC_USBD_lHandleRxFLvl
    {standard input}:2128   .text.XMC_USBD_lHandleRxFLvl:00000024 $d
    {standard input}:2134   .text.XMC_USBD_lHandleRxFLvl:0000003c $t
    {standard input}:2177   .text.XMC_USBD_lHandleRxFLvl:0000007c $d
    {standard input}:2182   .text.XMC_USBD_IRQHandler:00000000 $t
    {standard input}:2187   .text.XMC_USBD_IRQHandler:00000000 XMC_USBD_IRQHandler
    {standard input}:2379   .text.XMC_USBD_IRQHandler:00000148 $d
    {standard input}:2384   .text.XMC_USBD_Enable:00000000 $t
    {standard input}:2389   .text.XMC_USBD_Enable:00000000 XMC_USBD_Enable
    {standard input}:2414   .text.XMC_USBD_Enable:00000018 $d
    {standard input}:2419   .text.XMC_USBD_Disable:00000000 $t
    {standard input}:2424   .text.XMC_USBD_Disable:00000000 XMC_USBD_Disable
    {standard input}:2449   .text.XMC_USBD_Disable:00000018 $d
    {standard input}:2454   .text.XMC_USBD_ClearEvent:00000000 $t
    {standard input}:2486   .text.XMC_USBD_ClearEvent:0000001c $d
    {standard input}:2500   .text.XMC_USBD_ClearEvent:00000054 $t
    {standard input}:2586   .text.XMC_USBD_ClearEvent:000000c4 $d
    {standard input}:2591   .text.XMC_USBD_lClearEventOTG:00000000 $t
    {standard input}:2634   .text.XMC_USBD_lClearEventOTG:00000024 $d
    {standard input}:2639   .text.XMC_USBD_ClearEventINEP:00000000 $t
    {standard input}:2684   .text.XMC_USBD_ClearEventINEP:00000028 $d
    {standard input}:2689   .text.XMC_USBD_ClearEventOUTEP:00000000 $t
    {standard input}:2736   .text.XMC_USBD_ClearEventOUTEP:0000002c $d
    {standard input}:2741   .text.XMC_USBD_EnableEventOUTEP:00000000 $t
    {standard input}:2786   .text.XMC_USBD_EnableEventOUTEP:0000002c $d
    {standard input}:2791   .text.XMC_USBD_EnableEventINEP:00000000 $t
    {standard input}:2836   .text.XMC_USBD_EnableEventINEP:0000002c $d
    {standard input}:2841   .text.XMC_USBD_GetCapabilities:00000000 $t
    {standard input}:2920   .text.XMC_USBD_Init:00000000 $t
    {standard input}:3249   .text.XMC_USBD_Init:0000022c $d
    {standard input}:3257   .text.XMC_USBD_Uninitialize:00000000 $t
    {standard input}:3308   .text.XMC_USBD_Uninitialize:00000038 $d
    {standard input}:3313   .text.XMC_USBD_DeviceConnect:00000000 $t
    {standard input}:3362   .text.XMC_USBD_DeviceConnect:00000030 $d
    {standard input}:3367   .text.XMC_USBD_DeviceDisconnect:00000000 $t
    {standard input}:3416   .text.XMC_USBD_DeviceDisconnect:00000030 $d
    {standard input}:3421   .text.XMC_USBD_DeviceGetState:00000000 $t
    {standard input}:3487   .text.XMC_USBD_DeviceGetState:00000060 $d
    {standard input}:3492   .text.XMC_USBD_EndpointReadStart:00000000 $t
    {standard input}:3595   .text.XMC_USBD_EndpointReadStart:00000088 $d
    {standard input}:3600   .text.XMC_USBD_EndpointRead:00000000 $t
    {standard input}:3690   .text.XMC_USBD_EndpointRead:00000074 $d
    {standard input}:3695   .text.XMC_USBD_EndpointWrite:00000000 $t
    {standard input}:3812   .text.XMC_USBD_EndpointWrite:000000a4 $d
    {standard input}:3817   .text.XMC_USBD_DeviceSetAddress:00000000 $t
    {standard input}:3879   .text.XMC_USBD_DeviceSetAddress:00000048 $d
    {standard input}:3884   .text.XMC_USBD_EndpointStall:00000000 $t
    {standard input}:4077   .text.XMC_USBD_EndpointStall:00000148 $d
    {standard input}:4082   .text.XMC_USBD_EndpointAbort:00000000 $t
    {standard input}:4178   .text.XMC_USBD_EndpointAbort:00000084 $d
    {standard input}:4183   .text.XMC_USBD_EndpointConfigure:00000000 $t
    {standard input}:4546   .text.XMC_USBD_EndpointConfigure:00000274 $d
    {standard input}:4553   .text.XMC_USBD_EndpointConfigure:00000288 $t
    {standard input}:4613   .text.XMC_USBD_EndpointConfigure:000002f0 $d
    {standard input}:4618   .text.XMC_USBD_EndpointUnconfigure:00000000 $t
    {standard input}:4829   .text.XMC_USBD_EndpointUnconfigure:00000168 $d
    {standard input}:4835   .text.XMC_USBD_GetFrameNumber:00000000 $t
    {standard input}:4880   .text.XMC_USBD_GetFrameNumber:00000028 $d
    {standard input}:4885   .text.XMC_USBD_IsEnumDone:00000000 $t
    {standard input}:4935   .text.XMC_USBD_IsEnumDone:00000034 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_POWER_DisableUsb
memset
memcpy
