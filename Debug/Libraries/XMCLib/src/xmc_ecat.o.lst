   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ecat.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_ECAT_lRequestPhyAccessToMII,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_ECAT_lRequestPhyAccessToMII:
  25              	.LFB178:
  26              	 .file 1 "../Libraries/XMCLib/src/xmc_ecat.c"
   1:../Libraries/XMCLib/src/xmc_ecat.c **** 
   2:../Libraries/XMCLib/src/xmc_ecat.c **** /**
   3:../Libraries/XMCLib/src/xmc_ecat.c ****  * @file xmc_ecat.c
   4:../Libraries/XMCLib/src/xmc_ecat.c ****  * @date 2019-12-16
   5:../Libraries/XMCLib/src/xmc_ecat.c ****  *
   6:../Libraries/XMCLib/src/xmc_ecat.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_ecat.c ****  *****************************************************************************
   8:../Libraries/XMCLib/src/xmc_ecat.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   9:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  10:../Libraries/XMCLib/src/xmc_ecat.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_ecat.c ****  * All rights reserved.
  12:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  13:../Libraries/XMCLib/src/xmc_ecat.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  14:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  15:../Libraries/XMCLib/src/xmc_ecat.c ****  * Permission is hereby granted, free of charge, to any person or organization
  16:../Libraries/XMCLib/src/xmc_ecat.c ****  * obtaining a copy of the software and accompanying documentation covered by
  17:../Libraries/XMCLib/src/xmc_ecat.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  18:../Libraries/XMCLib/src/xmc_ecat.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  19:../Libraries/XMCLib/src/xmc_ecat.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  20:../Libraries/XMCLib/src/xmc_ecat.c ****  * do so, all subject to the following:
  21:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  22:../Libraries/XMCLib/src/xmc_ecat.c ****  * The copyright notices in the Software and this entire statement, including
  23:../Libraries/XMCLib/src/xmc_ecat.c ****  * the above license grant, this restriction and the following disclaimer,
  24:../Libraries/XMCLib/src/xmc_ecat.c ****  * must be included in all copies of the Software, in whole or in part, and
  25:../Libraries/XMCLib/src/xmc_ecat.c ****  * all derivative works of the Software, unless such copies or derivative
  26:../Libraries/XMCLib/src/xmc_ecat.c ****  * works are solely in the form of machine-executable object code generated by
  27:../Libraries/XMCLib/src/xmc_ecat.c ****  * a source language processor.
  28:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  29:../Libraries/XMCLib/src/xmc_ecat.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  30:../Libraries/XMCLib/src/xmc_ecat.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  31:../Libraries/XMCLib/src/xmc_ecat.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  32:../Libraries/XMCLib/src/xmc_ecat.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  33:../Libraries/XMCLib/src/xmc_ecat.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  34:../Libraries/XMCLib/src/xmc_ecat.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  35:../Libraries/XMCLib/src/xmc_ecat.c ****  * DEALINGS IN THE SOFTWARE.
  36:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  37:../Libraries/XMCLib/src/xmc_ecat.c ****  * To improve the quality of the software, users are encouraged to share
  38:../Libraries/XMCLib/src/xmc_ecat.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  39:../Libraries/XMCLib/src/xmc_ecat.c ****  * at XMCSupport@infineon.com.
  40:../Libraries/XMCLib/src/xmc_ecat.c ****  *****************************************************************************
  41:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  42:../Libraries/XMCLib/src/xmc_ecat.c ****  * Change History
  43:../Libraries/XMCLib/src/xmc_ecat.c ****  * --------------
  44:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  45:../Libraries/XMCLib/src/xmc_ecat.c ****  * 2015-10-21:
  46:../Libraries/XMCLib/src/xmc_ecat.c ****  *     - Initial Version
  47:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  48:../Libraries/XMCLib/src/xmc_ecat.c ****  * 2015-12-27:
  49:../Libraries/XMCLib/src/xmc_ecat.c ****  *     - Add clock gating control in enable/disable APIs
  50:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  51:../Libraries/XMCLib/src/xmc_ecat.c ****  * 2017-04-27:
  52:../Libraries/XMCLib/src/xmc_ecat.c ****  *     - Changed XMC_ECAT_ReadPhy() and XMC_ECAT_WritePhy() to release the MII access and check tha
  53:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  54:../Libraries/XMCLib/src/xmc_ecat.c ****  * 2019-12-16:
  55:../Libraries/XMCLib/src/xmc_ecat.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  56:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  57:../Libraries/XMCLib/src/xmc_ecat.c ****  * @endcond
  58:../Libraries/XMCLib/src/xmc_ecat.c ****  */
  59:../Libraries/XMCLib/src/xmc_ecat.c **** 
  60:../Libraries/XMCLib/src/xmc_ecat.c **** /*******************************************************************************
  61:../Libraries/XMCLib/src/xmc_ecat.c ****  * HEADER FILES
  62:../Libraries/XMCLib/src/xmc_ecat.c ****  *******************************************************************************/
  63:../Libraries/XMCLib/src/xmc_ecat.c **** 
  64:../Libraries/XMCLib/src/xmc_ecat.c **** #include "xmc_ecat.h"
  65:../Libraries/XMCLib/src/xmc_ecat.c **** 
  66:../Libraries/XMCLib/src/xmc_ecat.c **** #if defined (ECAT0)
  67:../Libraries/XMCLib/src/xmc_ecat.c **** 
  68:../Libraries/XMCLib/src/xmc_ecat.c **** #include "xmc_scu.h"
  69:../Libraries/XMCLib/src/xmc_ecat.c **** 
  70:../Libraries/XMCLib/src/xmc_ecat.c **** /*******************************************************************************
  71:../Libraries/XMCLib/src/xmc_ecat.c ****  * MACROS
  72:../Libraries/XMCLib/src/xmc_ecat.c ****  *******************************************************************************/
  73:../Libraries/XMCLib/src/xmc_ecat.c **** 
  74:../Libraries/XMCLib/src/xmc_ecat.c **** /*******************************************************************************
  75:../Libraries/XMCLib/src/xmc_ecat.c ****  * API IMPLEMENTATION
  76:../Libraries/XMCLib/src/xmc_ecat.c ****  *******************************************************************************/
  77:../Libraries/XMCLib/src/xmc_ecat.c **** /* The function defines the access state to the MII management for the PDI interface*/
  78:../Libraries/XMCLib/src/xmc_ecat.c **** __STATIC_INLINE void XMC_ECAT_lRequestPhyAccessToMII(void)
  79:../Libraries/XMCLib/src/xmc_ecat.c **** {
  27              	 .loc 1 79 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 00AF     	 add r7,sp,#0
  36              	 .cfi_def_cfa_register 7
  80:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->MII_PDI_ACS_STATE = 0x1;
  37              	 .loc 1 80 0
  38 0004 034B     	 ldr r3,.L2
  39 0006 0122     	 movs r2,#1
  40 0008 83F81725 	 strb r2,[r3,#1303]
  81:../Libraries/XMCLib/src/xmc_ecat.c **** }
  41              	 .loc 1 81 0
  42 000c BD46     	 mov sp,r7
  43              	 .cfi_def_cfa_register 13
  44              	 
  45 000e 5DF8047B 	 ldr r7,[sp],#4
  46              	 .cfi_restore 7
  47              	 .cfi_def_cfa_offset 0
  48 0012 7047     	 bx lr
  49              	.L3:
  50              	 .align 2
  51              	.L2:
  52 0014 00000154 	 .word 1409351680
  53              	 .cfi_endproc
  54              	.LFE178:
  56              	 .section .text.XMC_ECAT_lReleasePhyAccessToMII,"ax",%progbits
  57              	 .align 2
  58              	 .thumb
  59              	 .thumb_func
  61              	XMC_ECAT_lReleasePhyAccessToMII:
  62              	.LFB179:
  82:../Libraries/XMCLib/src/xmc_ecat.c **** 
  83:../Libraries/XMCLib/src/xmc_ecat.c **** __STATIC_INLINE void XMC_ECAT_lReleasePhyAccessToMII(void)
  84:../Libraries/XMCLib/src/xmc_ecat.c **** {
  63              	 .loc 1 84 0
  64              	 .cfi_startproc
  65              	 
  66              	 
  67              	 
  68 0000 80B4     	 push {r7}
  69              	 .cfi_def_cfa_offset 4
  70              	 .cfi_offset 7,-4
  71 0002 00AF     	 add r7,sp,#0
  72              	 .cfi_def_cfa_register 7
  85:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->MII_PDI_ACS_STATE = 0x0;
  73              	 .loc 1 85 0
  74 0004 034B     	 ldr r3,.L5
  75 0006 0022     	 movs r2,#0
  76 0008 83F81725 	 strb r2,[r3,#1303]
  86:../Libraries/XMCLib/src/xmc_ecat.c **** }
  77              	 .loc 1 86 0
  78 000c BD46     	 mov sp,r7
  79              	 .cfi_def_cfa_register 13
  80              	 
  81 000e 5DF8047B 	 ldr r7,[sp],#4
  82              	 .cfi_restore 7
  83              	 .cfi_def_cfa_offset 0
  84 0012 7047     	 bx lr
  85              	.L6:
  86              	 .align 2
  87              	.L5:
  88 0014 00000154 	 .word 1409351680
  89              	 .cfi_endproc
  90              	.LFE179:
  92              	 .section .text.XMC_ECAT_Enable,"ax",%progbits
  93              	 .align 2
  94              	 .global XMC_ECAT_Enable
  95              	 .thumb
  96              	 .thumb_func
  98              	XMC_ECAT_Enable:
  99              	.LFB180:
  87:../Libraries/XMCLib/src/xmc_ecat.c **** 
  88:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT module clock ungating and deassert reset API (Enables ECAT) */
  89:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_Enable(void)
  90:../Libraries/XMCLib/src/xmc_ecat.c **** {
 100              	 .loc 1 90 0
 101              	 .cfi_startproc
 102              	 
 103              	 
 104 0000 80B5     	 push {r7,lr}
 105              	 .cfi_def_cfa_offset 8
 106              	 .cfi_offset 7,-8
 107              	 .cfi_offset 14,-4
 108 0002 00AF     	 add r7,sp,#0
 109              	 .cfi_def_cfa_register 7
  91:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ECAT0);
 110              	 .loc 1 91 0
 111 0004 0648     	 ldr r0,.L9
 112 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  92:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ECAT0);
 113              	 .loc 1 92 0
 114 000a 0548     	 ldr r0,.L9
 115 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  93:../Libraries/XMCLib/src/xmc_ecat.c **** 
  94:../Libraries/XMCLib/src/xmc_ecat.c ****   while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_ECAT0) == true) {}
 116              	 .loc 1 94 0
 117 0010 00BF     	 nop
 118              	.L8:
 119              	 .loc 1 94 0 is_stmt 0 discriminator 1
 120 0012 0348     	 ldr r0,.L9
 121 0014 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 122 0018 0346     	 mov r3,r0
 123 001a 002B     	 cmp r3,#0
 124 001c F9D1     	 bne .L8
  95:../Libraries/XMCLib/src/xmc_ecat.c **** }
 125              	 .loc 1 95 0 is_stmt 1
 126 001e 80BD     	 pop {r7,pc}
 127              	.L10:
 128              	 .align 2
 129              	.L9:
 130 0020 00040020 	 .word 536871936
 131              	 .cfi_endproc
 132              	.LFE180:
 134              	 .section .text.XMC_ECAT_Disable,"ax",%progbits
 135              	 .align 2
 136              	 .global XMC_ECAT_Disable
 137              	 .thumb
 138              	 .thumb_func
 140              	XMC_ECAT_Disable:
 141              	.LFB181:
  96:../Libraries/XMCLib/src/xmc_ecat.c **** 
  97:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT module clock gating and assert reset API (Disables ECAT)*/
  98:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_Disable(void)
  99:../Libraries/XMCLib/src/xmc_ecat.c **** {
 142              	 .loc 1 99 0
 143              	 .cfi_startproc
 144              	 
 145              	 
 146 0000 80B5     	 push {r7,lr}
 147              	 .cfi_def_cfa_offset 8
 148              	 .cfi_offset 7,-8
 149              	 .cfi_offset 14,-4
 150 0002 00AF     	 add r7,sp,#0
 151              	 .cfi_def_cfa_register 7
 100:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ECAT0);
 152              	 .loc 1 100 0
 153 0004 0848     	 ldr r0,.L13
 154 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 101:../Libraries/XMCLib/src/xmc_ecat.c ****   while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_ECAT0) == false) {}
 155              	 .loc 1 101 0
 156 000a 00BF     	 nop
 157              	.L12:
 158              	 .loc 1 101 0 is_stmt 0 discriminator 1
 159 000c 0648     	 ldr r0,.L13
 160 000e FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 161 0012 0346     	 mov r3,r0
 162 0014 83F00103 	 eor r3,r3,#1
 163 0018 DBB2     	 uxtb r3,r3
 164 001a 002B     	 cmp r3,#0
 165 001c F6D1     	 bne .L12
 102:../Libraries/XMCLib/src/xmc_ecat.c **** 
 103:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ECAT0);
 166              	 .loc 1 103 0 is_stmt 1
 167 001e 0248     	 ldr r0,.L13
 168 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 104:../Libraries/XMCLib/src/xmc_ecat.c **** }
 169              	 .loc 1 104 0
 170 0024 80BD     	 pop {r7,pc}
 171              	.L14:
 172 0026 00BF     	 .align 2
 173              	.L13:
 174 0028 00040020 	 .word 536871936
 175              	 .cfi_endproc
 176              	.LFE181:
 178              	 .section .text.XMC_ECAT_Init,"ax",%progbits
 179              	 .align 2
 180              	 .global XMC_ECAT_Init
 181              	 .thumb
 182              	 .thumb_func
 184              	XMC_ECAT_Init:
 185              	.LFB182:
 105:../Libraries/XMCLib/src/xmc_ecat.c **** 
 106:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT initialization function */
 107:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_Init(XMC_ECAT_CONFIG_t *const config)
 108:../Libraries/XMCLib/src/xmc_ecat.c **** {
 186              	 .loc 1 108 0
 187              	 .cfi_startproc
 188              	 
 189              	 
 190 0000 80B5     	 push {r7,lr}
 191              	 .cfi_def_cfa_offset 8
 192              	 .cfi_offset 7,-8
 193              	 .cfi_offset 14,-4
 194 0002 82B0     	 sub sp,sp,#8
 195              	 .cfi_def_cfa_offset 16
 196 0004 00AF     	 add r7,sp,#0
 197              	 .cfi_def_cfa_register 7
 198 0006 7860     	 str r0,[r7,#4]
 109:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_ECAT_Enable();
 199              	 .loc 1 109 0
 200 0008 FFF7FEFF 	 bl XMC_ECAT_Enable
 110:../Libraries/XMCLib/src/xmc_ecat.c **** 
 111:../Libraries/XMCLib/src/xmc_ecat.c ****   /* The process memory is not accessible until the ESC Configuration Area is loaded successfully. 
 112:../Libraries/XMCLib/src/xmc_ecat.c **** 
 113:../Libraries/XMCLib/src/xmc_ecat.c ****   /* words 0x0-0x3 */
 114:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_DATA[0U] = config->dword[0U];
 201              	 .loc 1 114 0
 202 000c 194A     	 ldr r2,.L17
 203 000e 7B68     	 ldr r3,[r7,#4]
 204 0010 1B68     	 ldr r3,[r3]
 205 0012 C2F80835 	 str r3,[r2,#1288]
 115:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_DATA[1U] = config->dword[1U];
 206              	 .loc 1 115 0
 207 0016 174A     	 ldr r2,.L17
 208 0018 7B68     	 ldr r3,[r7,#4]
 209 001a 5B68     	 ldr r3,[r3,#4]
 210 001c C2F80C35 	 str r3,[r2,#1292]
 116:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_CONT_STAT |= (uint16_t)((uint16_t)0x4U << (uint16_t)ECAT_EEP_CONT_STAT_CMD_REG_Pos);
 211              	 .loc 1 116 0
 212 0020 144A     	 ldr r2,.L17
 213 0022 144B     	 ldr r3,.L17
 214 0024 B3F80235 	 ldrh r3,[r3,#1282]
 215 0028 9BB2     	 uxth r3,r3
 216 002a 43F48063 	 orr r3,r3,#1024
 217 002e 9BB2     	 uxth r3,r3
 218 0030 A2F80235 	 strh r3,[r2,#1282]
 117:../Libraries/XMCLib/src/xmc_ecat.c **** 
 118:../Libraries/XMCLib/src/xmc_ecat.c ****   /* words 0x4-0x7 */
 119:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_DATA[0U] = config->dword[2U];
 219              	 .loc 1 119 0
 220 0034 0F4A     	 ldr r2,.L17
 221 0036 7B68     	 ldr r3,[r7,#4]
 222 0038 9B68     	 ldr r3,[r3,#8]
 223 003a C2F80835 	 str r3,[r2,#1288]
 120:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_DATA[1U] = config->dword[3U];
 224              	 .loc 1 120 0
 225 003e 0D4A     	 ldr r2,.L17
 226 0040 7B68     	 ldr r3,[r7,#4]
 227 0042 DB68     	 ldr r3,[r3,#12]
 228 0044 C2F80C35 	 str r3,[r2,#1292]
 121:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_CONT_STAT |= (uint16_t)((uint16_t)0x4U << (uint16_t)ECAT_EEP_CONT_STAT_CMD_REG_Pos);
 229              	 .loc 1 121 0
 230 0048 0A4A     	 ldr r2,.L17
 231 004a 0A4B     	 ldr r3,.L17
 232 004c B3F80235 	 ldrh r3,[r3,#1282]
 233 0050 9BB2     	 uxth r3,r3
 234 0052 43F48063 	 orr r3,r3,#1024
 235 0056 9BB2     	 uxth r3,r3
 236 0058 A2F80235 	 strh r3,[r2,#1282]
 122:../Libraries/XMCLib/src/xmc_ecat.c **** 
 123:../Libraries/XMCLib/src/xmc_ecat.c ****   while (ECAT0->EEP_CONT_STAT & ECAT_EEP_CONT_STAT_L_STAT_Msk)
 237              	 .loc 1 123 0
 238 005c 00BF     	 nop
 239              	.L16:
 240              	 .loc 1 123 0 is_stmt 0 discriminator 1
 241 005e 054B     	 ldr r3,.L17
 242 0060 B3F80235 	 ldrh r3,[r3,#1282]
 243 0064 9BB2     	 uxth r3,r3
 244 0066 03F48053 	 and r3,r3,#4096
 245 006a 002B     	 cmp r3,#0
 246 006c F7D1     	 bne .L16
 124:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 125:../Libraries/XMCLib/src/xmc_ecat.c ****     /* Wait until the EEPROM_Loaded signal is active */
 126:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 127:../Libraries/XMCLib/src/xmc_ecat.c **** 
 128:../Libraries/XMCLib/src/xmc_ecat.c **** }
 247              	 .loc 1 128 0 is_stmt 1
 248 006e 0837     	 adds r7,r7,#8
 249              	 .cfi_def_cfa_offset 8
 250 0070 BD46     	 mov sp,r7
 251              	 .cfi_def_cfa_register 13
 252              	 
 253 0072 80BD     	 pop {r7,pc}
 254              	.L18:
 255              	 .align 2
 256              	.L17:
 257 0074 00000154 	 .word 1409351680
 258              	 .cfi_endproc
 259              	.LFE182:
 261              	 .section .text.XMC_ECAT_EnableEvent,"ax",%progbits
 262              	 .align 2
 263              	 .global XMC_ECAT_EnableEvent
 264              	 .thumb
 265              	 .thumb_func
 267              	XMC_ECAT_EnableEvent:
 268              	.LFB183:
 129:../Libraries/XMCLib/src/xmc_ecat.c **** 
 130:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT application event enable API */
 131:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_EnableEvent(uint32_t event)
 132:../Libraries/XMCLib/src/xmc_ecat.c **** {
 269              	 .loc 1 132 0
 270              	 .cfi_startproc
 271              	 
 272              	 
 273              	 
 274 0000 80B4     	 push {r7}
 275              	 .cfi_def_cfa_offset 4
 276              	 .cfi_offset 7,-4
 277 0002 83B0     	 sub sp,sp,#12
 278              	 .cfi_def_cfa_offset 16
 279 0004 00AF     	 add r7,sp,#0
 280              	 .cfi_def_cfa_register 7
 281 0006 7860     	 str r0,[r7,#4]
 133:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->AL_EVENT_MASK |= event;
 282              	 .loc 1 133 0
 283 0008 0649     	 ldr r1,.L20
 284 000a 064B     	 ldr r3,.L20
 285 000c D3F80422 	 ldr r2,[r3,#516]
 286 0010 7B68     	 ldr r3,[r7,#4]
 287 0012 1343     	 orrs r3,r3,r2
 288 0014 C1F80432 	 str r3,[r1,#516]
 134:../Libraries/XMCLib/src/xmc_ecat.c **** }
 289              	 .loc 1 134 0
 290 0018 0C37     	 adds r7,r7,#12
 291              	 .cfi_def_cfa_offset 4
 292 001a BD46     	 mov sp,r7
 293              	 .cfi_def_cfa_register 13
 294              	 
 295 001c 5DF8047B 	 ldr r7,[sp],#4
 296              	 .cfi_restore 7
 297              	 .cfi_def_cfa_offset 0
 298 0020 7047     	 bx lr
 299              	.L21:
 300 0022 00BF     	 .align 2
 301              	.L20:
 302 0024 00000154 	 .word 1409351680
 303              	 .cfi_endproc
 304              	.LFE183:
 306              	 .section .text.XMC_ECAT_DisableEvent,"ax",%progbits
 307              	 .align 2
 308              	 .global XMC_ECAT_DisableEvent
 309              	 .thumb
 310              	 .thumb_func
 312              	XMC_ECAT_DisableEvent:
 313              	.LFB184:
 135:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT application event disable API */
 136:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_DisableEvent(uint32_t event)
 137:../Libraries/XMCLib/src/xmc_ecat.c **** {
 314              	 .loc 1 137 0
 315              	 .cfi_startproc
 316              	 
 317              	 
 318              	 
 319 0000 80B4     	 push {r7}
 320              	 .cfi_def_cfa_offset 4
 321              	 .cfi_offset 7,-4
 322 0002 83B0     	 sub sp,sp,#12
 323              	 .cfi_def_cfa_offset 16
 324 0004 00AF     	 add r7,sp,#0
 325              	 .cfi_def_cfa_register 7
 326 0006 7860     	 str r0,[r7,#4]
 138:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->AL_EVENT_MASK &= ~event;
 327              	 .loc 1 138 0
 328 0008 0649     	 ldr r1,.L23
 329 000a 064B     	 ldr r3,.L23
 330 000c D3F80422 	 ldr r2,[r3,#516]
 331 0010 7B68     	 ldr r3,[r7,#4]
 332 0012 DB43     	 mvns r3,r3
 333 0014 1340     	 ands r3,r3,r2
 334 0016 C1F80432 	 str r3,[r1,#516]
 139:../Libraries/XMCLib/src/xmc_ecat.c **** }
 335              	 .loc 1 139 0
 336 001a 0C37     	 adds r7,r7,#12
 337              	 .cfi_def_cfa_offset 4
 338 001c BD46     	 mov sp,r7
 339              	 .cfi_def_cfa_register 13
 340              	 
 341 001e 5DF8047B 	 ldr r7,[sp],#4
 342              	 .cfi_restore 7
 343              	 .cfi_def_cfa_offset 0
 344 0022 7047     	 bx lr
 345              	.L24:
 346              	 .align 2
 347              	.L23:
 348 0024 00000154 	 .word 1409351680
 349              	 .cfi_endproc
 350              	.LFE184:
 352              	 .section .text.XMC_ECAT_GetEventStatus,"ax",%progbits
 353              	 .align 2
 354              	 .global XMC_ECAT_GetEventStatus
 355              	 .thumb
 356              	 .thumb_func
 358              	XMC_ECAT_GetEventStatus:
 359              	.LFB185:
 140:../Libraries/XMCLib/src/xmc_ecat.c **** 
 141:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT application event status reading API */
 142:../Libraries/XMCLib/src/xmc_ecat.c **** uint32_t XMC_ECAT_GetEventStatus(void)
 143:../Libraries/XMCLib/src/xmc_ecat.c **** {
 360              	 .loc 1 143 0
 361              	 .cfi_startproc
 362              	 
 363              	 
 364              	 
 365 0000 80B4     	 push {r7}
 366              	 .cfi_def_cfa_offset 4
 367              	 .cfi_offset 7,-4
 368 0002 00AF     	 add r7,sp,#0
 369              	 .cfi_def_cfa_register 7
 144:../Libraries/XMCLib/src/xmc_ecat.c ****   return (ECAT0->AL_EVENT_REQ);
 370              	 .loc 1 144 0
 371 0004 034B     	 ldr r3,.L27
 372 0006 D3F82032 	 ldr r3,[r3,#544]
 145:../Libraries/XMCLib/src/xmc_ecat.c **** }
 373              	 .loc 1 145 0
 374 000a 1846     	 mov r0,r3
 375 000c BD46     	 mov sp,r7
 376              	 .cfi_def_cfa_register 13
 377              	 
 378 000e 5DF8047B 	 ldr r7,[sp],#4
 379              	 .cfi_restore 7
 380              	 .cfi_def_cfa_offset 0
 381 0012 7047     	 bx lr
 382              	.L28:
 383              	 .align 2
 384              	.L27:
 385 0014 00000154 	 .word 1409351680
 386              	 .cfi_endproc
 387              	.LFE185:
 389              	 .section .text.XMC_ECAT_DisableSyncManChannel,"ax",%progbits
 390              	 .align 2
 391              	 .global XMC_ECAT_DisableSyncManChannel
 392              	 .thumb
 393              	 .thumb_func
 395              	XMC_ECAT_DisableSyncManChannel:
 396              	.LFB186:
 146:../Libraries/XMCLib/src/xmc_ecat.c **** 
 147:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT SyncManager channel disable function*/
 148:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_DisableSyncManChannel(const uint8_t channel)
 149:../Libraries/XMCLib/src/xmc_ecat.c **** {
 397              	 .loc 1 149 0
 398              	 .cfi_startproc
 399              	 
 400              	 
 401              	 
 402 0000 80B4     	 push {r7}
 403              	 .cfi_def_cfa_offset 4
 404              	 .cfi_offset 7,-4
 405 0002 83B0     	 sub sp,sp,#12
 406              	 .cfi_def_cfa_offset 16
 407 0004 00AF     	 add r7,sp,#0
 408              	 .cfi_def_cfa_register 7
 409 0006 0346     	 mov r3,r0
 410 0008 FB71     	 strb r3,[r7,#7]
 150:../Libraries/XMCLib/src/xmc_ecat.c ****   ((ECAT0_SM_Type *)(void *)((uint8_t *)(void *)ECAT0_SM0 + (channel * 8U)))->SM_PDI_CTR |= 0x1U;
 411              	 .loc 1 150 0
 412 000a FB79     	 ldrb r3,[r7,#7]
 413 000c DB00     	 lsls r3,r3,#3
 414 000e 03F1A843 	 add r3,r3,#1409286144
 415 0012 03F58433 	 add r3,r3,#67584
 416 0016 FA79     	 ldrb r2,[r7,#7]
 417 0018 D200     	 lsls r2,r2,#3
 418 001a 02F1A842 	 add r2,r2,#1409286144
 419 001e 02F58432 	 add r2,r2,#67584
 420 0022 D279     	 ldrb r2,[r2,#7]
 421 0024 D2B2     	 uxtb r2,r2
 422 0026 42F00102 	 orr r2,r2,#1
 423 002a D2B2     	 uxtb r2,r2
 424 002c DA71     	 strb r2,[r3,#7]
 151:../Libraries/XMCLib/src/xmc_ecat.c **** }
 425              	 .loc 1 151 0
 426 002e 0C37     	 adds r7,r7,#12
 427              	 .cfi_def_cfa_offset 4
 428 0030 BD46     	 mov sp,r7
 429              	 .cfi_def_cfa_register 13
 430              	 
 431 0032 5DF8047B 	 ldr r7,[sp],#4
 432              	 .cfi_restore 7
 433              	 .cfi_def_cfa_offset 0
 434 0036 7047     	 bx lr
 435              	 .cfi_endproc
 436              	.LFE186:
 438              	 .section .text.XMC_ECAT_EnableSyncManChannel,"ax",%progbits
 439              	 .align 2
 440              	 .global XMC_ECAT_EnableSyncManChannel
 441              	 .thumb
 442              	 .thumb_func
 444              	XMC_ECAT_EnableSyncManChannel:
 445              	.LFB187:
 152:../Libraries/XMCLib/src/xmc_ecat.c **** 
 153:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT SyncManager channel enable function*/
 154:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_EnableSyncManChannel(const uint8_t channel)
 155:../Libraries/XMCLib/src/xmc_ecat.c **** {
 446              	 .loc 1 155 0
 447              	 .cfi_startproc
 448              	 
 449              	 
 450              	 
 451 0000 80B4     	 push {r7}
 452              	 .cfi_def_cfa_offset 4
 453              	 .cfi_offset 7,-4
 454 0002 83B0     	 sub sp,sp,#12
 455              	 .cfi_def_cfa_offset 16
 456 0004 00AF     	 add r7,sp,#0
 457              	 .cfi_def_cfa_register 7
 458 0006 0346     	 mov r3,r0
 459 0008 FB71     	 strb r3,[r7,#7]
 156:../Libraries/XMCLib/src/xmc_ecat.c ****   ((ECAT0_SM_Type *)(void *)((uint8_t *)(void *)ECAT0_SM0 + (channel * 8U)))->SM_PDI_CTR &= (uint8_
 460              	 .loc 1 156 0
 461 000a FB79     	 ldrb r3,[r7,#7]
 462 000c DB00     	 lsls r3,r3,#3
 463 000e 03F1A843 	 add r3,r3,#1409286144
 464 0012 03F58433 	 add r3,r3,#67584
 465 0016 FA79     	 ldrb r2,[r7,#7]
 466 0018 D200     	 lsls r2,r2,#3
 467 001a 02F1A842 	 add r2,r2,#1409286144
 468 001e 02F58432 	 add r2,r2,#67584
 469 0022 D279     	 ldrb r2,[r2,#7]
 470 0024 D2B2     	 uxtb r2,r2
 471 0026 22F00102 	 bic r2,r2,#1
 472 002a D2B2     	 uxtb r2,r2
 473 002c DA71     	 strb r2,[r3,#7]
 157:../Libraries/XMCLib/src/xmc_ecat.c **** }
 474              	 .loc 1 157 0
 475 002e 0C37     	 adds r7,r7,#12
 476              	 .cfi_def_cfa_offset 4
 477 0030 BD46     	 mov sp,r7
 478              	 .cfi_def_cfa_register 13
 479              	 
 480 0032 5DF8047B 	 ldr r7,[sp],#4
 481              	 .cfi_restore 7
 482              	 .cfi_def_cfa_offset 0
 483 0036 7047     	 bx lr
 484              	 .cfi_endproc
 485              	.LFE187:
 487              	 .section .text.XMC_ECAT_ReadPhy,"ax",%progbits
 488              	 .align 2
 489              	 .global XMC_ECAT_ReadPhy
 490              	 .thumb
 491              	 .thumb_func
 493              	XMC_ECAT_ReadPhy:
 494              	.LFB188:
 158:../Libraries/XMCLib/src/xmc_ecat.c **** 
 159:../Libraries/XMCLib/src/xmc_ecat.c **** 
 160:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT PHY register read function*/
 161:../Libraries/XMCLib/src/xmc_ecat.c **** XMC_ECAT_STATUS_t XMC_ECAT_ReadPhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t *data)
 162:../Libraries/XMCLib/src/xmc_ecat.c **** {
 495              	 .loc 1 162 0
 496              	 .cfi_startproc
 497              	 
 498              	 
 499 0000 80B5     	 push {r7,lr}
 500              	 .cfi_def_cfa_offset 8
 501              	 .cfi_offset 7,-8
 502              	 .cfi_offset 14,-4
 503 0002 84B0     	 sub sp,sp,#16
 504              	 .cfi_def_cfa_offset 24
 505 0004 00AF     	 add r7,sp,#0
 506              	 .cfi_def_cfa_register 7
 507 0006 0346     	 mov r3,r0
 508 0008 3A60     	 str r2,[r7]
 509 000a FB71     	 strb r3,[r7,#7]
 510 000c 0B46     	 mov r3,r1
 511 000e BB71     	 strb r3,[r7,#6]
 163:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_ECAT_STATUS_t status;
 164:../Libraries/XMCLib/src/xmc_ecat.c **** 
 165:../Libraries/XMCLib/src/xmc_ecat.c ****   if ((ECAT0->MII_ECAT_ACS_STATE != 0) || ((ECAT0->MII_PDI_ACS_STATE & ECAT_MII_PDI_ACS_STATE_FORCE
 512              	 .loc 1 165 0
 513 0010 234B     	 ldr r3,.L39
 514 0012 93F81635 	 ldrb r3,[r3,#1302]
 515 0016 DBB2     	 uxtb r3,r3
 516 0018 002B     	 cmp r3,#0
 517 001a 07D1     	 bne .L32
 518              	 .loc 1 165 0 is_stmt 0 discriminator 1
 519 001c 204B     	 ldr r3,.L39
 520 001e 93F81735 	 ldrb r3,[r3,#1303]
 521 0022 DBB2     	 uxtb r3,r3
 522 0024 03F00203 	 and r3,r3,#2
 523 0028 002B     	 cmp r3,#0
 524 002a 02D0     	 beq .L33
 525              	.L32:
 166:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 167:../Libraries/XMCLib/src/xmc_ecat.c ****     status =  XMC_ECAT_STATUS_ERROR;
 526              	 .loc 1 167 0 is_stmt 1
 527 002c 0223     	 movs r3,#2
 528 002e FB73     	 strb r3,[r7,#15]
 529 0030 30E0     	 b .L34
 530              	.L33:
 168:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 169:../Libraries/XMCLib/src/xmc_ecat.c ****   else
 170:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 171:../Libraries/XMCLib/src/xmc_ecat.c ****     XMC_ECAT_lRequestPhyAccessToMII();
 531              	 .loc 1 171 0
 532 0032 FFF7FEFF 	 bl XMC_ECAT_lRequestPhyAccessToMII
 172:../Libraries/XMCLib/src/xmc_ecat.c **** 
 173:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_PHY_ADR = phy_addr;
 533              	 .loc 1 173 0
 534 0036 1A4A     	 ldr r2,.L39
 535 0038 FB79     	 ldrb r3,[r7,#7]
 536 003a 82F81235 	 strb r3,[r2,#1298]
 174:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_PHY_REG_ADR = reg_addr;
 537              	 .loc 1 174 0
 538 003e 184A     	 ldr r2,.L39
 539 0040 BB79     	 ldrb r3,[r7,#6]
 540 0042 82F81335 	 strb r3,[r2,#1299]
 175:../Libraries/XMCLib/src/xmc_ecat.c **** 
 176:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_CONT_STAT = 0x0100U;  /* read instruction */
 541              	 .loc 1 176 0
 542 0046 164B     	 ldr r3,.L39
 543 0048 4FF48072 	 mov r2,#256
 544 004c A3F81025 	 strh r2,[r3,#1296]
 177:../Libraries/XMCLib/src/xmc_ecat.c ****     while ((ECAT0->MII_CONT_STAT & ECAT_MII_CONT_STAT_BUSY_Msk) != 0U) {}
 545              	 .loc 1 177 0
 546 0050 00BF     	 nop
 547              	.L35:
 548              	 .loc 1 177 0 is_stmt 0 discriminator 1
 549 0052 134B     	 ldr r3,.L39
 550 0054 B3F81035 	 ldrh r3,[r3,#1296]
 551 0058 9BB2     	 uxth r3,r3
 552 005a 9BB2     	 uxth r3,r3
 553 005c 1BB2     	 sxth r3,r3
 554 005e 002B     	 cmp r3,#0
 555 0060 F7DB     	 blt .L35
 178:../Libraries/XMCLib/src/xmc_ecat.c **** 
 179:../Libraries/XMCLib/src/xmc_ecat.c ****     if ((ECAT0->MII_CONT_STAT & ECAT_MII_CONT_STAT_ERROR_Msk) != 0U)
 556              	 .loc 1 179 0 is_stmt 1
 557 0062 0F4B     	 ldr r3,.L39
 558 0064 B3F81035 	 ldrh r3,[r3,#1296]
 559 0068 9BB2     	 uxth r3,r3
 560 006a 03F48043 	 and r3,r3,#16384
 561 006e 002B     	 cmp r3,#0
 562 0070 06D0     	 beq .L36
 180:../Libraries/XMCLib/src/xmc_ecat.c ****     {
 181:../Libraries/XMCLib/src/xmc_ecat.c ****       ECAT0->MII_CONT_STAT = 0; /* Clear error */
 563              	 .loc 1 181 0
 564 0072 0B4B     	 ldr r3,.L39
 565 0074 0022     	 movs r2,#0
 566 0076 A3F81025 	 strh r2,[r3,#1296]
 182:../Libraries/XMCLib/src/xmc_ecat.c ****       status = XMC_ECAT_STATUS_ERROR;
 567              	 .loc 1 182 0
 568 007a 0223     	 movs r3,#2
 569 007c FB73     	 strb r3,[r7,#15]
 570 007e 07E0     	 b .L37
 571              	.L36:
 183:../Libraries/XMCLib/src/xmc_ecat.c ****     }
 184:../Libraries/XMCLib/src/xmc_ecat.c ****     else
 185:../Libraries/XMCLib/src/xmc_ecat.c ****     {
 186:../Libraries/XMCLib/src/xmc_ecat.c ****       *data = (uint16_t)ECAT0->MII_PHY_DATA;
 572              	 .loc 1 186 0
 573 0080 074B     	 ldr r3,.L39
 574 0082 B3F81435 	 ldrh r3,[r3,#1300]
 575 0086 9AB2     	 uxth r2,r3
 576 0088 3B68     	 ldr r3,[r7]
 577 008a 1A80     	 strh r2,[r3]
 187:../Libraries/XMCLib/src/xmc_ecat.c ****       status = XMC_ECAT_STATUS_OK;
 578              	 .loc 1 187 0
 579 008c 0023     	 movs r3,#0
 580 008e FB73     	 strb r3,[r7,#15]
 581              	.L37:
 188:../Libraries/XMCLib/src/xmc_ecat.c ****     }
 189:../Libraries/XMCLib/src/xmc_ecat.c **** 
 190:../Libraries/XMCLib/src/xmc_ecat.c ****     XMC_ECAT_lReleasePhyAccessToMII();
 582              	 .loc 1 190 0
 583 0090 FFF7FEFF 	 bl XMC_ECAT_lReleasePhyAccessToMII
 584              	.L34:
 191:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 192:../Libraries/XMCLib/src/xmc_ecat.c **** 
 193:../Libraries/XMCLib/src/xmc_ecat.c ****   return status;
 585              	 .loc 1 193 0
 586 0094 FB7B     	 ldrb r3,[r7,#15]
 194:../Libraries/XMCLib/src/xmc_ecat.c **** }
 587              	 .loc 1 194 0
 588 0096 1846     	 mov r0,r3
 589 0098 1037     	 adds r7,r7,#16
 590              	 .cfi_def_cfa_offset 8
 591 009a BD46     	 mov sp,r7
 592              	 .cfi_def_cfa_register 13
 593              	 
 594 009c 80BD     	 pop {r7,pc}
 595              	.L40:
 596 009e 00BF     	 .align 2
 597              	.L39:
 598 00a0 00000154 	 .word 1409351680
 599              	 .cfi_endproc
 600              	.LFE188:
 602              	 .section .text.XMC_ECAT_WritePhy,"ax",%progbits
 603              	 .align 2
 604              	 .global XMC_ECAT_WritePhy
 605              	 .thumb
 606              	 .thumb_func
 608              	XMC_ECAT_WritePhy:
 609              	.LFB189:
 195:../Libraries/XMCLib/src/xmc_ecat.c **** 
 196:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT PHY register write function*/
 197:../Libraries/XMCLib/src/xmc_ecat.c **** XMC_ECAT_STATUS_t XMC_ECAT_WritePhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t data)
 198:../Libraries/XMCLib/src/xmc_ecat.c **** {
 610              	 .loc 1 198 0
 611              	 .cfi_startproc
 612              	 
 613              	 
 614 0000 80B5     	 push {r7,lr}
 615              	 .cfi_def_cfa_offset 8
 616              	 .cfi_offset 7,-8
 617              	 .cfi_offset 14,-4
 618 0002 84B0     	 sub sp,sp,#16
 619              	 .cfi_def_cfa_offset 24
 620 0004 00AF     	 add r7,sp,#0
 621              	 .cfi_def_cfa_register 7
 622 0006 0346     	 mov r3,r0
 623 0008 FB71     	 strb r3,[r7,#7]
 624 000a 0B46     	 mov r3,r1
 625 000c BB71     	 strb r3,[r7,#6]
 626 000e 1346     	 mov r3,r2
 627 0010 BB80     	 strh r3,[r7,#4]
 199:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_ECAT_STATUS_t status;
 200:../Libraries/XMCLib/src/xmc_ecat.c **** 
 201:../Libraries/XMCLib/src/xmc_ecat.c ****   if ((ECAT0->MII_ECAT_ACS_STATE != 0) || ((ECAT0->MII_PDI_ACS_STATE & ECAT_MII_PDI_ACS_STATE_FORCE
 628              	 .loc 1 201 0
 629 0012 224B     	 ldr r3,.L49
 630 0014 93F81635 	 ldrb r3,[r3,#1302]
 631 0018 DBB2     	 uxtb r3,r3
 632 001a 002B     	 cmp r3,#0
 633 001c 07D1     	 bne .L42
 634              	 .loc 1 201 0 is_stmt 0 discriminator 1
 635 001e 1F4B     	 ldr r3,.L49
 636 0020 93F81735 	 ldrb r3,[r3,#1303]
 637 0024 DBB2     	 uxtb r3,r3
 638 0026 03F00203 	 and r3,r3,#2
 639 002a 002B     	 cmp r3,#0
 640 002c 02D0     	 beq .L43
 641              	.L42:
 202:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 203:../Libraries/XMCLib/src/xmc_ecat.c ****     status =  XMC_ECAT_STATUS_ERROR;
 642              	 .loc 1 203 0 is_stmt 1
 643 002e 0223     	 movs r3,#2
 644 0030 FB73     	 strb r3,[r7,#15]
 645 0032 2EE0     	 b .L44
 646              	.L43:
 204:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 205:../Libraries/XMCLib/src/xmc_ecat.c ****   else
 206:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 207:../Libraries/XMCLib/src/xmc_ecat.c ****     XMC_ECAT_lRequestPhyAccessToMII();
 647              	 .loc 1 207 0
 648 0034 FFF7FEFF 	 bl XMC_ECAT_lRequestPhyAccessToMII
 208:../Libraries/XMCLib/src/xmc_ecat.c **** 
 209:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_PHY_ADR = phy_addr;
 649              	 .loc 1 209 0
 650 0038 184A     	 ldr r2,.L49
 651 003a FB79     	 ldrb r3,[r7,#7]
 652 003c 82F81235 	 strb r3,[r2,#1298]
 210:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_PHY_REG_ADR = reg_addr;
 653              	 .loc 1 210 0
 654 0040 164A     	 ldr r2,.L49
 655 0042 BB79     	 ldrb r3,[r7,#6]
 656 0044 82F81335 	 strb r3,[r2,#1299]
 211:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_PHY_DATA = data;
 657              	 .loc 1 211 0
 658 0048 144A     	 ldr r2,.L49
 659 004a BB88     	 ldrh r3,[r7,#4]
 660 004c A2F81435 	 strh r3,[r2,#1300]
 212:../Libraries/XMCLib/src/xmc_ecat.c **** 
 213:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_CONT_STAT = 0x0200U;  /* write instruction */
 661              	 .loc 1 213 0
 662 0050 124B     	 ldr r3,.L49
 663 0052 4FF40072 	 mov r2,#512
 664 0056 A3F81025 	 strh r2,[r3,#1296]
 214:../Libraries/XMCLib/src/xmc_ecat.c ****     while ((ECAT0->MII_CONT_STAT & ECAT_MII_CONT_STAT_BUSY_Msk) != 0U) {}
 665              	 .loc 1 214 0
 666 005a 00BF     	 nop
 667              	.L45:
 668              	 .loc 1 214 0 is_stmt 0 discriminator 1
 669 005c 0F4B     	 ldr r3,.L49
 670 005e B3F81035 	 ldrh r3,[r3,#1296]
 671 0062 9BB2     	 uxth r3,r3
 672 0064 9BB2     	 uxth r3,r3
 673 0066 1BB2     	 sxth r3,r3
 674 0068 002B     	 cmp r3,#0
 675 006a F7DB     	 blt .L45
 215:../Libraries/XMCLib/src/xmc_ecat.c **** 
 216:../Libraries/XMCLib/src/xmc_ecat.c ****     if ((ECAT0->MII_CONT_STAT & ECAT_MII_CONT_STAT_ERROR_Msk) != 0U)
 676              	 .loc 1 216 0 is_stmt 1
 677 006c 0B4B     	 ldr r3,.L49
 678 006e B3F81035 	 ldrh r3,[r3,#1296]
 679 0072 9BB2     	 uxth r3,r3
 680 0074 03F48043 	 and r3,r3,#16384
 681 0078 002B     	 cmp r3,#0
 682 007a 06D0     	 beq .L46
 217:../Libraries/XMCLib/src/xmc_ecat.c ****     {
 218:../Libraries/XMCLib/src/xmc_ecat.c ****       ECAT0->MII_CONT_STAT = 0; /* Clear error */
 683              	 .loc 1 218 0
 684 007c 074B     	 ldr r3,.L49
 685 007e 0022     	 movs r2,#0
 686 0080 A3F81025 	 strh r2,[r3,#1296]
 219:../Libraries/XMCLib/src/xmc_ecat.c ****       status = XMC_ECAT_STATUS_ERROR;
 687              	 .loc 1 219 0
 688 0084 0223     	 movs r3,#2
 689 0086 FB73     	 strb r3,[r7,#15]
 690 0088 01E0     	 b .L47
 691              	.L46:
 220:../Libraries/XMCLib/src/xmc_ecat.c ****     }
 221:../Libraries/XMCLib/src/xmc_ecat.c ****     else
 222:../Libraries/XMCLib/src/xmc_ecat.c ****     {
 223:../Libraries/XMCLib/src/xmc_ecat.c ****       status = XMC_ECAT_STATUS_OK;
 692              	 .loc 1 223 0
 693 008a 0023     	 movs r3,#0
 694 008c FB73     	 strb r3,[r7,#15]
 695              	.L47:
 224:../Libraries/XMCLib/src/xmc_ecat.c ****     }
 225:../Libraries/XMCLib/src/xmc_ecat.c **** 
 226:../Libraries/XMCLib/src/xmc_ecat.c ****     XMC_ECAT_lReleasePhyAccessToMII();
 696              	 .loc 1 226 0
 697 008e FFF7FEFF 	 bl XMC_ECAT_lReleasePhyAccessToMII
 698              	.L44:
 227:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 228:../Libraries/XMCLib/src/xmc_ecat.c **** 
 229:../Libraries/XMCLib/src/xmc_ecat.c ****   return status;
 699              	 .loc 1 229 0
 700 0092 FB7B     	 ldrb r3,[r7,#15]
 230:../Libraries/XMCLib/src/xmc_ecat.c **** }
 701              	 .loc 1 230 0
 702 0094 1846     	 mov r0,r3
 703 0096 1037     	 adds r7,r7,#16
 704              	 .cfi_def_cfa_offset 8
 705 0098 BD46     	 mov sp,r7
 706              	 .cfi_def_cfa_register 13
 707              	 
 708 009a 80BD     	 pop {r7,pc}
 709              	.L50:
 710              	 .align 2
 711              	.L49:
 712 009c 00000154 	 .word 1409351680
 713              	 .cfi_endproc
 714              	.LFE189:
 716              	 .text
 717              	.Letext0:
 718              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 719              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 720              	 .file 4 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 721              	 .file 5 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc/xmc_ecat.h"
 722              	 .file 6 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc/xmc4_scu.h"
 723              	 .file 7 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/cmsis_gcc.h"
 724              	 .file 8 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/core_cm4.h"
 725              	 .file 9 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ecat.c
    {standard input}:20     .text.XMC_ECAT_lRequestPhyAccessToMII:00000000 $t
    {standard input}:24     .text.XMC_ECAT_lRequestPhyAccessToMII:00000000 XMC_ECAT_lRequestPhyAccessToMII
    {standard input}:52     .text.XMC_ECAT_lRequestPhyAccessToMII:00000014 $d
    {standard input}:57     .text.XMC_ECAT_lReleasePhyAccessToMII:00000000 $t
    {standard input}:61     .text.XMC_ECAT_lReleasePhyAccessToMII:00000000 XMC_ECAT_lReleasePhyAccessToMII
    {standard input}:88     .text.XMC_ECAT_lReleasePhyAccessToMII:00000014 $d
    {standard input}:93     .text.XMC_ECAT_Enable:00000000 $t
    {standard input}:98     .text.XMC_ECAT_Enable:00000000 XMC_ECAT_Enable
    {standard input}:130    .text.XMC_ECAT_Enable:00000020 $d
    {standard input}:135    .text.XMC_ECAT_Disable:00000000 $t
    {standard input}:140    .text.XMC_ECAT_Disable:00000000 XMC_ECAT_Disable
    {standard input}:174    .text.XMC_ECAT_Disable:00000028 $d
    {standard input}:179    .text.XMC_ECAT_Init:00000000 $t
    {standard input}:184    .text.XMC_ECAT_Init:00000000 XMC_ECAT_Init
    {standard input}:257    .text.XMC_ECAT_Init:00000074 $d
    {standard input}:262    .text.XMC_ECAT_EnableEvent:00000000 $t
    {standard input}:267    .text.XMC_ECAT_EnableEvent:00000000 XMC_ECAT_EnableEvent
    {standard input}:302    .text.XMC_ECAT_EnableEvent:00000024 $d
    {standard input}:307    .text.XMC_ECAT_DisableEvent:00000000 $t
    {standard input}:312    .text.XMC_ECAT_DisableEvent:00000000 XMC_ECAT_DisableEvent
    {standard input}:348    .text.XMC_ECAT_DisableEvent:00000024 $d
    {standard input}:353    .text.XMC_ECAT_GetEventStatus:00000000 $t
    {standard input}:358    .text.XMC_ECAT_GetEventStatus:00000000 XMC_ECAT_GetEventStatus
    {standard input}:385    .text.XMC_ECAT_GetEventStatus:00000014 $d
    {standard input}:390    .text.XMC_ECAT_DisableSyncManChannel:00000000 $t
    {standard input}:395    .text.XMC_ECAT_DisableSyncManChannel:00000000 XMC_ECAT_DisableSyncManChannel
    {standard input}:439    .text.XMC_ECAT_EnableSyncManChannel:00000000 $t
    {standard input}:444    .text.XMC_ECAT_EnableSyncManChannel:00000000 XMC_ECAT_EnableSyncManChannel
    {standard input}:488    .text.XMC_ECAT_ReadPhy:00000000 $t
    {standard input}:493    .text.XMC_ECAT_ReadPhy:00000000 XMC_ECAT_ReadPhy
    {standard input}:598    .text.XMC_ECAT_ReadPhy:000000a0 $d
    {standard input}:603    .text.XMC_ECAT_WritePhy:00000000 $t
    {standard input}:608    .text.XMC_ECAT_WritePhy:00000000 XMC_ECAT_WritePhy
    {standard input}:712    .text.XMC_ECAT_WritePhy:0000009c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
