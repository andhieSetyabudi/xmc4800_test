   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_can.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CAN_IsPanelControlReady,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CAN_IsPanelControlReady:
  25              	.LFB174:
  26              	 .file 1 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc/xmc_can.h"
   1:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2019-07-02
   4:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *****************************************************************************
   7:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.
  11:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  12:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  14:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * do so, all subject to the following:
  20:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  21:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * a source language processor.
  27:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  28:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * at XMCSupport@infineon.com.
  39:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *****************************************************************************
  40:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  41:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  42:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  43:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  44:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  45:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  46:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  47:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  49:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  50:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  51:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  52:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  53:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  54:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  55:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  56:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  57:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  58:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  59:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  60:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  61:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  62:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  63:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  64:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  65:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  66:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  67:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  68:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  69:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * 2017-11-09:
  70:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  71:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  72:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  73:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * 2019-07-02:
  74:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_GetClockFrequency()
  75:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsListEmpty(), XMC_CAN_GetListBegin(), XMC_CAN_GetListSize(), XMC_CAN_MO_Get
  76:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  77:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  78:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  79:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  80:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  81:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  82:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  83:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  84:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
  85:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  86:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  87:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  88:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  89:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  90:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  91:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  92:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  93:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  94:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  95:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  96:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  97:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  98:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  99:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
 101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>
 102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
 103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
 107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
 108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
 111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes.
 133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between
 135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure().
 153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions
 158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent().
 160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)   /**< Standard Identifier bitposition */
 175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL) /**< Node event mask */
 179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)  /**< Message Object event mask */
 181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** */
 188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 198:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 199:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** */
 200:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 201:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 202:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 203:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 204:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 205:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 206:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,   /**< Remove a message object from the list and insert
 207:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 208:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 209:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 210:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 211:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 212:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 213:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 214:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 215:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** */
 216:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 217:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 218:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 219:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 220:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 221:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 222:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 223:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 224:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 225:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 226:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 227:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 228:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 229:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 230:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 231:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 232:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 233:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 234:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 235:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 236:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 237:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 238:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 239:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 240:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 241:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 242:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 243:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 244:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 245:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 246:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 247:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 248:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 249:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 250:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 251:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 252:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 253:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 254:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 255:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 256:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U,       /**< Frame Count Mode */
 257:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 258:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 259:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 260:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 261:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 262:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 263:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 264:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 265:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 266:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 267:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 268:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 269:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 270:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 271:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 272:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 273:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 274:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 275:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 276:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 277:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 278:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 279:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 280:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 281:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 282:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 283:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 284:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 285:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 286:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 287:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 288:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 289:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 290:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 291:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 292:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 293:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 294:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 295:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 296:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 297:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 298:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 299:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 300:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 301:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 302:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 303:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 304:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 305:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 306:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 307:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 308:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 309:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 310:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 311:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 312:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 313:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 314:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 315:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 316:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 317:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 318:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 319:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 320:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 321:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 322:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 323:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 324:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 325:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 326:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 327:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,     /**< Pointer to previous 
 328:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 329:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 330:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 331:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 332:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 333:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 334:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 335:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 336:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 337:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 338:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 339:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 340:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 341:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF = CAN_NODE_NSR_BOFF_Msk,              /**< Bus-off status */
 342:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 343:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 344:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 345:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 346:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #endif
 347:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 348:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 349:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 350:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 351:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 352:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 353:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 354:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 355:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 356:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 357:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 358:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 359:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 360:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE = CAN_NODE_NCR_CCE_Msk,    /**< Configuration change enab
 361:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 362:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 363:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 364:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #endif
 365:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 366:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 367:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 368:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 369:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 370:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 371:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 372:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 373:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 374:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 375:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 376:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 377:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 378:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 379:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 380:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 381:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 382:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 383:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 384:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 385:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 386:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 387:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 388:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 389:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 390:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 391:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 392:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 393:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 394:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 395:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 396:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 397:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 398:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 399:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 400:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 401:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 402:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 403:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 404:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 405:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 406:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 407:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 408:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 409:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 410:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 411:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 412:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 413:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA,   /**< CAN Receive Input A */
 414:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,   /**< CAN Receive Input B */
 415:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,   /**< CAN Receive Input C */
 416:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,   /**< CAN Receive Input D */
 417:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,   /**< CAN Receive Input E */
 418:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,   /**< CAN Receive Input F */
 419:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,   /**< CAN Receive Input G */
 420:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH    /**< CAN Receive Input H */
 421:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 422:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 423:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 424:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 425:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 426:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 427:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 428:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 429:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 430:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 431:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 432:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 433:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 434:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 435:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 436:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 437:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 438:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 439:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 440:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 441:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 442:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 443:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 444:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 445:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 446:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 447:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 448:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 449:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 450:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 451:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 452:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 453:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 454:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 455:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 456:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 457:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 458:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN baudrate generator
 459:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 460:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 461:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 462:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 463:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #if (UC_FAMILY == XMC4)
 464:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 465:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #else
 466:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock. 
 467:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #endif
 468:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U, /**< Use high performance oscillator (fOHP) as MCAN baudrate gener
 469:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #else
 470:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 471:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #endif
 472:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 473:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 474:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 475:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 476:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 477:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 478:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 479:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** */
 480:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 481:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 482:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;     /**< Frequency of the CAN module(fCAN). \a can_frequency shall be ran
 483:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;          /**< Specifies the node baud rate. Unit: baud \a baudrate shall be ra
 484:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;      /**< Sample point is used to compensate mismatch between transmitter 
 485:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                                    the synchronization segment. Sample point. Range = [0, 10000] wi
 486:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;               /**< (Re) Synchronization Jump Width. Range:0-3 */
 487:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 488:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 489:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 490:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 491:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 492:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 493:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 494:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 495:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;    /**< points to the first element(slave object) in a FIFO structure.Range 
 496:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;     /**< points to the last element(slave object) in a FIFO structure. Range :0
 497:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;    /**< points to the actual target object(Base object) within a FIFO/Gateway 
 498:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 499:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 500:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 501:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 502:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 503:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 504:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 505:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 506:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom;       /**< points to the first element(gateway destination object) in a F
 507:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;        /**< points to the last element(gateway destination object) in a FIFO
 508:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;       /**< points to the actual target object within a FIFO/Gateway structu
 509:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;   /**< TXRQ updated in the gateway destination object after the int
 510:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object */
 511:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;   /**< The identifier of the gateway source object (after storing t
 512:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object. */
 513:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 514:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 515:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                                            gateway destination object */
 516:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 517:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                                 are copied to the gateway destination.*/
 518:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 519:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 520:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 521:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 522:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 523:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** */
 524:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 525:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 526:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 527:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 528:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #pragma push
 529:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #pragma anon_unions
 530:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 531:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #pragma warning 586
 532:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #endif
 533:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 534:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 535:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 536:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 537:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 538:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** */
 539:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 540:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 541:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 542:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   union
 543:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   {
 544:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     struct
 545:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     {
 546:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 16;
 547:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_selection: 3;  /**<   Defines function of the frame counter  */
 548:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_mode: 2;     /**<   Determines the operation mode of the frame count
 549:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 11;
 550:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     };
 551:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t nfcr;
 552:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 553:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   };
 554:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 555:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 556:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 557:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 558:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** */
 559:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 560:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 561:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 562:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 563:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 564:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 565:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 566:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register *
 567:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   union
 568:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   {
 569:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     struct
 570:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     {
 571:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_identifier: 29;           /**< standard (11 bit)/Extended (29 bit) message ident
 572:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mode: 1;               /**< Standard/Extended identifier support */
 573:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_priority: 2;              /**< Arbitration Mode/Priority */
 574:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     };
 575:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_ar;
 576:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   };
 577:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   union
 578:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   {
 579:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     struct
 580:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     {
 581:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mask: 29;             /**< CAN Identifier of Message Object */
 582:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_ide_mask: 1;             /**< Identifier Extension Bit of Message Object */
 583:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     };
 584:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_amr;
 585:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   };
 586:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 587:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 588:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   union
 589:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   {
 590:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 591:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     uint8_t can_data_byte[8];                 /**< Each position of the array represents a data byt
 592:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bits 
 593:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_data[
 594:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                               of the data */
 595:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     uint64_t can_data_long;                   /** Data of the Message Object*/
 596:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   };
 597:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 598:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 599:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 600:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 601:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 602:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 603:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #pragma pop
 604:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 605:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #pragma warning restore
 606:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #endif
 607:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 608:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 609:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 610:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 611:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 612:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #endif
 613:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 614:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 615:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 616:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 617:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 618:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 619:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 620:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 621:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 622:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 623:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 624:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 625:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 626:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 627:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 628:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 629:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 630:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 631:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 632:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 633:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 634:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *         for details.
 635:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 636:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 637:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 638:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 639:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 640:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 641:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 642:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 643:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 644:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 645:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 646:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 647:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 648:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 649:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 650:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 651:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 652:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 653:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 654:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num  CAN node number,Range : 0-2
 655:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num  CAN Message Object number,Range : 0-63
 656:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 657:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 658:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 659:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 660:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 661:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 662:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 663:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 664:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 665:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 666:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 667:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 668:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 669:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 670:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 671:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 672:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 673:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 674:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 675:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 676:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 677:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 678:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 679:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 680:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 681:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 682:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 683:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 684:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 685:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 686:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
  27              	 .loc 1 686 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 83B0     	 sub sp,sp,#12
  36              	 .cfi_def_cfa_offset 16
  37 0004 00AF     	 add r7,sp,#0
  38              	 .cfi_def_cfa_register 7
  39 0006 7860     	 str r0,[r7,#4]
 687:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
  40              	 .loc 1 687 0
  41 0008 7B68     	 ldr r3,[r7,#4]
  42 000a D3F8C431 	 ldr r3,[r3,#452]
  43 000e 03F44073 	 and r3,r3,#768
  44 0012 002B     	 cmp r3,#0
  45 0014 0CBF     	 ite eq
  46 0016 0123     	 moveq r3,#1
  47 0018 0023     	 movne r3,#0
  48 001a DBB2     	 uxtb r3,r3
 688:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
  49              	 .loc 1 688 0
  50 001c 1846     	 mov r0,r3
  51 001e 0C37     	 adds r7,r7,#12
  52              	 .cfi_def_cfa_offset 4
  53 0020 BD46     	 mov sp,r7
  54              	 .cfi_def_cfa_register 13
  55              	 
  56 0022 5DF8047B 	 ldr r7,[sp],#4
  57              	 .cfi_restore 7
  58              	 .cfi_def_cfa_offset 0
  59 0026 7047     	 bx lr
  60              	 .cfi_endproc
  61              	.LFE174:
  63              	 .section .text.XMC_CAN_PanelControl,"ax",%progbits
  64              	 .align 2
  65              	 .thumb
  66              	 .thumb_func
  68              	XMC_CAN_PanelControl:
  69              	.LFB175:
 689:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 690:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 691:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 692:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 693:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 694:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 695:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 696:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1   Panel Argument 1,Range : 0-2
 697:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2   Panel Argument 2, Range : 0-63
 698:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 699:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 700:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 701:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 702:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 703:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 704:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 705:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 706:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 707:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 708:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 709:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 710:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 711:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 712:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 713:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 714:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_PANCMD_t pancmd,
 715:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     const uint8_t arg1,
 716:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     const uint8_t arg2)
 717:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
  70              	 .loc 1 717 0
  71              	 .cfi_startproc
  72              	 
  73              	 
  74              	 
  75 0000 80B4     	 push {r7}
  76              	 .cfi_def_cfa_offset 4
  77              	 .cfi_offset 7,-4
  78 0002 83B0     	 sub sp,sp,#12
  79              	 .cfi_def_cfa_offset 16
  80 0004 00AF     	 add r7,sp,#0
  81              	 .cfi_def_cfa_register 7
  82 0006 7860     	 str r0,[r7,#4]
  83 0008 0846     	 mov r0,r1
  84 000a 1146     	 mov r1,r2
  85 000c 1A46     	 mov r2,r3
  86 000e 0346     	 mov r3,r0
  87 0010 FB70     	 strb r3,[r7,#3]
  88 0012 0B46     	 mov r3,r1
  89 0014 BB70     	 strb r3,[r7,#2]
  90 0016 1346     	 mov r3,r2
  91 0018 7B70     	 strb r3,[r7,#1]
 718:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
  92              	 .loc 1 718 0
  93 001a FA78     	 ldrb r2,[r7,#3]
 719:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
  94              	 .loc 1 719 0
  95 001c BB78     	 ldrb r3,[r7,#2]
  96 001e 1B04     	 lsls r3,r3,#16
  97 0020 03F47F03 	 and r3,r3,#16711680
 718:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
  98              	 .loc 1 718 0
  99 0024 1A43     	 orrs r2,r2,r3
 720:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 100              	 .loc 1 720 0
 101 0026 7B78     	 ldrb r3,[r7,#1]
 102 0028 1B06     	 lsls r3,r3,#24
 719:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 103              	 .loc 1 719 0
 104 002a 1A43     	 orrs r2,r2,r3
 718:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 105              	 .loc 1 718 0
 106 002c 7B68     	 ldr r3,[r7,#4]
 107 002e C3F8C421 	 str r2,[r3,#452]
 721:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
 108              	 .loc 1 721 0
 109 0032 0C37     	 adds r7,r7,#12
 110              	 .cfi_def_cfa_offset 4
 111 0034 BD46     	 mov sp,r7
 112              	 .cfi_def_cfa_register 13
 113              	 
 114 0036 5DF8047B 	 ldr r7,[sp],#4
 115              	 .cfi_restore 7
 116              	 .cfi_def_cfa_offset 0
 117 003a 7047     	 bx lr
 118              	 .cfi_endproc
 119              	.LFE175:
 121              	 .section .text.XMC_CAN_NODE_EnableConfigurationChange,"ax",%progbits
 122              	 .align 2
 123              	 .thumb
 124              	 .thumb_func
 126              	XMC_CAN_NODE_EnableConfigurationChange:
 127              	.LFB191:
 722:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 723:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 724:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 725:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 726:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 727:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 728:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 729:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr  Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_T
 730:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *               Multiple interrupt trigger events can be ORed.
 731:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 732:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 733:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 734:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 735:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 736:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 737:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 738:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 739:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 740:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 741:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 742:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 743:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj, const XMC_CAN_NODE_INTERRUPT_TRIGGE
 744:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 745:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 746:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
 747:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 748:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 749:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 750:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 751:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 752:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 753:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 754:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source
 755:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN).
 756:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        The can_frequency shall be an integer divisor of the CAN clock source frequency (fPERI/fM
 757:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        it should be selected such that if fulfills the minimum operating frequency specified in 
 758:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        In addition the can_frequency shall be an integer multiple of the baudrate.
 759:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz the
 760:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 761:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return Actual frequency
 762:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 763:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 764:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_Init() configures clock rate of the module timer clock fCAN.
 765:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that only the normal divider is used to avoid jitter.
 766:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * In addition the actual achievable frequency is returned.
 767:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 768:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 769:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Altering CAN module \a can_frequency shall affects baud rate, call XMC_CAN_NODE_NominalBitTimeCo
 770:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 771:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 772:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 773:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx()\n\n\n
 774:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 775:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 776:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 777:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 778:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 779:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 780:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 781:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 782:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return Baudrate generator clock source
 783:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 784:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 785:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Returns CAN baudrate generator clock source
 786:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 787:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 788:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 789:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 790:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 791:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 792:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 793:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 794:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 795:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 796:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Sets CAN baudrate generator clock source
 797:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 798:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj, const XMC_CAN_CANCLKSRC_t source);
 799:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 800:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 801:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 802:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 803:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 804:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return baudrate generator input clock frequency
 805:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 806:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 807:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN baudrate generator input clock frequency
 808:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 809:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 810:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 811:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 812:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 813:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 814:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 815:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return fCAN clock frequency
 816:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 817:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 818:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN base clock frequency
 819:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 820:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 821:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj);
 822:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 823:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 824:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 825:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 826:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 827:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 828:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 829:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source.
 830:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). Max. value: Max. clock source frequency, i.e. i
 831:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use clksrc parameter only for XMC1400 series and XMC47/4800 series projects, otherwise omi
 832:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 833:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 834:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 835:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 836:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 837:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() or XMC_CAN_NODE_NominalBitTimeConfigureEx() to confi
 838:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 839:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 840:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 841:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 842:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx(), XMC_CAN_InitEx
 844:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 845:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 846:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 847:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #else
 848:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 849:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** #endif
 850:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 851:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 852:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 853:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 854:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 855:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 856:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 857:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 858:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 859:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 860:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 861:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * None
 863:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 864:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 865:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 866:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 867:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /* NODE APIs */
 868:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 869:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 870:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 871:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node      Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 872:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event     CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_
 873:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 874:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 875:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 876:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 877:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 878:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 879:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 880:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 881:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * None
 882:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 883:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 884:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 885:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 886:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 887:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     const uint32_t service_request)
 888:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 889:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
 890:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
 891:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 892:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 893:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 894:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 895:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 896:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 897:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 898:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 899:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 900:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 901:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 902:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 903:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 904:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 905:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * None
 906:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 907:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 908:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure(XMC_CAN_NODE_t *const can_node,
 909:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time);
 910:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 911:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 912:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 913:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 914:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 915:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 916:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return Status on the sucess setting the desired bitrate XMC_CAN_STATUS_t
 917:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 918:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 919:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_NODE_NominalBitTimeConfigure() configures the CAN node baudrate.
 920:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that allows bitrates below 100kpbs.
 921:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @note Consider using the new API for new projects. XMC_CAN_NODE_NominalBitTimeConfigure() is kep
 922:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 923:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 924:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 925:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 926:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 927:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_InitEx()
 928:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 929:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 930:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 931:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time);
 932:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 933:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 934:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 935:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 936:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 937:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 938:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 939:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 940:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 941:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 942:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 943:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 944:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 945:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 946:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * None
 947:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 948:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 949:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 950:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 951:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 952:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 953:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 954:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 955:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 956:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 957:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 958:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
 959:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 960:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 961:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 962:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_
 963:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 964:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 965:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 966:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 967:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 968:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 969:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 970:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 971:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 972:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 973:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 974:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 975:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 976:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 977:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 978:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 979:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
 980:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 981:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 982:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 983:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 984:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
 985:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 986:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
 987:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
 988:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 989:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 990:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 991:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 992:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 993:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 994:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 995:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 996:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
 997:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 998:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 999:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1000:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1001:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1002:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
1003:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1004:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1005:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1006:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
1007:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
1008:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
1009:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
1010:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1011:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1012:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1013:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1014:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1015:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1016:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1017:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1018:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1019:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1020:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1021:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
1022:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1023:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1024:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
1025:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1026:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1027:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1028:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1029:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1030:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1031:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1032:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1033:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1034:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1035:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1036:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1037:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1038:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1039:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1040:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
1041:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1042:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1043:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
1044:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1045:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1046:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1047:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1048:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1049:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1050:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1051:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1052:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1053:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1054:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
1055:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1056:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1057:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
1058:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1059:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1060:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
1061:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1062:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1063:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1064:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
1065:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
1066:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
1067:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
1068:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1069:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1070:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1071:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1072:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1073:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1074:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
1075:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1076:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1077:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
1078:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1079:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1080:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
1081:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1082:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1083:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1084:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
1085:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
1086:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk) >> CAN_NODE_NEC
1087:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
1088:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1089:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1090:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1091:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1092:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1093:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level  Error Warning level value. Range :0-255.
1094:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1095:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1096:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1097:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1098:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
1099:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
1100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
1111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
1114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
1138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
1141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
1164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_M
1166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
1167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns error warning level. This determines the threshold value (warning level, default 96) to
1177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  to set the corresponding error warning bit EWRN. It reads NECNT register.
1178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
1187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EW
1188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
1189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1198:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a trans
1199:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the err
1200:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1201:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1202:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1203:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1204:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1205:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1206:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1207:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1208:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1209:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1210:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1211:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
1212:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1213:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
1214:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1215:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1216:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1217:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1218:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1219:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1220:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t  receive error counter value.
1221:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1222:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1223:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Receive Error Counter value. It reads NECNT register.
1224:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1225:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1226:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1227:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1228:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1229:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1230:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1231:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
1232:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1233:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
1234:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1235:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1236:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1237:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1238:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1239:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1240:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1241:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1242:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1243:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1244:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1245:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1246:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1247:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1248:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1249:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1250:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1251:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
1252:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
1253:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
1254:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1255:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1256:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1257:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1258:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1259:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1260:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1261:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1262:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1263:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1264:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1265:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1266:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1267:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1268:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1269:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1270:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node, XMC_CAN_NODE_STATUS_t
1271:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
1272:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NSR &= ~(uint32_t)can_node_status;
1273:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
1274:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1275:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1276:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1277:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1278:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1279:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1280:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1281:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1282:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1283:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1284:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1285:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1286:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1287:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1288:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1289:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1290:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1291:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1292:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 128              	 .loc 1 1292 0
 129              	 .cfi_startproc
 130              	 
 131              	 
 132              	 
 133 0000 80B4     	 push {r7}
 134              	 .cfi_def_cfa_offset 4
 135              	 .cfi_offset 7,-4
 136 0002 83B0     	 sub sp,sp,#12
 137              	 .cfi_def_cfa_offset 16
 138 0004 00AF     	 add r7,sp,#0
 139              	 .cfi_def_cfa_register 7
 140 0006 7860     	 str r0,[r7,#4]
1293:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
 141              	 .loc 1 1293 0
 142 0008 7B68     	 ldr r3,[r7,#4]
 143 000a 1B68     	 ldr r3,[r3]
 144 000c 43F04002 	 orr r2,r3,#64
 145 0010 7B68     	 ldr r3,[r7,#4]
 146 0012 1A60     	 str r2,[r3]
1294:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
 147              	 .loc 1 1294 0
 148 0014 0C37     	 adds r7,r7,#12
 149              	 .cfi_def_cfa_offset 4
 150 0016 BD46     	 mov sp,r7
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 0018 5DF8047B 	 ldr r7,[sp],#4
 154              	 .cfi_restore 7
 155              	 .cfi_def_cfa_offset 0
 156 001c 7047     	 bx lr
 157              	 .cfi_endproc
 158              	.LFE191:
 160 001e 00BF     	 .section .text.XMC_CAN_NODE_DisableConfigurationChange,"ax",%progbits
 161              	 .align 2
 162              	 .thumb
 163              	 .thumb_func
 165              	XMC_CAN_NODE_DisableConfigurationChange:
 166              	.LFB192:
1295:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1296:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1297:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** /**
1298:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1299:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1300:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1301:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1302:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1303:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1304:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *  Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1305:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1306:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1307:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1308:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  *
1309:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****  */
1310:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** 
1311:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1312:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** {
 167              	 .loc 1 1312 0
 168              	 .cfi_startproc
 169              	 
 170              	 
 171              	 
 172 0000 80B4     	 push {r7}
 173              	 .cfi_def_cfa_offset 4
 174              	 .cfi_offset 7,-4
 175 0002 83B0     	 sub sp,sp,#12
 176              	 .cfi_def_cfa_offset 16
 177 0004 00AF     	 add r7,sp,#0
 178              	 .cfi_def_cfa_register 7
 179 0006 7860     	 str r0,[r7,#4]
1313:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
 180              	 .loc 1 1313 0
 181 0008 7B68     	 ldr r3,[r7,#4]
 182 000a 1B68     	 ldr r3,[r3]
 183 000c 23F04002 	 bic r2,r3,#64
 184 0010 7B68     	 ldr r3,[r7,#4]
 185 0012 1A60     	 str r2,[r3]
1314:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc\xmc_can.h **** }
 186              	 .loc 1 1314 0
 187 0014 0C37     	 adds r7,r7,#12
 188              	 .cfi_def_cfa_offset 4
 189 0016 BD46     	 mov sp,r7
 190              	 .cfi_def_cfa_register 13
 191              	 
 192 0018 5DF8047B 	 ldr r7,[sp],#4
 193              	 .cfi_restore 7
 194              	 .cfi_def_cfa_offset 0
 195 001c 7047     	 bx lr
 196              	 .cfi_endproc
 197              	.LFE192:
 199 001e 00BF     	 .section .text.max,"ax",%progbits
 200              	 .align 2
 201              	 .thumb
 202              	 .thumb_func
 204              	max:
 205              	.LFB232:
 206              	 .file 2 "../Libraries/XMCLib/src/xmc_can.c"
   1:../Libraries/XMCLib/src/xmc_can.c **** /**
   2:../Libraries/XMCLib/src/xmc_can.c ****  * @file xmc_can.c
   3:../Libraries/XMCLib/src/xmc_can.c ****  * @date 2020-03-17
   4:../Libraries/XMCLib/src/xmc_can.c ****  *
   5:../Libraries/XMCLib/src/xmc_can.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_can.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_can.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_can.c ****  *
   9:../Libraries/XMCLib/src/xmc_can.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_can.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_can.c ****  *
  12:../Libraries/XMCLib/src/xmc_can.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_can.c ****  *
  14:../Libraries/XMCLib/src/xmc_can.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_can.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_can.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_can.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_can.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_can.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_can.c ****  *
  21:../Libraries/XMCLib/src/xmc_can.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_can.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_can.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_can.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_can.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_can.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_can.c ****  *
  28:../Libraries/XMCLib/src/xmc_can.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_can.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_can.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_can.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_can.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_can.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_can.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_can.c ****  *
  36:../Libraries/XMCLib/src/xmc_can.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_can.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_can.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_can.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_can.c ****  *
  41:../Libraries/XMCLib/src/xmc_can.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_can.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_can.c ****  *
  44:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_can.c ****  *     - Initial draft <br>
  46:../Libraries/XMCLib/src/xmc_can.c ****  *
  47:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-05-20:
  48:../Libraries/XMCLib/src/xmc_can.c ****  *     - New API added: XMC_CAN_MO_ReceiveData() <br>
  49:../Libraries/XMCLib/src/xmc_can.c ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  50:../Libraries/XMCLib/src/xmc_can.c ****  *     - Minor fix in XMC_CAN_TXFIFO_ConfigMOSlaveObject(). <br>
  51:../Libraries/XMCLib/src/xmc_can.c ****  *
  52:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-06-20:
  53:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  54:../Libraries/XMCLib/src/xmc_can.c ****  *
  55:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-01:
  56:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed  fCANB clock support <br>
  57:../Libraries/XMCLib/src/xmc_can.c ****  *
  58:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-08:
  59:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_Init() <br>
  60:../Libraries/XMCLib/src/xmc_can.c ****  *
  61:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-07:
  62:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed XMC_CAN_AllocateMOtoNodeList to wait for ready status of list controller
  63:../Libraries/XMCLib/src/xmc_can.c ****  *
  64:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-20:
  65:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>
  66:../Libraries/XMCLib/src/xmc_can.c ****  *
  67:../Libraries/XMCLib/src/xmc_can.c ****  * 2017-11-09:
  68:../Libraries/XMCLib/src/xmc_can.c ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  69:../Libraries/XMCLib/src/xmc_can.c ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  70:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed refactoring XMC_CAN_MO_Config() to configure MOCTR depending on transmit or receiv
  71:../Libraries/XMCLib/src/xmc_can.c ****  *
  72:../Libraries/XMCLib/src/xmc_can.c ****  * 2018-06-21:
  73:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_NODE_NominalBitTimeConfigureEx()
  74:../Libraries/XMCLib/src/xmc_can.c ****  *
  75:../Libraries/XMCLib/src/xmc_can.c ****  * 2018-11-12:
  76:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed assertion at XMC_CAN_InitEx()
  77:../Libraries/XMCLib/src/xmc_can.c ****  *
  78:../Libraries/XMCLib/src/xmc_can.c ****  * 2019-05-07:
  79:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed compilation warnings
  80:../Libraries/XMCLib/src/xmc_can.c ****  *
  81:../Libraries/XMCLib/src/xmc_can.c ****  * 2019-06-26:
  82:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_NODE_NominalBitTimeConfigureEx() non returning, decrementing ntq before cont
  83:../Libraries/XMCLib/src/xmc_can.c ****  *     - Added XMC_CAN_GetClockFrequency()
  84:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_InitEx() so that XMC_CAN_SetBaudrateClockSource() is invoked before XMC_CAN_
  85:../Libraries/XMCLib/src/xmc_can.c ****  *
  86:../Libraries/XMCLib/src/xmc_can.c ****  * 2020-03-17:
  87:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_MO_ReceiveData() according to description in the reference manual
  88:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_MO_SetAcceptanceMask(), checking for matching message IDE
  89:../Libraries/XMCLib/src/xmc_can.c ****  *
  90:../Libraries/XMCLib/src/xmc_can.c ****  * @endcond
  91:../Libraries/XMCLib/src/xmc_can.c ****  *
  92:../Libraries/XMCLib/src/xmc_can.c ****  */
  93:../Libraries/XMCLib/src/xmc_can.c **** 
  94:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  95:../Libraries/XMCLib/src/xmc_can.c ****  * HEADER FILES
  96:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  97:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_can.h"
  98:../Libraries/XMCLib/src/xmc_can.c **** 
  99:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CAN)
 100:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_scu.h"
 101:../Libraries/XMCLib/src/xmc_can.c **** 
 102:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t max(uint32_t a, uint32_t b)
 103:../Libraries/XMCLib/src/xmc_can.c **** {
 207              	 .loc 2 103 0
 208              	 .cfi_startproc
 209              	 
 210              	 
 211              	 
 212 0000 80B4     	 push {r7}
 213              	 .cfi_def_cfa_offset 4
 214              	 .cfi_offset 7,-4
 215 0002 83B0     	 sub sp,sp,#12
 216              	 .cfi_def_cfa_offset 16
 217 0004 00AF     	 add r7,sp,#0
 218              	 .cfi_def_cfa_register 7
 219 0006 7860     	 str r0,[r7,#4]
 220 0008 3960     	 str r1,[r7]
 104:../Libraries/XMCLib/src/xmc_can.c ****   return (a > b) ? a : b;
 221              	 .loc 2 104 0
 222 000a 3A68     	 ldr r2,[r7]
 223 000c 7B68     	 ldr r3,[r7,#4]
 224 000e 9342     	 cmp r3,r2
 225 0010 38BF     	 it cc
 226 0012 1346     	 movcc r3,r2
 105:../Libraries/XMCLib/src/xmc_can.c **** }
 227              	 .loc 2 105 0
 228 0014 1846     	 mov r0,r3
 229 0016 0C37     	 adds r7,r7,#12
 230              	 .cfi_def_cfa_offset 4
 231 0018 BD46     	 mov sp,r7
 232              	 .cfi_def_cfa_register 13
 233              	 
 234 001a 5DF8047B 	 ldr r7,[sp],#4
 235              	 .cfi_restore 7
 236              	 .cfi_def_cfa_offset 0
 237 001e 7047     	 bx lr
 238              	 .cfi_endproc
 239              	.LFE232:
 241              	 .section .text.min,"ax",%progbits
 242              	 .align 2
 243              	 .thumb
 244              	 .thumb_func
 246              	min:
 247              	.LFB233:
 106:../Libraries/XMCLib/src/xmc_can.c **** 
 107:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t min(uint32_t a, uint32_t b)
 108:../Libraries/XMCLib/src/xmc_can.c **** {
 248              	 .loc 2 108 0
 249              	 .cfi_startproc
 250              	 
 251              	 
 252              	 
 253 0000 80B4     	 push {r7}
 254              	 .cfi_def_cfa_offset 4
 255              	 .cfi_offset 7,-4
 256 0002 83B0     	 sub sp,sp,#12
 257              	 .cfi_def_cfa_offset 16
 258 0004 00AF     	 add r7,sp,#0
 259              	 .cfi_def_cfa_register 7
 260 0006 7860     	 str r0,[r7,#4]
 261 0008 3960     	 str r1,[r7]
 109:../Libraries/XMCLib/src/xmc_can.c ****   return (a < b) ? a : b;
 262              	 .loc 2 109 0
 263 000a 3A68     	 ldr r2,[r7]
 264 000c 7B68     	 ldr r3,[r7,#4]
 265 000e 9342     	 cmp r3,r2
 266 0010 28BF     	 it cs
 267 0012 1346     	 movcs r3,r2
 110:../Libraries/XMCLib/src/xmc_can.c **** }
 268              	 .loc 2 110 0
 269 0014 1846     	 mov r0,r3
 270 0016 0C37     	 adds r7,r7,#12
 271              	 .cfi_def_cfa_offset 4
 272 0018 BD46     	 mov sp,r7
 273              	 .cfi_def_cfa_register 13
 274              	 
 275 001a 5DF8047B 	 ldr r7,[sp],#4
 276              	 .cfi_restore 7
 277              	 .cfi_def_cfa_offset 0
 278 001e 7047     	 bx lr
 279              	 .cfi_endproc
 280              	.LFE233:
 282              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigureEx,"ax",%progbits
 283              	 .align 2
 284              	 .global XMC_CAN_NODE_NominalBitTimeConfigureEx
 285              	 .thumb
 286              	 .thumb_func
 288              	XMC_CAN_NODE_NominalBitTimeConfigureEx:
 289              	.LFB234:
 111:../Libraries/XMCLib/src/xmc_can.c **** 
 112:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
 113:../Libraries/XMCLib/src/xmc_can.c ****  * API IMPLEMENTATION
 114:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
 115:../Libraries/XMCLib/src/xmc_can.c **** 
 116:../Libraries/XMCLib/src/xmc_can.c **** /* The max prescaler is the equal to max BRP setting (64) multiply by 8 (DIV8) */
 117:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_PRESCALER 512
 118:../Libraries/XMCLib/src/xmc_can.c **** 
 119:../Libraries/XMCLib/src/xmc_can.c **** /* maximum TSEG1 is 16 and maximum TSEG2 is 8, plus one fix sync tq */
 120:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_NTQ 25
 121:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_NTQ 8
 122:../Libraries/XMCLib/src/xmc_can.c **** 
 123:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_TSEG1 3
 124:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_TSEG2 2
 125:../Libraries/XMCLib/src/xmc_can.c **** 
 126:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_TSEG1 15
 127:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_TSEG2 7
 128:../Libraries/XMCLib/src/xmc_can.c **** 
 129:../Libraries/XMCLib/src/xmc_can.c **** 
 130:../Libraries/XMCLib/src/xmc_can.c **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 131:../Libraries/XMCLib/src/xmc_can.c ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const bit_time_config)
 132:../Libraries/XMCLib/src/xmc_can.c **** {
 290              	 .loc 2 132 0
 291              	 .cfi_startproc
 292              	 
 293              	 
 294 0000 80B5     	 push {r7,lr}
 295              	 .cfi_def_cfa_offset 8
 296              	 .cfi_offset 7,-8
 297              	 .cfi_offset 14,-4
 298 0002 88B0     	 sub sp,sp,#32
 299              	 .cfi_def_cfa_offset 40
 300 0004 00AF     	 add r7,sp,#0
 301              	 .cfi_def_cfa_register 7
 302 0006 7860     	 str r0,[r7,#4]
 303 0008 3960     	 str r1,[r7]
 133:../Libraries/XMCLib/src/xmc_can.c ****   /* Check that the CAN frequency is a multiple of the required baudrate */
 134:../Libraries/XMCLib/src/xmc_can.c ****   if ((bit_time_config->can_frequency % bit_time_config->baudrate) == 0)
 304              	 .loc 2 134 0
 305 000a 3B68     	 ldr r3,[r7]
 306 000c 1B68     	 ldr r3,[r3]
 307 000e 3A68     	 ldr r2,[r7]
 308 0010 5268     	 ldr r2,[r2,#4]
 309 0012 B3FBF2F1 	 udiv r1,r3,r2
 310 0016 02FB01F2 	 mul r2,r2,r1
 311 001a 9B1A     	 subs r3,r3,r2
 312 001c 002B     	 cmp r3,#0
 313 001e 40F09080 	 bne .L11
 314              	.LBB2:
 135:../Libraries/XMCLib/src/xmc_can.c ****   {
 136:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t prescaler = 0;
 315              	 .loc 2 136 0
 316 0022 0023     	 movs r3,#0
 317 0024 FB61     	 str r3,[r7,#28]
 137:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t div8 = 0;
 318              	 .loc 2 137 0
 319 0026 0023     	 movs r3,#0
 320 0028 BB61     	 str r3,[r7,#24]
 138:../Libraries/XMCLib/src/xmc_can.c **** 
 139:../Libraries/XMCLib/src/xmc_can.c ****     /* Calculate the factor between can frequency and required baudrate, this is equal to (prescale
 140:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t fcan_div = bit_time_config->can_frequency / bit_time_config->baudrate;
 321              	 .loc 2 140 0
 322 002a 3B68     	 ldr r3,[r7]
 323 002c 1A68     	 ldr r2,[r3]
 324 002e 3B68     	 ldr r3,[r7]
 325 0030 5B68     	 ldr r3,[r3,#4]
 326 0032 B2FBF3F3 	 udiv r3,r2,r3
 327 0036 BB60     	 str r3,[r7,#8]
 141:../Libraries/XMCLib/src/xmc_can.c **** 
 142:../Libraries/XMCLib/src/xmc_can.c ****     /* start with highest ntq, i.e as much as possible time quanta should be used to construct a bi
 143:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t ntq = XMC_CAN_NODE_MAX_NTQ;
 328              	 .loc 2 143 0
 329 0038 1923     	 movs r3,#25
 330 003a 7B61     	 str r3,[r7,#20]
 144:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tseg1 = 0;
 331              	 .loc 2 144 0
 332 003c 0023     	 movs r3,#0
 333 003e 3B61     	 str r3,[r7,#16]
 145:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tseg2 = 0;
 334              	 .loc 2 145 0
 335 0040 0023     	 movs r3,#0
 336 0042 FB60     	 str r3,[r7,#12]
 146:../Libraries/XMCLib/src/xmc_can.c ****     while (ntq >= XMC_CAN_NODE_MIN_NTQ)
 337              	 .loc 2 146 0
 338 0044 4BE0     	 b .L12
 339              	.L17:
 147:../Libraries/XMCLib/src/xmc_can.c ****     {
 148:../Libraries/XMCLib/src/xmc_can.c ****       /* consider this ntq, only if fcan_div is multiple of ntq */
 149:../Libraries/XMCLib/src/xmc_can.c ****       if ((fcan_div % ntq) == 0)
 340              	 .loc 2 149 0
 341 0046 BB68     	 ldr r3,[r7,#8]
 342 0048 7A69     	 ldr r2,[r7,#20]
 343 004a B3FBF2F2 	 udiv r2,r3,r2
 344 004e 7969     	 ldr r1,[r7,#20]
 345 0050 01FB02F2 	 mul r2,r1,r2
 346 0054 9B1A     	 subs r3,r3,r2
 347 0056 002B     	 cmp r3,#0
 348 0058 3ED1     	 bne .L13
 150:../Libraries/XMCLib/src/xmc_can.c ****       {
 151:../Libraries/XMCLib/src/xmc_can.c ****         div8 = 0;
 349              	 .loc 2 151 0
 350 005a 0023     	 movs r3,#0
 351 005c BB61     	 str r3,[r7,#24]
 152:../Libraries/XMCLib/src/xmc_can.c ****         prescaler = fcan_div / ntq;
 352              	 .loc 2 152 0
 353 005e BA68     	 ldr r2,[r7,#8]
 354 0060 7B69     	 ldr r3,[r7,#20]
 355 0062 B2FBF3F3 	 udiv r3,r2,r3
 356 0066 FB61     	 str r3,[r7,#28]
 153:../Libraries/XMCLib/src/xmc_can.c ****         if ((prescaler > 0) && (prescaler <= XMC_CAN_NODE_MAX_PRESCALER))
 357              	 .loc 2 153 0
 358 0068 FB69     	 ldr r3,[r7,#28]
 359 006a 002B     	 cmp r3,#0
 360 006c 34D0     	 beq .L13
 361              	 .loc 2 153 0 is_stmt 0 discriminator 1
 362 006e FB69     	 ldr r3,[r7,#28]
 363 0070 B3F5007F 	 cmp r3,#512
 364 0074 30D8     	 bhi .L13
 154:../Libraries/XMCLib/src/xmc_can.c ****         {
 155:../Libraries/XMCLib/src/xmc_can.c ****           if (prescaler >= 64)
 365              	 .loc 2 155 0 is_stmt 1
 366 0076 FB69     	 ldr r3,[r7,#28]
 367 0078 3F2B     	 cmp r3,#63
 368 007a 0AD9     	 bls .L14
 156:../Libraries/XMCLib/src/xmc_can.c ****           {
 157:../Libraries/XMCLib/src/xmc_can.c ****             /* consider prescaler >=64, if it is integer divisible by 8*/
 158:../Libraries/XMCLib/src/xmc_can.c ****             if ((prescaler & 0x7U) != 0)
 369              	 .loc 2 158 0
 370 007c FB69     	 ldr r3,[r7,#28]
 371 007e 03F00703 	 and r3,r3,#7
 372 0082 002B     	 cmp r3,#0
 373 0084 03D0     	 beq .L15
 159:../Libraries/XMCLib/src/xmc_can.c ****             {
 160:../Libraries/XMCLib/src/xmc_can.c ****               --ntq;
 374              	 .loc 2 160 0
 375 0086 7B69     	 ldr r3,[r7,#20]
 376 0088 013B     	 subs r3,r3,#1
 377 008a 7B61     	 str r3,[r7,#20]
 161:../Libraries/XMCLib/src/xmc_can.c ****               continue;
 378              	 .loc 2 161 0
 379 008c 27E0     	 b .L12
 380              	.L15:
 162:../Libraries/XMCLib/src/xmc_can.c ****             }
 163:../Libraries/XMCLib/src/xmc_can.c ****             else
 164:../Libraries/XMCLib/src/xmc_can.c ****             {
 165:../Libraries/XMCLib/src/xmc_can.c ****               div8 = 1;
 381              	 .loc 2 165 0
 382 008e 0123     	 movs r3,#1
 383 0090 BB61     	 str r3,[r7,#24]
 384              	.L14:
 166:../Libraries/XMCLib/src/xmc_can.c ****             }
 167:../Libraries/XMCLib/src/xmc_can.c ****           }
 168:../Libraries/XMCLib/src/xmc_can.c **** 
 169:../Libraries/XMCLib/src/xmc_can.c ****           tseg1 = ((ntq - 1) * bit_time_config->sample_point) / 10000;
 385              	 .loc 2 169 0
 386 0092 7B69     	 ldr r3,[r7,#20]
 387 0094 013B     	 subs r3,r3,#1
 388 0096 3A68     	 ldr r2,[r7]
 389 0098 1289     	 ldrh r2,[r2,#8]
 390 009a 02FB03F3 	 mul r3,r2,r3
 391 009e 2B4A     	 ldr r2,.L19
 392 00a0 A2FB0323 	 umull r2,r3,r2,r3
 393 00a4 5B0B     	 lsrs r3,r3,#13
 394 00a6 3B61     	 str r3,[r7,#16]
 170:../Libraries/XMCLib/src/xmc_can.c ****           tseg2 = ntq - tseg1 - 1;
 395              	 .loc 2 170 0
 396 00a8 7A69     	 ldr r2,[r7,#20]
 397 00aa 3B69     	 ldr r3,[r7,#16]
 398 00ac D31A     	 subs r3,r2,r3
 399 00ae 013B     	 subs r3,r3,#1
 400 00b0 FB60     	 str r3,[r7,#12]
 171:../Libraries/XMCLib/src/xmc_can.c **** 
 172:../Libraries/XMCLib/src/xmc_can.c ****           if ((XMC_CAN_NODE_MIN_TSEG1 <= tseg1) && (tseg1 <= XMC_CAN_NODE_MAX_TSEG1) &&
 401              	 .loc 2 172 0
 402 00b2 3B69     	 ldr r3,[r7,#16]
 403 00b4 022B     	 cmp r3,#2
 404 00b6 0FD9     	 bls .L13
 405              	 .loc 2 172 0 is_stmt 0 discriminator 1
 406 00b8 3B69     	 ldr r3,[r7,#16]
 407 00ba 0F2B     	 cmp r3,#15
 408 00bc 0CD8     	 bhi .L13
 409              	 .loc 2 172 0 discriminator 2
 410 00be FB68     	 ldr r3,[r7,#12]
 411 00c0 012B     	 cmp r3,#1
 412 00c2 09D9     	 bls .L13
 173:../Libraries/XMCLib/src/xmc_can.c ****               (XMC_CAN_NODE_MIN_TSEG2 <= tseg2) && (tseg2 < XMC_CAN_NODE_MAX_TSEG2) && (tseg2 >= bi
 413              	 .loc 2 173 0 is_stmt 1
 414 00c4 FB68     	 ldr r3,[r7,#12]
 415 00c6 062B     	 cmp r3,#6
 416 00c8 06D8     	 bhi .L13
 417              	 .loc 2 173 0 is_stmt 0 discriminator 1
 418 00ca 3B68     	 ldr r3,[r7]
 419 00cc 5B89     	 ldrh r3,[r3,#10]
 420 00ce 1A46     	 mov r2,r3
 421 00d0 FB68     	 ldr r3,[r7,#12]
 422 00d2 9A42     	 cmp r2,r3
 423 00d4 00D8     	 bhi .L13
 174:../Libraries/XMCLib/src/xmc_can.c ****           {
 175:../Libraries/XMCLib/src/xmc_can.c ****             break;
 424              	 .loc 2 175 0 is_stmt 1
 425 00d6 05E0     	 b .L16
 426              	.L13:
 176:../Libraries/XMCLib/src/xmc_can.c ****           }
 177:../Libraries/XMCLib/src/xmc_can.c **** 
 178:../Libraries/XMCLib/src/xmc_can.c **** 
 179:../Libraries/XMCLib/src/xmc_can.c ****         }
 180:../Libraries/XMCLib/src/xmc_can.c ****       }
 181:../Libraries/XMCLib/src/xmc_can.c ****       --ntq;
 427              	 .loc 2 181 0
 428 00d8 7B69     	 ldr r3,[r7,#20]
 429 00da 013B     	 subs r3,r3,#1
 430 00dc 7B61     	 str r3,[r7,#20]
 431              	.L12:
 146:../Libraries/XMCLib/src/xmc_can.c ****     {
 432              	 .loc 2 146 0
 433 00de 7B69     	 ldr r3,[r7,#20]
 434 00e0 072B     	 cmp r3,#7
 435 00e2 B0D8     	 bhi .L17
 436              	.L16:
 182:../Libraries/XMCLib/src/xmc_can.c ****     }
 183:../Libraries/XMCLib/src/xmc_can.c **** 
 184:../Libraries/XMCLib/src/xmc_can.c ****     if (ntq >= XMC_CAN_NODE_MIN_NTQ)
 437              	 .loc 2 184 0
 438 00e4 7B69     	 ldr r3,[r7,#20]
 439 00e6 072B     	 cmp r3,#7
 440 00e8 2BD9     	 bls .L11
 185:../Libraries/XMCLib/src/xmc_can.c ****     {
 186:../Libraries/XMCLib/src/xmc_can.c **** 
 187:../Libraries/XMCLib/src/xmc_can.c ****       XMC_ASSERT("XMC_CAN_NODE_NominalBitTimeConfigureEx: prescaler", (prescaler != 0));
 188:../Libraries/XMCLib/src/xmc_can.c ****       XMC_ASSERT("XMC_CAN_NODE_NominalBitTimeConfigureEx: tseg1", (tseg1 != 0));
 189:../Libraries/XMCLib/src/xmc_can.c ****       XMC_ASSERT("XMC_CAN_NODE_NominalBitTimeConfigureEx: tseg2", (tseg2 != 0));
 190:../Libraries/XMCLib/src/xmc_can.c **** 
 191:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_NODE_EnableConfigurationChange(can_node);
 441              	 .loc 2 191 0
 442 00ea 7868     	 ldr r0,[r7,#4]
 443 00ec FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 192:../Libraries/XMCLib/src/xmc_can.c **** 
 193:../Libraries/XMCLib/src/xmc_can.c ****       /* Configure bit timing register */
 194:../Libraries/XMCLib/src/xmc_can.c ****       can_node->NBTR = (((tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG2_M
 444              	 .loc 2 194 0
 445 00f0 FB68     	 ldr r3,[r7,#12]
 446 00f2 013B     	 subs r3,r3,#1
 447 00f4 1B03     	 lsls r3,r3,#12
 448 00f6 03F4E042 	 and r2,r3,#28672
 195:../Libraries/XMCLib/src/xmc_can.c ****                        (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NODE
 449              	 .loc 2 195 0
 450 00fa 3B68     	 ldr r3,[r7]
 451 00fc 5B89     	 ldrh r3,[r3,#10]
 452 00fe 013B     	 subs r3,r3,#1
 453 0100 9B01     	 lsls r3,r3,#6
 454 0102 DBB2     	 uxtb r3,r3
 194:../Libraries/XMCLib/src/xmc_can.c ****                        (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NODE
 455              	 .loc 2 194 0
 456 0104 1A43     	 orrs r2,r2,r3
 196:../Libraries/XMCLib/src/xmc_can.c ****                        (((tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG1_M
 457              	 .loc 2 196 0
 458 0106 3B69     	 ldr r3,[r7,#16]
 459 0108 013B     	 subs r3,r3,#1
 460 010a 1B02     	 lsls r3,r3,#8
 461 010c 03F47063 	 and r3,r3,#3840
 195:../Libraries/XMCLib/src/xmc_can.c ****                        (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NODE
 462              	 .loc 2 195 0
 463 0110 42EA0301 	 orr r1,r2,r3
 197:../Libraries/XMCLib/src/xmc_can.c ****                        ((((prescaler >> (3 * div8)) - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN
 464              	 .loc 2 197 0
 465 0114 BA69     	 ldr r2,[r7,#24]
 466 0116 1346     	 mov r3,r2
 467 0118 5B00     	 lsls r3,r3,#1
 468 011a 1344     	 add r3,r3,r2
 469 011c 1A46     	 mov r2,r3
 470 011e FB69     	 ldr r3,[r7,#28]
 471 0120 D340     	 lsrs r3,r3,r2
 472 0122 013B     	 subs r3,r3,#1
 473 0124 03F03F03 	 and r3,r3,#63
 196:../Libraries/XMCLib/src/xmc_can.c ****                        (((tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG1_M
 474              	 .loc 2 196 0
 475 0128 41EA0302 	 orr r2,r1,r3
 198:../Libraries/XMCLib/src/xmc_can.c ****                        ((div8 << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 476              	 .loc 2 198 0
 477 012c BB69     	 ldr r3,[r7,#24]
 478 012e DB03     	 lsls r3,r3,#15
 479 0130 9BB2     	 uxth r3,r3
 197:../Libraries/XMCLib/src/xmc_can.c ****                        ((((prescaler >> (3 * div8)) - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN
 480              	 .loc 2 197 0
 481 0132 1A43     	 orrs r2,r2,r3
 194:../Libraries/XMCLib/src/xmc_can.c ****                        (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NODE
 482              	 .loc 2 194 0
 483 0134 7B68     	 ldr r3,[r7,#4]
 484 0136 1A61     	 str r2,[r3,#16]
 199:../Libraries/XMCLib/src/xmc_can.c **** 
 200:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_NODE_DisableConfigurationChange(can_node);
 485              	 .loc 2 200 0
 486 0138 7868     	 ldr r0,[r7,#4]
 487 013a FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 201:../Libraries/XMCLib/src/xmc_can.c **** 
 202:../Libraries/XMCLib/src/xmc_can.c ****       return XMC_CAN_STATUS_SUCCESS;
 488              	 .loc 2 202 0
 489 013e 0023     	 movs r3,#0
 490 0140 00E0     	 b .L18
 491              	.L11:
 492              	.LBE2:
 203:../Libraries/XMCLib/src/xmc_can.c ****     }
 204:../Libraries/XMCLib/src/xmc_can.c ****   }
 205:../Libraries/XMCLib/src/xmc_can.c **** 
 206:../Libraries/XMCLib/src/xmc_can.c ****   return XMC_CAN_STATUS_ERROR;
 493              	 .loc 2 206 0
 494 0142 0123     	 movs r3,#1
 495              	.L18:
 207:../Libraries/XMCLib/src/xmc_can.c **** }
 496              	 .loc 2 207 0
 497 0144 1846     	 mov r0,r3
 498 0146 2037     	 adds r7,r7,#32
 499              	 .cfi_def_cfa_offset 8
 500 0148 BD46     	 mov sp,r7
 501              	 .cfi_def_cfa_register 13
 502              	 
 503 014a 80BD     	 pop {r7,pc}
 504              	.L20:
 505              	 .align 2
 506              	.L19:
 507 014c 5917B7D1 	 .word -776530087
 508              	 .cfi_endproc
 509              	.LFE234:
 511              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigure,"ax",%progbits
 512              	 .align 2
 513              	 .global XMC_CAN_NODE_NominalBitTimeConfigure
 514              	 .thumb
 515              	 .thumb_func
 517              	XMC_CAN_NODE_NominalBitTimeConfigure:
 518              	.LFB235:
 208:../Libraries/XMCLib/src/xmc_can.c **** 
 209:../Libraries/XMCLib/src/xmc_can.c **** /* Baudrate Configuration */
 210:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_NominalBitTimeConfigure (XMC_CAN_NODE_t *const can_node,
 211:../Libraries/XMCLib/src/xmc_can.c ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time)
 212:../Libraries/XMCLib/src/xmc_can.c **** {
 519              	 .loc 2 212 0
 520              	 .cfi_startproc
 521              	 
 522              	 
 523 0000 80B5     	 push {r7,lr}
 524              	 .cfi_def_cfa_offset 8
 525              	 .cfi_offset 7,-8
 526              	 .cfi_offset 14,-4
 527 0002 90B0     	 sub sp,sp,#64
 528              	 .cfi_def_cfa_offset 72
 529 0004 00AF     	 add r7,sp,#0
 530              	 .cfi_def_cfa_register 7
 531 0006 7860     	 str r0,[r7,#4]
 532 0008 3960     	 str r1,[r7]
 213:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_brp = 12U ;
 533              	 .loc 2 213 0
 534 000a 0C23     	 movs r3,#12
 535 000c FB63     	 str r3,[r7,#60]
 214:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_tseg1 = 12U;
 536              	 .loc 2 214 0
 537 000e 0C23     	 movs r3,#12
 538 0010 BB63     	 str r3,[r7,#56]
 215:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_brp = 0U;
 539              	 .loc 2 215 0
 540 0012 0023     	 movs r3,#0
 541 0014 7B63     	 str r3,[r7,#52]
 216:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg1 = 1U;
 542              	 .loc 2 216 0
 543 0016 0123     	 movs r3,#1
 544 0018 3B63     	 str r3,[r7,#48]
 217:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg2 = 0U;
 545              	 .loc 2 217 0
 546 001a 0023     	 movs r3,#0
 547 001c 7B61     	 str r3,[r7,#20]
 218:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tbaud = 0U;
 548              	 .loc 2 218 0
 549 001e 0023     	 movs r3,#0
 550 0020 FB62     	 str r3,[r7,#44]
 219:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_error = 10000U;
 551              	 .loc 2 219 0
 552 0022 42F21073 	 movw r3,#10000
 553 0026 BB62     	 str r3,[r7,#40]
 220:../Libraries/XMCLib/src/xmc_can.c **** 
 221:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: rate not supported", (can_bit_time->baudrate
 222:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->baudrate >= 100000U));
 223:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 224:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency <= 120000000U);
 225:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 226:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency > 5000000U);
 227:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: sample point not supported",
 228:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->sample_point < 10000U) && ((can_bit_time->sample_point > 0U)));
 229:../Libraries/XMCLib/src/xmc_can.c **** 
 230:../Libraries/XMCLib/src/xmc_can.c ****   /*
 231:../Libraries/XMCLib/src/xmc_can.c ****    * Bit timing & sampling
 232:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = (BRP+1)/Fcan if DIV8 = 0
 233:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = 8*(BRP+1)/Fcan if DIV8 = 1
 234:../Libraries/XMCLib/src/xmc_can.c ****    * TSync = 1.Tq
 235:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 = (TSEG1+1)*Tq                >= 3Tq
 236:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 = (TSEG2+1)*Tq                >= 2Tq
 237:../Libraries/XMCLib/src/xmc_can.c ****    * Bit Time = TSync + TSeg1 + TSeg2    >= 8Tq
 238:../Libraries/XMCLib/src/xmc_can.c ****    *
 239:../Libraries/XMCLib/src/xmc_can.c ****    * Resynchronization:
 240:../Libraries/XMCLib/src/xmc_can.c ****    *
 241:../Libraries/XMCLib/src/xmc_can.c ****    * Tsjw = (SJW + 1)*Tq
 242:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 >= Tsjw + Tprop
 243:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 >= Tsjw
 244:../Libraries/XMCLib/src/xmc_can.c ****    */
 245:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best baudrate */
 246:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_brp = 1U; temp_brp <= 64U; temp_brp++)
 554              	 .loc 2 246 0
 555 0028 0123     	 movs r3,#1
 556 002a FB63     	 str r3,[r7,#60]
 557 002c 67E0     	 b .L22
 558              	.L31:
 559              	.LBB3:
 247:../Libraries/XMCLib/src/xmc_can.c ****   {
 248:../Libraries/XMCLib/src/xmc_can.c **** 
 249:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t f_quanta = (uint32_t)((can_bit_time->can_frequency * 10U) / temp_brp);
 560              	 .loc 2 249 0
 561 002e 3B68     	 ldr r3,[r7]
 562 0030 1A68     	 ldr r2,[r3]
 563 0032 1346     	 mov r3,r2
 564 0034 9B00     	 lsls r3,r3,#2
 565 0036 1344     	 add r3,r3,r2
 566 0038 5B00     	 lsls r3,r3,#1
 567 003a 1A46     	 mov r2,r3
 568 003c FB6B     	 ldr r3,[r7,#60]
 569 003e B2FBF3F3 	 udiv r3,r2,r3
 570 0042 3B61     	 str r3,[r7,#16]
 250:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 571              	 .loc 2 250 0
 572 0044 3B68     	 ldr r3,[r7]
 573 0046 5B68     	 ldr r3,[r3,#4]
 574 0048 3A69     	 ldr r2,[r7,#16]
 575 004a B2FBF3F3 	 udiv r3,r2,r3
 576 004e 7B62     	 str r3,[r7,#36]
 251:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_baudrate;
 252:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t error;
 253:../Libraries/XMCLib/src/xmc_can.c **** 
 254:../Libraries/XMCLib/src/xmc_can.c ****     if ((temp_tbaud % 10U) > 5U)
 577              	 .loc 2 254 0
 578 0050 796A     	 ldr r1,[r7,#36]
 579 0052 5B4B     	 ldr r3,.L39
 580 0054 A3FB0123 	 umull r2,r3,r3,r1
 581 0058 DA08     	 lsrs r2,r3,#3
 582 005a 1346     	 mov r3,r2
 583 005c 9B00     	 lsls r3,r3,#2
 584 005e 1344     	 add r3,r3,r2
 585 0060 5B00     	 lsls r3,r3,#1
 586 0062 CA1A     	 subs r2,r1,r3
 587 0064 052A     	 cmp r2,#5
 588 0066 09D9     	 bls .L23
 255:../Libraries/XMCLib/src/xmc_can.c ****     {
 256:../Libraries/XMCLib/src/xmc_can.c ****       temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 589              	 .loc 2 256 0
 590 0068 7B6A     	 ldr r3,[r7,#36]
 591 006a 554A     	 ldr r2,.L39
 592 006c A2FB0323 	 umull r2,r3,r2,r3
 593 0070 DB08     	 lsrs r3,r3,#3
 594 0072 7B62     	 str r3,[r7,#36]
 257:../Libraries/XMCLib/src/xmc_can.c ****       temp_tbaud++;
 595              	 .loc 2 257 0
 596 0074 7B6A     	 ldr r3,[r7,#36]
 597 0076 0133     	 adds r3,r3,#1
 598 0078 7B62     	 str r3,[r7,#36]
 599 007a 05E0     	 b .L24
 600              	.L23:
 258:../Libraries/XMCLib/src/xmc_can.c ****     }
 259:../Libraries/XMCLib/src/xmc_can.c ****     else
 260:../Libraries/XMCLib/src/xmc_can.c ****     {
 261:../Libraries/XMCLib/src/xmc_can.c ****       temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 601              	 .loc 2 261 0
 602 007c 7B6A     	 ldr r3,[r7,#36]
 603 007e 504A     	 ldr r2,.L39
 604 0080 A2FB0323 	 umull r2,r3,r2,r3
 605 0084 DB08     	 lsrs r3,r3,#3
 606 0086 7B62     	 str r3,[r7,#36]
 607              	.L24:
 262:../Libraries/XMCLib/src/xmc_can.c ****     }
 263:../Libraries/XMCLib/src/xmc_can.c **** 
 264:../Libraries/XMCLib/src/xmc_can.c ****     if (temp_tbaud > 0U)
 608              	 .loc 2 264 0
 609 0088 7B6A     	 ldr r3,[r7,#36]
 610 008a 002B     	 cmp r3,#0
 611 008c 0AD0     	 beq .L25
 265:../Libraries/XMCLib/src/xmc_can.c ****     {
 266:../Libraries/XMCLib/src/xmc_can.c ****       temp_baudrate = (uint32_t) (f_quanta / (temp_tbaud * 10U));
 612              	 .loc 2 266 0
 613 008e 7A6A     	 ldr r2,[r7,#36]
 614 0090 1346     	 mov r3,r2
 615 0092 9B00     	 lsls r3,r3,#2
 616 0094 1344     	 add r3,r3,r2
 617 0096 5B00     	 lsls r3,r3,#1
 618 0098 1A46     	 mov r2,r3
 619 009a 3B69     	 ldr r3,[r7,#16]
 620 009c B3FBF2F3 	 udiv r3,r3,r2
 621 00a0 3B62     	 str r3,[r7,#32]
 622 00a2 07E0     	 b .L26
 623              	.L25:
 267:../Libraries/XMCLib/src/xmc_can.c ****     }
 268:../Libraries/XMCLib/src/xmc_can.c ****     else
 269:../Libraries/XMCLib/src/xmc_can.c ****     {
 270:../Libraries/XMCLib/src/xmc_can.c ****       temp_baudrate = f_quanta / 10U;
 624              	 .loc 2 270 0
 625 00a4 3B69     	 ldr r3,[r7,#16]
 626 00a6 464A     	 ldr r2,.L39
 627 00a8 A2FB0323 	 umull r2,r3,r2,r3
 628 00ac DB08     	 lsrs r3,r3,#3
 629 00ae 3B62     	 str r3,[r7,#32]
 271:../Libraries/XMCLib/src/xmc_can.c ****       temp_tbaud = 1;
 630              	 .loc 2 271 0
 631 00b0 0123     	 movs r3,#1
 632 00b2 7B62     	 str r3,[r7,#36]
 633              	.L26:
 272:../Libraries/XMCLib/src/xmc_can.c ****     }
 273:../Libraries/XMCLib/src/xmc_can.c **** 
 274:../Libraries/XMCLib/src/xmc_can.c ****     if (temp_baudrate >= can_bit_time->baudrate)
 634              	 .loc 2 274 0
 635 00b4 3B68     	 ldr r3,[r7]
 636 00b6 5A68     	 ldr r2,[r3,#4]
 637 00b8 3B6A     	 ldr r3,[r7,#32]
 638 00ba 9A42     	 cmp r2,r3
 639 00bc 05D8     	 bhi .L27
 275:../Libraries/XMCLib/src/xmc_can.c ****     {
 276:../Libraries/XMCLib/src/xmc_can.c ****       error = temp_baudrate - can_bit_time->baudrate;
 640              	 .loc 2 276 0
 641 00be 3B68     	 ldr r3,[r7]
 642 00c0 5B68     	 ldr r3,[r3,#4]
 643 00c2 3A6A     	 ldr r2,[r7,#32]
 644 00c4 D31A     	 subs r3,r2,r3
 645 00c6 FB61     	 str r3,[r7,#28]
 646 00c8 04E0     	 b .L28
 647              	.L27:
 277:../Libraries/XMCLib/src/xmc_can.c ****     }
 278:../Libraries/XMCLib/src/xmc_can.c ****     else
 279:../Libraries/XMCLib/src/xmc_can.c ****     {
 280:../Libraries/XMCLib/src/xmc_can.c ****       error = can_bit_time->baudrate - temp_baudrate;
 648              	 .loc 2 280 0
 649 00ca 3B68     	 ldr r3,[r7]
 650 00cc 5A68     	 ldr r2,[r3,#4]
 651 00ce 3B6A     	 ldr r3,[r7,#32]
 652 00d0 D31A     	 subs r3,r2,r3
 653 00d2 FB61     	 str r3,[r7,#28]
 654              	.L28:
 281:../Libraries/XMCLib/src/xmc_can.c ****     }
 282:../Libraries/XMCLib/src/xmc_can.c **** 
 283:../Libraries/XMCLib/src/xmc_can.c ****     if ((temp_tbaud <= 20U) && (best_error > error))
 655              	 .loc 2 283 0
 656 00d4 7B6A     	 ldr r3,[r7,#36]
 657 00d6 142B     	 cmp r3,#20
 658 00d8 0ED8     	 bhi .L29
 659              	 .loc 2 283 0 is_stmt 0 discriminator 1
 660 00da BA6A     	 ldr r2,[r7,#40]
 661 00dc FB69     	 ldr r3,[r7,#28]
 662 00de 9A42     	 cmp r2,r3
 663 00e0 0AD9     	 bls .L29
 284:../Libraries/XMCLib/src/xmc_can.c ****     {
 285:../Libraries/XMCLib/src/xmc_can.c ****       best_brp = temp_brp;
 664              	 .loc 2 285 0 is_stmt 1
 665 00e2 FB6B     	 ldr r3,[r7,#60]
 666 00e4 7B63     	 str r3,[r7,#52]
 286:../Libraries/XMCLib/src/xmc_can.c ****       best_tbaud = temp_tbaud;
 667              	 .loc 2 286 0
 668 00e6 7B6A     	 ldr r3,[r7,#36]
 669 00e8 FB62     	 str r3,[r7,#44]
 287:../Libraries/XMCLib/src/xmc_can.c ****       best_error = (error);
 670              	 .loc 2 287 0
 671 00ea FB69     	 ldr r3,[r7,#28]
 672 00ec BB62     	 str r3,[r7,#40]
 288:../Libraries/XMCLib/src/xmc_can.c **** 
 289:../Libraries/XMCLib/src/xmc_can.c ****       if (error < 1000U)
 673              	 .loc 2 289 0
 674 00ee FB69     	 ldr r3,[r7,#28]
 675 00f0 B3F57A7F 	 cmp r3,#1000
 676 00f4 00D2     	 bcs .L29
 290:../Libraries/XMCLib/src/xmc_can.c ****       {
 291:../Libraries/XMCLib/src/xmc_can.c ****         break;
 677              	 .loc 2 291 0
 678 00f6 05E0     	 b .L30
 679              	.L29:
 680              	.LBE3:
 246:../Libraries/XMCLib/src/xmc_can.c ****   {
 681              	 .loc 2 246 0 discriminator 2
 682 00f8 FB6B     	 ldr r3,[r7,#60]
 683 00fa 0133     	 adds r3,r3,#1
 684 00fc FB63     	 str r3,[r7,#60]
 685              	.L22:
 246:../Libraries/XMCLib/src/xmc_can.c ****   {
 686              	 .loc 2 246 0 is_stmt 0 discriminator 1
 687 00fe FB6B     	 ldr r3,[r7,#60]
 688 0100 402B     	 cmp r3,#64
 689 0102 94D9     	 bls .L31
 690              	.L30:
 292:../Libraries/XMCLib/src/xmc_can.c ****       }
 293:../Libraries/XMCLib/src/xmc_can.c ****     }
 294:../Libraries/XMCLib/src/xmc_can.c ****   }
 295:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best sample point */
 296:../Libraries/XMCLib/src/xmc_can.c ****   best_error = 10000U;
 691              	 .loc 2 296 0 is_stmt 1
 692 0104 42F21073 	 movw r3,#10000
 693 0108 BB62     	 str r3,[r7,#40]
 297:../Libraries/XMCLib/src/xmc_can.c **** 
 298:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_tseg1 = 64U; temp_tseg1 >= 3U; temp_tseg1--)
 694              	 .loc 2 298 0
 695 010a 4023     	 movs r3,#64
 696 010c BB63     	 str r3,[r7,#56]
 697 010e 2EE0     	 b .L32
 698              	.L38:
 699              	.LBB4:
 299:../Libraries/XMCLib/src/xmc_can.c ****   {
 300:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tempSamplePoint = ((temp_tseg1 + 1U) * 10000U) / best_tbaud;
 700              	 .loc 2 300 0
 701 0110 BB6B     	 ldr r3,[r7,#56]
 702 0112 0133     	 adds r3,r3,#1
 703 0114 42F21072 	 movw r2,#10000
 704 0118 02FB03F2 	 mul r2,r2,r3
 705 011c FB6A     	 ldr r3,[r7,#44]
 706 011e B2FBF3F3 	 udiv r3,r2,r3
 707 0122 FB60     	 str r3,[r7,#12]
 301:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t error;
 302:../Libraries/XMCLib/src/xmc_can.c ****     if (tempSamplePoint >= can_bit_time->sample_point)
 708              	 .loc 2 302 0
 709 0124 3B68     	 ldr r3,[r7]
 710 0126 1B89     	 ldrh r3,[r3,#8]
 711 0128 1A46     	 mov r2,r3
 712 012a FB68     	 ldr r3,[r7,#12]
 713 012c 9A42     	 cmp r2,r3
 714 012e 06D8     	 bhi .L33
 303:../Libraries/XMCLib/src/xmc_can.c ****     {
 304:../Libraries/XMCLib/src/xmc_can.c ****       error = tempSamplePoint  - can_bit_time->sample_point;
 715              	 .loc 2 304 0
 716 0130 3B68     	 ldr r3,[r7]
 717 0132 1B89     	 ldrh r3,[r3,#8]
 718 0134 1A46     	 mov r2,r3
 719 0136 FB68     	 ldr r3,[r7,#12]
 720 0138 9B1A     	 subs r3,r3,r2
 721 013a BB61     	 str r3,[r7,#24]
 722 013c 05E0     	 b .L34
 723              	.L33:
 305:../Libraries/XMCLib/src/xmc_can.c ****     }
 306:../Libraries/XMCLib/src/xmc_can.c ****     else
 307:../Libraries/XMCLib/src/xmc_can.c ****     {
 308:../Libraries/XMCLib/src/xmc_can.c ****       error = can_bit_time->sample_point  - tempSamplePoint;
 724              	 .loc 2 308 0
 725 013e 3B68     	 ldr r3,[r7]
 726 0140 1B89     	 ldrh r3,[r3,#8]
 727 0142 1A46     	 mov r2,r3
 728 0144 FB68     	 ldr r3,[r7,#12]
 729 0146 D31A     	 subs r3,r2,r3
 730 0148 BB61     	 str r3,[r7,#24]
 731              	.L34:
 309:../Libraries/XMCLib/src/xmc_can.c ****     }
 310:../Libraries/XMCLib/src/xmc_can.c ****     if (best_error > error)
 732              	 .loc 2 310 0
 733 014a BA6A     	 ldr r2,[r7,#40]
 734 014c BB69     	 ldr r3,[r7,#24]
 735 014e 9A42     	 cmp r2,r3
 736 0150 03D9     	 bls .L35
 311:../Libraries/XMCLib/src/xmc_can.c ****     {
 312:../Libraries/XMCLib/src/xmc_can.c ****       best_tseg1 = temp_tseg1;
 737              	 .loc 2 312 0
 738 0152 BB6B     	 ldr r3,[r7,#56]
 739 0154 3B63     	 str r3,[r7,#48]
 313:../Libraries/XMCLib/src/xmc_can.c ****       best_error = error;
 740              	 .loc 2 313 0
 741 0156 BB69     	 ldr r3,[r7,#24]
 742 0158 BB62     	 str r3,[r7,#40]
 743              	.L35:
 314:../Libraries/XMCLib/src/xmc_can.c ****     }
 315:../Libraries/XMCLib/src/xmc_can.c ****     if (tempSamplePoint < (can_bit_time->sample_point))
 744              	 .loc 2 315 0
 745 015a 3B68     	 ldr r3,[r7]
 746 015c 1B89     	 ldrh r3,[r3,#8]
 747 015e 1A46     	 mov r2,r3
 748 0160 FB68     	 ldr r3,[r7,#12]
 749 0162 9A42     	 cmp r2,r3
 750 0164 00D9     	 bls .L36
 316:../Libraries/XMCLib/src/xmc_can.c ****     {
 317:../Libraries/XMCLib/src/xmc_can.c ****       break;
 751              	 .loc 2 317 0
 752 0166 05E0     	 b .L37
 753              	.L36:
 754              	.LBE4:
 298:../Libraries/XMCLib/src/xmc_can.c ****   {
 755              	 .loc 2 298 0 discriminator 2
 756 0168 BB6B     	 ldr r3,[r7,#56]
 757 016a 013B     	 subs r3,r3,#1
 758 016c BB63     	 str r3,[r7,#56]
 759              	.L32:
 298:../Libraries/XMCLib/src/xmc_can.c ****   {
 760              	 .loc 2 298 0 is_stmt 0 discriminator 1
 761 016e BB6B     	 ldr r3,[r7,#56]
 762 0170 022B     	 cmp r3,#2
 763 0172 CDD8     	 bhi .L38
 764              	.L37:
 318:../Libraries/XMCLib/src/xmc_can.c ****     }
 319:../Libraries/XMCLib/src/xmc_can.c ****   }
 320:../Libraries/XMCLib/src/xmc_can.c **** 
 321:../Libraries/XMCLib/src/xmc_can.c ****   best_tseg2 = best_tbaud - best_tseg1 - 1U;
 765              	 .loc 2 321 0 is_stmt 1
 766 0174 FA6A     	 ldr r2,[r7,#44]
 767 0176 3B6B     	 ldr r3,[r7,#48]
 768 0178 D31A     	 subs r3,r2,r3
 769 017a 013B     	 subs r3,r3,#1
 770 017c 7B61     	 str r3,[r7,#20]
 322:../Libraries/XMCLib/src/xmc_can.c **** 
 323:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_EnableConfigurationChange(can_node);
 771              	 .loc 2 323 0
 772 017e 7868     	 ldr r0,[r7,#4]
 773 0180 FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 324:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure bit timing register */
 325:../Libraries/XMCLib/src/xmc_can.c ****   can_node->NBTR = (((uint32_t)(best_tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_N
 774              	 .loc 2 325 0
 775 0184 7B69     	 ldr r3,[r7,#20]
 776 0186 013B     	 subs r3,r3,#1
 777 0188 1B03     	 lsls r3,r3,#12
 778 018a 03F4E042 	 and r2,r3,#28672
 326:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw) - 1U) << CAN_NODE_NBTR_SJW_Pos)) & (
 779              	 .loc 2 326 0
 780 018e 3B68     	 ldr r3,[r7]
 781 0190 5B89     	 ldrh r3,[r3,#10]
 782 0192 013B     	 subs r3,r3,#1
 783 0194 9B01     	 lsls r3,r3,#6
 784 0196 DBB2     	 uxtb r3,r3
 325:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw) - 1U) << CAN_NODE_NBTR_SJW_Pos)) & (
 785              	 .loc 2 325 0
 786 0198 1A43     	 orrs r2,r2,r3
 327:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_N
 787              	 .loc 2 327 0
 788 019a 3B6B     	 ldr r3,[r7,#48]
 789 019c 013B     	 subs r3,r3,#1
 790 019e 1B02     	 lsls r3,r3,#8
 791 01a0 03F47063 	 and r3,r3,#3840
 326:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw) - 1U) << CAN_NODE_NBTR_SJW_Pos)) & (
 792              	 .loc 2 326 0
 793 01a4 1A43     	 orrs r2,r2,r3
 328:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_brp - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN_NODE_NBTR_
 794              	 .loc 2 328 0
 795 01a6 7B6B     	 ldr r3,[r7,#52]
 796 01a8 013B     	 subs r3,r3,#1
 797 01aa 03F03F03 	 and r3,r3,#63
 798 01ae 1A43     	 orrs r2,r2,r3
 325:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw) - 1U) << CAN_NODE_NBTR_SJW_Pos)) & (
 799              	 .loc 2 325 0
 800 01b0 7B68     	 ldr r3,[r7,#4]
 801 01b2 1A61     	 str r2,[r3,#16]
 329:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)0U << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 330:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_DisableConfigurationChange(can_node);
 802              	 .loc 2 330 0
 803 01b4 7868     	 ldr r0,[r7,#4]
 804 01b6 FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 331:../Libraries/XMCLib/src/xmc_can.c **** }
 805              	 .loc 2 331 0
 806 01ba 4037     	 adds r7,r7,#64
 807              	 .cfi_def_cfa_offset 8
 808 01bc BD46     	 mov sp,r7
 809              	 .cfi_def_cfa_register 13
 810              	 
 811 01be 80BD     	 pop {r7,pc}
 812              	.L40:
 813              	 .align 2
 814              	.L39:
 815 01c0 CDCCCCCC 	 .word -858993459
 816              	 .cfi_endproc
 817              	.LFE235:
 819              	 .section .text.XMC_CAN_AllocateMOtoNodeList,"ax",%progbits
 820              	 .align 2
 821              	 .global XMC_CAN_AllocateMOtoNodeList
 822              	 .thumb
 823              	 .thumb_func
 825              	XMC_CAN_AllocateMOtoNodeList:
 826              	.LFB236:
 332:../Libraries/XMCLib/src/xmc_can.c **** /* Function to allocate message object from free list to node list */
 333:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 334:../Libraries/XMCLib/src/xmc_can.c **** {
 827              	 .loc 2 334 0
 828              	 .cfi_startproc
 829              	 
 830              	 
 831 0000 80B5     	 push {r7,lr}
 832              	 .cfi_def_cfa_offset 8
 833              	 .cfi_offset 7,-8
 834              	 .cfi_offset 14,-4
 835 0002 82B0     	 sub sp,sp,#8
 836              	 .cfi_def_cfa_offset 16
 837 0004 00AF     	 add r7,sp,#0
 838              	 .cfi_def_cfa_register 7
 839 0006 7860     	 str r0,[r7,#4]
 840 0008 0B46     	 mov r3,r1
 841 000a FB70     	 strb r3,[r7,#3]
 842 000c 1346     	 mov r3,r2
 843 000e BB70     	 strb r3,[r7,#2]
 335:../Libraries/XMCLib/src/xmc_can.c ****   /* wait while panel operation is in progress. */
 336:../Libraries/XMCLib/src/xmc_can.c ****   while (XMC_CAN_IsPanelControlReady(obj) == false)
 844              	 .loc 2 336 0
 845 0010 00BF     	 nop
 846              	.L42:
 847              	 .loc 2 336 0 is_stmt 0 discriminator 1
 848 0012 7868     	 ldr r0,[r7,#4]
 849 0014 FFF7FEFF 	 bl XMC_CAN_IsPanelControlReady
 850 0018 0346     	 mov r3,r0
 851 001a 83F00103 	 eor r3,r3,#1
 852 001e DBB2     	 uxtb r3,r3
 853 0020 002B     	 cmp r3,#0
 854 0022 F6D1     	 bne .L42
 337:../Libraries/XMCLib/src/xmc_can.c ****   {
 338:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 339:../Libraries/XMCLib/src/xmc_can.c ****   };
 340:../Libraries/XMCLib/src/xmc_can.c **** 
 341:../Libraries/XMCLib/src/xmc_can.c ****   /* Panel Command for  allocation of MO to node list */
 342:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_PanelControl(obj, XMC_CAN_PANCMD_STATIC_ALLOCATE, mo_num, (node_num + 1U));
 855              	 .loc 2 342 0 is_stmt 1
 856 0024 FB78     	 ldrb r3,[r7,#3]
 857 0026 0133     	 adds r3,r3,#1
 858 0028 DBB2     	 uxtb r3,r3
 859 002a BA78     	 ldrb r2,[r7,#2]
 860 002c 7868     	 ldr r0,[r7,#4]
 861 002e 0221     	 movs r1,#2
 862 0030 FFF7FEFF 	 bl XMC_CAN_PanelControl
 343:../Libraries/XMCLib/src/xmc_can.c **** }
 863              	 .loc 2 343 0
 864 0034 0837     	 adds r7,r7,#8
 865              	 .cfi_def_cfa_offset 8
 866 0036 BD46     	 mov sp,r7
 867              	 .cfi_def_cfa_register 13
 868              	 
 869 0038 80BD     	 pop {r7,pc}
 870              	 .cfi_endproc
 871              	.LFE236:
 873 003a 00BF     	 .section .text.XMC_CAN_Disable,"ax",%progbits
 874              	 .align 2
 875              	 .global XMC_CAN_Disable
 876              	 .thumb
 877              	 .thumb_func
 879              	XMC_CAN_Disable:
 880              	.LFB237:
 344:../Libraries/XMCLib/src/xmc_can.c **** 
 345:../Libraries/XMCLib/src/xmc_can.c **** /* Disable XMC_CAN Peripheral */
 346:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Disable(XMC_CAN_t *const obj)
 347:../Libraries/XMCLib/src/xmc_can.c **** {
 881              	 .loc 2 347 0
 882              	 .cfi_startproc
 883              	 
 884              	 
 885 0000 80B5     	 push {r7,lr}
 886              	 .cfi_def_cfa_offset 8
 887              	 .cfi_offset 7,-8
 888              	 .cfi_offset 14,-4
 889 0002 82B0     	 sub sp,sp,#8
 890              	 .cfi_def_cfa_offset 16
 891 0004 00AF     	 add r7,sp,#0
 892              	 .cfi_def_cfa_register 7
 893 0006 7860     	 str r0,[r7,#4]
 348:../Libraries/XMCLib/src/xmc_can.c ****   /* Disable CAN Module */
 349:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC = CAN_CLC_DISR_Msk;
 894              	 .loc 2 349 0
 895 0008 7B68     	 ldr r3,[r7,#4]
 896 000a 0122     	 movs r2,#1
 897 000c 1A60     	 str r2,[r3]
 350:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 351:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 898              	 .loc 2 351 0
 899 000e 0448     	 ldr r0,.L44
 900 0010 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 352:../Libraries/XMCLib/src/xmc_can.c **** #endif
 353:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 354:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 901              	 .loc 2 354 0
 902 0014 0248     	 ldr r0,.L44
 903 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 355:../Libraries/XMCLib/src/xmc_can.c **** #endif
 356:../Libraries/XMCLib/src/xmc_can.c **** }
 904              	 .loc 2 356 0
 905 001a 0837     	 adds r7,r7,#8
 906              	 .cfi_def_cfa_offset 8
 907 001c BD46     	 mov sp,r7
 908              	 .cfi_def_cfa_register 13
 909              	 
 910 001e 80BD     	 pop {r7,pc}
 911              	.L45:
 912              	 .align 2
 913              	.L44:
 914 0020 10000010 	 .word 268435472
 915              	 .cfi_endproc
 916              	.LFE237:
 918              	 .section .text.XMC_CAN_Enable,"ax",%progbits
 919              	 .align 2
 920              	 .global XMC_CAN_Enable
 921              	 .thumb
 922              	 .thumb_func
 924              	XMC_CAN_Enable:
 925              	.LFB238:
 357:../Libraries/XMCLib/src/xmc_can.c **** 
 358:../Libraries/XMCLib/src/xmc_can.c **** /* Enable XMC_CAN Peripheral */
 359:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Enable(XMC_CAN_t *const obj)
 360:../Libraries/XMCLib/src/xmc_can.c **** {
 926              	 .loc 2 360 0
 927              	 .cfi_startproc
 928              	 
 929              	 
 930 0000 80B5     	 push {r7,lr}
 931              	 .cfi_def_cfa_offset 8
 932              	 .cfi_offset 7,-8
 933              	 .cfi_offset 14,-4
 934 0002 82B0     	 sub sp,sp,#8
 935              	 .cfi_def_cfa_offset 16
 936 0004 00AF     	 add r7,sp,#0
 937              	 .cfi_def_cfa_register 7
 938 0006 7860     	 str r0,[r7,#4]
 361:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 362:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 939              	 .loc 2 362 0
 940 0008 0A48     	 ldr r0,.L48
 941 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 363:../Libraries/XMCLib/src/xmc_can.c **** #endif
 364:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 365:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 942              	 .loc 2 365 0
 943 000e 0948     	 ldr r0,.L48
 944 0010 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 366:../Libraries/XMCLib/src/xmc_can.c **** #endif
 367:../Libraries/XMCLib/src/xmc_can.c ****   /* Enable CAN Module */
 368:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC &= ~(uint32_t)CAN_CLC_DISR_Msk;
 945              	 .loc 2 368 0
 946 0014 7B68     	 ldr r3,[r7,#4]
 947 0016 1B68     	 ldr r3,[r3]
 948 0018 23F00102 	 bic r2,r3,#1
 949 001c 7B68     	 ldr r3,[r7,#4]
 950 001e 1A60     	 str r2,[r3]
 369:../Libraries/XMCLib/src/xmc_can.c ****   while (obj->CLC & CAN_CLC_DISS_Msk)
 951              	 .loc 2 369 0
 952 0020 00BF     	 nop
 953              	.L47:
 954              	 .loc 2 369 0 is_stmt 0 discriminator 1
 955 0022 7B68     	 ldr r3,[r7,#4]
 956 0024 1B68     	 ldr r3,[r3]
 957 0026 03F00203 	 and r3,r3,#2
 958 002a 002B     	 cmp r3,#0
 959 002c F9D1     	 bne .L47
 370:../Libraries/XMCLib/src/xmc_can.c ****   {
 371:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 372:../Libraries/XMCLib/src/xmc_can.c ****   };
 373:../Libraries/XMCLib/src/xmc_can.c **** }
 960              	 .loc 2 373 0 is_stmt 1
 961 002e 0837     	 adds r7,r7,#8
 962              	 .cfi_def_cfa_offset 8
 963 0030 BD46     	 mov sp,r7
 964              	 .cfi_def_cfa_register 13
 965              	 
 966 0032 80BD     	 pop {r7,pc}
 967              	.L49:
 968              	 .align 2
 969              	.L48:
 970 0034 10000010 	 .word 268435472
 971              	 .cfi_endproc
 972              	.LFE238:
 974              	 .section .text.XMC_CAN_Init,"ax",%progbits
 975              	 .align 2
 976              	 .global XMC_CAN_Init
 977              	 .thumb
 978              	 .thumb_func
 980              	XMC_CAN_Init:
 981              	.LFB239:
 374:../Libraries/XMCLib/src/xmc_can.c **** 
 375:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 376:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 377:../Libraries/XMCLib/src/xmc_can.c **** {
 982              	 .loc 2 377 0
 983              	 .cfi_startproc
 984              	 
 985              	 
 986 0000 80B5     	 push {r7,lr}
 987              	 .cfi_def_cfa_offset 8
 988              	 .cfi_offset 7,-8
 989              	 .cfi_offset 14,-4
 990 0002 8EB0     	 sub sp,sp,#56
 991              	 .cfi_def_cfa_offset 64
 992 0004 00AF     	 add r7,sp,#0
 993              	 .cfi_def_cfa_register 7
 994 0006 F860     	 str r0,[r7,#12]
 995 0008 0B46     	 mov r3,r1
 996 000a 7A60     	 str r2,[r7,#4]
 997 000c FB72     	 strb r3,[r7,#11]
 378:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 379:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 380:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 381:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 382:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 383:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 384:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 385:../Libraries/XMCLib/src/xmc_can.c **** 
 386:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 387:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 388:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 998              	 .loc 2 388 0
 999 000e F868     	 ldr r0,[r7,#12]
 1000 0010 FFF7FEFF 	 bl XMC_CAN_Enable
 389:../Libraries/XMCLib/src/xmc_can.c **** 
 390:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 1001              	 .loc 2 390 0
 1002 0014 FB7A     	 ldrb r3,[r7,#11]
 1003 0016 F868     	 ldr r0,[r7,#12]
 1004 0018 1946     	 mov r1,r3
 1005 001a FFF7FEFF 	 bl XMC_CAN_SetBaudrateClockSource
 391:../Libraries/XMCLib/src/xmc_can.c **** 
 392:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 1006              	 .loc 2 392 0
 1007 001e F868     	 ldr r0,[r7,#12]
 1008 0020 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1009 0024 7863     	 str r0,[r7,#52]
 393:../Libraries/XMCLib/src/xmc_can.c **** 
 394:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 395:../Libraries/XMCLib/src/xmc_can.c **** 
 396:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 397:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 1010              	 .loc 2 397 0
 1011 0026 7A6B     	 ldr r2,[r7,#52]
 1012 0028 7B68     	 ldr r3,[r7,#4]
 1013 002a B2FBF3F3 	 udiv r3,r2,r3
 1014 002e C3F58063 	 rsb r3,r3,#1024
 1015 0032 0020     	 movs r0,#0
 1016 0034 1946     	 mov r1,r3
 1017 0036 FFF7FEFF 	 bl max
 1018 003a 0346     	 mov r3,r0
 1019 003c 1846     	 mov r0,r3
 1020 003e 40F2FF31 	 movw r1,#1023
 1021 0042 FFF7FEFF 	 bl min
 1022 0046 3863     	 str r0,[r7,#48]
 398:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 1023              	 .loc 2 398 0
 1024 0048 3B6B     	 ldr r3,[r7,#48]
 1025 004a C3F58063 	 rsb r3,r3,#1024
 1026 004e 7A6B     	 ldr r2,[r7,#52]
 1027 0050 B2FBF3F3 	 udiv r3,r2,r3
 1028 0054 FB62     	 str r3,[r7,#44]
 399:../Libraries/XMCLib/src/xmc_can.c **** 
 400:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 401:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 1029              	 .loc 2 401 0
 1030 0056 7B68     	 ldr r3,[r7,#4]
 1031 0058 9B09     	 lsrs r3,r3,#6
 1032 005a BB62     	 str r3,[r7,#40]
 402:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 1033              	 .loc 2 402 0
 1034 005c 7B6B     	 ldr r3,[r7,#52]
 1035 005e 9B09     	 lsrs r3,r3,#6
 1036 0060 7B62     	 str r3,[r7,#36]
 403:../Libraries/XMCLib/src/xmc_can.c **** 
 404:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 1037              	 .loc 2 404 0
 1038 0062 BB6A     	 ldr r3,[r7,#40]
 1039 0064 9A02     	 lsls r2,r3,#10
 1040 0066 7B6A     	 ldr r3,[r7,#36]
 1041 0068 B2FBF3F3 	 udiv r3,r2,r3
 1042 006c 1846     	 mov r0,r3
 1043 006e 40F2FF31 	 movw r1,#1023
 1044 0072 FFF7FEFF 	 bl min
 1045 0076 3862     	 str r0,[r7,#32]
 405:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 1046              	 .loc 2 405 0
 1047 0078 7B6A     	 ldr r3,[r7,#36]
 1048 007a 3A6A     	 ldr r2,[r7,#32]
 1049 007c 02FB03F3 	 mul r3,r2,r3
 1050 0080 9B0A     	 lsrs r3,r3,#10
 1051 0082 FB61     	 str r3,[r7,#28]
 406:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 1052              	 .loc 2 406 0
 1053 0084 FB69     	 ldr r3,[r7,#28]
 1054 0086 9B01     	 lsls r3,r3,#6
 1055 0088 FB61     	 str r3,[r7,#28]
 407:../Libraries/XMCLib/src/xmc_can.c **** 
 408:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 1056              	 .loc 2 408 0
 1057 008a 7A68     	 ldr r2,[r7,#4]
 1058 008c FB6A     	 ldr r3,[r7,#44]
 1059 008e D21A     	 subs r2,r2,r3
 1060 0090 7968     	 ldr r1,[r7,#4]
 1061 0092 FB69     	 ldr r3,[r7,#28]
 1062 0094 CB1A     	 subs r3,r1,r3
 1063 0096 9A42     	 cmp r2,r3
 1064 0098 94BF     	 ite ls
 1065 009a 0123     	 movls r3,#1
 1066 009c 0023     	 movhi r3,#0
 1067 009e FB76     	 strb r3,[r7,#27]
 409:../Libraries/XMCLib/src/xmc_can.c **** 
 410:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 1068              	 .loc 2 410 0
 1069 00a0 FB7E     	 ldrb r3,[r7,#27]
 1070 00a2 002B     	 cmp r3,#0
 1071 00a4 01D0     	 beq .L51
 1072              	 .loc 2 410 0 is_stmt 0 discriminator 1
 1073 00a6 3B6B     	 ldr r3,[r7,#48]
 1074 00a8 00E0     	 b .L52
 1075              	.L51:
 1076              	 .loc 2 410 0 discriminator 2
 1077 00aa 3B6A     	 ldr r3,[r7,#32]
 1078              	.L52:
 1079              	 .loc 2 410 0 discriminator 4
 1080 00ac 7B61     	 str r3,[r7,#20]
 411:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 1081              	 .loc 2 411 0 is_stmt 1 discriminator 4
 1082 00ae FB7E     	 ldrb r3,[r7,#27]
 1083 00b0 002B     	 cmp r3,#0
 1084 00b2 01D0     	 beq .L53
 1085              	 .loc 2 411 0 is_stmt 0 discriminator 1
 1086 00b4 0123     	 movs r3,#1
 1087 00b6 00E0     	 b .L54
 1088              	.L53:
 1089              	 .loc 2 411 0 discriminator 2
 1090 00b8 0223     	 movs r3,#2
 1091              	.L54:
 1092              	 .loc 2 411 0 discriminator 4
 1093 00ba FB74     	 strb r3,[r7,#19]
 412:../Libraries/XMCLib/src/xmc_can.c **** 
 413:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 1094              	 .loc 2 413 0 is_stmt 1 discriminator 4
 1095 00bc FB68     	 ldr r3,[r7,#12]
 1096 00be DB68     	 ldr r3,[r3,#12]
 1097 00c0 23F44343 	 bic r3,r3,#49920
 1098 00c4 23F0FF03 	 bic r3,r3,#255
 1099 00c8 FA68     	 ldr r2,[r7,#12]
 1100 00ca D360     	 str r3,[r2,#12]
 414:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 1101              	 .loc 2 414 0 discriminator 4
 1102 00cc FB68     	 ldr r3,[r7,#12]
 1103 00ce DA68     	 ldr r2,[r3,#12]
 1104 00d0 FB7C     	 ldrb r3,[r7,#19]
 1105 00d2 9903     	 lsls r1,r3,#14
 1106 00d4 7B69     	 ldr r3,[r7,#20]
 1107 00d6 0B43     	 orrs r3,r3,r1
 1108 00d8 1A43     	 orrs r2,r2,r3
 1109 00da FB68     	 ldr r3,[r7,#12]
 1110 00dc DA60     	 str r2,[r3,#12]
 415:../Libraries/XMCLib/src/xmc_can.c **** 
 416:../Libraries/XMCLib/src/xmc_can.c **** }
 1111              	 .loc 2 416 0 discriminator 4
 1112 00de 3837     	 adds r7,r7,#56
 1113              	 .cfi_def_cfa_offset 8
 1114 00e0 BD46     	 mov sp,r7
 1115              	 .cfi_def_cfa_register 13
 1116              	 
 1117 00e2 80BD     	 pop {r7,pc}
 1118              	 .cfi_endproc
 1119              	.LFE239:
 1121              	 .section .text.XMC_CAN_SetBaudrateClockSource,"ax",%progbits
 1122              	 .align 2
 1123              	 .global XMC_CAN_SetBaudrateClockSource
 1124              	 .thumb
 1125              	 .thumb_func
 1127              	XMC_CAN_SetBaudrateClockSource:
 1128              	.LFB240:
 417:../Libraries/XMCLib/src/xmc_can.c **** 
 418:../Libraries/XMCLib/src/xmc_can.c **** #else
 419:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN GLOBAL Object */
 420:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency)
 421:../Libraries/XMCLib/src/xmc_can.c **** {
 422:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 423:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 424:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 425:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 426:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 427:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 428:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 429:../Libraries/XMCLib/src/xmc_can.c **** 
 430:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency = (XMC_SCU_CLOCK_GetPeripheralClockFrequency());
 431:../Libraries/XMCLib/src/xmc_can.c **** 
 432:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 433:../Libraries/XMCLib/src/xmc_can.c **** 
 434:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 435:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 436:../Libraries/XMCLib/src/xmc_can.c **** 
 437:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 438:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 439:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 440:../Libraries/XMCLib/src/xmc_can.c **** 
 441:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 442:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 443:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 444:../Libraries/XMCLib/src/xmc_can.c **** 
 445:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 446:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 447:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 448:../Libraries/XMCLib/src/xmc_can.c **** 
 449:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 450:../Libraries/XMCLib/src/xmc_can.c **** 
 451:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 452:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 453:../Libraries/XMCLib/src/xmc_can.c **** 
 454:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 455:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 456:../Libraries/XMCLib/src/xmc_can.c **** }
 457:../Libraries/XMCLib/src/xmc_can.c **** #endif
 458:../Libraries/XMCLib/src/xmc_can.c **** 
 459:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj, const XMC_CAN_CANCLKSRC_t source)
 460:../Libraries/XMCLib/src/xmc_can.c **** {
 1129              	 .loc 2 460 0
 1130              	 .cfi_startproc
 1131              	 
 1132              	 
 1133              	 
 1134 0000 80B4     	 push {r7}
 1135              	 .cfi_def_cfa_offset 4
 1136              	 .cfi_offset 7,-4
 1137 0002 83B0     	 sub sp,sp,#12
 1138              	 .cfi_def_cfa_offset 16
 1139 0004 00AF     	 add r7,sp,#0
 1140              	 .cfi_def_cfa_register 7
 1141 0006 7860     	 str r0,[r7,#4]
 1142 0008 0B46     	 mov r3,r1
 1143 000a FB70     	 strb r3,[r7,#3]
 461:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 462:../Libraries/XMCLib/src/xmc_can.c ****   obj->MCR = (obj->MCR & ~CAN_MCR_CLKSEL_Msk) | source ;
 1144              	 .loc 2 462 0
 1145 000c 7B68     	 ldr r3,[r7,#4]
 1146 000e D3F8C831 	 ldr r3,[r3,#456]
 1147 0012 23F00F02 	 bic r2,r3,#15
 1148 0016 FB78     	 ldrb r3,[r7,#3]
 1149 0018 1A43     	 orrs r2,r2,r3
 1150 001a 7B68     	 ldr r3,[r7,#4]
 1151 001c C3F8C821 	 str r2,[r3,#456]
 463:../Libraries/XMCLib/src/xmc_can.c **** #else
 464:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 465:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(source);
 466:../Libraries/XMCLib/src/xmc_can.c **** #endif
 467:../Libraries/XMCLib/src/xmc_can.c **** }
 1152              	 .loc 2 467 0
 1153 0020 0C37     	 adds r7,r7,#12
 1154              	 .cfi_def_cfa_offset 4
 1155 0022 BD46     	 mov sp,r7
 1156              	 .cfi_def_cfa_register 13
 1157              	 
 1158 0024 5DF8047B 	 ldr r7,[sp],#4
 1159              	 .cfi_restore 7
 1160              	 .cfi_def_cfa_offset 0
 1161 0028 7047     	 bx lr
 1162              	 .cfi_endproc
 1163              	.LFE240:
 1165 002a 00BF     	 .section .text.XMC_CAN_GetBaudrateClockSource,"ax",%progbits
 1166              	 .align 2
 1167              	 .global XMC_CAN_GetBaudrateClockSource
 1168              	 .thumb
 1169              	 .thumb_func
 1171              	XMC_CAN_GetBaudrateClockSource:
 1172              	.LFB241:
 468:../Libraries/XMCLib/src/xmc_can.c **** 
 469:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj)
 470:../Libraries/XMCLib/src/xmc_can.c **** {
 1173              	 .loc 2 470 0
 1174              	 .cfi_startproc
 1175              	 
 1176              	 
 1177              	 
 1178 0000 80B4     	 push {r7}
 1179              	 .cfi_def_cfa_offset 4
 1180              	 .cfi_offset 7,-4
 1181 0002 83B0     	 sub sp,sp,#12
 1182              	 .cfi_def_cfa_offset 16
 1183 0004 00AF     	 add r7,sp,#0
 1184              	 .cfi_def_cfa_register 7
 1185 0006 7860     	 str r0,[r7,#4]
 471:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 472:../Libraries/XMCLib/src/xmc_can.c ****   return ((XMC_CAN_CANCLKSRC_t)((obj->MCR & CAN_MCR_CLKSEL_Msk) >> CAN_MCR_CLKSEL_Pos));
 1186              	 .loc 2 472 0
 1187 0008 7B68     	 ldr r3,[r7,#4]
 1188 000a D3F8C831 	 ldr r3,[r3,#456]
 1189 000e DBB2     	 uxtb r3,r3
 1190 0010 03F00F03 	 and r3,r3,#15
 1191 0014 DBB2     	 uxtb r3,r3
 473:../Libraries/XMCLib/src/xmc_can.c **** #elif (UC_FAMILY == XMC4)
 474:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 475:../Libraries/XMCLib/src/xmc_can.c ****   return XMC_CAN_CANCLKSRC_FPERI;
 476:../Libraries/XMCLib/src/xmc_can.c **** #endif
 477:../Libraries/XMCLib/src/xmc_can.c **** }
 1192              	 .loc 2 477 0
 1193 0016 1846     	 mov r0,r3
 1194 0018 0C37     	 adds r7,r7,#12
 1195              	 .cfi_def_cfa_offset 4
 1196 001a BD46     	 mov sp,r7
 1197              	 .cfi_def_cfa_register 13
 1198              	 
 1199 001c 5DF8047B 	 ldr r7,[sp],#4
 1200              	 .cfi_restore 7
 1201              	 .cfi_def_cfa_offset 0
 1202 0020 7047     	 bx lr
 1203              	 .cfi_endproc
 1204              	.LFE241:
 1206 0022 00BF     	 .section .text.XMC_CAN_GetBaudrateClockFrequency,"ax",%progbits
 1207              	 .align 2
 1208              	 .global XMC_CAN_GetBaudrateClockFrequency
 1209              	 .thumb
 1210              	 .thumb_func
 1212              	XMC_CAN_GetBaudrateClockFrequency:
 1213              	.LFB242:
 478:../Libraries/XMCLib/src/xmc_can.c **** 
 479:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj)
 480:../Libraries/XMCLib/src/xmc_can.c **** {
 1214              	 .loc 2 480 0
 1215              	 .cfi_startproc
 1216              	 
 1217              	 
 1218 0000 80B5     	 push {r7,lr}
 1219              	 .cfi_def_cfa_offset 8
 1220              	 .cfi_offset 7,-8
 1221              	 .cfi_offset 14,-4
 1222 0002 84B0     	 sub sp,sp,#16
 1223              	 .cfi_def_cfa_offset 24
 1224 0004 00AF     	 add r7,sp,#0
 1225              	 .cfi_def_cfa_register 7
 1226 0006 7860     	 str r0,[r7,#4]
 481:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t frequency = 0;
 1227              	 .loc 2 481 0
 1228 0008 0023     	 movs r3,#0
 1229 000a FB60     	 str r3,[r7,#12]
 482:../Libraries/XMCLib/src/xmc_can.c **** 
 483:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 484:../Libraries/XMCLib/src/xmc_can.c ****   switch (XMC_CAN_GetBaudrateClockSource(obj))
 1230              	 .loc 2 484 0
 1231 000c 7868     	 ldr r0,[r7,#4]
 1232 000e FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockSource
 1233 0012 0346     	 mov r3,r0
 1234 0014 012B     	 cmp r3,#1
 1235 0016 02D0     	 beq .L60
 1236 0018 022B     	 cmp r3,#2
 1237 001a 04D0     	 beq .L61
 1238 001c 07E0     	 b .L59
 1239              	.L60:
 485:../Libraries/XMCLib/src/xmc_can.c ****   {
 486:../Libraries/XMCLib/src/xmc_can.c **** #if UC_FAMILY == XMC4
 487:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FPERI:
 488:../Libraries/XMCLib/src/xmc_can.c ****       frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 1240              	 .loc 2 488 0
 1241 001e FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 1242 0022 F860     	 str r0,[r7,#12]
 489:../Libraries/XMCLib/src/xmc_can.c ****       break;
 1243              	 .loc 2 489 0
 1244 0024 03E0     	 b .L59
 1245              	.L61:
 490:../Libraries/XMCLib/src/xmc_can.c **** #else
 491:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_MCLK:
 492:../Libraries/XMCLib/src/xmc_can.c ****       frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 493:../Libraries/XMCLib/src/xmc_can.c ****       break;
 494:../Libraries/XMCLib/src/xmc_can.c **** #endif
 495:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FOHP:
 496:../Libraries/XMCLib/src/xmc_can.c ****       frequency = OSCHP_GetFrequency();
 1246              	 .loc 2 496 0
 1247 0026 FFF7FEFF 	 bl OSCHP_GetFrequency
 1248 002a F860     	 str r0,[r7,#12]
 497:../Libraries/XMCLib/src/xmc_can.c ****       break;
 1249              	 .loc 2 497 0
 1250 002c 00BF     	 nop
 1251              	.L59:
 498:../Libraries/XMCLib/src/xmc_can.c ****   }
 499:../Libraries/XMCLib/src/xmc_can.c **** #else
 500:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 501:../Libraries/XMCLib/src/xmc_can.c ****   frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 502:../Libraries/XMCLib/src/xmc_can.c **** #endif
 503:../Libraries/XMCLib/src/xmc_can.c **** 
 504:../Libraries/XMCLib/src/xmc_can.c ****   return frequency;
 1252              	 .loc 2 504 0
 1253 002e FB68     	 ldr r3,[r7,#12]
 505:../Libraries/XMCLib/src/xmc_can.c **** }
 1254              	 .loc 2 505 0
 1255 0030 1846     	 mov r0,r3
 1256 0032 1037     	 adds r7,r7,#16
 1257              	 .cfi_def_cfa_offset 8
 1258 0034 BD46     	 mov sp,r7
 1259              	 .cfi_def_cfa_register 13
 1260              	 
 1261 0036 80BD     	 pop {r7,pc}
 1262              	 .cfi_endproc
 1263              	.LFE242:
 1265              	 .section .text.XMC_CAN_InitEx,"ax",%progbits
 1266              	 .align 2
 1267              	 .global XMC_CAN_InitEx
 1268              	 .thumb
 1269              	 .thumb_func
 1271              	XMC_CAN_InitEx:
 1272              	.LFB243:
 506:../Libraries/XMCLib/src/xmc_can.c **** 
 507:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 508:../Libraries/XMCLib/src/xmc_can.c **** {
 1273              	 .loc 2 508 0
 1274              	 .cfi_startproc
 1275              	 
 1276              	 
 1277 0000 80B5     	 push {r7,lr}
 1278              	 .cfi_def_cfa_offset 8
 1279              	 .cfi_offset 7,-8
 1280              	 .cfi_offset 14,-4
 1281 0002 88B0     	 sub sp,sp,#32
 1282              	 .cfi_def_cfa_offset 40
 1283 0004 00AF     	 add r7,sp,#0
 1284              	 .cfi_def_cfa_register 7
 1285 0006 F860     	 str r0,[r7,#12]
 1286 0008 0B46     	 mov r3,r1
 1287 000a 7A60     	 str r2,[r7,#4]
 1288 000c FB72     	 strb r3,[r7,#11]
 509:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step_n;
 510:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n;
 511:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 512:../Libraries/XMCLib/src/xmc_can.c **** 
 513:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 514:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 1289              	 .loc 2 514 0
 1290 000e F868     	 ldr r0,[r7,#12]
 1291 0010 FFF7FEFF 	 bl XMC_CAN_Enable
 515:../Libraries/XMCLib/src/xmc_can.c **** 
 516:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 1292              	 .loc 2 516 0
 1293 0014 FB7A     	 ldrb r3,[r7,#11]
 1294 0016 F868     	 ldr r0,[r7,#12]
 1295 0018 1946     	 mov r1,r3
 1296 001a FFF7FEFF 	 bl XMC_CAN_SetBaudrateClockSource
 517:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 1297              	 .loc 2 517 0
 1298 001e F868     	 ldr r0,[r7,#12]
 1299 0020 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1300 0024 F861     	 str r0,[r7,#28]
 518:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 519:../Libraries/XMCLib/src/xmc_can.c **** 
 520:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 521:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 1301              	 .loc 2 521 0
 1302 0026 FA69     	 ldr r2,[r7,#28]
 1303 0028 7B68     	 ldr r3,[r7,#4]
 1304 002a B2FBF3F3 	 udiv r3,r2,r3
 1305 002e C3F58063 	 rsb r3,r3,#1024
 1306 0032 0020     	 movs r0,#0
 1307 0034 1946     	 mov r1,r3
 1308 0036 FFF7FEFF 	 bl max
 1309 003a 0346     	 mov r3,r0
 1310 003c 1846     	 mov r0,r3
 1311 003e 40F2FF31 	 movw r1,#1023
 1312 0042 FFF7FEFF 	 bl min
 1313 0046 B861     	 str r0,[r7,#24]
 522:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t)(peripheral_frequency / (1024U - step_n));
 1314              	 .loc 2 522 0
 1315 0048 BB69     	 ldr r3,[r7,#24]
 1316 004a C3F58063 	 rsb r3,r3,#1024
 1317 004e FA69     	 ldr r2,[r7,#28]
 1318 0050 B2FBF3F3 	 udiv r3,r2,r3
 1319 0054 7B61     	 str r3,[r7,#20]
 523:../Libraries/XMCLib/src/xmc_can.c **** 
 524:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 1320              	 .loc 2 524 0
 1321 0056 FB68     	 ldr r3,[r7,#12]
 1322 0058 DB68     	 ldr r3,[r3,#12]
 1323 005a 23F44343 	 bic r3,r3,#49920
 1324 005e 23F0FF03 	 bic r3,r3,#255
 1325 0062 FA68     	 ldr r2,[r7,#12]
 1326 0064 D360     	 str r3,[r2,#12]
 525:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)XMC_CAN_DM_NORMAL << CAN_FDR_DM_Pos) | ((uint32_t)step_n << CAN_FDR_STEP_P
 1327              	 .loc 2 525 0
 1328 0066 FB68     	 ldr r3,[r7,#12]
 1329 0068 DA68     	 ldr r2,[r3,#12]
 1330 006a BB69     	 ldr r3,[r7,#24]
 1331 006c 1343     	 orrs r3,r3,r2
 1332 006e 43F48042 	 orr r2,r3,#16384
 1333 0072 FB68     	 ldr r3,[r7,#12]
 1334 0074 DA60     	 str r2,[r3,#12]
 526:../Libraries/XMCLib/src/xmc_can.c **** 
 527:../Libraries/XMCLib/src/xmc_can.c ****   return freq_n;
 1335              	 .loc 2 527 0
 1336 0076 7B69     	 ldr r3,[r7,#20]
 528:../Libraries/XMCLib/src/xmc_can.c **** }
 1337              	 .loc 2 528 0
 1338 0078 1846     	 mov r0,r3
 1339 007a 2037     	 adds r7,r7,#32
 1340              	 .cfi_def_cfa_offset 8
 1341 007c BD46     	 mov sp,r7
 1342              	 .cfi_def_cfa_register 13
 1343              	 
 1344 007e 80BD     	 pop {r7,pc}
 1345              	 .cfi_endproc
 1346              	.LFE243:
 1348              	 .section .text.XMC_CAN_GetClockFrequency,"ax",%progbits
 1349              	 .align 2
 1350              	 .global XMC_CAN_GetClockFrequency
 1351              	 .thumb
 1352              	 .thumb_func
 1354              	XMC_CAN_GetClockFrequency:
 1355              	.LFB244:
 529:../Libraries/XMCLib/src/xmc_can.c **** 
 530:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj)
 531:../Libraries/XMCLib/src/xmc_can.c **** {
 1356              	 .loc 2 531 0
 1357              	 .cfi_startproc
 1358              	 
 1359              	 
 1360 0000 80B5     	 push {r7,lr}
 1361              	 .cfi_def_cfa_offset 8
 1362              	 .cfi_offset 7,-8
 1363              	 .cfi_offset 14,-4
 1364 0002 84B0     	 sub sp,sp,#16
 1365              	 .cfi_def_cfa_offset 24
 1366 0004 00AF     	 add r7,sp,#0
 1367              	 .cfi_def_cfa_register 7
 1368 0006 7860     	 str r0,[r7,#4]
 532:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step_n = (obj->FDR & CAN_FDR_STEP_Msk) >> CAN_FDR_STEP_Pos;
 1369              	 .loc 2 532 0
 1370 0008 7B68     	 ldr r3,[r7,#4]
 1371 000a DB68     	 ldr r3,[r3,#12]
 1372 000c C3F30903 	 ubfx r3,r3,#0,#10
 1373 0010 FB60     	 str r3,[r7,#12]
 533:../Libraries/XMCLib/src/xmc_can.c ****   return (XMC_CAN_GetBaudrateClockFrequency(obj) * (1024U - step_n));
 1374              	 .loc 2 533 0
 1375 0012 7868     	 ldr r0,[r7,#4]
 1376 0014 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1377 0018 0246     	 mov r2,r0
 1378 001a FB68     	 ldr r3,[r7,#12]
 1379 001c C3F58063 	 rsb r3,r3,#1024
 1380 0020 03FB02F3 	 mul r3,r3,r2
 534:../Libraries/XMCLib/src/xmc_can.c **** }
 1381              	 .loc 2 534 0
 1382 0024 1846     	 mov r0,r3
 1383 0026 1037     	 adds r7,r7,#16
 1384              	 .cfi_def_cfa_offset 8
 1385 0028 BD46     	 mov sp,r7
 1386              	 .cfi_def_cfa_register 13
 1387              	 
 1388 002a 80BD     	 pop {r7,pc}
 1389              	 .cfi_endproc
 1390              	.LFE244:
 1392              	 .section .text.XMC_CAN_MO_SetIdentifier,"ax",%progbits
 1393              	 .align 2
 1394              	 .global XMC_CAN_MO_SetIdentifier
 1395              	 .thumb
 1396              	 .thumb_func
 1398              	XMC_CAN_MO_SetIdentifier:
 1399              	.LFB245:
 535:../Libraries/XMCLib/src/xmc_can.c **** 
 536:../Libraries/XMCLib/src/xmc_can.c **** /* Sets the Identifier of the MO */
 537:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetIdentifier(XMC_CAN_MO_t *const can_mo, const uint32_t can_identifier)
 538:../Libraries/XMCLib/src/xmc_can.c **** {
 1400              	 .loc 2 538 0
 1401              	 .cfi_startproc
 1402              	 
 1403              	 
 1404              	 
 1405 0000 80B4     	 push {r7}
 1406              	 .cfi_def_cfa_offset 4
 1407              	 .cfi_offset 7,-4
 1408 0002 83B0     	 sub sp,sp,#12
 1409              	 .cfi_def_cfa_offset 16
 1410 0004 00AF     	 add r7,sp,#0
 1411              	 .cfi_def_cfa_register 7
 1412 0006 7860     	 str r0,[r7,#4]
 1413 0008 3960     	 str r1,[r7]
 539:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1414              	 .loc 2 539 0
 1415 000a 7B68     	 ldr r3,[r7,#4]
 1416 000c 1B68     	 ldr r3,[r3]
 1417 000e 9B69     	 ldr r3,[r3,#24]
 1418 0010 03F00053 	 and r3,r3,#536870912
 1419 0014 002B     	 cmp r3,#0
 1420 0016 0DD1     	 bne .L68
 540:../Libraries/XMCLib/src/xmc_can.c ****   {
 541:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1421              	 .loc 2 541 0
 1422 0018 7B68     	 ldr r3,[r7,#4]
 1423 001a 1B68     	 ldr r3,[r3]
 1424 001c 7A68     	 ldr r2,[r7,#4]
 1425 001e 1268     	 ldr r2,[r2]
 1426 0020 9269     	 ldr r2,[r2,#24]
 1427 0022 02F06041 	 and r1,r2,#-536870912
 542:../Libraries/XMCLib/src/xmc_can.c ****                                ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MO
 1428              	 .loc 2 542 0
 1429 0026 3A68     	 ldr r2,[r7]
 1430 0028 9204     	 lsls r2,r2,#18
 1431 002a 22F06042 	 bic r2,r2,#-536870912
 541:../Libraries/XMCLib/src/xmc_can.c ****                                ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MO
 1432              	 .loc 2 541 0
 1433 002e 0A43     	 orrs r2,r2,r1
 1434 0030 9A61     	 str r2,[r3,#24]
 1435 0032 0BE0     	 b .L69
 1436              	.L68:
 543:../Libraries/XMCLib/src/xmc_can.c ****   }
 544:../Libraries/XMCLib/src/xmc_can.c ****   else
 545:../Libraries/XMCLib/src/xmc_can.c ****   {
 546:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1437              	 .loc 2 546 0
 1438 0034 7B68     	 ldr r3,[r7,#4]
 1439 0036 1B68     	 ldr r3,[r3]
 1440 0038 7A68     	 ldr r2,[r7,#4]
 1441 003a 1268     	 ldr r2,[r2]
 1442 003c 9269     	 ldr r2,[r2,#24]
 1443 003e 02F06041 	 and r1,r2,#-536870912
 547:../Libraries/XMCLib/src/xmc_can.c ****                                (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1444              	 .loc 2 547 0
 1445 0042 3A68     	 ldr r2,[r7]
 1446 0044 22F06042 	 bic r2,r2,#-536870912
 546:../Libraries/XMCLib/src/xmc_can.c ****                                (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1447              	 .loc 2 546 0
 1448 0048 0A43     	 orrs r2,r2,r1
 1449 004a 9A61     	 str r2,[r3,#24]
 1450              	.L69:
 548:../Libraries/XMCLib/src/xmc_can.c ****   }
 549:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_identifier = can_identifier;
 1451              	 .loc 2 549 0
 1452 004c 3B68     	 ldr r3,[r7]
 1453 004e 23F06041 	 bic r1,r3,#-536870912
 1454 0052 7A68     	 ldr r2,[r7,#4]
 1455 0054 5368     	 ldr r3,[r2,#4]
 1456 0056 61F31C03 	 bfi r3,r1,#0,#29
 1457 005a 5360     	 str r3,[r2,#4]
 550:../Libraries/XMCLib/src/xmc_can.c **** }
 1458              	 .loc 2 550 0
 1459 005c 0C37     	 adds r7,r7,#12
 1460              	 .cfi_def_cfa_offset 4
 1461 005e BD46     	 mov sp,r7
 1462              	 .cfi_def_cfa_register 13
 1463              	 
 1464 0060 5DF8047B 	 ldr r7,[sp],#4
 1465              	 .cfi_restore 7
 1466              	 .cfi_def_cfa_offset 0
 1467 0064 7047     	 bx lr
 1468              	 .cfi_endproc
 1469              	.LFE245:
 1471 0066 00BF     	 .section .text.XMC_CAN_MO_GetIdentifier,"ax",%progbits
 1472              	 .align 2
 1473              	 .global XMC_CAN_MO_GetIdentifier
 1474              	 .thumb
 1475              	 .thumb_func
 1477              	XMC_CAN_MO_GetIdentifier:
 1478              	.LFB246:
 551:../Libraries/XMCLib/src/xmc_can.c **** 
 552:../Libraries/XMCLib/src/xmc_can.c **** 
 553:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the Identifier of the MO */
 554:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetIdentifier(const XMC_CAN_MO_t *const can_mo)
 555:../Libraries/XMCLib/src/xmc_can.c **** {
 1479              	 .loc 2 555 0
 1480              	 .cfi_startproc
 1481              	 
 1482              	 
 1483              	 
 1484 0000 80B4     	 push {r7}
 1485              	 .cfi_def_cfa_offset 4
 1486              	 .cfi_offset 7,-4
 1487 0002 85B0     	 sub sp,sp,#20
 1488              	 .cfi_def_cfa_offset 24
 1489 0004 00AF     	 add r7,sp,#0
 1490              	 .cfi_def_cfa_register 7
 1491 0006 7860     	 str r0,[r7,#4]
 556:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier;
 557:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1492              	 .loc 2 557 0
 1493 0008 7B68     	 ldr r3,[r7,#4]
 1494 000a 1B68     	 ldr r3,[r3]
 1495 000c 9B69     	 ldr r3,[r3,#24]
 1496 000e 03F00053 	 and r3,r3,#536870912
 1497 0012 002B     	 cmp r3,#0
 1498 0014 07D1     	 bne .L71
 558:../Libraries/XMCLib/src/xmc_can.c ****   {
 559:../Libraries/XMCLib/src/xmc_can.c ****     identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk)) >> XMC_CAN_MO_MOAR_S
 1499              	 .loc 2 559 0
 1500 0016 7B68     	 ldr r3,[r7,#4]
 1501 0018 1B68     	 ldr r3,[r3]
 1502 001a 9B69     	 ldr r3,[r3,#24]
 1503 001c 23F06043 	 bic r3,r3,#-536870912
 1504 0020 9B0C     	 lsrs r3,r3,#18
 1505 0022 FB60     	 str r3,[r7,#12]
 1506 0024 05E0     	 b .L72
 1507              	.L71:
 560:../Libraries/XMCLib/src/xmc_can.c ****   }
 561:../Libraries/XMCLib/src/xmc_can.c ****   else
 562:../Libraries/XMCLib/src/xmc_can.c ****   {
 563:../Libraries/XMCLib/src/xmc_can.c ****     identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk));
 1508              	 .loc 2 563 0
 1509 0026 7B68     	 ldr r3,[r7,#4]
 1510 0028 1B68     	 ldr r3,[r3]
 1511 002a 9B69     	 ldr r3,[r3,#24]
 1512 002c 23F06043 	 bic r3,r3,#-536870912
 1513 0030 FB60     	 str r3,[r7,#12]
 1514              	.L72:
 564:../Libraries/XMCLib/src/xmc_can.c ****   }
 565:../Libraries/XMCLib/src/xmc_can.c ****   return identifier;
 1515              	 .loc 2 565 0
 1516 0032 FB68     	 ldr r3,[r7,#12]
 566:../Libraries/XMCLib/src/xmc_can.c **** }
 1517              	 .loc 2 566 0
 1518 0034 1846     	 mov r0,r3
 1519 0036 1437     	 adds r7,r7,#20
 1520              	 .cfi_def_cfa_offset 4
 1521 0038 BD46     	 mov sp,r7
 1522              	 .cfi_def_cfa_register 13
 1523              	 
 1524 003a 5DF8047B 	 ldr r7,[sp],#4
 1525              	 .cfi_restore 7
 1526              	 .cfi_def_cfa_offset 0
 1527 003e 7047     	 bx lr
 1528              	 .cfi_endproc
 1529              	.LFE246:
 1531              	 .section .text.XMC_CAN_MO_GetAcceptanceMask,"ax",%progbits
 1532              	 .align 2
 1533              	 .global XMC_CAN_MO_GetAcceptanceMask
 1534              	 .thumb
 1535              	 .thumb_func
 1537              	XMC_CAN_MO_GetAcceptanceMask:
 1538              	.LFB247:
 567:../Libraries/XMCLib/src/xmc_can.c **** 
 568:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask for the CAN MO. */
 569:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetAcceptanceMask(const XMC_CAN_MO_t *const can_mo)
 570:../Libraries/XMCLib/src/xmc_can.c **** {
 1539              	 .loc 2 570 0
 1540              	 .cfi_startproc
 1541              	 
 1542              	 
 1543              	 
 1544 0000 80B4     	 push {r7}
 1545              	 .cfi_def_cfa_offset 4
 1546              	 .cfi_offset 7,-4
 1547 0002 85B0     	 sub sp,sp,#20
 1548              	 .cfi_def_cfa_offset 24
 1549 0004 00AF     	 add r7,sp,#0
 1550              	 .cfi_def_cfa_register 7
 1551 0006 7860     	 str r0,[r7,#4]
 571:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier_mask;
 572:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1552              	 .loc 2 572 0
 1553 0008 7B68     	 ldr r3,[r7,#4]
 1554 000a 1B68     	 ldr r3,[r3]
 1555 000c DB68     	 ldr r3,[r3,#12]
 1556 000e 03F00053 	 and r3,r3,#536870912
 1557 0012 002B     	 cmp r3,#0
 1558 0014 0ED1     	 bne .L75
 573:../Libraries/XMCLib/src/xmc_can.c ****       && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1559              	 .loc 2 573 0
 1560 0016 7B68     	 ldr r3,[r7,#4]
 1561 0018 1B68     	 ldr r3,[r3]
 1562 001a 9B69     	 ldr r3,[r3,#24]
 1563 001c 03F00053 	 and r3,r3,#536870912
 1564 0020 002B     	 cmp r3,#0
 1565 0022 07D1     	 bne .L75
 574:../Libraries/XMCLib/src/xmc_can.c ****   {
 575:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk)) >> XMC_CAN_MO
 1566              	 .loc 2 575 0
 1567 0024 7B68     	 ldr r3,[r7,#4]
 1568 0026 1B68     	 ldr r3,[r3]
 1569 0028 DB68     	 ldr r3,[r3,#12]
 1570 002a 23F06043 	 bic r3,r3,#-536870912
 1571 002e 9B0C     	 lsrs r3,r3,#18
 1572 0030 FB60     	 str r3,[r7,#12]
 1573 0032 05E0     	 b .L76
 1574              	.L75:
 576:../Libraries/XMCLib/src/xmc_can.c ****   }
 577:../Libraries/XMCLib/src/xmc_can.c ****   else
 578:../Libraries/XMCLib/src/xmc_can.c ****   {
 579:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk));
 1575              	 .loc 2 579 0
 1576 0034 7B68     	 ldr r3,[r7,#4]
 1577 0036 1B68     	 ldr r3,[r3]
 1578 0038 DB68     	 ldr r3,[r3,#12]
 1579 003a 23F06043 	 bic r3,r3,#-536870912
 1580 003e FB60     	 str r3,[r7,#12]
 1581              	.L76:
 580:../Libraries/XMCLib/src/xmc_can.c ****   }
 581:../Libraries/XMCLib/src/xmc_can.c ****   return identifier_mask;
 1582              	 .loc 2 581 0
 1583 0040 FB68     	 ldr r3,[r7,#12]
 582:../Libraries/XMCLib/src/xmc_can.c **** }
 1584              	 .loc 2 582 0
 1585 0042 1846     	 mov r0,r3
 1586 0044 1437     	 adds r7,r7,#20
 1587              	 .cfi_def_cfa_offset 4
 1588 0046 BD46     	 mov sp,r7
 1589              	 .cfi_def_cfa_register 13
 1590              	 
 1591 0048 5DF8047B 	 ldr r7,[sp],#4
 1592              	 .cfi_restore 7
 1593              	 .cfi_def_cfa_offset 0
 1594 004c 7047     	 bx lr
 1595              	 .cfi_endproc
 1596              	.LFE247:
 1598 004e 00BF     	 .section .text.XMC_CAN_MO_SetAcceptanceMask,"ax",%progbits
 1599              	 .align 2
 1600              	 .global XMC_CAN_MO_SetAcceptanceMask
 1601              	 .thumb
 1602              	 .thumb_func
 1604              	XMC_CAN_MO_SetAcceptanceMask:
 1605              	.LFB248:
 583:../Libraries/XMCLib/src/xmc_can.c **** 
 584:../Libraries/XMCLib/src/xmc_can.c **** /* Sets the acceptance mask of the MO */
 585:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetAcceptanceMask(XMC_CAN_MO_t *const can_mo, const uint32_t can_id_mask)
 586:../Libraries/XMCLib/src/xmc_can.c **** {
 1606              	 .loc 2 586 0
 1607              	 .cfi_startproc
 1608              	 
 1609              	 
 1610              	 
 1611 0000 80B4     	 push {r7}
 1612              	 .cfi_def_cfa_offset 4
 1613              	 .cfi_offset 7,-4
 1614 0002 83B0     	 sub sp,sp,#12
 1615              	 .cfi_def_cfa_offset 16
 1616 0004 00AF     	 add r7,sp,#0
 1617              	 .cfi_def_cfa_register 7
 1618 0006 7860     	 str r0,[r7,#4]
 1619 0008 3960     	 str r1,[r7]
 587:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != 0)
 1620              	 .loc 2 587 0
 1621 000a 7B68     	 ldr r3,[r7,#4]
 1622 000c 1B68     	 ldr r3,[r3]
 1623 000e DB68     	 ldr r3,[r3,#12]
 1624 0010 03F00053 	 and r3,r3,#536870912
 1625 0014 002B     	 cmp r3,#0
 1626 0016 14D0     	 beq .L79
 588:../Libraries/XMCLib/src/xmc_can.c ****       && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) == 0))
 1627              	 .loc 2 588 0
 1628 0018 7B68     	 ldr r3,[r7,#4]
 1629 001a 1B68     	 ldr r3,[r3]
 1630 001c 9B69     	 ldr r3,[r3,#24]
 1631 001e 03F00053 	 and r3,r3,#536870912
 1632 0022 002B     	 cmp r3,#0
 1633 0024 0DD1     	 bne .L79
 589:../Libraries/XMCLib/src/xmc_can.c ****   {
 590:../Libraries/XMCLib/src/xmc_can.c ****     /* Message object n receives frames only with matching IDE bit. */
 591:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1634              	 .loc 2 591 0
 1635 0026 7B68     	 ldr r3,[r7,#4]
 1636 0028 1A68     	 ldr r2,[r3]
 1637 002a 7B68     	 ldr r3,[r7,#4]
 1638 002c 1B68     	 ldr r3,[r3]
 1639 002e DB68     	 ldr r3,[r3,#12]
 1640 0030 03F06041 	 and r1,r3,#-536870912
 592:../Libraries/XMCLib/src/xmc_can.c ****                                 ((can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)XMC_CAN_MO_
 1641              	 .loc 2 592 0
 1642 0034 3B68     	 ldr r3,[r7]
 1643 0036 9804     	 lsls r0,r3,#18
 1644 0038 0E4B     	 ldr r3,.L81
 1645 003a 0340     	 ands r3,r3,r0
 591:../Libraries/XMCLib/src/xmc_can.c ****                                 ((can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)XMC_CAN_MO_
 1646              	 .loc 2 591 0
 1647 003c 0B43     	 orrs r3,r3,r1
 1648 003e D360     	 str r3,[r2,#12]
 1649 0040 0BE0     	 b .L80
 1650              	.L79:
 593:../Libraries/XMCLib/src/xmc_can.c ****   }
 594:../Libraries/XMCLib/src/xmc_can.c ****   else
 595:../Libraries/XMCLib/src/xmc_can.c ****   {
 596:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1651              	 .loc 2 596 0
 1652 0042 7B68     	 ldr r3,[r7,#4]
 1653 0044 1B68     	 ldr r3,[r3]
 1654 0046 7A68     	 ldr r2,[r7,#4]
 1655 0048 1268     	 ldr r2,[r2]
 1656 004a D268     	 ldr r2,[r2,#12]
 1657 004c 02F06041 	 and r1,r2,#-536870912
 597:../Libraries/XMCLib/src/xmc_can.c ****                                 (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1658              	 .loc 2 597 0
 1659 0050 3A68     	 ldr r2,[r7]
 1660 0052 22F06042 	 bic r2,r2,#-536870912
 596:../Libraries/XMCLib/src/xmc_can.c ****                                 (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1661              	 .loc 2 596 0
 1662 0056 0A43     	 orrs r2,r2,r1
 1663 0058 DA60     	 str r2,[r3,#12]
 1664              	.L80:
 598:../Libraries/XMCLib/src/xmc_can.c ****   }
 599:../Libraries/XMCLib/src/xmc_can.c **** 
 600:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_id_mask = can_id_mask;
 1665              	 .loc 2 600 0
 1666 005a 3B68     	 ldr r3,[r7]
 1667 005c 23F06041 	 bic r1,r3,#-536870912
 1668 0060 7A68     	 ldr r2,[r7,#4]
 1669 0062 9368     	 ldr r3,[r2,#8]
 1670 0064 61F31C03 	 bfi r3,r1,#0,#29
 1671 0068 9360     	 str r3,[r2,#8]
 601:../Libraries/XMCLib/src/xmc_can.c **** }
 1672              	 .loc 2 601 0
 1673 006a 0C37     	 adds r7,r7,#12
 1674              	 .cfi_def_cfa_offset 4
 1675 006c BD46     	 mov sp,r7
 1676              	 .cfi_def_cfa_register 13
 1677              	 
 1678 006e 5DF8047B 	 ldr r7,[sp],#4
 1679              	 .cfi_restore 7
 1680              	 .cfi_def_cfa_offset 0
 1681 0072 7047     	 bx lr
 1682              	.L82:
 1683              	 .align 2
 1684              	.L81:
 1685 0074 0000FC1F 	 .word 536608768
 1686              	 .cfi_endproc
 1687              	.LFE248:
 1689              	 .section .text.XMC_CAN_MO_Config,"ax",%progbits
 1690              	 .align 2
 1691              	 .global XMC_CAN_MO_Config
 1692              	 .thumb
 1693              	 .thumb_func
 1695              	XMC_CAN_MO_Config:
 1696              	.LFB249:
 602:../Libraries/XMCLib/src/xmc_can.c **** 
 603:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN MO Object */
 604:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo)
 605:../Libraries/XMCLib/src/xmc_can.c **** {
 1697              	 .loc 2 605 0
 1698              	 .cfi_startproc
 1699              	 
 1700              	 
 1701 0000 80B5     	 push {r7,lr}
 1702              	 .cfi_def_cfa_offset 8
 1703              	 .cfi_offset 7,-8
 1704              	 .cfi_offset 14,-4
 1705 0002 86B0     	 sub sp,sp,#24
 1706              	 .cfi_def_cfa_offset 32
 1707 0004 00AF     	 add r7,sp,#0
 1708              	 .cfi_def_cfa_register 7
 1709 0006 7860     	 str r0,[r7,#4]
 606:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t reg;
 607:../Libraries/XMCLib/src/xmc_can.c **** 
 608:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure MPN */
 609:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t num = ((uint32_t)(can_mo->can_mo_ptr) - CAN_BASE - 0x1000U) / 0x0020U;
 1710              	 .loc 2 609 0
 1711 0008 7B68     	 ldr r3,[r7,#4]
 1712 000a 1B68     	 ldr r3,[r3]
 1713 000c 03F13843 	 add r3,r3,#-1207959552
 1714 0010 A3F5A833 	 sub r3,r3,#86016
 1715 0014 5B09     	 lsrs r3,r3,#5
 1716 0016 7B61     	 str r3,[r7,#20]
 610:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t set = (((uint32_t)(num / 32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(num % 32) << 
 1717              	 .loc 2 610 0
 1718 0018 7B69     	 ldr r3,[r7,#20]
 1719 001a 5B09     	 lsrs r3,r3,#5
 1720 001c 5A03     	 lsls r2,r3,#13
 1721 001e 7B69     	 ldr r3,[r7,#20]
 1722 0020 03F01F03 	 and r3,r3,#31
 1723 0024 1B02     	 lsls r3,r3,#8
 1724 0026 1343     	 orrs r3,r3,r2
 1725 0028 3B61     	 str r3,[r7,#16]
 611:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 1726              	 .loc 2 611 0
 1727 002a 7B68     	 ldr r3,[r7,#4]
 1728 002c 1B68     	 ldr r3,[r3]
 1729 002e 7A68     	 ldr r2,[r7,#4]
 1730 0030 1268     	 ldr r2,[r2]
 1731 0032 9268     	 ldr r2,[r2,#8]
 1732 0034 22F47F42 	 bic r2,r2,#65280
 1733 0038 9A60     	 str r2,[r3,#8]
 612:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 1734              	 .loc 2 612 0
 1735 003a 7B68     	 ldr r3,[r7,#4]
 1736 003c 1B68     	 ldr r3,[r3]
 1737 003e 7A68     	 ldr r2,[r7,#4]
 1738 0040 1268     	 ldr r2,[r2]
 1739 0042 9168     	 ldr r1,[r2,#8]
 1740 0044 3A69     	 ldr r2,[r7,#16]
 1741 0046 0A43     	 orrs r2,r2,r1
 1742 0048 9A60     	 str r2,[r3,#8]
 613:../Libraries/XMCLib/src/xmc_can.c **** 
 614:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_STANDARD_11BITS) &&
 1743              	 .loc 2 614 0
 1744 004a 7B68     	 ldr r3,[r7,#4]
 1745 004c DB79     	 ldrb r3,[r3,#7]
 1746 004e 03F02003 	 and r3,r3,#32
 1747 0052 DBB2     	 uxtb r3,r3
 1748 0054 002B     	 cmp r3,#0
 1749 0056 07D0     	 beq .L84
 615:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1750              	 .loc 2 615 0 discriminator 1
 1751 0058 7B68     	 ldr r3,[r7,#4]
 1752 005a DB79     	 ldrb r3,[r3,#7]
 1753 005c 03F02003 	 and r3,r3,#32
 1754 0060 DBB2     	 uxtb r3,r3
 614:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1755              	 .loc 2 614 0 discriminator 1
 1756 0062 002B     	 cmp r3,#0
 1757 0064 00D1     	 bne .L84
 614:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1758              	 .loc 2 614 0 is_stmt 0
 1759 0066 60E0     	 b .L83
 1760              	.L84:
 616:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 1761              	 .loc 2 616 0 is_stmt 1
 1762 0068 7B68     	 ldr r3,[r7,#4]
 1763 006a 1B7E     	 ldrb r3,[r3,#24]
 615:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1764              	 .loc 2 615 0
 1765 006c 002B     	 cmp r3,#0
 1766 006e 04D0     	 beq .L86
 617:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_mo_type != XMC_CAN_MO_TYPE_TRANSMSGOBJ)))
 1767              	 .loc 2 617 0
 1768 0070 7B68     	 ldr r3,[r7,#4]
 1769 0072 1B7E     	 ldrb r3,[r3,#24]
 616:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 1770              	 .loc 2 616 0
 1771 0074 012B     	 cmp r3,#1
 1772 0076 00D0     	 beq .L86
 1773 0078 57E0     	 b .L83
 1774              	.L86:
 618:../Libraries/XMCLib/src/xmc_can.c ****   {
 619:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 620:../Libraries/XMCLib/src/xmc_can.c ****   }
 621:../Libraries/XMCLib/src/xmc_can.c ****   else
 622:../Libraries/XMCLib/src/xmc_can.c ****   {
 623:../Libraries/XMCLib/src/xmc_can.c **** 
 624:../Libraries/XMCLib/src/xmc_can.c ****     /* Disable Message object */
 625:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 1775              	 .loc 2 625 0
 1776 007a 7B68     	 ldr r3,[r7,#4]
 1777 007c 1B68     	 ldr r3,[r3]
 1778 007e 2022     	 movs r2,#32
 1779 0080 DA61     	 str r2,[r3,#28]
 626:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_id_mode == (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS)
 1780              	 .loc 2 626 0
 1781 0082 7B68     	 ldr r3,[r7,#4]
 1782 0084 DB79     	 ldrb r3,[r3,#7]
 1783 0086 03F02003 	 and r3,r3,#32
 1784 008a DBB2     	 uxtb r3,r3
 1785 008c 002B     	 cmp r3,#0
 1786 008e 28D1     	 bne .L87
 627:../Libraries/XMCLib/src/xmc_can.c ****     {
 628:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_ar;
 1787              	 .loc 2 628 0
 1788 0090 7B68     	 ldr r3,[r7,#4]
 1789 0092 5B68     	 ldr r3,[r3,#4]
 1790 0094 FB60     	 str r3,[r7,#12]
 629:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAR_ID_Msk);
 1791              	 .loc 2 629 0
 1792 0096 FB68     	 ldr r3,[r7,#12]
 1793 0098 03F06043 	 and r3,r3,#-536870912
 1794 009c FB60     	 str r3,[r7,#12]
 630:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_identifier << XMC_CAN_MO_MOAR_STDID_Pos);
 1795              	 .loc 2 630 0
 1796 009e 7B68     	 ldr r3,[r7,#4]
 1797 00a0 5B68     	 ldr r3,[r3,#4]
 1798 00a2 C3F31C03 	 ubfx r3,r3,#0,#29
 1799 00a6 9B04     	 lsls r3,r3,#18
 1800 00a8 1A46     	 mov r2,r3
 1801 00aa FB68     	 ldr r3,[r7,#12]
 1802 00ac 1343     	 orrs r3,r3,r2
 1803 00ae FB60     	 str r3,[r7,#12]
 631:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = reg;
 1804              	 .loc 2 631 0
 1805 00b0 7B68     	 ldr r3,[r7,#4]
 1806 00b2 1B68     	 ldr r3,[r3]
 1807 00b4 FA68     	 ldr r2,[r7,#12]
 1808 00b6 9A61     	 str r2,[r3,#24]
 632:../Libraries/XMCLib/src/xmc_can.c **** 
 633:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_amr;
 1809              	 .loc 2 633 0
 1810 00b8 7B68     	 ldr r3,[r7,#4]
 1811 00ba 9B68     	 ldr r3,[r3,#8]
 1812 00bc FB60     	 str r3,[r7,#12]
 634:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAMR_AM_Msk);
 1813              	 .loc 2 634 0
 1814 00be FB68     	 ldr r3,[r7,#12]
 1815 00c0 03F06043 	 and r3,r3,#-536870912
 1816 00c4 FB60     	 str r3,[r7,#12]
 635:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1817              	 .loc 2 635 0
 1818 00c6 7B68     	 ldr r3,[r7,#4]
 1819 00c8 9B68     	 ldr r3,[r3,#8]
 1820 00ca C3F31C03 	 ubfx r3,r3,#0,#29
 1821 00ce 9B04     	 lsls r3,r3,#18
 1822 00d0 1A46     	 mov r2,r3
 1823 00d2 FB68     	 ldr r3,[r7,#12]
 1824 00d4 1343     	 orrs r3,r3,r2
 1825 00d6 FB60     	 str r3,[r7,#12]
 636:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = reg;
 1826              	 .loc 2 636 0
 1827 00d8 7B68     	 ldr r3,[r7,#4]
 1828 00da 1B68     	 ldr r3,[r3]
 1829 00dc FA68     	 ldr r2,[r7,#12]
 1830 00de DA60     	 str r2,[r3,#12]
 1831 00e0 09E0     	 b .L88
 1832              	.L87:
 637:../Libraries/XMCLib/src/xmc_can.c ****     }
 638:../Libraries/XMCLib/src/xmc_can.c ****     else
 639:../Libraries/XMCLib/src/xmc_can.c ****     {
 640:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = can_mo->mo_ar;
 1833              	 .loc 2 640 0
 1834 00e2 7B68     	 ldr r3,[r7,#4]
 1835 00e4 1B68     	 ldr r3,[r3]
 1836 00e6 7A68     	 ldr r2,[r7,#4]
 1837 00e8 5268     	 ldr r2,[r2,#4]
 1838 00ea 9A61     	 str r2,[r3,#24]
 641:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = can_mo->mo_amr;
 1839              	 .loc 2 641 0
 1840 00ec 7B68     	 ldr r3,[r7,#4]
 1841 00ee 1B68     	 ldr r3,[r3]
 1842 00f0 7A68     	 ldr r2,[r7,#4]
 1843 00f2 9268     	 ldr r2,[r2,#8]
 1844 00f4 DA60     	 str r2,[r3,#12]
 1845              	.L88:
 642:../Libraries/XMCLib/src/xmc_can.c ****     }
 643:../Libraries/XMCLib/src/xmc_can.c ****     /* Check whether message object is transmit message object */
 644:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 1846              	 .loc 2 644 0
 1847 00f6 7B68     	 ldr r3,[r7,#4]
 1848 00f8 1B7E     	 ldrb r3,[r3,#24]
 1849 00fa 012B     	 cmp r3,#1
 1850 00fc 0CD1     	 bne .L89
 645:../Libraries/XMCLib/src/xmc_can.c ****     {
 646:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Transmit message object  */
 647:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_MO_UpdateData(can_mo);
 1851              	 .loc 2 647 0
 1852 00fe 7868     	 ldr r0,[r7,#4]
 1853 0100 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 648:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_SETDIR_Msk;
 1854              	 .loc 2 648 0
 1855 0104 7B68     	 ldr r3,[r7,#4]
 1856 0106 1B68     	 ldr r3,[r3]
 1857 0108 4FF00062 	 mov r2,#134217728
 1858 010c DA61     	 str r2,[r3,#28]
 649:../Libraries/XMCLib/src/xmc_can.c **** 
 650:../Libraries/XMCLib/src/xmc_can.c ****       /* Reset RTSEL and Set MSGVAL, TXEN0 and TXEN1 bits */
 651:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk | CAN_MO_M
 1859              	 .loc 2 651 0
 1860 010e 7B68     	 ldr r3,[r7,#4]
 1861 0110 1B68     	 ldr r3,[r3]
 1862 0112 074A     	 ldr r2,.L90
 1863 0114 DA61     	 str r2,[r3,#28]
 1864 0116 08E0     	 b .L83
 1865              	.L89:
 652:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_RESRXEN_Msk  | CAN_MO_MOCTR_RESRTSEL_Msk);
 653:../Libraries/XMCLib/src/xmc_can.c ****     }
 654:../Libraries/XMCLib/src/xmc_can.c ****     else
 655:../Libraries/XMCLib/src/xmc_can.c ****     {
 656:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Receive message object and set RXEN bit */
 657:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESDIR_Msk;
 1866              	 .loc 2 657 0
 1867 0118 7B68     	 ldr r3,[r7,#4]
 1868 011a 1B68     	 ldr r3,[r3]
 1869 011c 4FF40062 	 mov r2,#2048
 1870 0120 DA61     	 str r2,[r3,#28]
 658:../Libraries/XMCLib/src/xmc_can.c **** 
 659:../Libraries/XMCLib/src/xmc_can.c ****       /* Reset RTSEL, TXEN1 and TXEN2 and Set MSGVAL and RXEN bits */
 660:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_RESTXEN0_Msk | CAN_MO_MOCTR_RESTXEN1_Msk | CAN_MO_M
 1871              	 .loc 2 660 0
 1872 0122 7B68     	 ldr r3,[r7,#4]
 1873 0124 1B68     	 ldr r3,[r3]
 1874 0126 034A     	 ldr r2,.L90+4
 1875 0128 DA61     	 str r2,[r3,#28]
 1876              	.L83:
 661:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 662:../Libraries/XMCLib/src/xmc_can.c ****     }
 663:../Libraries/XMCLib/src/xmc_can.c **** 
 664:../Libraries/XMCLib/src/xmc_can.c ****   }
 665:../Libraries/XMCLib/src/xmc_can.c **** }
 1877              	 .loc 2 665 0
 1878 012a 1837     	 adds r7,r7,#24
 1879              	 .cfi_def_cfa_offset 8
 1880 012c BD46     	 mov sp,r7
 1881              	 .cfi_def_cfa_register 13
 1882              	 
 1883 012e 80BD     	 pop {r7,pc}
 1884              	.L91:
 1885              	 .align 2
 1886              	.L90:
 1887 0130 C0002006 	 .word 102760640
 1888 0134 4006A000 	 .word 10487360
 1889              	 .cfi_endproc
 1890              	.LFE249:
 1892              	 .section .text.XMC_CAN_MO_UpdateData,"ax",%progbits
 1893              	 .align 2
 1894              	 .global XMC_CAN_MO_UpdateData
 1895              	 .thumb
 1896              	 .thumb_func
 1898              	XMC_CAN_MO_UpdateData:
 1899              	.LFB250:
 666:../Libraries/XMCLib/src/xmc_can.c **** 
 667:../Libraries/XMCLib/src/xmc_can.c **** /* Update of XMC_CAN Object */
 668:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo)
 669:../Libraries/XMCLib/src/xmc_can.c **** {
 1900              	 .loc 2 669 0
 1901              	 .cfi_startproc
 1902              	 
 1903              	 
 1904              	 
 1905 0000 80B4     	 push {r7}
 1906              	 .cfi_def_cfa_offset 4
 1907              	 .cfi_offset 7,-4
 1908 0002 85B0     	 sub sp,sp,#20
 1909              	 .cfi_def_cfa_offset 24
 1910 0004 00AF     	 add r7,sp,#0
 1911              	 .cfi_def_cfa_register 7
 1912 0006 7860     	 str r0,[r7,#4]
 670:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1913              	 .loc 2 670 0
 1914 0008 0323     	 movs r3,#3
 1915 000a FB73     	 strb r3,[r7,#15]
 671:../Libraries/XMCLib/src/xmc_can.c ****   /* Check whether message object is transmit message object */
 672:../Libraries/XMCLib/src/xmc_can.c ****   if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 1916              	 .loc 2 672 0
 1917 000c 7B68     	 ldr r3,[r7,#4]
 1918 000e 1B7E     	 ldrb r3,[r3,#24]
 1919 0010 012B     	 cmp r3,#1
 1920 0012 22D1     	 bne .L93
 673:../Libraries/XMCLib/src/xmc_can.c ****   {
 674:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 1921              	 .loc 2 674 0
 1922 0014 7B68     	 ldr r3,[r7,#4]
 1923 0016 1B68     	 ldr r3,[r3]
 1924 0018 2022     	 movs r2,#32
 1925 001a DA61     	 str r2,[r3,#28]
 675:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 676:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR) & ~(uint32_t)(CAN_MO_MOFCR_DLC_Msk)) |
 1926              	 .loc 2 676 0
 1927 001c 7B68     	 ldr r3,[r7,#4]
 1928 001e 1B68     	 ldr r3,[r3]
 1929 0020 7A68     	 ldr r2,[r7,#4]
 1930 0022 1268     	 ldr r2,[r2]
 1931 0024 1268     	 ldr r2,[r2]
 1932 0026 22F07061 	 bic r1,r2,#251658240
 677:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1933              	 .loc 2 677 0
 1934 002a 7A68     	 ldr r2,[r7,#4]
 1935 002c 127B     	 ldrb r2,[r2,#12]
 1936 002e 1206     	 lsls r2,r2,#24
 1937 0030 02F07062 	 and r2,r2,#251658240
 676:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1938              	 .loc 2 676 0
 1939 0034 0A43     	 orrs r2,r2,r1
 1940 0036 1A60     	 str r2,[r3]
 678:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 679:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAL = can_mo->can_data[0];
 1941              	 .loc 2 679 0
 1942 0038 7B68     	 ldr r3,[r7,#4]
 1943 003a 1B68     	 ldr r3,[r3]
 1944 003c 7A68     	 ldr r2,[r7,#4]
 1945 003e 1269     	 ldr r2,[r2,#16]
 1946 0040 1A61     	 str r2,[r3,#16]
 680:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAH = can_mo->can_data[1];
 1947              	 .loc 2 680 0
 1948 0042 7B68     	 ldr r3,[r7,#4]
 1949 0044 1B68     	 ldr r3,[r3]
 1950 0046 7A68     	 ldr r2,[r7,#4]
 1951 0048 5269     	 ldr r2,[r2,#20]
 1952 004a 5A61     	 str r2,[r3,#20]
 681:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 682:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETNEWDAT_Msk | CAN_MO_MOCTR_SETMSGVAL_Msk | CAN_MO_M
 1953              	 .loc 2 682 0
 1954 004c 7B68     	 ldr r3,[r7,#4]
 1955 004e 1B68     	 ldr r3,[r3]
 1956 0050 064A     	 ldr r2,.L96
 1957 0052 DA61     	 str r2,[r3,#28]
 683:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1958              	 .loc 2 683 0
 1959 0054 0023     	 movs r3,#0
 1960 0056 FB73     	 strb r3,[r7,#15]
 1961 0058 01E0     	 b .L94
 1962              	.L93:
 684:../Libraries/XMCLib/src/xmc_can.c ****   }
 685:../Libraries/XMCLib/src/xmc_can.c ****   else
 686:../Libraries/XMCLib/src/xmc_can.c ****   {
 687:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1963              	 .loc 2 687 0
 1964 005a 0323     	 movs r3,#3
 1965 005c FB73     	 strb r3,[r7,#15]
 1966              	.L94:
 688:../Libraries/XMCLib/src/xmc_can.c ****   }
 689:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 1967              	 .loc 2 689 0
 1968 005e FB7B     	 ldrb r3,[r7,#15]
 690:../Libraries/XMCLib/src/xmc_can.c **** }
 1969              	 .loc 2 690 0
 1970 0060 1846     	 mov r0,r3
 1971 0062 1437     	 adds r7,r7,#20
 1972              	 .cfi_def_cfa_offset 4
 1973 0064 BD46     	 mov sp,r7
 1974              	 .cfi_def_cfa_register 13
 1975              	 
 1976 0066 5DF8047B 	 ldr r7,[sp],#4
 1977              	 .cfi_restore 7
 1978              	 .cfi_def_cfa_offset 0
 1979 006a 7047     	 bx lr
 1980              	.L97:
 1981              	 .align 2
 1982              	.L96:
 1983 006c 40002800 	 .word 2621504
 1984              	 .cfi_endproc
 1985              	.LFE250:
 1987              	 .section .text.XMC_CAN_MO_Transmit,"ax",%progbits
 1988              	 .align 2
 1989              	 .global XMC_CAN_MO_Transmit
 1990              	 .thumb
 1991              	 .thumb_func
 1993              	XMC_CAN_MO_Transmit:
 1994              	.LFB251:
 691:../Libraries/XMCLib/src/xmc_can.c **** 
 692:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will put a transmit request to transmit message object */
 693:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo)
 694:../Libraries/XMCLib/src/xmc_can.c **** {
 1995              	 .loc 2 694 0
 1996              	 .cfi_startproc
 1997              	 
 1998              	 
 1999              	 
 2000 0000 80B4     	 push {r7}
 2001              	 .cfi_def_cfa_offset 4
 2002              	 .cfi_offset 7,-4
 2003 0002 87B0     	 sub sp,sp,#28
 2004              	 .cfi_def_cfa_offset 32
 2005 0004 00AF     	 add r7,sp,#0
 2006              	 .cfi_def_cfa_register 7
 2007 0006 7860     	 str r0,[r7,#4]
 695:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2008              	 .loc 2 695 0
 2009 0008 0123     	 movs r3,#1
 2010 000a FB75     	 strb r3,[r7,#23]
 696:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)(((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 2011              	 .loc 2 696 0
 2012 000c 7B68     	 ldr r3,[r7,#4]
 2013 000e 1B68     	 ldr r3,[r3]
 2014 0010 DB69     	 ldr r3,[r3,#28]
 2015 0012 03F02003 	 and r3,r3,#32
 2016 0016 5B09     	 lsrs r3,r3,#5
 2017 0018 3B61     	 str r3,[r7,#16]
 697:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t) ((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_
 2018              	 .loc 2 697 0
 2019 001a 7B68     	 ldr r3,[r7,#4]
 2020 001c 1B68     	 ldr r3,[r3]
 2021 001e DB69     	 ldr r3,[r3,#28]
 2022 0020 03F48073 	 and r3,r3,#256
 2023 0024 1B0A     	 lsrs r3,r3,#8
 2024 0026 FB60     	 str r3,[r7,#12]
 698:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 699:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 2025              	 .loc 2 699 0
 2026 0028 3B69     	 ldr r3,[r7,#16]
 2027 002a 002B     	 cmp r3,#0
 2028 002c 02D1     	 bne .L99
 700:../Libraries/XMCLib/src/xmc_can.c ****   {
 701:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 2029              	 .loc 2 701 0
 2030 002e 0423     	 movs r3,#4
 2031 0030 FB75     	 strb r3,[r7,#23]
 2032 0032 0CE0     	 b .L100
 2033              	.L99:
 702:../Libraries/XMCLib/src/xmc_can.c ****   }
 703:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 704:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 2034              	 .loc 2 704 0
 2035 0034 FB68     	 ldr r3,[r7,#12]
 2036 0036 012B     	 cmp r3,#1
 2037 0038 02D1     	 bne .L101
 705:../Libraries/XMCLib/src/xmc_can.c ****   {
 706:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2038              	 .loc 2 706 0
 2039 003a 0223     	 movs r3,#2
 2040 003c FB75     	 strb r3,[r7,#23]
 2041 003e 06E0     	 b .L100
 2042              	.L101:
 707:../Libraries/XMCLib/src/xmc_can.c ****   }
 708:../Libraries/XMCLib/src/xmc_can.c ****   else
 709:../Libraries/XMCLib/src/xmc_can.c ****   {
 710:../Libraries/XMCLib/src/xmc_can.c ****     /* set TXRQ bit */
 711:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr-> MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCT
 2043              	 .loc 2 711 0
 2044 0040 7B68     	 ldr r3,[r7,#4]
 2045 0042 1B68     	 ldr r3,[r3]
 2046 0044 4FF0E062 	 mov r2,#117440512
 2047 0048 DA61     	 str r2,[r3,#28]
 712:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2048              	 .loc 2 712 0
 2049 004a 0023     	 movs r3,#0
 2050 004c FB75     	 strb r3,[r7,#23]
 2051              	.L100:
 713:../Libraries/XMCLib/src/xmc_can.c ****   }
 714:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2052              	 .loc 2 714 0
 2053 004e FB7D     	 ldrb r3,[r7,#23]
 715:../Libraries/XMCLib/src/xmc_can.c **** }
 2054              	 .loc 2 715 0
 2055 0050 1846     	 mov r0,r3
 2056 0052 1C37     	 adds r7,r7,#28
 2057              	 .cfi_def_cfa_offset 4
 2058 0054 BD46     	 mov sp,r7
 2059              	 .cfi_def_cfa_register 13
 2060              	 
 2061 0056 5DF8047B 	 ldr r7,[sp],#4
 2062              	 .cfi_restore 7
 2063              	 .cfi_def_cfa_offset 0
 2064 005a 7047     	 bx lr
 2065              	 .cfi_endproc
 2066              	.LFE251:
 2068              	 .section .text.XMC_CAN_MO_ReceiveData,"ax",%progbits
 2069              	 .align 2
 2070              	 .global XMC_CAN_MO_ReceiveData
 2071              	 .thumb
 2072              	 .thumb_func
 2074              	XMC_CAN_MO_ReceiveData:
 2075              	.LFB252:
 716:../Libraries/XMCLib/src/xmc_can.c **** 
 717:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 718:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo)
 719:../Libraries/XMCLib/src/xmc_can.c **** {
 2076              	 .loc 2 719 0
 2077              	 .cfi_startproc
 2078              	 
 2079              	 
 2080              	 
 2081 0000 80B4     	 push {r7}
 2082              	 .cfi_def_cfa_offset 4
 2083              	 .cfi_offset 7,-4
 2084 0002 87B0     	 sub sp,sp,#28
 2085              	 .cfi_def_cfa_offset 32
 2086 0004 00AF     	 add r7,sp,#0
 2087              	 .cfi_def_cfa_register 7
 2088 0006 7860     	 str r0,[r7,#4]
 720:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2089              	 .loc 2 720 0
 2090 0008 0123     	 movs r3,#1
 2091 000a FB75     	 strb r3,[r7,#23]
 721:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 2092              	 .loc 2 721 0
 2093 000c 0023     	 movs r3,#0
 2094 000e BB75     	 strb r3,[r7,#22]
 722:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 2095              	 .loc 2 722 0
 2096 0010 0023     	 movs r3,#0
 2097 0012 7B75     	 strb r3,[r7,#21]
 723:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 2098              	 .loc 2 723 0
 2099 0014 7B68     	 ldr r3,[r7,#4]
 2100 0016 1B68     	 ldr r3,[r3]
 2101 0018 DB69     	 ldr r3,[r3,#28]
 2102 001a 03F40063 	 and r3,r3,#2048
 2103 001e DB0A     	 lsrs r3,r3,#11
 2104 0020 3B61     	 str r3,[r7,#16]
 724:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 2105              	 .loc 2 724 0
 2106 0022 7B68     	 ldr r3,[r7,#4]
 2107 0024 1B68     	 ldr r3,[r3]
 2108 0026 DB69     	 ldr r3,[r3,#28]
 2109 0028 03F00403 	 and r3,r3,#4
 2110 002c 9B08     	 lsrs r3,r3,#2
 2111 002e FB60     	 str r3,[r7,#12]
 725:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 726:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 2112              	 .loc 2 726 0
 2113 0030 3B69     	 ldr r3,[r7,#16]
 2114 0032 002B     	 cmp r3,#0
 2115 0034 02D0     	 beq .L104
 727:../Libraries/XMCLib/src/xmc_can.c ****   {
 728:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2116              	 .loc 2 728 0
 2117 0036 0323     	 movs r3,#3
 2118 0038 FB75     	 strb r3,[r7,#23]
 2119 003a 25E0     	 b .L105
 2120              	.L104:
 729:../Libraries/XMCLib/src/xmc_can.c ****   }
 730:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 731:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 2121              	 .loc 2 731 0
 2122 003c FB68     	 ldr r3,[r7,#12]
 2123 003e 012B     	 cmp r3,#1
 2124 0040 02D1     	 bne .L106
 732:../Libraries/XMCLib/src/xmc_can.c ****   {
 733:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2125              	 .loc 2 733 0
 2126 0042 0223     	 movs r3,#2
 2127 0044 FB75     	 strb r3,[r7,#23]
 2128 0046 1FE0     	 b .L105
 2129              	.L106:
 734:../Libraries/XMCLib/src/xmc_can.c ****   }
 735:../Libraries/XMCLib/src/xmc_can.c ****   else
 736:../Libraries/XMCLib/src/xmc_can.c ****   {
 737:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 738:../Libraries/XMCLib/src/xmc_can.c ****     do
 739:../Libraries/XMCLib/src/xmc_can.c ****     {
 740:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 2130              	 .loc 2 740 0 discriminator 3
 2131 0048 7B68     	 ldr r3,[r7,#4]
 2132 004a 1B68     	 ldr r3,[r3]
 2133 004c 1A69     	 ldr r2,[r3,#16]
 2134 004e 7B68     	 ldr r3,[r7,#4]
 2135 0050 1A61     	 str r2,[r3,#16]
 741:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 2136              	 .loc 2 741 0 discriminator 3
 2137 0052 7B68     	 ldr r3,[r7,#4]
 2138 0054 1B68     	 ldr r3,[r3]
 2139 0056 5A69     	 ldr r2,[r3,#20]
 2140 0058 7B68     	 ldr r3,[r7,#4]
 2141 005a 5A61     	 str r2,[r3,#20]
 742:../Libraries/XMCLib/src/xmc_can.c **** 
 743:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 2142              	 .loc 2 743 0 discriminator 3
 2143 005c 7B68     	 ldr r3,[r7,#4]
 2144 005e 1B68     	 ldr r3,[r3]
 2145 0060 DB69     	 ldr r3,[r3,#28]
 2146 0062 03F00403 	 and r3,r3,#4
 2147 0066 9B08     	 lsrs r3,r3,#2
 2148 0068 BB75     	 strb r3,[r7,#22]
 744:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 2149              	 .loc 2 744 0 discriminator 3
 2150 006a 7B68     	 ldr r3,[r7,#4]
 2151 006c 1B68     	 ldr r3,[r3]
 2152 006e DB69     	 ldr r3,[r3,#28]
 2153 0070 03F00803 	 and r3,r3,#8
 2154 0074 DB08     	 lsrs r3,r3,#3
 2155 0076 7B75     	 strb r3,[r7,#21]
 745:../Libraries/XMCLib/src/xmc_can.c ****     }
 746:../Libraries/XMCLib/src/xmc_can.c ****     while ((rx_pnd != 0U) || (new_data != 0U));
 2156              	 .loc 2 746 0 discriminator 3
 2157 0078 BB7D     	 ldrb r3,[r7,#22]
 2158 007a 002B     	 cmp r3,#0
 2159 007c E4D1     	 bne .L106
 2160              	 .loc 2 746 0 is_stmt 0 discriminator 2
 2161 007e 7B7D     	 ldrb r3,[r7,#21]
 2162 0080 002B     	 cmp r3,#0
 2163 0082 E1D1     	 bne .L106
 747:../Libraries/XMCLib/src/xmc_can.c **** 
 748:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2164              	 .loc 2 748 0 is_stmt 1
 2165 0084 0023     	 movs r3,#0
 2166 0086 FB75     	 strb r3,[r7,#23]
 2167              	.L105:
 749:../Libraries/XMCLib/src/xmc_can.c ****   }
 750:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2168              	 .loc 2 750 0
 2169 0088 FB7D     	 ldrb r3,[r7,#23]
 751:../Libraries/XMCLib/src/xmc_can.c **** }
 2170              	 .loc 2 751 0
 2171 008a 1846     	 mov r0,r3
 2172 008c 1C37     	 adds r7,r7,#28
 2173              	 .cfi_def_cfa_offset 4
 2174 008e BD46     	 mov sp,r7
 2175              	 .cfi_def_cfa_register 13
 2176              	 
 2177 0090 5DF8047B 	 ldr r7,[sp],#4
 2178              	 .cfi_restore 7
 2179              	 .cfi_def_cfa_offset 0
 2180 0094 7047     	 bx lr
 2181              	 .cfi_endproc
 2182              	.LFE252:
 2184 0096 00BF     	 .section .text.XMC_CAN_MO_Receive,"ax",%progbits
 2185              	 .align 2
 2186              	 .global XMC_CAN_MO_Receive
 2187              	 .thumb
 2188              	 .thumb_func
 2190              	XMC_CAN_MO_Receive:
 2191              	.LFB253:
 752:../Libraries/XMCLib/src/xmc_can.c **** 
 753:../Libraries/XMCLib/src/xmc_can.c **** 
 754:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 755:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive (XMC_CAN_MO_t *can_mo)
 756:../Libraries/XMCLib/src/xmc_can.c **** {
 2192              	 .loc 2 756 0
 2193              	 .cfi_startproc
 2194              	 
 2195              	 
 2196              	 
 2197 0000 80B4     	 push {r7}
 2198              	 .cfi_def_cfa_offset 4
 2199              	 .cfi_offset 7,-4
 2200 0002 87B0     	 sub sp,sp,#28
 2201              	 .cfi_def_cfa_offset 32
 2202 0004 00AF     	 add r7,sp,#0
 2203              	 .cfi_def_cfa_register 7
 2204 0006 7860     	 str r0,[r7,#4]
 757:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2205              	 .loc 2 757 0
 2206 0008 0123     	 movs r3,#1
 2207 000a FB75     	 strb r3,[r7,#23]
 758:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 2208              	 .loc 2 758 0
 2209 000c 0023     	 movs r3,#0
 2210 000e BB75     	 strb r3,[r7,#22]
 759:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 2211              	 .loc 2 759 0
 2212 0010 0023     	 movs r3,#0
 2213 0012 7B75     	 strb r3,[r7,#21]
 760:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 2214              	 .loc 2 760 0
 2215 0014 7B68     	 ldr r3,[r7,#4]
 2216 0016 1B68     	 ldr r3,[r3]
 2217 0018 DB69     	 ldr r3,[r3,#28]
 2218 001a 03F40063 	 and r3,r3,#2048
 2219 001e DB0A     	 lsrs r3,r3,#11
 2220 0020 3B61     	 str r3,[r7,#16]
 761:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 2221              	 .loc 2 761 0
 2222 0022 7B68     	 ldr r3,[r7,#4]
 2223 0024 1B68     	 ldr r3,[r3]
 2224 0026 DB69     	 ldr r3,[r3,#28]
 2225 0028 03F00403 	 and r3,r3,#4
 2226 002c 9B08     	 lsrs r3,r3,#2
 2227 002e FB60     	 str r3,[r7,#12]
 762:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 763:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 2228              	 .loc 2 763 0
 2229 0030 3B69     	 ldr r3,[r7,#16]
 2230 0032 002B     	 cmp r3,#0
 2231 0034 02D0     	 beq .L109
 764:../Libraries/XMCLib/src/xmc_can.c ****   {
 765:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2232              	 .loc 2 765 0
 2233 0036 0323     	 movs r3,#3
 2234 0038 FB75     	 strb r3,[r7,#23]
 2235 003a A7E0     	 b .L110
 2236              	.L109:
 766:../Libraries/XMCLib/src/xmc_can.c ****   }
 767:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 768:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 2237              	 .loc 2 768 0
 2238 003c FB68     	 ldr r3,[r7,#12]
 2239 003e 012B     	 cmp r3,#1
 2240 0040 02D1     	 bne .L111
 769:../Libraries/XMCLib/src/xmc_can.c ****   {
 770:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2241              	 .loc 2 770 0
 2242 0042 0223     	 movs r3,#2
 2243 0044 FB75     	 strb r3,[r7,#23]
 2244 0046 A1E0     	 b .L110
 2245              	.L111:
 771:../Libraries/XMCLib/src/xmc_can.c ****   }
 772:../Libraries/XMCLib/src/xmc_can.c ****   else
 773:../Libraries/XMCLib/src/xmc_can.c ****   {
 774:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 775:../Libraries/XMCLib/src/xmc_can.c ****     do
 776:../Libraries/XMCLib/src/xmc_can.c ****     {
 777:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESNEWDAT_Msk;
 2246              	 .loc 2 777 0
 2247 0048 7B68     	 ldr r3,[r7,#4]
 2248 004a 1B68     	 ldr r3,[r3]
 2249 004c 0822     	 movs r2,#8
 2250 004e DA61     	 str r2,[r3,#28]
 778:../Libraries/XMCLib/src/xmc_can.c ****       if ((((can_mo->can_mo_ptr->MOAR) & CAN_MO_MOAR_IDE_Msk) >> CAN_MO_MOAR_IDE_Pos) == 0U)
 2251              	 .loc 2 778 0
 2252 0050 7B68     	 ldr r3,[r7,#4]
 2253 0052 1B68     	 ldr r3,[r3]
 2254 0054 9B69     	 ldr r3,[r3,#24]
 2255 0056 03F00053 	 and r3,r3,#536870912
 2256 005a 5B0F     	 lsrs r3,r3,#29
 2257 005c 002B     	 cmp r3,#0
 2258 005e 40D1     	 bne .L112
 779:../Libraries/XMCLib/src/xmc_can.c ****       {
 780:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS;
 2259              	 .loc 2 780 0
 2260 0060 7A68     	 ldr r2,[r7,#4]
 2261 0062 D379     	 ldrb r3,[r2,#7]
 2262 0064 6FF34513 	 bfc r3,#5,#1
 2263 0068 D371     	 strb r3,[r2,#7]
 781:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & XMC_CAN_MO_MOAR_STDID_Msk) >> XMC_CAN_
 2264              	 .loc 2 781 0
 2265 006a 7B68     	 ldr r3,[r7,#4]
 2266 006c 1B68     	 ldr r3,[r3]
 2267 006e 9A69     	 ldr r2,[r3,#24]
 2268 0070 4A4B     	 ldr r3,.L118
 2269 0072 1340     	 ands r3,r3,r2
 2270 0074 9B0C     	 lsrs r3,r3,#18
 2271 0076 23F06041 	 bic r1,r3,#-536870912
 2272 007a 7A68     	 ldr r2,[r7,#4]
 2273 007c 5368     	 ldr r3,[r2,#4]
 2274 007e 61F31C03 	 bfi r3,r1,#0,#29
 2275 0082 5360     	 str r3,[r2,#4]
 782:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 2276              	 .loc 2 782 0
 2277 0084 7B68     	 ldr r3,[r7,#4]
 2278 0086 1B68     	 ldr r3,[r3]
 2279 0088 DB68     	 ldr r3,[r3,#12]
 2280 008a 03F00053 	 and r3,r3,#536870912
 2281 008e 5B0F     	 lsrs r3,r3,#29
 2282 0090 DBB2     	 uxtb r3,r3
 2283 0092 03F00103 	 and r3,r3,#1
 2284 0096 D9B2     	 uxtb r1,r3
 2285 0098 7A68     	 ldr r2,[r7,#4]
 2286 009a D37A     	 ldrb r3,[r2,#11]
 2287 009c 61F34513 	 bfi r3,r1,#5,#1
 2288 00a0 D372     	 strb r3,[r2,#11]
 783:../Libraries/XMCLib/src/xmc_can.c ****         if (can_mo->can_ide_mask == 1U)
 2289              	 .loc 2 783 0
 2290 00a2 7B68     	 ldr r3,[r7,#4]
 2291 00a4 DB7A     	 ldrb r3,[r3,#11]
 2292 00a6 03F02003 	 and r3,r3,#32
 2293 00aa DBB2     	 uxtb r3,r3
 2294 00ac 002B     	 cmp r3,#0
 2295 00ae 0DD0     	 beq .L113
 784:../Libraries/XMCLib/src/xmc_can.c ****         {
 785:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & XMC_CAN_MO_MOAR_STDID_Msk) >
 2296              	 .loc 2 785 0
 2297 00b0 7B68     	 ldr r3,[r7,#4]
 2298 00b2 1B68     	 ldr r3,[r3]
 2299 00b4 DA68     	 ldr r2,[r3,#12]
 2300 00b6 394B     	 ldr r3,.L118
 2301 00b8 1340     	 ands r3,r3,r2
 2302 00ba 9B0C     	 lsrs r3,r3,#18
 2303 00bc 23F06041 	 bic r1,r3,#-536870912
 2304 00c0 7A68     	 ldr r2,[r7,#4]
 2305 00c2 9368     	 ldr r3,[r2,#8]
 2306 00c4 61F31C03 	 bfi r3,r1,#0,#29
 2307 00c8 9360     	 str r3,[r2,#8]
 2308 00ca 32E0     	 b .L115
 2309              	.L113:
 786:../Libraries/XMCLib/src/xmc_can.c ****         }
 787:../Libraries/XMCLib/src/xmc_can.c ****         else
 788:../Libraries/XMCLib/src/xmc_can.c ****         {
 789:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 2310              	 .loc 2 789 0
 2311 00cc 7B68     	 ldr r3,[r7,#4]
 2312 00ce 1B68     	 ldr r3,[r3]
 2313 00d0 DB68     	 ldr r3,[r3,#12]
 2314 00d2 23F06041 	 bic r1,r3,#-536870912
 2315 00d6 7A68     	 ldr r2,[r7,#4]
 2316 00d8 9368     	 ldr r3,[r2,#8]
 2317 00da 61F31C03 	 bfi r3,r1,#0,#29
 2318 00de 9360     	 str r3,[r2,#8]
 2319 00e0 27E0     	 b .L115
 2320              	.L112:
 790:../Libraries/XMCLib/src/xmc_can.c ****         }
 791:../Libraries/XMCLib/src/xmc_can.c ****       }
 792:../Libraries/XMCLib/src/xmc_can.c ****       else
 793:../Libraries/XMCLib/src/xmc_can.c ****       {
 794:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_EXTENDED_29BITS;
 2321              	 .loc 2 794 0
 2322 00e2 7A68     	 ldr r2,[r7,#4]
 2323 00e4 D379     	 ldrb r3,[r2,#7]
 2324 00e6 43F02003 	 orr r3,r3,#32
 2325 00ea D371     	 strb r3,[r2,#7]
 795:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_ID_Msk);
 2326              	 .loc 2 795 0
 2327 00ec 7B68     	 ldr r3,[r7,#4]
 2328 00ee 1B68     	 ldr r3,[r3]
 2329 00f0 9B69     	 ldr r3,[r3,#24]
 2330 00f2 23F06041 	 bic r1,r3,#-536870912
 2331 00f6 7A68     	 ldr r2,[r7,#4]
 2332 00f8 5368     	 ldr r3,[r2,#4]
 2333 00fa 61F31C03 	 bfi r3,r1,#0,#29
 2334 00fe 5360     	 str r3,[r2,#4]
 796:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 2335              	 .loc 2 796 0
 2336 0100 7B68     	 ldr r3,[r7,#4]
 2337 0102 1B68     	 ldr r3,[r3]
 2338 0104 DB68     	 ldr r3,[r3,#12]
 2339 0106 23F06041 	 bic r1,r3,#-536870912
 2340 010a 7A68     	 ldr r2,[r7,#4]
 2341 010c 9368     	 ldr r3,[r2,#8]
 2342 010e 61F31C03 	 bfi r3,r1,#0,#29
 2343 0112 9360     	 str r3,[r2,#8]
 797:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 2344              	 .loc 2 797 0
 2345 0114 7B68     	 ldr r3,[r7,#4]
 2346 0116 1B68     	 ldr r3,[r3]
 2347 0118 DB68     	 ldr r3,[r3,#12]
 2348 011a 03F00053 	 and r3,r3,#536870912
 2349 011e 5B0F     	 lsrs r3,r3,#29
 2350 0120 DBB2     	 uxtb r3,r3
 2351 0122 03F00103 	 and r3,r3,#1
 2352 0126 D9B2     	 uxtb r1,r3
 2353 0128 7A68     	 ldr r2,[r7,#4]
 2354 012a D37A     	 ldrb r3,[r2,#11]
 2355 012c 61F34513 	 bfi r3,r1,#5,#1
 2356 0130 D372     	 strb r3,[r2,#11]
 2357              	.L115:
 798:../Libraries/XMCLib/src/xmc_can.c ****       }
 799:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data_length = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOFCR) & CAN_MO_MOFCR_DLC
 2358              	 .loc 2 799 0
 2359 0132 7B68     	 ldr r3,[r7,#4]
 2360 0134 1B68     	 ldr r3,[r3]
 2361 0136 1B68     	 ldr r3,[r3]
 2362 0138 03F07063 	 and r3,r3,#251658240
 2363 013c 1B0E     	 lsrs r3,r3,#24
 2364 013e DAB2     	 uxtb r2,r3
 2365 0140 7B68     	 ldr r3,[r7,#4]
 2366 0142 1A73     	 strb r2,[r3,#12]
 800:../Libraries/XMCLib/src/xmc_can.c **** 
 801:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 2367              	 .loc 2 801 0
 2368 0144 7B68     	 ldr r3,[r7,#4]
 2369 0146 1B68     	 ldr r3,[r3]
 2370 0148 1A69     	 ldr r2,[r3,#16]
 2371 014a 7B68     	 ldr r3,[r7,#4]
 2372 014c 1A61     	 str r2,[r3,#16]
 802:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 2373              	 .loc 2 802 0
 2374 014e 7B68     	 ldr r3,[r7,#4]
 2375 0150 1B68     	 ldr r3,[r3]
 2376 0152 5A69     	 ldr r2,[r3,#20]
 2377 0154 7B68     	 ldr r3,[r7,#4]
 2378 0156 5A61     	 str r2,[r3,#20]
 803:../Libraries/XMCLib/src/xmc_can.c **** 
 804:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 2379              	 .loc 2 804 0
 2380 0158 7B68     	 ldr r3,[r7,#4]
 2381 015a 1B68     	 ldr r3,[r3]
 2382 015c DB69     	 ldr r3,[r3,#28]
 2383 015e 03F00403 	 and r3,r3,#4
 2384 0162 9B08     	 lsrs r3,r3,#2
 2385 0164 BB75     	 strb r3,[r7,#22]
 805:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 2386              	 .loc 2 805 0
 2387 0166 7B68     	 ldr r3,[r7,#4]
 2388 0168 1B68     	 ldr r3,[r3]
 2389 016a DB69     	 ldr r3,[r3,#28]
 2390 016c 03F00803 	 and r3,r3,#8
 2391 0170 DB08     	 lsrs r3,r3,#3
 2392 0172 7B75     	 strb r3,[r7,#21]
 806:../Libraries/XMCLib/src/xmc_can.c ****     }
 807:../Libraries/XMCLib/src/xmc_can.c ****     while ((rx_pnd != 0U) && (new_data != 0U));
 2393              	 .loc 2 807 0
 2394 0174 BB7D     	 ldrb r3,[r7,#22]
 2395 0176 002B     	 cmp r3,#0
 2396 0178 03D0     	 beq .L116
 2397              	 .loc 2 807 0 is_stmt 0 discriminator 1
 2398 017a 7B7D     	 ldrb r3,[r7,#21]
 2399 017c 002B     	 cmp r3,#0
 2400 017e 7FF463AF 	 bne .L111
 2401              	.L116:
 808:../Libraries/XMCLib/src/xmc_can.c **** 
 809:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_type = XMC_CAN_MO_TYPE_RECMSGOBJ;
 2402              	 .loc 2 809 0 is_stmt 1
 2403 0182 7B68     	 ldr r3,[r7,#4]
 2404 0184 0022     	 movs r2,#0
 2405 0186 1A76     	 strb r2,[r3,#24]
 810:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2406              	 .loc 2 810 0
 2407 0188 0023     	 movs r3,#0
 2408 018a FB75     	 strb r3,[r7,#23]
 2409              	.L110:
 811:../Libraries/XMCLib/src/xmc_can.c ****   }
 812:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2410              	 .loc 2 812 0
 2411 018c FB7D     	 ldrb r3,[r7,#23]
 813:../Libraries/XMCLib/src/xmc_can.c **** }
 2412              	 .loc 2 813 0
 2413 018e 1846     	 mov r0,r3
 2414 0190 1C37     	 adds r7,r7,#28
 2415              	 .cfi_def_cfa_offset 4
 2416 0192 BD46     	 mov sp,r7
 2417              	 .cfi_def_cfa_register 13
 2418              	 
 2419 0194 5DF8047B 	 ldr r7,[sp],#4
 2420              	 .cfi_restore 7
 2421              	 .cfi_def_cfa_offset 0
 2422 0198 7047     	 bx lr
 2423              	.L119:
 2424 019a 00BF     	 .align 2
 2425              	.L118:
 2426 019c 0000FC1F 	 .word 536608768
 2427              	 .cfi_endproc
 2428              	.LFE253:
 2430              	 .section .text.XMC_CAN_NODE_EnableEvent,"ax",%progbits
 2431              	 .align 2
 2432              	 .global XMC_CAN_NODE_EnableEvent
 2433              	 .thumb
 2434              	 .thumb_func
 2436              	XMC_CAN_NODE_EnableEvent:
 2437              	.LFB254:
 814:../Libraries/XMCLib/src/xmc_can.c **** 
 815:../Libraries/XMCLib/src/xmc_can.c **** /* Function to enable node event */
 816:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 817:../Libraries/XMCLib/src/xmc_can.c **** {
 2438              	 .loc 2 817 0
 2439              	 .cfi_startproc
 2440              	 
 2441              	 
 2442              	 
 2443 0000 80B4     	 push {r7}
 2444              	 .cfi_def_cfa_offset 4
 2445              	 .cfi_offset 7,-4
 2446 0002 83B0     	 sub sp,sp,#12
 2447              	 .cfi_def_cfa_offset 16
 2448 0004 00AF     	 add r7,sp,#0
 2449              	 .cfi_def_cfa_register 7
 2450 0006 7860     	 str r0,[r7,#4]
 2451 0008 3960     	 str r1,[r7]
 818:../Libraries/XMCLib/src/xmc_can.c ****   if (event != XMC_CAN_NODE_EVENT_CFCIE)
 2452              	 .loc 2 818 0
 2453 000a 3B68     	 ldr r3,[r7]
 2454 000c B3F5800F 	 cmp r3,#4194304
 2455 0010 06D0     	 beq .L121
 819:../Libraries/XMCLib/src/xmc_can.c ****   {
 820:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR |= (uint32_t)event;
 2456              	 .loc 2 820 0
 2457 0012 7B68     	 ldr r3,[r7,#4]
 2458 0014 1A68     	 ldr r2,[r3]
 2459 0016 3B68     	 ldr r3,[r7]
 2460 0018 1A43     	 orrs r2,r2,r3
 2461 001a 7B68     	 ldr r3,[r7,#4]
 2462 001c 1A60     	 str r2,[r3]
 2463 001e 05E0     	 b .L120
 2464              	.L121:
 821:../Libraries/XMCLib/src/xmc_can.c ****   }
 822:../Libraries/XMCLib/src/xmc_can.c ****   else
 823:../Libraries/XMCLib/src/xmc_can.c ****   {
 824:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR |= (uint32_t)event;
 2465              	 .loc 2 824 0
 2466 0020 7B68     	 ldr r3,[r7,#4]
 2467 0022 9A69     	 ldr r2,[r3,#24]
 2468 0024 3B68     	 ldr r3,[r7]
 2469 0026 1A43     	 orrs r2,r2,r3
 2470 0028 7B68     	 ldr r3,[r7,#4]
 2471 002a 9A61     	 str r2,[r3,#24]
 2472              	.L120:
 825:../Libraries/XMCLib/src/xmc_can.c ****   }
 826:../Libraries/XMCLib/src/xmc_can.c **** }
 2473              	 .loc 2 826 0
 2474 002c 0C37     	 adds r7,r7,#12
 2475              	 .cfi_def_cfa_offset 4
 2476 002e BD46     	 mov sp,r7
 2477              	 .cfi_def_cfa_register 13
 2478              	 
 2479 0030 5DF8047B 	 ldr r7,[sp],#4
 2480              	 .cfi_restore 7
 2481              	 .cfi_def_cfa_offset 0
 2482 0034 7047     	 bx lr
 2483              	 .cfi_endproc
 2484              	.LFE254:
 2486 0036 00BF     	 .section .text.XMC_CAN_NODE_DisableEvent,"ax",%progbits
 2487              	 .align 2
 2488              	 .global XMC_CAN_NODE_DisableEvent
 2489              	 .thumb
 2490              	 .thumb_func
 2492              	XMC_CAN_NODE_DisableEvent:
 2493              	.LFB255:
 827:../Libraries/XMCLib/src/xmc_can.c **** 
 828:../Libraries/XMCLib/src/xmc_can.c **** /* Function to disable node event */
 829:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 830:../Libraries/XMCLib/src/xmc_can.c **** {
 2494              	 .loc 2 830 0
 2495              	 .cfi_startproc
 2496              	 
 2497              	 
 2498              	 
 2499 0000 80B4     	 push {r7}
 2500              	 .cfi_def_cfa_offset 4
 2501              	 .cfi_offset 7,-4
 2502 0002 83B0     	 sub sp,sp,#12
 2503              	 .cfi_def_cfa_offset 16
 2504 0004 00AF     	 add r7,sp,#0
 2505              	 .cfi_def_cfa_register 7
 2506 0006 7860     	 str r0,[r7,#4]
 2507 0008 3960     	 str r1,[r7]
 831:../Libraries/XMCLib/src/xmc_can.c ****   if (event != XMC_CAN_NODE_EVENT_CFCIE)
 2508              	 .loc 2 831 0
 2509 000a 3B68     	 ldr r3,[r7]
 2510 000c B3F5800F 	 cmp r3,#4194304
 2511 0010 07D0     	 beq .L124
 832:../Libraries/XMCLib/src/xmc_can.c ****   {
 833:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR &= ~(uint32_t)event;
 2512              	 .loc 2 833 0
 2513 0012 7B68     	 ldr r3,[r7,#4]
 2514 0014 1A68     	 ldr r2,[r3]
 2515 0016 3B68     	 ldr r3,[r7]
 2516 0018 DB43     	 mvns r3,r3
 2517 001a 1A40     	 ands r2,r2,r3
 2518 001c 7B68     	 ldr r3,[r7,#4]
 2519 001e 1A60     	 str r2,[r3]
 2520 0020 06E0     	 b .L123
 2521              	.L124:
 834:../Libraries/XMCLib/src/xmc_can.c ****   }
 835:../Libraries/XMCLib/src/xmc_can.c ****   else
 836:../Libraries/XMCLib/src/xmc_can.c ****   {
 837:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR &= ~(uint32_t)event;
 2522              	 .loc 2 837 0
 2523 0022 7B68     	 ldr r3,[r7,#4]
 2524 0024 9A69     	 ldr r2,[r3,#24]
 2525 0026 3B68     	 ldr r3,[r7]
 2526 0028 DB43     	 mvns r3,r3
 2527 002a 1A40     	 ands r2,r2,r3
 2528 002c 7B68     	 ldr r3,[r7,#4]
 2529 002e 9A61     	 str r2,[r3,#24]
 2530              	.L123:
 838:../Libraries/XMCLib/src/xmc_can.c ****   }
 839:../Libraries/XMCLib/src/xmc_can.c **** }
 2531              	 .loc 2 839 0
 2532 0030 0C37     	 adds r7,r7,#12
 2533              	 .cfi_def_cfa_offset 4
 2534 0032 BD46     	 mov sp,r7
 2535              	 .cfi_def_cfa_register 13
 2536              	 
 2537 0034 5DF8047B 	 ldr r7,[sp],#4
 2538              	 .cfi_restore 7
 2539              	 .cfi_def_cfa_offset 0
 2540 0038 7047     	 bx lr
 2541              	 .cfi_endproc
 2542              	.LFE255:
 2544 003a 00BF     	 .section .text.XMC_CAN_TXFIFO_Transmit,"ax",%progbits
 2545              	 .align 2
 2546              	 .global XMC_CAN_TXFIFO_Transmit
 2547              	 .thumb
 2548              	 .thumb_func
 2550              	XMC_CAN_TXFIFO_Transmit:
 2551              	.LFB256:
 840:../Libraries/XMCLib/src/xmc_can.c **** /* Function to transmit MO from the FIFO */
 841:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_TXFIFO_Transmit(const XMC_CAN_MO_t *const can_mo)
 842:../Libraries/XMCLib/src/xmc_can.c **** {
 2552              	 .loc 2 842 0
 2553              	 .cfi_startproc
 2554              	 
 2555              	 
 2556              	 
 2557 0000 80B4     	 push {r7}
 2558              	 .cfi_def_cfa_offset 4
 2559              	 .cfi_offset 7,-4
 2560 0002 89B0     	 sub sp,sp,#36
 2561              	 .cfi_def_cfa_offset 40
 2562 0004 00AF     	 add r7,sp,#0
 2563              	 .cfi_def_cfa_register 7
 2564 0006 7860     	 str r0,[r7,#4]
 843:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2565              	 .loc 2 843 0
 2566 0008 0123     	 movs r3,#1
 2567 000a FB77     	 strb r3,[r7,#31]
 844:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = ((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 2568              	 .loc 2 844 0
 2569 000c 7B68     	 ldr r3,[r7,#4]
 2570 000e 1B68     	 ldr r3,[r3]
 2571 0010 DB69     	 ldr r3,[r3,#28]
 2572 0012 03F02003 	 and r3,r3,#32
 2573 0016 5B09     	 lsrs r3,r3,#5
 2574 0018 BB61     	 str r3,[r7,#24]
 845:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_M
 2575              	 .loc 2 845 0
 2576 001a 7B68     	 ldr r3,[r7,#4]
 2577 001c 1B68     	 ldr r3,[r3]
 2578 001e DB69     	 ldr r3,[r3,#28]
 2579 0020 03F48073 	 and r3,r3,#256
 2580 0024 1B0A     	 lsrs r3,r3,#8
 2581 0026 7B61     	 str r3,[r7,#20]
 846:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_cur =  (uint32_t)(can_mo->can_mo_ptr-> MOFGPR & CAN_MO_MOFGPR_CUR_Msk) >> CAN_MO_MOFG
 2582              	 .loc 2 846 0
 2583 0028 7B68     	 ldr r3,[r7,#4]
 2584 002a 1B68     	 ldr r3,[r3]
 2585 002c 5B68     	 ldr r3,[r3,#4]
 2586 002e 03F47F03 	 and r3,r3,#16711680
 2587 0032 1B0C     	 lsrs r3,r3,#16
 2588 0034 3B61     	 str r3,[r7,#16]
 847:../Libraries/XMCLib/src/xmc_can.c ****   CAN_MO_TypeDef  *mo = (CAN_MO_TypeDef *)(CAN_BASE + 0x1000UL + (mo_cur * 0x0020UL));
 2589              	 .loc 2 847 0
 2590 0036 3B69     	 ldr r3,[r7,#16]
 2591 0038 03F11073 	 add r3,r3,#37748736
 2592 003c 03F52863 	 add r3,r3,#2688
 2593 0040 5B01     	 lsls r3,r3,#5
 2594 0042 FB60     	 str r3,[r7,#12]
 848:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 849:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 2595              	 .loc 2 849 0
 2596 0044 BB69     	 ldr r3,[r7,#24]
 2597 0046 002B     	 cmp r3,#0
 2598 0048 02D1     	 bne .L127
 850:../Libraries/XMCLib/src/xmc_can.c ****   {
 851:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 2599              	 .loc 2 851 0
 2600 004a 0423     	 movs r3,#4
 2601 004c FB77     	 strb r3,[r7,#31]
 2602 004e 0BE0     	 b .L128
 2603              	.L127:
 852:../Libraries/XMCLib/src/xmc_can.c ****   }
 853:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 854:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 2604              	 .loc 2 854 0
 2605 0050 7B69     	 ldr r3,[r7,#20]
 2606 0052 012B     	 cmp r3,#1
 2607 0054 02D1     	 bne .L129
 855:../Libraries/XMCLib/src/xmc_can.c ****   {
 856:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2608              	 .loc 2 856 0
 2609 0056 0223     	 movs r3,#2
 2610 0058 FB77     	 strb r3,[r7,#31]
 2611 005a 05E0     	 b .L128
 2612              	.L129:
 857:../Libraries/XMCLib/src/xmc_can.c ****   }
 858:../Libraries/XMCLib/src/xmc_can.c ****   else
 859:../Libraries/XMCLib/src/xmc_can.c ****   {
 860:../Libraries/XMCLib/src/xmc_can.c ****     mo->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk;
 2613              	 .loc 2 860 0
 2614 005c FB68     	 ldr r3,[r7,#12]
 2615 005e 4FF0E062 	 mov r2,#117440512
 2616 0062 DA61     	 str r2,[r3,#28]
 861:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2617              	 .loc 2 861 0
 2618 0064 0023     	 movs r3,#0
 2619 0066 FB77     	 strb r3,[r7,#31]
 2620              	.L128:
 862:../Libraries/XMCLib/src/xmc_can.c ****   }
 863:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2621              	 .loc 2 863 0
 2622 0068 FB7F     	 ldrb r3,[r7,#31]
 864:../Libraries/XMCLib/src/xmc_can.c **** }
 2623              	 .loc 2 864 0
 2624 006a 1846     	 mov r0,r3
 2625 006c 2437     	 adds r7,r7,#36
 2626              	 .cfi_def_cfa_offset 4
 2627 006e BD46     	 mov sp,r7
 2628              	 .cfi_def_cfa_register 13
 2629              	 
 2630 0070 5DF8047B 	 ldr r7,[sp],#4
 2631              	 .cfi_restore 7
 2632              	 .cfi_def_cfa_offset 0
 2633 0074 7047     	 bx lr
 2634              	 .cfi_endproc
 2635              	.LFE256:
 2637 0076 00BF     	 .section .text.XMC_CAN_TXFIFO_ConfigMOBaseObject,"ax",%progbits
 2638              	 .align 2
 2639              	 .global XMC_CAN_TXFIFO_ConfigMOBaseObject
 2640              	 .thumb
 2641              	 .thumb_func
 2643              	XMC_CAN_TXFIFO_ConfigMOBaseObject:
 2644              	.LFB257:
 865:../Libraries/XMCLib/src/xmc_can.c **** 
 866:../Libraries/XMCLib/src/xmc_can.c **** /* Function to initialize the transmit FIFO MO base object */
 867:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_FIFO_CONFIG_
 868:../Libraries/XMCLib/src/xmc_can.c **** {
 2645              	 .loc 2 868 0
 2646              	 .cfi_startproc
 2647              	 
 2648              	 
 2649              	 
 2650 0000 80B4     	 push {r7}
 2651              	 .cfi_def_cfa_offset 4
 2652              	 .cfi_offset 7,-4
 2653 0002 83B0     	 sub sp,sp,#12
 2654              	 .cfi_def_cfa_offset 16
 2655 0004 00AF     	 add r7,sp,#0
 2656              	 .cfi_def_cfa_register 7
 2657 0006 7860     	 str r0,[r7,#4]
 2658 0008 3960     	 str r1,[r7]
 869:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2659              	 .loc 2 869 0
 2660 000a 7B68     	 ldr r3,[r7,#4]
 2661 000c 1B68     	 ldr r3,[r3]
 2662 000e 7A68     	 ldr r2,[r7,#4]
 2663 0010 1268     	 ldr r2,[r2]
 2664 0012 1268     	 ldr r2,[r2]
 2665 0014 22F00F02 	 bic r2,r2,#15
 2666 0018 42F00202 	 orr r2,r2,#2
 2667 001c 1A60     	 str r2,[r3]
 870:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x2U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 871:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_BOT_Msk |
 2668              	 .loc 2 871 0
 2669 001e 7B68     	 ldr r3,[r7,#4]
 2670 0020 1B68     	 ldr r3,[r3]
 2671 0022 7A68     	 ldr r2,[r7,#4]
 2672 0024 1268     	 ldr r2,[r2]
 2673 0026 5268     	 ldr r2,[r2,#4]
 2674 0028 02F07F42 	 and r2,r2,#-16777216
 872:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 873:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_CUR_Msk)) |
 874:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2675              	 .loc 2 874 0
 2676 002c 3978     	 ldrb r1,[r7]
 873:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2677              	 .loc 2 873 0
 2678 002e 1143     	 orrs r1,r1,r2
 875:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2679              	 .loc 2 875 0
 2680 0030 BA78     	 ldrb r2,[r7,#2]
 2681 0032 1204     	 lsls r2,r2,#16
 2682 0034 02F47F02 	 and r2,r2,#16711680
 874:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2683              	 .loc 2 874 0
 2684 0038 1143     	 orrs r1,r1,r2
 876:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2685              	 .loc 2 876 0
 2686 003a 7A78     	 ldrb r2,[r7,#1]
 2687 003c 1202     	 lsls r2,r2,#8
 2688 003e 92B2     	 uxth r2,r2
 875:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2689              	 .loc 2 875 0
 2690 0040 0A43     	 orrs r2,r2,r1
 871:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 2691              	 .loc 2 871 0
 2692 0042 5A60     	 str r2,[r3,#4]
 877:../Libraries/XMCLib/src/xmc_can.c **** }
 2693              	 .loc 2 877 0
 2694 0044 0C37     	 adds r7,r7,#12
 2695              	 .cfi_def_cfa_offset 4
 2696 0046 BD46     	 mov sp,r7
 2697              	 .cfi_def_cfa_register 13
 2698              	 
 2699 0048 5DF8047B 	 ldr r7,[sp],#4
 2700              	 .cfi_restore 7
 2701              	 .cfi_def_cfa_offset 0
 2702 004c 7047     	 bx lr
 2703              	 .cfi_endproc
 2704              	.LFE257:
 2706 004e 00BF     	 .section .text.XMC_CAN_RXFIFO_ConfigMOBaseObject,"ax",%progbits
 2707              	 .align 2
 2708              	 .global XMC_CAN_RXFIFO_ConfigMOBaseObject
 2709              	 .thumb
 2710              	 .thumb_func
 2712              	XMC_CAN_RXFIFO_ConfigMOBaseObject:
 2713              	.LFB258:
 878:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the receive FIFO MO base object */
 879:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_RXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_FIFO_CONFIG_
 880:../Libraries/XMCLib/src/xmc_can.c **** {
 2714              	 .loc 2 880 0
 2715              	 .cfi_startproc
 2716              	 
 2717              	 
 2718              	 
 2719 0000 80B4     	 push {r7}
 2720              	 .cfi_def_cfa_offset 4
 2721              	 .cfi_offset 7,-4
 2722 0002 83B0     	 sub sp,sp,#12
 2723              	 .cfi_def_cfa_offset 16
 2724 0004 00AF     	 add r7,sp,#0
 2725              	 .cfi_def_cfa_register 7
 2726 0006 7860     	 str r0,[r7,#4]
 2727 0008 3960     	 str r1,[r7]
 881:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2728              	 .loc 2 881 0
 2729 000a 7B68     	 ldr r3,[r7,#4]
 2730 000c 1B68     	 ldr r3,[r3]
 2731 000e 7A68     	 ldr r2,[r7,#4]
 2732 0010 1268     	 ldr r2,[r2]
 2733 0012 1268     	 ldr r2,[r2]
 2734 0014 22F00F02 	 bic r2,r2,#15
 2735 0018 42F00102 	 orr r2,r2,#1
 2736 001c 1A60     	 str r2,[r3]
 882:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x1U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 883:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~( uint32_t)(CAN_MO_MOFGPR_BOT_Msk 
 2737              	 .loc 2 883 0
 2738 001e 7B68     	 ldr r3,[r7,#4]
 2739 0020 1B68     	 ldr r3,[r3]
 2740 0022 7A68     	 ldr r2,[r7,#4]
 2741 0024 1268     	 ldr r2,[r2]
 2742 0026 5268     	 ldr r2,[r2,#4]
 2743 0028 02F07F42 	 and r2,r2,#-16777216
 884:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 885:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_CUR_Msk)) |
 886:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2744              	 .loc 2 886 0
 2745 002c 3978     	 ldrb r1,[r7]
 885:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2746              	 .loc 2 885 0
 2747 002e 1143     	 orrs r1,r1,r2
 887:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2748              	 .loc 2 887 0
 2749 0030 BA78     	 ldrb r2,[r7,#2]
 2750 0032 1204     	 lsls r2,r2,#16
 2751 0034 02F47F02 	 and r2,r2,#16711680
 886:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2752              	 .loc 2 886 0
 2753 0038 1143     	 orrs r1,r1,r2
 888:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2754              	 .loc 2 888 0
 2755 003a 7A78     	 ldrb r2,[r7,#1]
 2756 003c 1202     	 lsls r2,r2,#8
 2757 003e 92B2     	 uxth r2,r2
 887:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2758              	 .loc 2 887 0
 2759 0040 0A43     	 orrs r2,r2,r1
 883:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 2760              	 .loc 2 883 0
 2761 0042 5A60     	 str r2,[r3,#4]
 889:../Libraries/XMCLib/src/xmc_can.c **** }
 2762              	 .loc 2 889 0
 2763 0044 0C37     	 adds r7,r7,#12
 2764              	 .cfi_def_cfa_offset 4
 2765 0046 BD46     	 mov sp,r7
 2766              	 .cfi_def_cfa_register 13
 2767              	 
 2768 0048 5DF8047B 	 ldr r7,[sp],#4
 2769              	 .cfi_restore 7
 2770              	 .cfi_def_cfa_offset 0
 2771 004c 7047     	 bx lr
 2772              	 .cfi_endproc
 2773              	.LFE258:
 2775 004e 00BF     	 .section .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject,"ax",%progbits
 2776              	 .align 2
 2777              	 .global XMC_CAN_TXFIFO_ConfigMOSlaveObject
 2778              	 .thumb
 2779              	 .thumb_func
 2781              	XMC_CAN_TXFIFO_ConfigMOSlaveObject:
 2782              	.LFB259:
 890:../Libraries/XMCLib/src/xmc_can.c **** 
 891:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the FIFO MO slave object */
 892:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOSlaveObject(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_FIFO_CONFIG
 893:../Libraries/XMCLib/src/xmc_can.c **** {
 2783              	 .loc 2 893 0
 2784              	 .cfi_startproc
 2785              	 
 2786              	 
 2787              	 
 2788 0000 80B4     	 push {r7}
 2789              	 .cfi_def_cfa_offset 4
 2790              	 .cfi_offset 7,-4
 2791 0002 83B0     	 sub sp,sp,#12
 2792              	 .cfi_def_cfa_offset 16
 2793 0004 00AF     	 add r7,sp,#0
 2794              	 .cfi_def_cfa_register 7
 2795 0006 7860     	 str r0,[r7,#4]
 2796 0008 3960     	 str r1,[r7]
 894:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2797              	 .loc 2 894 0
 2798 000a 7B68     	 ldr r3,[r7,#4]
 2799 000c 1B68     	 ldr r3,[r3]
 2800 000e 7A68     	 ldr r2,[r7,#4]
 2801 0010 1268     	 ldr r2,[r2]
 2802 0012 1268     	 ldr r2,[r2]
 2803 0014 22F00F02 	 bic r2,r2,#15
 2804 0018 42F00302 	 orr r2,r2,#3
 2805 001c 1A60     	 str r2,[r3]
 895:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x3U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 896:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_CUR_Msk))
 2806              	 .loc 2 896 0
 2807 001e 7B68     	 ldr r3,[r7,#4]
 2808 0020 1B68     	 ldr r3,[r3]
 2809 0022 7A68     	 ldr r2,[r7,#4]
 2810 0024 1268     	 ldr r2,[r2]
 2811 0026 5268     	 ldr r2,[r2,#4]
 2812 0028 22F47F01 	 bic r1,r2,#16711680
 897:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2813              	 .loc 2 897 0
 2814 002c BA78     	 ldrb r2,[r7,#2]
 2815 002e 1204     	 lsls r2,r2,#16
 2816 0030 02F47F02 	 and r2,r2,#16711680
 896:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2817              	 .loc 2 896 0
 2818 0034 0A43     	 orrs r2,r2,r1
 2819 0036 5A60     	 str r2,[r3,#4]
 898:../Libraries/XMCLib/src/xmc_can.c **** 
 899:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOCTR  = CAN_MO_MOCTR_SETTXEN0_Msk |
 2820              	 .loc 2 899 0
 2821 0038 7B68     	 ldr r3,[r7,#4]
 2822 003a 1B68     	 ldr r3,[r3]
 2823 003c 034A     	 ldr r2,.L134
 2824 003e DA61     	 str r2,[r3,#28]
 900:../Libraries/XMCLib/src/xmc_can.c ****                                CAN_MO_MOCTR_RESTXEN1_Msk;
 901:../Libraries/XMCLib/src/xmc_can.c **** }
 2825              	 .loc 2 901 0
 2826 0040 0C37     	 adds r7,r7,#12
 2827              	 .cfi_def_cfa_offset 4
 2828 0042 BD46     	 mov sp,r7
 2829              	 .cfi_def_cfa_register 13
 2830              	 
 2831 0044 5DF8047B 	 ldr r7,[sp],#4
 2832              	 .cfi_restore 7
 2833              	 .cfi_def_cfa_offset 0
 2834 0048 7047     	 bx lr
 2835              	.L135:
 2836 004a 00BF     	 .align 2
 2837              	.L134:
 2838 004c 00040002 	 .word 33555456
 2839              	 .cfi_endproc
 2840              	.LFE259:
 2842              	 .section .text.XMC_CAN_GATEWAY_InitSourceObject,"ax",%progbits
 2843              	 .align 2
 2844              	 .global XMC_CAN_GATEWAY_InitSourceObject
 2845              	 .thumb
 2846              	 .thumb_func
 2848              	XMC_CAN_GATEWAY_InitSourceObject:
 2849              	.LFB260:
 902:../Libraries/XMCLib/src/xmc_can.c **** 
 903:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the Gateway Source Object */
 904:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_GATEWAY_InitSourceObject(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_GATEWAY_CONFI
 905:../Libraries/XMCLib/src/xmc_can.c **** {
 2850              	 .loc 2 905 0
 2851              	 .cfi_startproc
 2852              	 
 2853              	 
 2854              	 
 2855 0000 80B4     	 push {r7}
 2856              	 .cfi_def_cfa_offset 4
 2857              	 .cfi_offset 7,-4
 2858 0002 85B0     	 sub sp,sp,#20
 2859              	 .cfi_def_cfa_offset 24
 2860 0004 00AF     	 add r7,sp,#0
 2861              	 .cfi_def_cfa_register 7
 2862 0006 F860     	 str r0,[r7,#12]
 2863 0008 3B1D     	 adds r3,r7,#4
 2864 000a 83E80600 	 stmia r3,{r1,r2}
 906:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = (((uint32_t)0x4U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 2865              	 .loc 2 906 0
 2866 000e FB68     	 ldr r3,[r7,#12]
 2867 0010 1B68     	 ldr r3,[r3]
 907:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2868              	 .loc 2 907 0
 2869 0012 FA79     	 ldrb r2,[r7,#7]
 2870 0014 1202     	 lsls r2,r2,#8
 2871 0016 02F48071 	 and r1,r2,#256
 908:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2872              	 .loc 2 908 0
 2873 001a 7A7A     	 ldrb r2,[r7,#9]
 2874 001c 9202     	 lsls r2,r2,#10
 2875 001e 02F48062 	 and r2,r2,#1024
 907:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2876              	 .loc 2 907 0
 2877 0022 1143     	 orrs r1,r1,r2
 909:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 2878              	 .loc 2 909 0
 2879 0024 3A7A     	 ldrb r2,[r7,#8]
 2880 0026 5202     	 lsls r2,r2,#9
 2881 0028 02F40072 	 and r2,r2,#512
 908:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2882              	 .loc 2 908 0
 2883 002c 1143     	 orrs r1,r1,r2
 910:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_copy) << CAN_MO_MOFCR_DATC_Pos)
 2884              	 .loc 2 910 0
 2885 002e BA7A     	 ldrb r2,[r7,#10]
 2886 0030 D202     	 lsls r2,r2,#11
 2887 0032 02F40062 	 and r2,r2,#2048
 909:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 2888              	 .loc 2 909 0
 2889 0036 0A43     	 orrs r2,r2,r1
 2890 0038 42F00402 	 orr r2,r2,#4
 906:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2891              	 .loc 2 906 0
 2892 003c 1A60     	 str r2,[r3]
 911:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2893              	 .loc 2 911 0
 2894 003e FB68     	 ldr r3,[r7,#12]
 2895 0040 1B68     	 ldr r3,[r3]
 2896 0042 3A79     	 ldrb r2,[r7,#4]
 2897 0044 1146     	 mov r1,r2
 912:../Libraries/XMCLib/src/xmc_can.c ****                                           (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR
 2898              	 .loc 2 912 0
 2899 0046 BA79     	 ldrb r2,[r7,#6]
 2900 0048 1204     	 lsls r2,r2,#16
 2901 004a 02F47F02 	 and r2,r2,#16711680
 911:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2902              	 .loc 2 911 0
 2903 004e 1143     	 orrs r1,r1,r2
 913:../Libraries/XMCLib/src/xmc_can.c ****                                           (((uint32_t)can_gateway.gateway_top << CAN_MO_MOFGPR_TOP_
 2904              	 .loc 2 913 0
 2905 0050 7A79     	 ldrb r2,[r7,#5]
 2906 0052 1202     	 lsls r2,r2,#8
 2907 0054 92B2     	 uxth r2,r2
 911:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2908              	 .loc 2 911 0
 2909 0056 0A43     	 orrs r2,r2,r1
 2910 0058 5A60     	 str r2,[r3,#4]
 914:../Libraries/XMCLib/src/xmc_can.c **** }
 2911              	 .loc 2 914 0
 2912 005a 1437     	 adds r7,r7,#20
 2913              	 .cfi_def_cfa_offset 4
 2914 005c BD46     	 mov sp,r7
 2915              	 .cfi_def_cfa_register 13
 2916              	 
 2917 005e 5DF8047B 	 ldr r7,[sp],#4
 2918              	 .cfi_restore 7
 2919              	 .cfi_def_cfa_offset 0
 2920 0062 7047     	 bx lr
 2921              	 .cfi_endproc
 2922              	.LFE260:
 2924              	 .text
 2925              	.Letext0:
 2926              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2927              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2928              	 .file 5 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 2929              	 .file 6 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/XMCLib/inc/xmc4_scu.h"
 2930              	 .file 7 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/cmsis_gcc.h"
 2931              	 .file 8 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Include/core_cm4.h"
 2932              	 .file 9 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc4800-CE/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_can.c
    {standard input}:20     .text.XMC_CAN_IsPanelControlReady:00000000 $t
    {standard input}:24     .text.XMC_CAN_IsPanelControlReady:00000000 XMC_CAN_IsPanelControlReady
    {standard input}:64     .text.XMC_CAN_PanelControl:00000000 $t
    {standard input}:68     .text.XMC_CAN_PanelControl:00000000 XMC_CAN_PanelControl
    {standard input}:122    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 $t
    {standard input}:126    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 XMC_CAN_NODE_EnableConfigurationChange
    {standard input}:161    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 $t
    {standard input}:165    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 XMC_CAN_NODE_DisableConfigurationChange
    {standard input}:200    .text.max:00000000 $t
    {standard input}:204    .text.max:00000000 max
    {standard input}:242    .text.min:00000000 $t
    {standard input}:246    .text.min:00000000 min
    {standard input}:283    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000000 $t
    {standard input}:288    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000000 XMC_CAN_NODE_NominalBitTimeConfigureEx
    {standard input}:507    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:0000014c $d
    {standard input}:512    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 $t
    {standard input}:517    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 XMC_CAN_NODE_NominalBitTimeConfigure
    {standard input}:815    .text.XMC_CAN_NODE_NominalBitTimeConfigure:000001c0 $d
    {standard input}:820    .text.XMC_CAN_AllocateMOtoNodeList:00000000 $t
    {standard input}:825    .text.XMC_CAN_AllocateMOtoNodeList:00000000 XMC_CAN_AllocateMOtoNodeList
    {standard input}:874    .text.XMC_CAN_Disable:00000000 $t
    {standard input}:879    .text.XMC_CAN_Disable:00000000 XMC_CAN_Disable
    {standard input}:914    .text.XMC_CAN_Disable:00000020 $d
    {standard input}:919    .text.XMC_CAN_Enable:00000000 $t
    {standard input}:924    .text.XMC_CAN_Enable:00000000 XMC_CAN_Enable
    {standard input}:970    .text.XMC_CAN_Enable:00000034 $d
    {standard input}:975    .text.XMC_CAN_Init:00000000 $t
    {standard input}:980    .text.XMC_CAN_Init:00000000 XMC_CAN_Init
    {standard input}:1127   .text.XMC_CAN_SetBaudrateClockSource:00000000 XMC_CAN_SetBaudrateClockSource
    {standard input}:1212   .text.XMC_CAN_GetBaudrateClockFrequency:00000000 XMC_CAN_GetBaudrateClockFrequency
    {standard input}:1122   .text.XMC_CAN_SetBaudrateClockSource:00000000 $t
    {standard input}:1166   .text.XMC_CAN_GetBaudrateClockSource:00000000 $t
    {standard input}:1171   .text.XMC_CAN_GetBaudrateClockSource:00000000 XMC_CAN_GetBaudrateClockSource
    {standard input}:1207   .text.XMC_CAN_GetBaudrateClockFrequency:00000000 $t
    {standard input}:1266   .text.XMC_CAN_InitEx:00000000 $t
    {standard input}:1271   .text.XMC_CAN_InitEx:00000000 XMC_CAN_InitEx
    {standard input}:1349   .text.XMC_CAN_GetClockFrequency:00000000 $t
    {standard input}:1354   .text.XMC_CAN_GetClockFrequency:00000000 XMC_CAN_GetClockFrequency
    {standard input}:1393   .text.XMC_CAN_MO_SetIdentifier:00000000 $t
    {standard input}:1398   .text.XMC_CAN_MO_SetIdentifier:00000000 XMC_CAN_MO_SetIdentifier
    {standard input}:1472   .text.XMC_CAN_MO_GetIdentifier:00000000 $t
    {standard input}:1477   .text.XMC_CAN_MO_GetIdentifier:00000000 XMC_CAN_MO_GetIdentifier
    {standard input}:1532   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 $t
    {standard input}:1537   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 XMC_CAN_MO_GetAcceptanceMask
    {standard input}:1599   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 $t
    {standard input}:1604   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 XMC_CAN_MO_SetAcceptanceMask
    {standard input}:1685   .text.XMC_CAN_MO_SetAcceptanceMask:00000074 $d
    {standard input}:1690   .text.XMC_CAN_MO_Config:00000000 $t
    {standard input}:1695   .text.XMC_CAN_MO_Config:00000000 XMC_CAN_MO_Config
    {standard input}:1898   .text.XMC_CAN_MO_UpdateData:00000000 XMC_CAN_MO_UpdateData
    {standard input}:1887   .text.XMC_CAN_MO_Config:00000130 $d
    {standard input}:1893   .text.XMC_CAN_MO_UpdateData:00000000 $t
    {standard input}:1983   .text.XMC_CAN_MO_UpdateData:0000006c $d
    {standard input}:1988   .text.XMC_CAN_MO_Transmit:00000000 $t
    {standard input}:1993   .text.XMC_CAN_MO_Transmit:00000000 XMC_CAN_MO_Transmit
    {standard input}:2069   .text.XMC_CAN_MO_ReceiveData:00000000 $t
    {standard input}:2074   .text.XMC_CAN_MO_ReceiveData:00000000 XMC_CAN_MO_ReceiveData
    {standard input}:2185   .text.XMC_CAN_MO_Receive:00000000 $t
    {standard input}:2190   .text.XMC_CAN_MO_Receive:00000000 XMC_CAN_MO_Receive
    {standard input}:2426   .text.XMC_CAN_MO_Receive:0000019c $d
    {standard input}:2431   .text.XMC_CAN_NODE_EnableEvent:00000000 $t
    {standard input}:2436   .text.XMC_CAN_NODE_EnableEvent:00000000 XMC_CAN_NODE_EnableEvent
    {standard input}:2487   .text.XMC_CAN_NODE_DisableEvent:00000000 $t
    {standard input}:2492   .text.XMC_CAN_NODE_DisableEvent:00000000 XMC_CAN_NODE_DisableEvent
    {standard input}:2545   .text.XMC_CAN_TXFIFO_Transmit:00000000 $t
    {standard input}:2550   .text.XMC_CAN_TXFIFO_Transmit:00000000 XMC_CAN_TXFIFO_Transmit
    {standard input}:2638   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2643   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_TXFIFO_ConfigMOBaseObject
    {standard input}:2707   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2712   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_RXFIFO_ConfigMOBaseObject
    {standard input}:2776   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 $t
    {standard input}:2781   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 XMC_CAN_TXFIFO_ConfigMOSlaveObject
    {standard input}:2838   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:0000004c $d
    {standard input}:2843   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 $t
    {standard input}:2848   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 XMC_CAN_GATEWAY_InitSourceObject
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GetPeripheralClockFrequency
OSCHP_GetFrequency
